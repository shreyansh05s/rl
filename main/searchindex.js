Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "TrajCounter", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 102, 104, 105, 107, 109, 111, 113, 115, 116, 117, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 142, 143, 145, 148, 149, 150, 151, 152, 155, 156, 157, 161, 166, 167, 169, 170, 172, 173, 175, 179, 181, 182, 185, 191, 192, 196, 197, 198, 199, 201, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 223, 225, 233, 234, 238, 239, 241, 242, 243, 244, 246, 251, 253, 255, 257, 259, 260, 261, 265, 266, 268, 277, 278, 283, 284, 286, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 311, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 351, 352, 353, 354, 355, 369, 371, 374, 378, 383, 384, 388, 389, 392, 399, 400, 401, 402, 405, 406, 407, 411, 412, 415, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431], "open": [0, 5, 7, 12, 52, 54, 59, 73, 89, 96, 412, 424, 425, 430], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "reinforc": [0, 3, 9, 86, 140, 141, 173, 236, 241, 242, 243, 244, 248, 277, 278, 299, 316, 317, 319, 322, 323, 324, 326, 331, 332, 338, 339, 340, 341, 404, 410, 412, 416, 417, 422, 426, 429, 430], "learn": [0, 3, 7, 8, 9, 18, 46, 86, 87, 88, 90, 91, 125, 140, 141, 145, 148, 155, 173, 236, 241, 242, 243, 244, 248, 262, 269, 276, 277, 278, 299, 316, 317, 319, 322, 323, 324, 326, 330, 331, 332, 337, 338, 339, 340, 341, 404, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 431], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 83, 142, 209, 269, 293, 302, 310, 316, 318, 333, 334, 336, 338, 379, 403, 405, 406, 407, 408, 411, 412, 413, 415, 419, 422, 424, 425, 427, 428, 431], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 55, 69, 123, 124, 133, 143, 227, 404, 405, 406, 409, 411, 412, 413, 415, 416, 417, 419, 424, 425, 426, 431], "pytorch": [0, 1, 2, 3, 23, 87, 125, 129, 136, 148, 149, 155, 156, 159, 160, 212, 225, 236, 253, 257, 268, 269, 388, 403, 405, 406, 408, 411, 413, 414, 418, 422, 424, 425, 426, 427, 428, 430, 431], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 46, 56, 57, 61, 66, 69, 86, 125, 129, 133, 136, 139, 140, 141, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 165, 221, 223, 236, 257, 276, 378, 405, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 108, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 165, 166, 167, 169, 170, 172, 173, 176, 177, 179, 181, 182, 183, 191, 192, 196, 197, 201, 204, 208, 209, 210, 213, 214, 215, 217, 219, 221, 223, 225, 231, 233, 235, 237, 238, 239, 241, 251, 253, 255, 256, 257, 259, 261, 262, 265, 266, 267, 269, 270, 277, 287, 289, 293, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 369, 371, 378, 383, 400, 401, 402, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "directli": [0, 3, 4, 8, 23, 83, 104, 121, 122, 125, 128, 129, 136, 142, 148, 149, 155, 156, 192, 201, 220, 334, 341, 402, 412, 413, 415, 416, 424, 425, 426, 428], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 170, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 223, 224, 228, 230, 231, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 273, 275, 276, 277, 278, 279, 280, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 349, 350, 351, 352, 353, 354, 357, 369, 370, 371, 379, 385, 388, 391, 392, 396, 398, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "pypi": [0, 2, 430], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 125, 129, 132, 135, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 177, 196, 210, 212, 213, 214, 215, 217, 219, 221, 222, 223, 236, 237, 238, 239, 253, 255, 256, 257, 259, 260, 266, 267, 268, 276, 279, 287, 288, 292, 294, 296, 302, 305, 306, 319, 330, 334, 341, 371, 378, 385, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 428, 430, 431], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 115, 125, 128, 129, 130, 132, 133, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 212, 217, 222, 223, 232, 233, 234, 237, 248, 257, 260, 268, 270, 293, 298, 299, 305, 310, 316, 326, 334, 336, 351, 356, 364, 378, 384, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 430, 431], "about": [0, 3, 5, 7, 9, 18, 19, 20, 44, 69, 87, 90, 91, 125, 148, 155, 406, 407, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 430, 431], "instruct": [0, 6, 7, 10, 22, 85, 181, 183, 411, 412, 413, 414, 424, 425, 428], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 41, 58, 67, 68, 104, 148, 155, 294, 295, 296, 406, 411, 416, 418, 419, 421, 423, 425], "section": [0, 2, 3, 4, 24, 253, 257, 412, 415, 416, 421, 424, 425], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 92, 110, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 213, 214, 215, 217, 219, 223, 238, 239, 253, 256, 257, 260, 266, 287, 302, 305, 385, 411, 412, 413, 414, 415, 416, 424, 426], "pip": [0, 10, 88, 415, 416, 417, 418, 419, 420, 421, 425, 430, 431], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 41, 42, 44, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 72, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 102, 103, 104, 107, 109, 110, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 166, 170, 172, 173, 174, 175, 176, 178, 179, 182, 186, 191, 192, 194, 196, 197, 200, 201, 204, 205, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 223, 230, 231, 233, 238, 239, 245, 246, 248, 251, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 278, 289, 293, 297, 299, 301, 302, 303, 304, 309, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 375, 379, 385, 392, 398, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 61, 66, 73, 144, 157, 158, 165, 253, 254, 255, 257, 258, 259, 263, 264, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 125, 128, 129, 130, 135, 136, 148, 149, 155, 156, 169, 170, 173, 174, 186, 192, 196, 197, 212, 215, 217, 239, 246, 253, 255, 257, 259, 260, 264, 266, 268, 272, 293, 297, 298, 299, 302, 303, 305, 306, 318, 328, 333, 334, 336, 370, 371, 387, 406, 410, 411, 412, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "low": [0, 3, 28, 31, 57, 66, 71, 74, 102, 125, 129, 136, 148, 149, 155, 156, 166, 176, 181, 210, 228, 285, 286, 287, 297, 299, 302, 309, 411, 412, 413, 414, 415, 424, 425, 426, 430, 431], "high": [0, 3, 9, 28, 31, 52, 54, 59, 67, 73, 74, 102, 125, 129, 136, 148, 149, 155, 156, 166, 176, 181, 191, 210, 228, 285, 286, 287, 297, 299, 302, 309, 351, 356, 364, 411, 412, 413, 414, 424, 425, 426, 428, 430, 431], "level": [0, 2, 3, 4, 22, 31, 32, 39, 53, 58, 63, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 128, 130, 173, 208, 333, 411, 412, 415, 419, 430], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 62, 63, 70, 71, 74, 75, 76, 77, 78, 83, 84, 88, 119, 125, 193, 261, 355, 380, 389, 408, 413, 415, 426, 430], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 104, 107, 108, 109, 110, 111, 113, 115, 117, 125, 126, 128, 129, 130, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 168, 169, 170, 172, 173, 176, 177, 179, 180, 181, 182, 183, 185, 186, 190, 191, 194, 196, 201, 204, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 228, 230, 231, 232, 235, 236, 244, 246, 251, 253, 254, 255, 257, 258, 259, 261, 263, 264, 265, 266, 267, 269, 273, 278, 279, 282, 292, 297, 298, 301, 302, 303, 305, 306, 307, 308, 309, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 355, 369, 378, 385, 388, 398, 402, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 172, 181, 289, 334, 406, 430], "effici": [0, 1, 2, 4, 8, 125, 129, 136, 148, 149, 155, 156, 253, 269, 319, 406, 411, 412, 413, 414, 415, 418, 419, 421, 423, 424, 425, 427, 428, 430], "modular": [0, 83, 308, 415, 428, 430], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 46, 56, 57, 61, 66, 89, 125, 129, 136, 146, 147, 148, 149, 155, 156, 157, 158, 215, 223, 403, 412, 414, 415, 416, 419, 422, 430], "properli": [0, 1, 74, 125, 129, 136, 148, 149, 155, 156, 230, 255, 259, 413, 420, 424, 425, 426, 430], "test": [0, 3, 5, 121, 122, 125, 129, 134, 135, 136, 140, 141, 148, 149, 155, 156, 213, 217, 225, 255, 259, 383, 398, 413, 414, 415, 430], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 101, 102, 104, 107, 109, 110, 111, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 166, 169, 170, 172, 173, 177, 179, 182, 183, 184, 192, 194, 196, 201, 203, 204, 205, 208, 209, 210, 213, 214, 215, 217, 219, 220, 221, 223, 225, 230, 231, 232, 234, 235, 236, 241, 242, 243, 244, 245, 248, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 269, 270, 274, 276, 277, 278, 280, 281, 282, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 357, 369, 371, 373, 376, 377, 378, 379, 384, 398, 400, 401, 404, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "code": [0, 3, 5, 7, 8, 14, 15, 57, 61, 89, 125, 129, 135, 136, 148, 149, 155, 156, 196, 215, 217, 234, 253, 254, 255, 257, 258, 259, 302, 308, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431], "aim": [0, 2, 3, 7, 41, 62, 63, 196, 217, 219, 260, 391, 405, 406, 407, 411, 412, 430], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 56, 59, 66, 73, 88, 91, 92, 96, 97, 111, 113, 117, 118, 120, 121, 122, 128, 130, 134, 143, 145, 148, 150, 152, 170, 173, 183, 192, 210, 211, 214, 227, 248, 274, 276, 286, 289, 298, 299, 302, 305, 308, 326, 334, 351, 352, 353, 354, 376, 404, 406, 408, 413, 414, 416, 417, 425, 426, 428, 430], "research": [0, 7, 9, 140, 141, 234, 430], "most": [0, 1, 2, 3, 7, 8, 14, 15, 46, 109, 110, 125, 129, 136, 148, 149, 155, 156, 181, 220, 225, 411, 413, 415, 416, 417, 418, 419, 420, 421, 426, 430, 431], "written": [0, 1, 2, 3, 12, 35, 52, 53, 54, 56, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 102, 104, 109, 110, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 155, 156, 166, 173, 183, 190, 204, 208, 211, 220, 223, 230, 231, 237, 277, 278, 293, 302, 305, 306, 310, 316, 318, 333, 336, 338, 350, 369, 370, 371, 406, 407, 408, 411, 414, 415, 417, 423, 426, 430], "highli": [0, 2, 416, 430, 431], "wai": [0, 1, 2, 3, 4, 83, 87, 104, 115, 133, 196, 199, 213, 219, 220, 255, 257, 259, 336, 351, 352, 353, 354, 406, 411, 412, 413, 415, 416, 418, 419, 423, 424, 425, 426, 427, 428, 430, 431], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 407, 411, 412, 413, 416, 417, 418, 421, 424, 425, 430, 431], "swap": [0, 1, 3, 128, 220, 413, 415, 427, 430], "compon": [0, 1, 2, 3, 53, 57, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 248, 280, 298, 299, 304, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 384, 388, 411, 412, 413, 414, 415, 417, 418, 421, 423, 424, 425, 426, 427, 430], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 53, 55, 58, 60, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 113, 118, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 237, 240, 241, 245, 248, 249, 255, 259, 275, 279, 280, 286, 288, 297, 300, 301, 309, 312, 313, 315, 322, 335, 369, 371, 385, 402, 404, 410, 412, 414, 415, 417, 419, 420, 421, 422, 427, 429], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 120, 125, 126, 129, 133, 136, 139, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 179, 182, 210, 215, 221, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 288, 289, 297, 299, 301, 304, 309, 312, 333, 371, 411, 412, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "write": [0, 2, 3, 8, 23, 41, 46, 52, 53, 54, 55, 58, 59, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 113, 120, 125, 129, 176, 194, 195, 204, 206, 208, 212, 216, 231, 293, 305, 306, 308, 310, 319, 320, 321, 323, 324, 325, 332, 337, 339, 341, 342, 350, 355, 371, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 125, 129, 136, 143, 148, 149, 153, 154, 155, 156, 170, 204, 214, 221, 223, 230, 231, 246, 253, 255, 259, 277, 278, 305, 306, 311, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 378, 407, 411, 413, 416, 418, 424, 425, 426, 430, 431], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 109, 110, 125, 129, 136, 148, 149, 150, 151, 155, 156, 174, 177, 179, 180, 182, 192, 196, 201, 210, 214, 215, 217, 219, 223, 224, 236, 263, 264, 276, 289, 305, 316, 317, 319, 320, 332, 336, 337, 339, 341, 342, 357, 411, 413, 415, 424, 425, 426, 428, 430, 431], "littl": [0, 1, 3, 69, 125, 129, 136, 148, 149, 155, 156, 215, 236, 316, 318, 333, 336, 338, 413, 414, 415, 419, 428, 430, 431], "effort": [0, 3, 426, 428, 430], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 165, 166, 167, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 192, 196, 197, 198, 199, 201, 204, 205, 206, 208, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 284, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 349, 351, 352, 353, 354, 355, 369, 370, 378, 379, 381, 383, 385, 388, 390, 391, 392, 398, 402, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "repo": [0, 6, 85, 173, 211, 217, 405, 425, 430], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 109, 110, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 155, 156, 230, 233, 236, 278, 321, 324, 332, 349, 418, 430], "align": [0, 253, 257, 430], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 96, 125, 129, 136, 148, 149, 155, 156, 174, 180, 213, 215, 223, 246, 319, 339, 392, 402, 424, 425, 430, 431], "ecosystem": [0, 415, 419, 430], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 89, 96, 97, 104, 107, 109, 115, 117, 125, 126, 129, 133, 136, 140, 141, 148, 149, 155, 156, 159, 160, 170, 173, 208, 209, 210, 211, 213, 215, 223, 232, 233, 253, 255, 257, 259, 265, 267, 278, 286, 299, 301, 306, 316, 319, 333, 334, 336, 338, 371, 411, 412, 413, 414, 415, 416, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "dataset": [0, 37, 41, 52, 53, 54, 55, 58, 59, 60, 65, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 107, 109, 110, 145, 221, 371, 404, 411, 412, 416, 427, 428, 430, 431], "pillar": [0, 430], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 61, 62, 63, 71, 73, 74, 75, 76, 77, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 169, 170, 172, 173, 174, 179, 180, 181, 182, 187, 191, 192, 196, 197, 198, 201, 204, 208, 209, 210, 211, 213, 214, 215, 217, 220, 221, 225, 233, 235, 237, 255, 259, 261, 262, 278, 301, 323, 327, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 381, 383, 391, 392, 393, 394, 398, 399, 400, 401, 402, 404, 405, 406, 410, 415, 417, 418, 419, 420, 422, 427, 428, 429], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 125, 129, 136, 142, 148, 149, 155, 156, 179, 196, 210, 217, 219, 222, 223, 238, 239, 240, 245, 247, 255, 259, 260, 261, 262, 266, 267, 275, 279, 288, 294, 295, 296, 300, 305, 311, 313, 316, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 349, 388, 393, 394, 395, 404, 405, 407, 408, 410, 413, 416, 419, 422, 424, 425, 426, 428, 429, 431], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 167, 170, 172, 173, 179, 180, 182, 184, 190, 192, 198, 201, 208, 215, 220, 223, 224, 225, 228, 231, 235, 236, 248, 251, 255, 259, 262, 265, 266, 277, 278, 280, 289, 292, 293, 298, 301, 302, 303, 305, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 369, 371, 378, 379, 385, 388, 390, 393, 398, 400, 401, 402, 404, 406, 407, 408, 410, 414, 415, 416, 417, 418, 422, 426, 427, 428, 429, 431], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 46, 56, 57, 58, 60, 61, 66, 109, 110, 121, 122, 125, 129, 134, 135, 136, 141, 148, 149, 150, 151, 155, 156, 161, 173, 196, 201, 210, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 238, 239, 245, 253, 255, 257, 259, 312, 313, 314, 315, 334, 398, 404, 409, 411, 413, 415, 417, 418, 419, 425, 426, 428, 430, 431], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 101, 102, 115, 117, 125, 126, 129, 136, 148, 149, 155, 156, 159, 170, 172, 174, 177, 178, 186, 192, 196, 204, 210, 213, 214, 215, 217, 219, 223, 225, 253, 255, 256, 257, 259, 262, 266, 270, 280, 286, 287, 292, 297, 299, 301, 302, 304, 305, 306, 316, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 350, 351, 352, 353, 354, 369, 379, 391, 401, 406, 412, 413, 415, 417, 418, 420, 424, 425, 427, 428, 430, 431], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 50, 52, 54, 56, 57, 59, 61, 66, 73, 115, 125, 126, 129, 136, 148, 149, 155, 156, 159, 170, 172, 174, 177, 186, 192, 196, 204, 210, 213, 214, 215, 217, 219, 223, 225, 253, 255, 256, 257, 258, 259, 262, 266, 286, 287, 297, 302, 305, 306, 319, 339, 350, 360, 361, 362, 363, 365, 366, 367, 368, 369, 401, 406, 412, 413, 415, 417, 420, 424, 425, 426, 427, 428, 430, 431], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 46, 60, 64, 83, 89, 109, 110, 125, 129, 136, 148, 149, 155, 156, 170, 173, 201, 208, 223, 224, 236, 255, 259, 277, 278, 385, 388, 390, 393, 394, 398, 400, 401, 404, 407, 408, 415, 428, 431], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 102, 104, 105, 107, 109, 110, 111, 116, 119, 120, 125, 129, 136, 142, 148, 149, 155, 156, 166, 177, 179, 182, 196, 210, 213, 214, 215, 217, 219, 220, 221, 223, 230, 231, 235, 238, 239, 253, 254, 257, 258, 260, 262, 265, 266, 293, 298, 299, 302, 304, 305, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 357, 375, 379, 391, 398, 399, 400, 401, 402, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 41, 46, 56, 57, 61, 66, 71, 89, 125, 129, 136, 148, 149, 155, 156, 190, 215, 223, 260, 266, 286, 412, 413, 419, 428, 430, 431], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 111, 125, 129, 136, 148, 149, 150, 151, 155, 156, 166, 169, 173, 179, 182, 183, 190, 191, 192, 208, 213, 214, 215, 221, 223, 225, 231, 232, 233, 236, 238, 239, 260, 265, 266, 267, 277, 278, 289, 301, 307, 308, 316, 318, 333, 336, 338, 341, 345, 346, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 379, 388, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "few": [0, 2, 8, 110, 129, 371, 379, 413, 414, 417, 424, 425, 428, 430, 431], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 52, 54, 74, 125, 128, 129, 130, 131, 136, 148, 149, 152, 155, 156, 159, 160, 179, 182, 310, 336, 406, 411, 413, 414, 424, 425, 426, 430, 431], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 86, 89, 91, 102, 109, 115, 125, 129, 136, 148, 149, 155, 156, 166, 177, 196, 210, 213, 214, 215, 217, 219, 223, 238, 239, 253, 254, 257, 258, 305, 369, 383, 388, 406, 411, 413, 414, 415, 417, 419, 420, 424, 425, 426, 428, 430, 431], "standard": [0, 3, 192, 203, 221, 232, 233, 234, 235, 249, 262, 268, 269, 275, 297, 341, 342, 351, 352, 353, 354, 411, 412, 416, 417, 425, 428, 430], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 130, 136, 148, 149, 155, 156, 212, 388, 415, 426, 428, 430, 431], "common": [0, 2, 3, 4, 21, 71, 129, 134, 167, 294, 295, 296, 300, 316, 317, 318, 319, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 398, 405, 406, 408, 411, 413, 417, 420, 423, 424, 425, 426, 427, 430, 431], "openai": [0, 7, 24, 128, 130, 136, 152, 413, 426, 430, 431], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 125, 126, 128, 129, 130, 131, 133, 136, 140, 141, 143, 144, 148, 149, 152, 155, 156, 159, 160, 162, 165, 169, 173, 176, 183, 189, 190, 192, 194, 199, 201, 204, 210, 214, 220, 221, 223, 398, 405, 411, 412, 413, 414, 416, 420, 421, 426, 427, 428], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 104, 109, 110, 117, 123, 124, 125, 128, 129, 130, 131, 133, 135, 136, 143, 144, 148, 149, 150, 151, 152, 155, 156, 166, 169, 173, 174, 176, 177, 179, 181, 182, 186, 192, 196, 197, 201, 208, 209, 210, 211, 213, 214, 215, 217, 219, 221, 223, 236, 257, 259, 265, 266, 293, 297, 298, 302, 303, 305, 306, 307, 308, 316, 318, 319, 320, 324, 325, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 351, 352, 353, 354, 355, 371, 378, 392, 407, 408, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 280, 281, 282, 285, 286, 287, 289, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 376, 378, 379, 381, 382, 383, 384, 385, 386, 388, 392, 393, 394, 395, 397, 398, 400, 401, 402, 406, 414, 416, 419, 424, 425, 426, 428, 430], "On": [0, 3, 7, 18, 19, 20, 21, 31, 86, 254, 258, 406, 412, 424, 425], "end": [0, 2, 3, 14, 15, 17, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 108, 109, 110, 125, 129, 136, 148, 149, 155, 156, 183, 194, 208, 209, 213, 215, 223, 238, 239, 253, 254, 257, 258, 261, 301, 319, 339, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "come": [0, 1, 2, 3, 8, 41, 46, 115, 125, 129, 135, 136, 139, 148, 149, 155, 156, 179, 182, 292, 293, 294, 295, 296, 302, 310, 316, 318, 333, 336, 338, 371, 411, 412, 413, 414, 418, 419, 420, 421, 424, 425, 428, 430, 431], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 108, 111, 117, 125, 127, 129, 130, 135, 136, 140, 141, 142, 148, 149, 150, 151, 155, 156, 159, 160, 165, 167, 169, 170, 173, 174, 177, 179, 182, 189, 190, 196, 201, 208, 209, 210, 211, 213, 214, 215, 217, 219, 221, 223, 225, 229, 231, 233, 253, 255, 257, 259, 261, 265, 266, 274, 276, 277, 286, 292, 297, 305, 318, 319, 325, 330, 334, 336, 339, 355, 379, 383, 385, 394, 402, 405, 406, 407, 409, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 431], "re": [0, 2, 3, 8, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 125, 129, 136, 148, 149, 155, 156, 223, 259, 263, 264, 267, 302, 306, 378, 408, 411, 413, 414, 416, 418, 423, 424, 426, 430, 431], "usabl": [0, 408, 414, 430], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 125, 126, 129, 130, 136, 148, 149, 155, 156, 165, 169, 170, 179, 182, 213, 215, 221, 223, 225, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 281, 282, 284, 287, 289, 294, 295, 296, 297, 299, 301, 302, 304, 305, 306, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 388, 398, 404, 406, 411, 414, 415, 416, 417, 420, 423, 426, 428, 431], "cost": [0, 2, 30, 89, 316, 318, 333, 336, 338, 407, 411, 412, 415, 424, 425, 426, 428], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 105, 107, 109, 110, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 156, 159, 160, 162, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 235, 236, 239, 240, 241, 242, 243, 244, 246, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 270, 273, 275, 279, 281, 282, 285, 286, 287, 288, 290, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 375, 388, 391, 393, 398, 399, 400, 401, 402, 404, 406, 408, 411, 412, 413, 415, 417, 418, 420, 423, 424, 425, 426, 427, 428, 430, 431], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 69, 72, 73, 83, 86, 90, 91, 97, 101, 102, 105, 109, 117, 125, 126, 129, 133, 136, 139, 143, 148, 149, 150, 151, 155, 156, 172, 179, 182, 210, 212, 213, 221, 223, 255, 259, 265, 266, 277, 278, 299, 304, 404, 408, 411, 412, 414, 415, 416, 424, 425, 426, 427, 428, 430, 431], "good": [0, 1, 4, 9, 148, 411, 413, 414, 415, 417, 425, 430, 431], "runtim": [0, 2, 3, 23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 426], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 123, 124, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 155, 156, 161, 179, 182, 191, 213, 215, 223, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 267, 270, 271, 272, 275, 276, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 318, 319, 328, 336, 339, 383, 388, 407, 411, 412, 413, 414, 415, 416, 419, 421, 423, 424, 425, 426, 431], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 109, 110, 113, 120, 121, 122, 125, 128, 129, 130, 134, 135, 136, 139, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 208, 210, 221, 223, 237, 255, 259, 277, 278, 294, 295, 296, 319, 325, 330, 334, 341, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 53, 55, 58, 60, 63, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 104, 111, 113, 117, 125, 128, 129, 130, 136, 148, 149, 155, 156, 167, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 194, 195, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 211, 213, 214, 216, 217, 218, 220, 221, 223, 231, 237, 273, 293, 294, 295, 296, 298, 301, 302, 305, 306, 308, 310, 311, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 351, 352, 353, 354, 355, 371, 383, 388, 406, 411, 412, 413, 415, 416, 417, 423, 424, 425, 426, 427, 430, 431], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 408, 411, 416, 419, 423, 427, 431], "beyond": [0, 125, 129, 136, 148, 149, 155, 156, 415], "api": [0, 2, 3, 5, 23, 41, 56, 66, 71, 150, 151, 152, 196, 219, 221, 236, 406, 407, 408, 415, 416, 417, 418, 419, 420, 424, 425, 426, 428, 430, 431], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 93, 94, 100, 109, 125, 126, 128, 129, 130, 136, 142, 148, 149, 155, 156, 161, 173, 174, 185, 190, 197, 210, 212, 215, 223, 225, 246, 255, 259, 293, 298, 299, 302, 303, 304, 305, 306, 319, 330, 341, 371, 403, 406, 407, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "paper": [0, 86, 89, 121, 122, 123, 124, 131, 134, 135, 140, 141, 143, 144, 152, 159, 160, 196, 217, 219, 239, 253, 279, 288, 323, 331, 341, 411, 413, 424, 425], "releas": [0, 4, 7, 10, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 390, 398, 408, 411], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 140, 141, 148, 149, 155, 156, 210, 213, 221, 223, 236, 307, 308, 411, 413, 414, 415, 418, 421, 424, 425, 426, 431], "make": [0, 2, 3, 4, 7, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 111, 113, 120, 125, 129, 130, 133, 135, 136, 138, 144, 148, 149, 155, 156, 166, 184, 192, 196, 197, 201, 205, 208, 217, 223, 225, 230, 234, 237, 253, 254, 255, 257, 258, 259, 265, 266, 268, 298, 306, 316, 318, 333, 336, 338, 351, 352, 353, 354, 369, 385, 394, 402, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "sure": [0, 3, 4, 7, 88, 111, 129, 133, 201, 298, 402, 406, 411, 413, 414, 415, 418, 424, 425, 426, 428, 430, 431], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 71, 74, 83, 92, 93, 94, 100, 125, 129, 136, 148, 149, 155, 156, 190, 191, 221, 223, 326, 334, 406, 407, 412, 413, 414, 415, 424, 425, 426, 428], "enjoi": [0, 2, 3, 89, 419], "latest": [0, 2, 3, 10, 143, 146, 147, 150, 151, 385, 413, 424, 425, 426, 430], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 50, 56, 66, 71, 72, 87, 102, 109, 110, 125, 129, 136, 139, 148, 149, 150, 151, 153, 154, 155, 156, 170, 173, 186, 190, 194, 210, 211, 216, 221, 225, 234, 238, 239, 249, 250, 253, 254, 255, 257, 258, 259, 260, 265, 268, 269, 306, 313, 316, 318, 333, 336, 338, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 402, 406, 411, 412, 413, 414, 415, 417, 418, 419, 421, 426, 428, 430, 431], "recent": [0, 7, 12, 220, 415, 431], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 54, 56, 57, 60, 61, 66, 75, 76, 77, 78, 86, 91, 109, 125, 128, 129, 130, 131, 136, 143, 144, 148, 149, 150, 152, 155, 156, 159, 160, 220, 221, 223, 230, 234, 255, 259, 267, 274, 296, 316, 318, 333, 334, 336, 338, 339, 351, 354, 405, 406, 407, 411, 413, 414, 415, 416, 418, 421, 424, 425, 426, 427, 431], "although": [0, 1, 3, 8, 27, 38, 56, 57, 61, 66, 74, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 408, 411, 412, 419, 428], "core": [0, 2, 3, 8, 408, 414, 417, 430], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 125, 129, 136, 148, 149, 155, 156, 213, 221, 223, 419], "backward": [0, 8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 136, 148, 149, 155, 156, 221, 223, 253, 254, 257, 258, 276, 316, 317, 319, 320, 324, 325, 332, 336, 337, 338, 339, 341, 342, 411, 413, 414, 415, 418, 419, 421, 424, 425, 426], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 61, 66, 85, 104, 107, 109, 110, 111, 115, 125, 129, 131, 136, 145, 148, 149, 155, 156, 173, 208, 217, 221, 223, 253, 254, 255, 257, 258, 259, 303, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 345, 411, 414, 428], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 125, 126, 129, 134, 135, 136, 139, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 169, 170, 172, 174, 177, 179, 180, 181, 182, 190, 192, 194, 196, 198, 201, 204, 208, 209, 210, 213, 214, 215, 217, 219, 221, 223, 228, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 275, 276, 277, 278, 286, 289, 297, 298, 299, 301, 305, 309, 310, 316, 317, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 379, 406, 407, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 428, 429, 430, 431], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 117, 121, 122, 125, 128, 129, 131, 132, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 156, 166, 167, 169, 171, 173, 174, 176, 177, 178, 180, 181, 190, 191, 192, 196, 201, 204, 206, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 223, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 273, 276, 277, 278, 281, 282, 285, 286, 287, 289, 293, 297, 299, 304, 305, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 357, 358, 359, 379, 386, 398, 402, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 53, 56, 58, 66, 67, 68, 85, 87, 88, 89, 90, 91, 129, 148, 155, 196, 199, 214, 219, 319, 322, 334, 407, 408, 411, 412, 413, 414, 417, 419, 428, 430, 431], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 235, 236, 237, 247, 248, 251, 255, 259, 261, 262, 265, 266, 277, 278, 279, 280, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 369, 370, 379, 383, 384, 385, 387, 388, 404, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 431], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 190, 198, 213, 294, 295, 296, 305, 324, 332, 341, 404, 411, 424, 426, 430], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 104, 112, 118, 125, 129, 136, 148, 149, 155, 156, 157, 165, 196, 219, 223, 262, 373, 378, 388, 408, 412, 415, 421, 424], "root": [0, 2, 3, 31, 32, 39, 41, 53, 58, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 125, 129, 136, 148, 149, 155, 156, 173, 211, 230, 255, 256, 259, 286, 287, 414, 416, 424, 425, 426, 427, 428, 431], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 53, 69, 83, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 123, 124, 131, 133, 134, 135, 140, 141, 143, 144, 145, 146, 147, 150, 151, 152, 157, 158, 159, 160, 173, 196, 217, 234, 240, 241, 242, 243, 244, 245, 248, 249, 250, 257, 262, 263, 264, 269, 271, 272, 276, 277, 278, 279, 281, 282, 288, 299, 316, 317, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 351, 356, 364, 403, 422, 427, 430], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 89, 121, 122, 123, 124, 128, 131, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 152, 157, 158, 159, 160, 170, 217, 234, 417, 421, 424, 425, 430], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 86, 89, 90, 121, 122, 123, 124, 131, 133, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 152, 157, 158, 159, 160, 234, 427, 430], "setup": [0, 7, 121, 122, 133, 134, 135, 157], "py": [0, 3, 24, 128, 130, 165, 246, 279, 288, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "develop": [0, 3, 4, 7, 41, 133, 411, 430], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 111, 115, 116, 117, 118, 119, 125, 127, 129, 131, 132, 136, 148, 149, 152, 155, 156, 163, 166, 168, 169, 170, 172, 176, 181, 187, 190, 196, 197, 199, 206, 210, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 230, 232, 233, 235, 237, 238, 239, 248, 251, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 266, 267, 269, 270, 276, 289, 297, 298, 299, 301, 302, 303, 306, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 349, 351, 352, 353, 354, 355, 357, 369, 372, 373, 376, 378, 381, 388, 390, 398, 407, 410, 411, 413, 415, 417, 418, 419, 422, 426, 429, 431], "seri": [0, 2, 3, 7, 8, 50, 95, 105, 115, 116, 119, 120, 155, 191, 214, 371, 406, 407, 411, 412, 413, 420, 421, 424, 425, 428, 431], "quick": [0, 83, 415], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 60, 85, 91, 125, 129, 136, 148, 149, 155, 156, 169, 172, 211, 214, 223, 234, 336, 405, 406, 407, 411, 412, 413, 414, 417, 421, 424, 425, 426, 428, 430, 431], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 105, 107, 108, 109, 110, 115, 117, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 166, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 186, 190, 191, 192, 196, 197, 200, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 230, 231, 233, 237, 238, 239, 251, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 277, 278, 289, 293, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 328, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 365, 366, 367, 368, 369, 375, 378, 384, 385, 388, 390, 392, 398, 402, 405, 407, 411, 412, 413, 414, 415, 416, 418, 420, 421, 423, 424, 425, 426, 428, 430, 431], "hurri": [0, 416], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 85, 108, 109, 110, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 166, 169, 172, 186, 192, 197, 209, 211, 212, 232, 233, 238, 239, 251, 253, 255, 257, 259, 260, 263, 264, 271, 283, 286, 289, 297, 301, 306, 319, 351, 353, 354, 412, 413, 414, 415, 416, 417, 424, 425, 426, 427, 428, 430, 431], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 108, 115, 166, 185, 263, 264, 320, 321, 323, 379, 407, 408, 411, 413, 414, 418, 419, 424, 425, 426, 428], "navig": [0, 425], "previou": [0, 3, 4, 10, 46, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 210, 223, 231, 253, 257, 282, 297, 413, 414, 415, 416, 417, 421, 426, 431], "whenev": [0, 1, 2, 3, 23, 46, 53, 56, 58, 66, 67, 68, 73, 83, 89, 101, 102, 109, 110, 123, 124, 128, 130, 131, 140, 141, 152, 159, 160, 165, 189, 215, 220, 334, 351, 352, 353, 354, 369, 390, 406, 420, 428], "want": [0, 2, 3, 6, 7, 8, 56, 66, 110, 192, 276, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 406, 411, 412, 413, 414, 415, 416, 418, 419, 420, 424, 425, 426, 427, 428, 430, 431], "ted": [0, 35, 47, 64, 65, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 404, 410, 422, 429], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 110, 115, 121, 122, 125, 129, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 151, 155, 156, 159, 160, 173, 177, 196, 208, 210, 212, 213, 214, 215, 217, 219, 221, 223, 225, 232, 233, 236, 238, 239, 246, 251, 255, 259, 264, 265, 266, 269, 276, 279, 286, 288, 294, 296, 299, 301, 302, 305, 306, 309, 317, 319, 324, 330, 332, 334, 339, 341, 351, 352, 353, 354, 355, 369, 406, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 115, 121, 122, 125, 129, 136, 139, 142, 145, 148, 149, 155, 156, 165, 172, 177, 181, 183, 190, 196, 197, 209, 210, 213, 214, 215, 217, 219, 221, 222, 223, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 351, 352, 353, 354, 355, 369, 388, 395, 398, 404, 407, 408, 410, 412, 413, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429], "optim": [0, 1, 2, 8, 27, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 235, 262, 268, 269, 276, 286, 317, 319, 334, 335, 336, 339, 346, 383, 384, 388, 398, 407, 408, 410, 413, 414, 415, 416, 417, 419, 422, 424, 425, 426, 429], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 125, 129, 136, 148, 149, 152, 155, 156, 170, 173, 192, 196, 219, 225, 277, 278, 301, 317, 320, 323, 325, 337, 339, 341, 342, 371, 379, 385, 388, 390, 391, 392, 398, 408, 410, 411, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431], "storag": [0, 1, 8, 27, 35, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 112, 113, 114, 115, 117, 118, 125, 127, 129, 136, 148, 149, 155, 156, 172, 173, 179, 182, 201, 223, 404, 408, 410, 412, 413, 414, 415, 416, 418, 421, 422, 424, 425, 427, 429], "log": [0, 3, 4, 8, 11, 60, 246, 247, 248, 263, 264, 273, 286, 287, 298, 299, 302, 306, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 342, 349, 378, 381, 382, 383, 388, 398, 406, 407, 408, 410, 411, 412, 413, 416, 417, 421, 422, 424, 425, 426, 429, 430], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 46, 56, 57, 61, 66, 125, 129, 133, 136, 139, 148, 149, 150, 151, 155, 156, 221, 223, 402, 405, 406, 407, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 424, 425, 428, 429, 430], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 150, 151, 155, 156, 223, 371, 410, 412, 413, 416, 422, 424, 425, 426, 429], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 83, 86, 92, 125, 129, 136, 140, 141, 148, 149, 150, 151, 155, 156, 179, 187, 196, 209, 215, 217, 219, 223, 225, 232, 233, 234, 236, 241, 243, 251, 255, 259, 277, 278, 316, 317, 318, 319, 320, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 351, 388, 390, 398, 404, 406, 408, 410, 412, 416, 419, 420, 422, 427, 428, 429, 430, 431], "loop": [0, 8, 52, 54, 59, 73, 125, 129, 136, 148, 149, 155, 156, 232, 233, 251, 276, 277, 278, 336, 388, 407, 408, 410, 411, 412, 416, 418, 419, 420, 422, 423, 428, 429, 430], "ppo": [0, 4, 8, 302, 306, 318, 333, 336, 404, 406, 410, 411, 412, 415, 417, 418, 422, 424, 429], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 115, 123, 124, 125, 126, 128, 129, 130, 136, 143, 148, 149, 155, 156, 173, 176, 177, 184, 189, 190, 192, 199, 201, 205, 206, 208, 210, 211, 213, 214, 215, 221, 223, 237, 255, 259, 398, 406, 410, 412, 413, 416, 417, 418, 422, 429, 430, 431], "introduct": [0, 407, 410, 416, 422, 424, 425, 429, 431], "multi": [0, 1, 7, 9, 27, 38, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 93, 94, 100, 125, 129, 136, 140, 141, 148, 149, 153, 154, 155, 156, 215, 223, 253, 255, 257, 259, 260, 265, 266, 267, 301, 349, 351, 352, 353, 354, 404, 410, 411, 412, 413, 414, 416, 417, 422, 426, 429, 430], "agent": [0, 9, 62, 63, 139, 140, 141, 146, 147, 150, 151, 153, 154, 157, 158, 159, 160, 161, 208, 209, 263, 264, 265, 266, 267, 269, 279, 288, 349, 404, 410, 416, 422, 426, 429], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 41, 46, 56, 57, 60, 61, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 237, 255, 259, 261, 262, 301, 305, 334, 369, 370, 371, 392, 393, 394, 398, 400, 401, 402, 404, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 192, 196, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 225, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 273, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 364, 369, 371, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 398, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431], "pretrain": [0, 410, 422, 429], "recurr": [0, 2, 172, 253, 254, 255, 257, 259, 282, 292, 410, 412, 417, 422, 428, 429], "dqn": [0, 2, 83, 166, 183, 239, 248, 298, 299, 316, 317, 319, 320, 321, 323, 325, 326, 327, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 349, 395, 404, 406, 410, 415, 417, 418, 421, 422, 429], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 46, 64, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 181, 190, 209, 224, 229, 232, 233, 236, 237, 248, 251, 255, 259, 265, 266, 269, 277, 278, 280, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 316, 317, 318, 319, 320, 324, 325, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 383, 390, 393, 394, 398, 400, 401, 404, 406, 407, 408, 410, 412, 416, 418, 419, 422, 427, 428, 429, 430, 431], "replai": [0, 8, 16, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 115, 116, 120, 172, 173, 181, 197, 201, 210, 223, 319, 320, 321, 323, 324, 325, 332, 337, 339, 341, 342, 385, 388, 396, 398, 404, 408, 410, 415, 422, 426, 427, 429], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 120, 125, 129, 136, 142, 148, 149, 155, 156, 172, 173, 177, 181, 196, 197, 201, 210, 213, 214, 215, 217, 219, 223, 232, 233, 277, 278, 297, 305, 308, 319, 320, 321, 323, 324, 325, 332, 337, 339, 341, 342, 351, 352, 353, 354, 355, 385, 388, 396, 398, 404, 408, 410, 415, 420, 422, 426, 427, 429, 431], "export": [0, 6, 7, 410, 422, 429], "competit": [0, 3, 140, 141, 410, 422, 425, 429], "ddpg": [0, 241, 242, 243, 244, 320, 331, 340, 404, 406, 410, 412, 418, 422, 425, 429], "task": [0, 2, 3, 9, 60, 62, 63, 72, 86, 89, 123, 124, 125, 129, 132, 136, 140, 141, 148, 149, 150, 151, 152, 155, 156, 159, 160, 196, 208, 215, 217, 219, 324, 332, 410, 411, 412, 413, 414, 416, 417, 422, 424, 425, 426, 429, 431], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 125, 129, 136, 146, 147, 148, 149, 155, 156, 159, 210, 245, 255, 259, 297, 316, 334, 336, 338, 371, 388, 404, 407, 408, 410, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 46, 48, 52, 54, 56, 57, 59, 61, 66, 71, 72, 73, 96, 97, 98, 104, 107, 111, 113, 117, 120, 125, 129, 134, 136, 148, 149, 155, 156, 166, 179, 182, 183, 192, 196, 213, 214, 215, 217, 221, 223, 224, 255, 259, 262, 265, 266, 279, 286, 288, 293, 294, 302, 305, 306, 307, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 392, 393, 394, 397, 398, 402, 404, 406, 408, 410, 412, 413, 414, 415, 419, 421, 422, 424, 425, 426, 428, 429, 431], "loss": [0, 3, 8, 54, 183, 276, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 351, 384, 388, 395, 398, 407, 408, 410, 415, 416, 418, 419, 420, 422, 426, 428, 429], "trainer": [0, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 410, 411, 422, 429], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 189, 190, 192, 194, 196, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 273, 275, 276, 277, 278, 279, 280, 288, 289, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 344, 349, 351, 352, 353, 354, 357, 369, 371, 379, 380, 381, 382, 384, 385, 386, 387, 390, 398, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431], "packag": [0, 6, 7, 10, 165, 404, 405, 415, 431], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 46, 50, 52, 53, 54, 55, 58, 59, 60, 67, 68, 69, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 142, 143, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 170, 173, 177, 186, 192, 194, 197, 201, 210, 214, 215, 216, 220, 221, 223, 231, 234, 246, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 273, 277, 278, 279, 285, 289, 292, 301, 305, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 382, 385, 386, 387, 388, 390, 400, 401, 402, 404, 406, 407, 408, 412, 413, 414, 415, 416, 419, 421, 423, 424, 425, 427, 430, 431], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 108, 109, 110, 111, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 170, 172, 174, 177, 178, 179, 182, 183, 184, 186, 194, 196, 198, 199, 201, 205, 207, 208, 210, 212, 214, 215, 216, 219, 221, 223, 228, 230, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 288, 289, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 371, 379, 385, 404, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 430, 431], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 96, 125, 129, 136, 148, 149, 155, 156, 169, 199, 209, 213, 215, 221, 223, 230, 255, 259, 267, 297, 319, 334, 339, 369, 404, 407, 411, 412, 414, 416, 424, 428, 430], "interoper": [0, 14, 15, 404], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 41, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 125, 128, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 166, 173, 174, 196, 201, 213, 215, 219, 223, 238, 239, 253, 254, 255, 257, 258, 259, 260, 266, 304, 308, 317, 318, 319, 321, 323, 325, 326, 332, 333, 336, 337, 339, 341, 342, 346, 351, 352, 353, 354, 360, 361, 362, 363, 365, 366, 367, 368, 369, 402, 404, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 41, 52, 54, 59, 63, 73, 91, 136, 213, 404, 419, 430], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 58, 67, 68, 104, 150, 151, 190, 192, 232, 233, 235, 246, 247, 248, 249, 256, 262, 263, 264, 270, 273, 274, 275, 276, 281, 282, 285, 286, 287, 297, 298, 299, 302, 306, 307, 316, 317, 318, 319, 324, 325, 326, 332, 333, 336, 337, 338, 339, 341, 342, 404, 408, 412, 413, 415, 417, 419, 424, 425, 426, 430, 431], "helper": [0, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 411, 412, 414, 424, 426], "compos": [0, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 104, 105, 106, 115, 116, 125, 129, 136, 148, 149, 155, 156, 173, 200, 213, 214, 215, 221, 223, 300, 301, 319, 328, 339, 371, 404, 411, 412, 413, 414, 415, 419, 423, 425, 426, 428, 430, 431], "episod": [0, 3, 41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 125, 129, 136, 148, 149, 155, 156, 169, 201, 204, 209, 230, 235, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 404, 412, 416, 421, 424, 425, 428], "format": [0, 3, 27, 35, 38, 44, 45, 46, 47, 50, 51, 56, 57, 61, 64, 65, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 107, 115, 125, 129, 136, 148, 149, 150, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 371, 404, 411, 412, 415, 416, 418, 420, 430, 431], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 125, 129, 136, 142, 148, 149, 155, 156, 159, 160, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 231, 232, 233, 251, 277, 278, 282, 293, 297, 298, 299, 302, 303, 304, 305, 306, 307, 309, 317, 319, 321, 324, 325, 337, 339, 341, 342, 349, 404, 426], "tree": [0, 1, 41, 52, 54, 59, 125, 129, 136, 148, 149, 155, 156, 404, 424, 428], "forest": [0, 41, 404], "human": [0, 24, 87, 404, 426], "feedback": [0, 404, 421, 430], "rlhf": [0, 60, 72, 92, 190, 404, 406], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 73, 126, 129, 136, 148, 149, 155, 156, 167, 170, 179, 182, 191, 198, 199, 214, 215, 221, 223, 225, 230, 235, 255, 259, 261, 262, 383, 392, 393, 394, 398, 400, 401, 402, 404, 416], "gymlikeenv": [0, 128, 130, 404], "envmetadata": [0, 404], "vector": [0, 1, 8, 25, 50, 121, 122, 130, 134, 135, 139, 150, 151, 152, 159, 160, 181, 220, 241, 243, 253, 254, 257, 258, 260, 351, 354, 364, 365, 366, 367, 368, 404, 406, 407, 411, 412, 414, 423, 424, 425, 426, 427, 431], "custom": [0, 2, 5, 27, 38, 46, 56, 57, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 217, 223, 265, 266, 309, 326, 336, 343, 402, 404, 406, 411, 412, 413, 414, 417, 418, 420, 424, 425], "nativ": [0, 1, 7, 9, 87, 125, 129, 136, 148, 149, 155, 156, 173, 371, 404, 414, 428], "auto": [0, 97, 117, 168, 169, 220, 277, 278, 317, 319, 325, 335, 337, 339, 341, 342, 404, 407, 424, 425], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 168, 169, 170, 173, 183, 186, 189, 191, 196, 204, 208, 209, 210, 211, 213, 214, 215, 217, 220, 221, 223, 225, 231, 237, 253, 255, 259, 267, 277, 278, 291, 301, 334, 370, 404, 407, 411, 412, 413, 414, 416, 419, 423, 424, 425, 430], "dynam": [0, 2, 7, 14, 15, 16, 86, 89, 91, 125, 129, 136, 148, 149, 155, 156, 223, 324, 332, 404, 413, 416, 426], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 121, 122, 125, 127, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 228, 230, 231, 232, 233, 248, 251, 255, 259, 277, 278, 280, 282, 293, 297, 298, 299, 302, 303, 304, 305, 306, 308, 309, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 404, 406, 411, 412, 413, 414, 415, 416, 417, 421, 423, 424, 425, 430], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 125, 129, 136, 148, 149, 150, 151, 155, 156, 167, 197, 223, 236, 237, 248, 251, 263, 264, 280, 297, 298, 299, 303, 304, 325, 339, 385, 404, 412, 414, 415, 431], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 41, 50, 60, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 166, 167, 170, 176, 179, 181, 182, 183, 184, 187, 190, 191, 194, 198, 199, 201, 205, 208, 210, 215, 220, 224, 228, 230, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 255, 259, 260, 261, 262, 263, 264, 265, 275, 277, 278, 279, 280, 282, 285, 286, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 306, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 398, 402, 404, 406, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 430, 431], "record": [0, 2, 11, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 163, 166, 190, 223, 336, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 383, 398, 404, 412, 413, 417, 421, 424], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 181, 210, 228, 293, 298, 299, 302, 303, 304, 305, 306, 307, 308, 313, 404, 413, 414, 417, 418, 424, 425, 426, 430, 431], "actor": [0, 3, 4, 21, 190, 224, 235, 240, 241, 243, 248, 249, 251, 262, 275, 277, 278, 280, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 349, 404, 407, 412, 414, 415, 416, 418, 421, 424, 427, 430], "explor": [0, 1, 222, 232, 233, 236, 251, 269, 277, 278, 293, 298, 299, 302, 303, 304, 305, 306, 316, 334, 383, 393, 394, 398, 404, 413, 414, 415, 416, 418, 419, 421, 424, 425, 426], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 125, 129, 136, 139, 148, 149, 155, 156, 165, 166, 169, 171, 173, 174, 176, 179, 180, 181, 182, 183, 191, 192, 196, 197, 200, 201, 202, 204, 206, 210, 211, 214, 215, 219, 221, 223, 228, 230, 231, 232, 233, 234, 237, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 255, 256, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 273, 277, 278, 279, 280, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 379, 381, 382, 383, 384, 385, 388, 398, 404, 408, 412, 415, 418, 419, 420, 423, 424, 425, 426, 428, 430, 431], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 56, 58, 60, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 106, 108, 125, 126, 129, 136, 140, 141, 142, 145, 148, 149, 150, 151, 153, 154, 155, 156, 170, 177, 179, 180, 184, 190, 192, 198, 199, 204, 205, 208, 210, 214, 220, 223, 231, 236, 237, 246, 255, 259, 263, 264, 273, 293, 302, 306, 310, 311, 330, 337, 344, 351, 356, 364, 374, 388, 404, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "hook": [0, 2, 27, 35, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 118, 125, 129, 136, 148, 149, 155, 156, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 280, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 404], "planner": [0, 235, 262, 404], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 105, 108, 109, 110, 115, 116, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 171, 172, 174, 177, 179, 180, 181, 182, 183, 184, 190, 192, 194, 196, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 219, 221, 223, 224, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 356, 357, 361, 363, 364, 366, 368, 369, 373, 379, 386, 387, 398, 404, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "vmap": [0, 253, 254, 257, 258, 267, 289, 305, 308, 334, 404, 406], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 60, 62, 63, 71, 74, 75, 76, 77, 78, 89, 91, 103, 115, 125, 129, 136, 142, 148, 149, 155, 156, 166, 181, 191, 192, 210, 224, 225, 237, 251, 253, 255, 257, 259, 302, 305, 306, 313, 317, 334, 337, 383, 392, 404, 406, 411, 412, 413, 414, 415, 416, 417, 419, 426, 427, 428, 430, 431], "sac": [0, 325, 337, 339, 404], "redq": [0, 337, 404], "crossq": [0, 319, 404], "iql": [0, 324, 332, 404, 411, 424, 425], "cql": [0, 317, 323, 404], "gail": [0, 330, 404], "dt": [0, 149, 277, 278, 404, 426], "td3": [0, 341, 342, 404], "bc": [0, 5, 341, 404], "a2c": [0, 316, 404], "dreamer": [0, 163, 164, 249, 327, 328, 329, 404, 406], "checkpoint": [0, 58, 94, 96, 99, 111, 112, 114, 118, 404, 427, 428], "builder": [0, 404, 412, 431], "logger": [0, 3, 11, 369, 371, 373, 374, 375, 376, 377, 378, 382, 388, 398, 402, 404, 412, 424], "_util": [0, 3, 12, 404, 415, 421], "implement_for": [0, 3, 404], "thing": [0, 3, 7, 8, 125, 129, 136, 148, 149, 155, 156, 265, 266, 325, 339, 405, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 428, 431], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 96, 97, 109, 117, 125, 129, 136, 148, 149, 155, 156, 181, 221, 223, 246, 265, 266, 285, 317, 319, 332, 337, 339, 341, 342, 351, 353, 354, 405, 411, 416, 417, 418, 426, 428], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 117, 125, 126, 128, 129, 130, 135, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 155, 156, 159, 160, 167, 169, 172, 173, 177, 179, 181, 182, 190, 191, 192, 196, 197, 204, 210, 213, 214, 215, 217, 219, 220, 221, 223, 229, 230, 234, 235, 246, 248, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 276, 280, 286, 301, 302, 305, 306, 308, 312, 317, 318, 319, 321, 325, 326, 332, 333, 334, 336, 337, 339, 341, 342, 343, 349, 350, 351, 352, 353, 354, 369, 370, 371, 373, 385, 402, 405, 406, 407, 408, 411, 412, 413, 414, 415, 417, 419, 420, 424, 425, 426, 427, 428, 430, 431], "debug": [0, 6, 8, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 405, 431], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 46, 56, 57, 58, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 102, 107, 109, 110, 113, 120, 125, 128, 129, 130, 133, 136, 148, 149, 152, 155, 156, 174, 190, 196, 213, 217, 220, 221, 223, 230, 238, 239, 260, 299, 304, 309, 318, 333, 336, 388, 405, 406, 411, 412, 413, 414, 416, 419, 423, 424, 425, 426, 427, 428, 430, 431], "habitat": [0, 3, 131, 405, 427], "lab": [0, 3, 123, 124, 131, 405], "mujoco": [0, 6, 8, 152, 405, 411, 413, 414], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 73, 96, 125, 129, 136, 148, 149, 155, 156, 157, 161, 197, 213, 223, 225, 334, 405, 407, 411, 413, 415, 424, 425, 431], "solut": [0, 2, 3, 6, 7, 9, 21, 109, 405, 406, 408, 415, 430], "resourc": [0, 1, 21, 131, 405, 411, 413, 415, 424, 425], "issu": [0, 3, 4, 5, 8, 83, 87, 94, 96, 97, 109, 117, 125, 128, 129, 133, 136, 148, 149, 155, 156, 173, 197, 211, 230, 293, 298, 299, 302, 303, 304, 305, 306, 405, 430], "customis": [0, 405, 412, 420], "video": [0, 4, 9, 371, 373, 383, 402, 404, 405, 421, 424, 425], "render": [0, 3, 8, 135, 159, 369, 371, 383, 405, 411, 412, 413, 415, 416, 420], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 101, 102, 104, 105, 107, 109, 113, 115, 116, 117, 119, 120, 125, 129, 136, 140, 141, 146, 147, 148, 149, 155, 156, 159, 160, 168, 173, 177, 181, 215, 230, 263, 264, 404, 416, 423, 424, 425, 428, 430], "search": [0, 2, 31, 32, 39, 63, 73, 136, 145, 231, 412], "page": [0, 7, 24, 378, 418], "somewhat": [1, 2, 407, 417, 431], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 170, 180, 183, 215, 223, 248, 257, 260, 280, 298, 299, 303, 304, 336, 385, 419, 430, 431], "dataload": [1, 92, 108, 110, 412, 419, 428], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 125, 129, 136, 148, 149, 155, 156, 173, 185, 201, 209, 210, 211, 213, 215, 223, 232, 233, 251, 253, 255, 257, 259, 273, 277, 278, 316, 319, 334, 336, 339, 371, 406, 412, 416, 424, 428, 430, 431], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 187, 190, 192, 194, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 223, 224, 228, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 273, 275, 276, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 353, 354, 357, 359, 360, 361, 365, 366, 368, 369, 371, 379, 383, 385, 386, 398, 402, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 125, 128, 129, 130, 136, 139, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 169, 172, 185, 190, 196, 205, 214, 215, 219, 223, 259, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 385, 388, 406, 407, 408, 411, 412, 413, 414, 415, 418, 423, 424, 425, 426, 427, 428, 430, 431], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 89, 102, 104, 108, 109, 125, 129, 136, 140, 141, 148, 149, 155, 156, 166, 181, 192, 204, 211, 223, 230, 273, 276, 286, 289, 308, 326, 328, 334, 357, 369, 391, 406, 408, 411, 412, 413, 415, 416, 417, 418, 419, 424, 425, 426, 431], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 46, 48, 49, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 89, 98, 125, 129, 136, 148, 149, 150, 151, 155, 156, 170, 171, 177, 186, 196, 210, 214, 215, 216, 217, 219, 223, 230, 237, 253, 255, 257, 259, 265, 305, 306, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 406, 411, 414, 415, 424, 425, 426, 428, 431], "static": [1, 12, 56, 60, 66, 72, 102, 109, 110, 131, 149, 221, 332, 416, 426, 428], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 41, 46, 48, 53, 56, 57, 58, 61, 63, 66, 67, 68, 72, 98, 104, 110, 125, 126, 129, 131, 136, 139, 148, 149, 150, 151, 155, 156, 183, 210, 212, 223, 225, 253, 257, 266, 300, 316, 318, 333, 336, 337, 338, 406, 407, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 62, 66, 92, 115, 118, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 155, 156, 172, 179, 181, 182, 191, 199, 210, 213, 215, 223, 229, 251, 255, 259, 277, 278, 318, 319, 333, 334, 336, 339, 371, 385, 390, 400, 401, 402, 406, 411, 412, 413, 414, 419, 424, 425, 426, 428], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 74, 86, 87, 90, 91, 92, 125, 129, 136, 142, 148, 149, 155, 156, 168, 173, 177, 186, 196, 204, 210, 213, 214, 215, 216, 217, 219, 223, 260, 289, 305, 306, 307, 319, 339, 371, 408, 413, 415, 416, 420, 428, 430, 431], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 89, 104, 108, 109, 110, 125, 129, 136, 148, 149, 155, 156, 170, 192, 196, 213, 219, 223, 244, 253, 255, 257, 259, 265, 266, 283, 286, 306, 333, 341, 345, 383, 388, 407, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 428, 430, 431], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 91, 126, 306, 388, 406, 407, 411, 412, 423, 430, 431], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 108, 109, 110, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 169, 170, 174, 176, 177, 180, 196, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 219, 223, 230, 232, 233, 234, 237, 238, 239, 251, 253, 255, 257, 259, 260, 263, 264, 265, 266, 268, 277, 278, 289, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 349, 351, 352, 353, 354, 355, 359, 369, 370, 371, 378, 381, 388, 391, 398, 399, 402, 411, 412, 413, 414, 415, 416, 417, 419, 424, 425, 426, 428, 430, 431], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 107, 108, 109, 110, 111, 113, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 171, 172, 176, 179, 180, 182, 190, 192, 194, 196, 204, 206, 212, 213, 215, 216, 217, 219, 221, 223, 230, 237, 238, 239, 241, 247, 250, 255, 259, 260, 263, 264, 271, 280, 299, 301, 303, 304, 306, 308, 309, 310, 317, 319, 332, 334, 337, 339, 341, 342, 348, 351, 354, 369, 370, 383, 385, 400, 401, 407, 411, 413, 416, 417, 418, 419, 423, 424, 426, 427, 428, 430, 431], "constructor": [1, 2, 16, 18, 19, 20, 21, 58, 72, 89, 101, 115, 125, 129, 136, 143, 148, 149, 155, 156, 159, 169, 213, 214, 238, 239, 260, 292, 302, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 399, 402, 406, 411, 412, 413, 416, 419, 424, 425, 428, 430], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 108, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 184, 192, 205, 223, 234, 236, 237, 238, 239, 260, 265, 266, 284, 293, 298, 302, 303, 305, 307, 308, 310, 334, 348, 383, 387, 388, 407, 408, 411, 413, 414, 419, 421, 424, 425, 426], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 121, 122, 125, 126, 129, 130, 131, 133, 134, 135, 136, 142, 143, 148, 149, 152, 155, 156, 157, 167, 215, 223, 251, 253, 255, 257, 259, 267, 292, 301, 307, 308, 334, 341, 392, 402, 406, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 428, 429, 430, 431], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 60, 73, 83, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 167, 172, 186, 189, 192, 208, 209, 210, 211, 213, 215, 220, 223, 230, 231, 232, 233, 234, 235, 249, 251, 253, 255, 257, 259, 261, 262, 276, 277, 278, 301, 302, 306, 316, 327, 336, 350, 351, 352, 353, 354, 357, 358, 359, 370, 373, 379, 383, 388, 408, 412, 414, 415, 417, 418, 420, 421, 423, 426, 427, 430], "queri": [1, 2, 3, 14, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 196, 214, 217, 221, 223, 308, 407, 411, 418, 426, 430], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 125, 129, 136, 148, 149, 155, 156, 197, 209, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 267, 270, 271, 272, 275, 276, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 313, 321, 323, 334, 351, 352, 353, 354, 355, 370, 399, 406, 411, 412, 414, 418, 421, 426, 428, 431], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 109, 110, 117, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 159, 160, 166, 172, 173, 181, 187, 191, 192, 203, 208, 211, 213, 215, 221, 223, 232, 233, 234, 235, 238, 239, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 270, 271, 272, 277, 278, 279, 281, 282, 285, 286, 287, 288, 293, 297, 301, 302, 305, 306, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 379, 381, 383, 388, 390, 391, 392, 400, 401, 402, 406, 407, 411, 412, 413, 414, 416, 417, 419, 421, 424, 425, 426, 427, 428, 431], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 38, 42, 43, 46, 56, 57, 61, 66, 72, 73, 88, 108, 110, 115, 125, 129, 130, 136, 148, 149, 155, 156, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 225, 236, 253, 255, 259, 260, 268, 269, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 352, 353, 354, 385, 411, 413, 414, 415, 419, 420, 424, 425, 426, 428, 431], "deliv": [1, 2, 3, 16, 89, 411, 412, 416, 419, 430], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 125, 128, 129, 130, 136, 139, 148, 149, 150, 151, 155, 156, 221, 253, 255, 257, 258, 259, 301, 307, 308, 317, 319, 332, 337, 339, 341, 342, 370, 379, 404, 412, 415, 416, 423, 424, 426, 430], "user": [1, 2, 3, 5, 8, 23, 27, 38, 46, 56, 57, 61, 66, 83, 85, 89, 91, 102, 110, 125, 129, 136, 148, 149, 155, 156, 157, 174, 209, 213, 215, 223, 225, 245, 319, 336, 339, 341, 371, 399, 407, 408, 411, 412, 416, 418, 419, 426, 430, 431], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 108, 125, 129, 135, 136, 140, 141, 148, 149, 155, 156, 159, 160, 208, 232, 233, 251, 277, 278, 411, 413, 421, 424, 425, 430, 431], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 63, 64, 66, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 109, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 173, 179, 180, 182, 183, 184, 191, 192, 194, 198, 199, 201, 203, 205, 208, 210, 211, 213, 214, 215, 221, 223, 230, 231, 235, 253, 255, 259, 262, 286, 301, 316, 317, 318, 319, 320, 321, 323, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 406, 407, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 41, 46, 53, 56, 57, 58, 60, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 169, 172, 173, 174, 176, 183, 192, 199, 208, 209, 213, 214, 215, 221, 223, 225, 230, 231, 235, 240, 245, 249, 253, 254, 255, 257, 258, 259, 260, 262, 267, 271, 275, 279, 281, 282, 288, 292, 294, 301, 305, 311, 316, 318, 319, 323, 325, 333, 334, 336, 337, 338, 339, 349, 350, 351, 352, 353, 354, 355, 388, 402, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 425, 426, 431], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 83, 97, 104, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 230, 232, 233, 234, 251, 253, 255, 259, 268, 298, 303, 319, 328, 339, 341, 412, 413, 414, 415, 416, 417, 419, 421, 424, 425, 426, 427, 428, 431], "predefin": [1, 412, 414, 419, 428, 430], "becaus": [1, 2, 3, 4, 7, 52, 54, 59, 60, 73, 83, 125, 129, 136, 148, 149, 155, 156, 183, 190, 208, 214, 220, 223, 244, 266, 293, 298, 299, 301, 302, 303, 304, 305, 306, 316, 336, 406, 411, 412, 414, 415, 417, 418, 419, 423, 424, 425, 426, 428, 431], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 426, 428], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 192, 206, 215, 218, 223, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 281, 282, 284, 286, 287, 289, 294, 297, 299, 301, 302, 304, 306, 309, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 392, 407, 411, 413, 414, 415, 416, 417, 423, 424, 425, 427, 428], "heavi": [1, 8, 83, 428], "crucial": [1, 2, 3, 232, 233, 251, 277, 278, 324, 332, 334, 411, 412, 413, 414, 416, 418, 420, 424, 425, 426, 430, 431], "configur": [1, 8, 21, 22, 60, 190, 240, 245, 275, 334, 336, 406, 411, 412, 413, 418, 424, 425, 426], "hyperparamet": [1, 107, 223, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 411, 420, 426, 428], "appropri": [1, 3, 4, 7, 95, 105, 115, 116, 119, 120, 136, 148, 155, 183, 399, 402, 411, 420, 428], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 111, 113, 115, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 406, 407, 411, 414, 415, 417, 421, 424, 425, 426, 427, 430], "take": [1, 2, 3, 8, 23, 27, 38, 41, 56, 57, 60, 61, 66, 86, 112, 118, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 176, 208, 211, 214, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 300, 301, 302, 304, 309, 312, 315, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 379, 390, 406, 408, 411, 412, 413, 415, 416, 417, 418, 424, 425, 426, 428, 431], "consider": [1, 2, 3, 8, 128, 130, 412, 424, 425, 428], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 105, 117, 125, 129, 135, 136, 140, 141, 142, 148, 149, 150, 151, 155, 156, 159, 160, 169, 179, 182, 209, 213, 215, 221, 223, 231, 238, 239, 255, 259, 260, 310, 316, 317, 318, 319, 320, 321, 323, 325, 326, 330, 333, 334, 336, 337, 338, 339, 341, 342, 349, 351, 354, 411, 412, 413, 415, 416, 424, 425, 426, 430, 431], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 102, 104, 109, 110, 111, 115, 118, 123, 124, 125, 128, 129, 130, 131, 135, 136, 139, 142, 148, 149, 150, 151, 155, 156, 159, 160, 166, 169, 170, 173, 176, 177, 179, 180, 183, 184, 186, 190, 192, 197, 198, 199, 201, 204, 205, 208, 209, 211, 214, 215, 220, 221, 223, 225, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 302, 304, 305, 306, 309, 312, 316, 318, 319, 325, 331, 333, 334, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 371, 373, 383, 384, 385, 388, 398, 400, 401, 402, 406, 408, 411, 412, 413, 414, 415, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "occur": [1, 8, 15, 56, 62, 63, 66, 73, 83, 125, 129, 131, 136, 148, 149, 155, 156, 174, 184, 192, 197, 220, 231, 234, 293, 298, 299, 302, 303, 304, 305, 306, 328, 415, 428, 431], "serial": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 213, 221, 223], "parallel": [1, 3, 8, 125, 128, 129, 130, 136, 148, 149, 150, 151, 155, 156, 215, 220, 225, 255, 259, 316, 399, 400, 401, 402, 412, 413, 424, 425, 430], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 46, 64, 170, 173, 201, 236, 255, 259, 398, 401, 404, 411, 412, 413, 414, 415, 419, 421, 424, 425, 428], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 135, 136, 139, 142, 145, 148, 149, 150, 151, 152, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 400, 401, 402, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 428, 431], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 52, 54, 59, 71, 72, 73, 86, 91, 92, 126, 143, 148, 155, 213, 221, 400, 401, 402, 411, 412, 413, 430, 431], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 236, 401, 404, 413, 419, 430], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 39, 52, 54, 63, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 109, 110, 139, 150, 151, 253, 257, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 406, 408, 413, 417, 428, 430], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 57, 58, 61, 67, 68, 102, 109, 110, 121, 122, 123, 124, 128, 130, 131, 133, 134, 135, 143, 144, 148, 152, 156, 213, 221, 223, 255, 259, 265, 276, 277, 278, 334, 390, 404, 406, 407, 411, 416, 420, 424, 425, 426], "aggreg": [1, 3, 27, 56, 83, 102, 115, 150, 151, 231, 238, 239, 241, 242, 308], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 110, 125, 126, 129, 136, 148, 149, 155, 156, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 230, 231, 232, 236, 251, 253, 255, 257, 259, 260, 265, 280, 286, 297, 299, 304, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 390, 407, 412, 414, 416, 417, 420, 421, 426, 427, 430, 431], "final": [1, 2, 3, 4, 21, 41, 52, 54, 59, 60, 73, 210, 220, 232, 233, 251, 253, 255, 257, 259, 265, 277, 278, 300, 307, 351, 383, 406, 411, 412, 413, 415, 420, 421, 424, 425, 426, 431], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 236, 400, 404, 411, 412, 413, 419, 430], "sever": [1, 2, 3, 8, 27, 38, 42, 46, 56, 57, 61, 66, 72, 86, 125, 129, 136, 148, 149, 155, 156, 174, 176, 215, 223, 336, 411, 413, 415, 420, 421, 428, 431], "gather": [1, 3, 18, 20, 21, 41, 72, 92, 96, 97, 102, 109, 117, 197, 264, 267, 273, 334, 350, 392, 405, 412, 413, 414, 415, 419, 424, 425, 426, 428, 430, 431], "continu": [1, 2, 9, 28, 31, 74, 75, 76, 110, 125, 129, 136, 148, 149, 150, 151, 155, 156, 159, 160, 166, 210, 228, 241, 242, 243, 244, 276, 277, 278, 308, 313, 317, 340, 351, 356, 364, 406, 411, 413, 414, 417, 424, 425, 426, 428, 430, 431], "concomitantli": [1, 125, 129, 136, 148, 149, 155, 156], "network": [1, 4, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 223, 238, 239, 241, 242, 243, 244, 247, 249, 250, 257, 260, 265, 266, 267, 269, 271, 272, 274, 276, 279, 281, 282, 283, 288, 294, 295, 296, 297, 305, 309, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 347, 349, 351, 352, 353, 354, 355, 397, 398, 406, 407, 408, 415, 418, 421, 423, 426, 431], "impli": [1, 73, 431], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 60, 61, 66, 102, 104, 107, 121, 122, 125, 129, 136, 148, 149, 153, 154, 155, 156, 177, 196, 210, 213, 214, 215, 217, 219, 223, 253, 254, 255, 257, 258, 259, 265, 267, 269, 305, 316, 317, 318, 319, 325, 328, 339, 341, 390, 397, 406, 408, 411, 412, 413, 415, 423, 426, 428, 430], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 85, 91, 94, 102, 109, 125, 128, 129, 130, 131, 136, 148, 149, 152, 155, 156, 190, 192, 205, 213, 215, 216, 221, 223, 225, 234, 255, 259, 260, 265, 325, 339, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 425, 426, 427, 428, 431], "slightli": [1, 23, 83, 407, 414, 415, 424, 426, 427, 428, 431], "lag": [1, 411, 412, 413], "therefor": [1, 2, 3, 7, 53, 58, 67, 68, 90, 91, 125, 129, 136, 148, 149, 155, 156, 201, 336, 349, 415, 418, 424, 431], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 41, 47, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 102, 104, 109, 110, 115, 117, 118, 125, 129, 136, 139, 142, 145, 148, 149, 150, 151, 155, 156, 166, 167, 170, 173, 183, 190, 196, 201, 204, 208, 209, 210, 211, 214, 216, 219, 220, 230, 231, 232, 233, 251, 253, 254, 255, 257, 258, 259, 263, 264, 265, 274, 276, 277, 278, 297, 302, 305, 306, 315, 316, 317, 318, 319, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 407, 408, 411, 412, 413, 415, 416, 423, 424, 425, 426, 428, 431], "asynchron": [1, 9, 15, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 316, 400, 411, 412, 413], "off": [1, 2, 4, 256, 287, 298, 339, 369, 383, 393, 406, 408, 411, 412, 413, 417, 418, 424, 425, 427, 430, 431], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 117, 125, 128, 129, 130, 135, 136, 148, 149, 150, 151, 155, 156, 157, 159, 179, 182, 186, 192, 209, 215, 220, 223, 225, 248, 253, 255, 257, 259, 266, 268, 294, 296, 297, 299, 303, 316, 324, 326, 332, 336, 383, 406, 408, 411, 412, 413, 414, 416, 417, 419, 420, 424, 425, 426, 427, 428, 431], "remot": [1, 2, 18, 19, 20, 21, 148, 155, 431], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 41, 60, 66, 73, 115, 121, 122, 125, 129, 131, 132, 134, 135, 136, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 166, 167, 169, 170, 173, 176, 179, 182, 183, 184, 190, 194, 198, 199, 204, 205, 206, 208, 209, 211, 213, 221, 223, 225, 235, 236, 237, 255, 259, 262, 277, 278, 301, 316, 369, 371, 392, 406, 411, 413, 414, 417, 418, 419, 420, 421, 427, 428, 430], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 205, 337, 351, 352, 353, 354, 355, 407, 411, 413, 417, 418, 419], "synchronis": [1, 126, 424, 425], "either": [1, 2, 5, 22, 25, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 125, 129, 136, 148, 149, 155, 156, 208, 209, 223, 311, 334, 341, 342, 375, 408, 411, 412, 414, 424, 427, 428, 430, 431], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 411, 425, 430], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 172, 173, 174, 177, 181, 184, 186, 189, 190, 191, 192, 196, 197, 199, 200, 203, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 219, 221, 223, 225, 228, 230, 231, 232, 233, 234, 235, 238, 239, 241, 242, 243, 244, 250, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 276, 277, 278, 285, 286, 287, 292, 293, 294, 295, 296, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 351, 352, 353, 354, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 378, 381, 382, 383, 385, 388, 402, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 45, 83, 86, 115, 170, 253, 255, 257, 259, 299, 318, 333, 336, 339, 373, 387, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 170, 177, 179, 180, 182, 183, 184, 190, 194, 195, 196, 198, 199, 201, 205, 208, 210, 212, 214, 215, 217, 219, 221, 223, 228, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 253, 254, 255, 257, 258, 259, 260, 262, 265, 266, 268, 269, 275, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 369, 385, 390, 396, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 125, 129, 136, 148, 149, 155, 156, 170, 186, 190, 214, 223, 247, 248, 254, 258, 270, 294, 295, 296, 298, 299, 300, 305, 311, 316, 318, 320, 321, 326, 333, 336, 338, 349, 350, 351, 352, 353, 354, 388, 404, 407, 408, 411, 412, 413, 414, 415, 416, 417, 423, 424, 425, 426, 431], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 102, 104, 109, 110, 117, 124, 125, 126, 128, 129, 130, 136, 142, 148, 149, 155, 156, 173, 192, 210, 214, 215, 221, 223, 225, 228, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 312, 317, 319, 321, 324, 325, 332, 334, 337, 339, 341, 342, 349, 351, 352, 353, 354, 369, 371, 375, 383, 392, 393, 394, 398, 400, 401, 406, 407, 408, 411, 413, 414, 415, 416, 417, 426, 428, 431], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 166, 170, 177, 179, 180, 182, 183, 184, 194, 196, 198, 199, 201, 205, 208, 210, 214, 215, 217, 219, 223, 228, 230, 235, 237, 247, 253, 254, 255, 257, 258, 259, 262, 268, 269, 277, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 369, 385, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "slower": [1, 424], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 56, 73, 83, 85, 89, 102, 109, 110, 113, 115, 125, 129, 133, 136, 146, 147, 148, 149, 152, 155, 156, 199, 232, 233, 244, 255, 257, 259, 260, 270, 289, 293, 298, 305, 310, 334, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 405, 406, 407, 411, 412, 413, 415, 416, 418, 424, 425, 426, 428, 430, 431], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 110, 111, 113, 115, 116, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 167, 170, 173, 176, 179, 180, 181, 182, 191, 192, 196, 201, 204, 207, 209, 210, 211, 214, 215, 216, 219, 221, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 289, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 346, 349, 351, 352, 353, 354, 358, 359, 373, 381, 383, 384, 388, 392, 402, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 431], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 121, 122, 125, 129, 131, 132, 133, 136, 148, 149, 155, 156, 177, 190, 195, 196, 210, 214, 215, 217, 219, 223, 253, 254, 257, 258, 305, 380, 411, 412, 413, 414, 424, 425, 427, 431], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 56, 58, 69, 73, 97, 104, 105, 117, 121, 122, 134, 135, 148, 155, 156, 174, 176, 181, 189, 191, 201, 204, 208, 213, 214, 221, 253, 257, 259, 265, 268, 269, 293, 298, 302, 303, 305, 306, 309, 318, 325, 333, 336, 346, 357, 402, 406, 407, 408, 411, 412, 413, 416, 418, 419, 424, 425, 426, 428, 430], "infer": [1, 125, 129, 136, 148, 149, 155, 156, 173, 221, 255, 259, 268, 297, 302, 323, 369, 411, 413, 415, 419, 421, 428, 430], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 46, 56, 57, 61, 66, 83, 86, 102, 109, 110, 121, 122, 123, 124, 125, 128, 129, 134, 135, 136, 142, 143, 144, 148, 149, 155, 156, 191, 192, 213, 215, 221, 223, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 307, 308, 309, 312, 319, 325, 339, 371, 378, 383, 400, 401, 402, 405, 406, 408, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430], "dispatch": [1, 18, 19, 20, 21, 56, 66, 289, 301, 371, 411], "avail": [1, 2, 3, 4, 6, 21, 53, 58, 67, 68, 83, 86, 91, 102, 108, 109, 110, 123, 124, 133, 140, 141, 146, 147, 148, 150, 151, 152, 157, 158, 159, 160, 166, 169, 172, 190, 248, 280, 302, 306, 334, 371, 400, 401, 411, 412, 413, 414, 415, 416, 417, 424, 425, 426, 428, 431], "speed": [1, 2, 4, 8, 30, 125, 129, 136, 148, 149, 155, 156, 407, 411, 412, 413, 414, 424, 425, 426, 428, 430], "avoid": [1, 2, 3, 27, 38, 46, 56, 57, 61, 66, 96, 97, 109, 117, 125, 129, 136, 148, 149, 155, 156, 165, 213, 215, 221, 223, 234, 286, 293, 305, 310, 318, 319, 333, 336, 339, 391, 413, 415, 425], "oom": [1, 3, 52, 54, 59, 73, 96, 97, 117], "choic": [1, 2, 85, 91, 148, 270, 406, 407, 411, 412, 418, 424, 425], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 60, 61, 63, 66, 67, 68, 71, 72, 83, 86, 87, 89, 90, 91, 94, 96, 97, 102, 104, 109, 110, 115, 117, 125, 126, 127, 129, 130, 136, 139, 143, 148, 149, 150, 151, 155, 156, 159, 169, 170, 179, 182, 199, 213, 214, 216, 221, 223, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 268, 270, 271, 272, 275, 277, 278, 279, 281, 282, 284, 288, 289, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 317, 318, 319, 332, 333, 334, 336, 337, 339, 341, 342, 351, 352, 353, 354, 355, 369, 385, 388, 400, 401, 402, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 428, 430, 431], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 78, 89, 101, 110, 125, 129, 133, 136, 145, 148, 149, 155, 156, 166, 173, 186, 216, 221, 231, 255, 259, 297, 406, 407, 412, 425], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 41, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 104, 109, 115, 117, 125, 129, 136, 148, 149, 155, 156, 220, 221, 223, 232, 233, 235, 236, 262, 277, 278, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 378, 404, 408, 411, 413, 414, 417, 419, 421, 424, 425, 427, 431], "while": [1, 2, 3, 7, 8, 23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 201, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 324, 332, 333, 336, 406, 407, 411, 413, 414, 417, 419, 420, 424, 425, 426, 427, 428, 430], "wait": [1, 20, 21, 22, 157, 414, 426], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 71, 73, 83, 86, 87, 89, 90, 91, 92, 96, 97, 102, 104, 109, 110, 115, 117, 125, 129, 135, 136, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 165, 169, 170, 172, 173, 181, 192, 199, 201, 204, 205, 208, 210, 213, 215, 223, 230, 238, 239, 253, 257, 282, 301, 302, 307, 308, 309, 316, 317, 319, 320, 321, 323, 324, 325, 330, 332, 336, 339, 341, 351, 358, 359, 369, 371, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 428, 430, 431], "impact": [1, 2, 3, 89, 135, 179, 182, 234, 316, 318, 333, 336, 338, 412, 414, 424, 425], "memori": [1, 3, 8, 21, 27, 30, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 94, 96, 100, 125, 126, 129, 133, 136, 148, 149, 155, 156, 173, 177, 196, 210, 214, 215, 217, 219, 221, 223, 246, 257, 258, 305, 402, 404, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "manag": [1, 8, 125, 129, 136, 148, 149, 155, 156, 236, 255, 259, 292, 347, 348, 351, 352, 353, 354, 383, 406, 414, 415, 418, 430], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 93, 101, 102, 104, 107, 109, 110, 115, 125, 129, 134, 135, 136, 148, 149, 150, 151, 155, 156, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 195, 196, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 230, 231, 232, 233, 235, 237, 247, 248, 251, 255, 259, 261, 262, 277, 278, 280, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 369, 371, 382, 383, 384, 386, 387, 388, 392, 407, 408, 411, 413, 414, 415, 416, 418, 423, 424, 425, 426, 428, 430, 431], "control": [1, 3, 5, 8, 16, 23, 24, 33, 58, 67, 68, 102, 104, 109, 123, 124, 125, 129, 135, 136, 139, 148, 149, 150, 151, 155, 156, 181, 230, 241, 242, 243, 244, 255, 259, 261, 262, 277, 278, 282, 289, 305, 306, 307, 316, 318, 319, 333, 334, 336, 340, 351, 356, 364, 369, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 428, 430], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 104, 107, 108, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 173, 174, 179, 182, 187, 190, 191, 192, 196, 197, 199, 208, 210, 211, 214, 215, 217, 221, 223, 225, 247, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 274, 276, 287, 294, 295, 296, 297, 301, 302, 305, 306, 308, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 349, 351, 352, 353, 354, 369, 371, 379, 384, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 431], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 412, 425], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58, 60, 61, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 102, 104, 107, 109, 125, 126, 129, 135, 136, 148, 149, 150, 151, 155, 156, 169, 170, 173, 176, 179, 182, 184, 187, 194, 206, 210, 213, 215, 216, 221, 223, 234, 236, 237, 255, 259, 266, 351, 353, 354, 383, 388, 407, 411, 412, 413, 414, 417, 418, 419, 421, 424, 425, 426, 428, 431], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 232, 278, 301, 411, 415, 419, 431], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 85, 107, 115, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 213, 269, 336, 341, 351, 352, 353, 354, 355, 370, 405, 406, 408, 411, 412, 413, 414, 417, 419, 420, 425, 428, 431], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 85, 89, 108, 109, 110, 113, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 143, 144, 148, 149, 150, 151, 152, 155, 156, 166, 173, 179, 181, 182, 187, 191, 192, 213, 214, 215, 221, 223, 238, 239, 254, 255, 258, 259, 260, 263, 264, 265, 266, 277, 278, 286, 297, 309, 317, 319, 332, 334, 337, 339, 341, 342, 346, 407, 411, 412, 413, 416, 417, 419, 423, 424, 425, 427, 428, 431], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 186, 190, 191, 192, 194, 196, 197, 201, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 398, 402, 407, 408, 411, 412, 413, 414, 415, 417, 424, 427, 428, 430, 431], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 89, 125, 129, 136, 148, 149, 155, 156, 174, 179, 182, 192, 197, 209, 215, 223, 230, 234, 255, 256, 259, 287, 324, 332, 341, 369, 383, 406, 412, 414, 424, 425, 426, 428], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 173, 179, 182, 192, 210, 211, 259, 276, 302, 306, 307, 308, 390, 400, 401, 406, 411, 412, 416, 417, 425, 426, 431], "choos": [1, 11, 139, 255, 259, 336, 404, 407, 411, 412, 413, 415, 424, 425, 428, 430], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 86, 87, 88, 89, 90, 91, 102, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 145, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 169, 190, 196, 217, 221, 223, 238, 239, 253, 255, 257, 259, 260, 299, 302, 303, 304, 315, 316, 317, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 371, 388, 406, 407, 408, 411, 412, 413, 414, 415, 418, 419, 423, 424, 425, 426, 428, 430, 431], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 391, 411, 413, 430], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 46, 83, 173, 187, 223, 232, 233, 251, 277, 278, 301, 370, 371, 373, 381, 383, 388, 391, 392, 411, 412, 413, 414, 417, 424, 425, 428, 430, 431], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 111, 113, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 157, 158, 169, 170, 173, 176, 177, 181, 184, 186, 189, 190, 192, 194, 195, 196, 204, 206, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 266, 267, 268, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 305, 306, 308, 309, 312, 318, 319, 333, 334, 336, 339, 341, 350, 351, 352, 353, 354, 369, 370, 373, 383, 407, 408, 412, 413, 414, 415, 416, 417, 419, 420, 424, 425, 426, 428, 430, 431], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 170, 173, 201, 255, 259, 391, 411, 412, 413, 414, 415, 419, 421, 424, 425, 428, 430], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 39, 42, 44, 46, 47, 56, 57, 58, 60, 61, 63, 65, 66, 67, 73, 83, 85, 86, 89, 102, 104, 107, 109, 110, 112, 115, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 166, 189, 196, 201, 204, 208, 209, 210, 211, 213, 219, 221, 223, 232, 233, 248, 251, 253, 254, 255, 257, 259, 265, 266, 271, 279, 280, 288, 292, 298, 299, 304, 308, 357, 360, 361, 362, 363, 365, 366, 367, 368, 371, 383, 385, 400, 401, 407, 411, 412, 413, 414, 417, 418, 419, 421, 424, 425, 426, 427, 428, 430, 431], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 391, 411, 412, 415, 421], "rand_step": [1, 2, 3, 35, 64, 123, 124, 125, 126, 128, 129, 130, 136, 137, 138, 142, 143, 144, 148, 149, 155, 156, 189, 210, 221, 426, 430, 431], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 411], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 85, 87, 89, 90, 91, 411, 412, 413], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 46, 47, 65, 67, 73, 83, 85, 86, 87, 89, 90, 91, 101, 102, 109, 110, 115, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 197, 208, 213, 214, 223, 235, 259, 262, 277, 278, 336, 351, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 379, 404, 407, 411, 412, 413, 414, 416, 419, 421, 426, 430, 431], "pad": [1, 2, 3, 23, 55, 69, 85, 87, 89, 90, 91, 173, 238, 239, 241, 242, 259, 263, 264, 265, 385], "along": [1, 2, 3, 14, 15, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 97, 102, 104, 109, 110, 115, 117, 128, 130, 172, 173, 174, 192, 194, 197, 204, 212, 259, 260, 263, 264, 269, 298, 302, 305, 306, 319, 334, 341, 411, 412, 414, 416, 418, 424, 425, 426, 428, 430], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 88, 95, 101, 102, 105, 115, 116, 119, 120, 125, 126, 129, 136, 148, 149, 155, 156, 166, 169, 172, 173, 177, 196, 209, 210, 212, 213, 214, 215, 217, 219, 223, 261, 305, 315, 326, 388, 405, 412, 413, 423, 424, 425, 426, 428, 430, 431], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 110, 129, 169, 197, 208, 231, 233, 263, 264, 277, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 408, 414], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 41, 63, 64, 66, 67, 73, 87, 123, 124, 125, 128, 129, 130, 136, 148, 149, 155, 156, 159, 160, 187, 197, 221, 223, 248, 263, 264, 280, 286, 298, 299, 303, 304, 306, 345, 351, 385, 406, 411, 413, 414, 415, 416, 417, 418, 424, 425], "valid": [1, 2, 3, 23, 52, 54, 55, 72, 73, 92, 115, 125, 129, 136, 148, 149, 155, 156, 161, 169, 197, 213, 215, 223, 232, 233, 238, 239, 260, 263, 264, 277, 278, 325, 333, 339, 351, 352, 353, 354, 385, 408, 415, 431], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 383, 404, 406, 411, 412], "strategi": [1, 2, 16, 89, 107, 139, 166, 251, 264, 273, 406, 408, 411, 412, 415, 417, 424, 425, 428, 430], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 80, 97, 104, 125, 129, 135, 136, 142, 148, 149, 150, 151, 155, 156, 159, 161, 170, 172, 173, 183, 190, 208, 209, 210, 213, 214, 215, 220, 221, 223, 232, 233, 238, 239, 255, 259, 263, 264, 265, 266, 276, 298, 302, 303, 306, 309, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 342, 349, 371, 388, 398, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "organ": [1, 2, 426, 428], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 110, 125, 128, 129, 130, 136, 148, 149, 152, 155, 156, 170, 173, 179, 182, 183, 201, 208, 213, 220, 221, 223, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 292, 297, 299, 301, 304, 309, 312, 313, 321, 326, 341, 349, 369, 371, 406, 407, 412, 415, 416, 417, 418, 419, 420, 421, 424, 426, 430], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 89, 104, 107, 121, 122, 125, 126, 129, 134, 135, 136, 139, 148, 149, 150, 151, 155, 156, 169, 173, 180, 181, 192, 199, 213, 215, 216, 223, 248, 253, 254, 255, 257, 258, 259, 260, 262, 265, 266, 267, 280, 332, 334, 336, 345, 351, 352, 353, 357, 358, 359, 383, 388, 390, 400, 401, 406, 407, 408, 411, 412, 413, 415, 416, 418, 420, 423, 424, 425, 426, 427, 428, 430, 431], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 46, 53, 56, 57, 61, 66, 67, 89, 101, 102, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 223, 267, 302, 316, 318, 331, 333, 334, 336, 371, 373, 388, 405, 406, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "tabl": [1, 27, 406, 412, 417], "summar": [1, 3, 426], "what": [1, 3, 8, 11, 33, 53, 71, 83, 102, 109, 125, 129, 136, 148, 149, 155, 156, 183, 210, 213, 225, 230, 303, 319, 330, 334, 341, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 430, 431], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 41, 46, 56, 57, 58, 61, 66, 71, 72, 102, 108, 109, 125, 129, 136, 142, 145, 148, 149, 155, 156, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 194, 196, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 225, 253, 254, 255, 257, 258, 259, 265, 266, 277, 278, 299, 305, 308, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 346, 349, 392, 405, 406, 407, 408, 411, 413, 414, 416, 417, 418, 419, 424, 425, 426, 428, 431], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 60, 61, 66, 125, 129, 136, 148, 149, 155, 156, 173, 181, 186, 216, 223, 253, 254, 257, 262, 274, 276, 277, 278, 301, 306, 316, 317, 325, 334, 350, 385, 408, 412, 414, 415, 417, 424, 425, 428, 430, 431], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 52, 54, 56, 58, 59, 60, 61, 63, 66, 67, 68, 73, 96, 115, 253, 254, 257, 258, 265, 266, 268, 269, 279, 288, 309, 351, 352, 353, 354, 355, 357, 371, 412, 427, 428], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 108, 109, 110, 115, 125, 126, 128, 129, 136, 143, 144, 148, 149, 155, 156, 166, 169, 173, 179, 182, 183, 196, 200, 201, 209, 211, 213, 219, 221, 223, 225, 230, 253, 255, 257, 259, 277, 278, 298, 305, 316, 340, 351, 352, 353, 354, 355, 357, 371, 378, 388, 390, 402, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "p": [1, 2, 4, 104, 107, 126, 153, 154, 236, 237], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 46, 56, 57, 61, 66, 83, 85, 87, 89, 90, 91, 110, 121, 122, 125, 129, 134, 135, 136, 148, 149, 150, 151, 155, 156, 177, 179, 180, 182, 189, 196, 201, 205, 209, 210, 212, 213, 214, 215, 217, 219, 220, 223, 253, 256, 257, 260, 265, 282, 286, 287, 305, 308, 315, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 390, 400, 401, 402, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 101, 102, 104, 115, 125, 128, 129, 136, 148, 149, 155, 156, 179, 180, 182, 189, 192, 210, 212, 215, 225, 259, 260, 266, 267, 302, 305, 306, 308, 309, 315, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 371, 379, 390, 400, 401, 402, 404, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 420, 424, 425, 426, 428, 430, 431], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 155, 156, 159, 160, 166, 172, 173, 174, 186, 192, 194, 197, 204, 207, 210, 212, 216, 221, 238, 239, 240, 245, 246, 255, 257, 259, 260, 263, 264, 265, 268, 269, 275, 279, 283, 284, 285, 286, 289, 298, 301, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 402, 411, 412, 413, 414, 416, 424, 425, 426, 428], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 104, 115, 121, 122, 125, 126, 129, 134, 135, 136, 139, 145, 148, 149, 150, 151, 152, 155, 156, 165, 172, 174, 197, 204, 210, 211, 213, 215, 221, 223, 230, 237, 249, 253, 257, 259, 277, 278, 292, 301, 317, 318, 319, 325, 328, 332, 333, 334, 336, 337, 339, 341, 342, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 388, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "adapt": [1, 24, 167, 208, 234, 333, 411, 415, 426], "equal": [1, 14, 15, 17, 27, 73, 83, 102, 109, 110, 143, 146, 147, 148, 155, 191, 192, 238, 239, 253, 255, 257, 259, 260, 264, 266, 340, 345, 379, 400, 401, 411, 413, 427], "introduc": [1, 2, 148, 155, 253, 255, 257, 259, 277, 278, 411, 424], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 85, 91, 96, 97, 104, 115, 117, 121, 122, 125, 128, 129, 130, 134, 135, 136, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 169, 196, 210, 215, 217, 223, 225, 241, 255, 259, 284, 306, 307, 308, 371, 379, 391, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 428, 430, 431], "confus": [1, 25, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 89, 90, 91, 96, 97, 98, 104, 107, 108, 109, 110, 111, 113, 117, 125, 128, 129, 130, 136, 142, 148, 149, 155, 156, 176, 180, 181, 198, 205, 212, 217, 221, 223, 236, 251, 253, 255, 259, 269, 270, 292, 297, 299, 304, 306, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 351, 369, 385, 400, 401, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 430, 431], "better": [1, 3, 8, 9, 14, 15, 23, 135, 255, 259, 407, 413, 416, 426, 430], "consist": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 86, 89, 125, 129, 136, 148, 149, 155, 156, 190, 220, 223, 236, 239, 260, 411, 412, 413, 426, 427, 431], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 89, 125, 129, 136, 140, 141, 148, 149, 155, 156, 215, 302, 306, 411, 413, 415, 416, 417, 419, 424, 425, 426, 431], "keep": [1, 2, 3, 4, 7, 8, 15, 53, 58, 67, 68, 104, 108, 115, 148, 155, 192, 196, 219, 221, 223, 230, 277, 278, 381, 388, 411, 412, 413, 414, 419, 420, 421, 425, 426, 428, 431], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 39, 63, 83, 86, 196, 219, 317, 320, 323, 325, 337, 339, 341, 342, 407, 411, 412, 417, 418, 424, 425, 428, 431], "interchang": [1, 265, 266, 413, 416, 420, 427, 428], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 104, 105, 108, 109, 110, 117, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 181, 191, 202, 213, 215, 221, 223, 225, 238, 239, 247, 253, 255, 259, 260, 265, 266, 299, 302, 306, 316, 318, 319, 320, 323, 324, 325, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 351, 383, 388, 407, 411, 412, 414, 415, 419, 424, 425, 426, 428, 431], "wherea": [1, 2, 22, 27, 38, 46, 56, 57, 61, 66, 89, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 181, 213, 215, 223, 319, 334, 339, 408, 420], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 86, 89, 91, 101, 102, 125, 129, 136, 142, 148, 149, 155, 156, 196, 210, 213, 215, 219, 221, 223, 236, 251, 255, 257, 259, 263, 264, 277, 278, 302, 306, 319, 321, 324, 325, 339, 349, 351, 352, 353, 354, 355, 406, 411, 412, 413, 415, 416, 418, 419, 420, 424, 425, 426, 427], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 83, 89, 102, 109, 115, 148, 155, 197, 213, 307, 308, 379, 388, 406, 411, 412, 413, 419, 423, 430, 431], "doesn": [1, 4, 12, 115, 143, 179, 182, 415, 416], "understood": [1, 3, 411], "serv": [1, 18, 20, 21, 131, 428, 430, 431], "basi": [1, 115, 265, 428, 430], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 41, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 85, 89, 91, 96, 108, 110, 115, 121, 122, 125, 126, 129, 133, 134, 135, 136, 148, 149, 155, 156, 173, 190, 196, 199, 205, 213, 217, 220, 221, 223, 225, 235, 259, 265, 266, 267, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 371, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "anoth": [1, 2, 3, 8, 41, 66, 71, 89, 102, 109, 125, 128, 129, 130, 133, 136, 148, 149, 155, 156, 170, 179, 180, 182, 210, 214, 260, 302, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 407, 411, 413, 414, 415, 417, 418, 423, 424, 425, 426, 431], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 85, 87, 89, 101, 102, 109, 110, 125, 129, 133, 136, 143, 148, 149, 152, 155, 156, 170, 177, 196, 210, 213, 214, 215, 217, 219, 223, 236, 255, 259, 260, 267, 289, 305, 307, 308, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 369, 371, 373, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 424, 425, 426, 428, 430, 431], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 109, 110, 111, 112, 113, 115, 117, 125, 128, 129, 130, 131, 135, 136, 148, 149, 152, 155, 156, 169, 170, 173, 177, 179, 180, 183, 184, 186, 190, 192, 196, 198, 199, 200, 201, 205, 208, 210, 214, 215, 217, 219, 223, 224, 232, 235, 236, 237, 246, 251, 255, 259, 265, 266, 267, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 330, 332, 334, 336, 337, 338, 339, 341, 342, 349, 355, 369, 370, 399, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 426, 428, 431], "op": [1, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 191, 220, 232, 233, 236, 251, 371, 390, 415], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 91, 101, 102, 110, 115, 125, 129, 136, 148, 149, 150, 151, 152, 155, 156, 223, 225, 230, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 298, 299, 301, 303, 304, 309, 312, 369, 371, 407, 411, 412, 413, 414, 416, 417, 418, 424, 426, 427, 428, 430, 431], "goal": [1, 3, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 136, 209, 411, 412, 413, 414, 425, 426], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 412], "explicitli": [1, 2, 3, 4, 30, 93, 94, 100, 169, 276, 302, 407, 412, 414, 419, 424, 425, 428], "do": [1, 2, 3, 4, 7, 91, 125, 129, 136, 148, 149, 155, 156, 159, 160, 166, 197, 210, 213, 220, 221, 230, 255, 259, 266, 268, 295, 334, 351, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431], "deepcopi": [1, 267, 334, 424], "structur": [1, 3, 7, 41, 52, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 115, 125, 129, 136, 148, 149, 155, 156, 179, 182, 231, 265, 277, 278, 316, 325, 336, 339, 351, 352, 353, 354, 355, 404, 407, 411, 413, 414, 416, 419, 424, 425, 426, 427], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 104, 107, 109, 117, 125, 126, 129, 136, 148, 149, 155, 156, 159, 160, 169, 177, 183, 196, 210, 214, 215, 217, 219, 220, 221, 223, 231, 267, 297, 301, 305, 385, 390, 391, 407, 412, 413, 417, 420, 424, 425, 426, 428], "instanti": [1, 2, 3, 14, 15, 21, 52, 53, 54, 58, 59, 67, 68, 71, 73, 101, 102, 133, 135, 169, 210, 214, 266, 351, 352, 353, 354, 355, 369, 411, 412, 417, 418, 420, 424, 425, 426, 428, 431], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 140, 141, 142, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 166, 172, 173, 176, 177, 179, 180, 182, 185, 190, 191, 192, 196, 204, 206, 210, 211, 214, 215, 217, 219, 221, 223, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 292, 297, 299, 301, 304, 305, 306, 308, 309, 312, 313, 316, 317, 319, 328, 332, 334, 336, 337, 338, 339, 341, 342, 346, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 384, 388, 391, 400, 401, 402, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 430, 431], "graph": [1, 3, 4, 8, 56, 66, 121, 122, 134, 135, 347, 348, 411, 415, 426], "reli": [1, 2, 3, 11, 23, 57, 61, 210, 253, 254, 255, 257, 258, 259, 316, 336, 407, 411, 413, 415, 417, 419, 426, 431], "third": [1, 192, 299, 424, 425], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 52, 54, 59, 63, 73, 412, 413, 414, 415, 418, 419, 424, 425, 426, 430, 431], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 142, 148, 149, 155, 156, 173, 190, 316, 318, 333, 334, 336, 338, 407, 411, 412, 414, 424, 425, 426], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 266, 371, 411, 413, 414, 415, 424, 425, 426, 428, 430], "decis": [1, 2, 3, 240, 275, 297, 322, 335, 406, 414, 416, 417, 424, 425, 428, 431], "simplest": [1, 56, 66, 115, 309, 411, 413, 414, 417, 424, 425, 428, 431], "scenario": [1, 2, 140, 141, 148, 159, 160, 213, 369, 411, 417, 424, 425, 426], "transit": [1, 27, 38, 46, 56, 57, 61, 66, 85, 89, 102, 110, 115, 125, 129, 136, 148, 149, 155, 156, 223, 234, 236, 311, 411, 414, 416, 417, 419, 424, 426, 428], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 113, 115, 117, 125, 129, 136, 142, 145, 148, 149, 155, 156, 166, 172, 173, 197, 201, 226, 229, 232, 233, 235, 246, 251, 256, 262, 263, 264, 273, 275, 276, 277, 278, 281, 286, 287, 290, 293, 298, 299, 300, 302, 303, 304, 305, 306, 316, 317, 318, 319, 320, 321, 323, 333, 335, 336, 341, 342, 379, 385, 388, 391, 404, 406, 411, 412, 413, 414, 415, 416, 417, 419, 421, 424, 425, 427, 430, 431], "attent": [1, 2, 8, 411, 414, 431], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 125, 129, 136, 142, 146, 147, 148, 149, 155, 156, 157, 158, 177, 181, 192, 196, 210, 214, 215, 217, 219, 221, 223, 230, 232, 235, 237, 248, 249, 251, 253, 255, 257, 259, 262, 267, 278, 280, 284, 293, 298, 299, 301, 304, 305, 306, 307, 308, 310, 315, 320, 321, 323, 334, 350, 351, 352, 353, 354, 355, 357, 380, 383, 398, 406, 408, 411, 412, 413, 416, 417, 418, 419, 420, 425, 426, 431], "built": [1, 2, 3, 5, 7, 104, 121, 122, 128, 134, 135, 145, 146, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 349, 396, 398, 399, 402, 411, 412, 413, 414, 415, 418, 420, 426, 428, 431], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 170, 186, 385, 404, 414, 415, 425], "suffici": [1, 3, 4, 411], "preprocess": [1, 2, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 412, 415], "popul": [1, 2, 3, 14, 15, 16, 53, 58, 65, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 189, 210, 246, 267, 334, 411, 413, 414, 417, 419, 426, 428], "replaybuff": [1, 2, 14, 15, 16, 35, 53, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 109, 110, 119, 173, 197, 201, 223, 321, 326, 349, 396, 398, 404, 413, 415, 419, 421, 424, 425, 427, 428, 430], "lazytensorstorag": [1, 2, 53, 58, 66, 67, 68, 101, 109, 110, 115, 201, 223, 413, 415, 421, 424, 425, 428], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 56, 58, 66, 115, 125, 126, 129, 136, 148, 149, 155, 156, 165, 170, 190, 210, 223, 237, 289, 298, 301, 302, 303, 327, 329, 330, 341, 351, 354, 362, 363, 367, 368, 369, 398, 407, 411, 415, 424, 425, 428, 430, 431], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 89, 109, 115, 170, 255, 259, 260, 276, 369, 413, 415, 424, 425], "extend": [1, 2, 8, 35, 41, 53, 56, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 101, 102, 104, 105, 109, 110, 113, 115, 116, 119, 120, 172, 201, 223, 234, 334, 385, 407, 408, 411, 412, 413, 414, 415, 419, 421, 424, 425, 427, 428, 430], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 166, 172, 415, 428], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 53, 54, 58, 59, 67, 68, 73, 109, 115, 133, 267, 419, 424, 425], "achiev": [1, 2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 133, 136, 148, 149, 155, 156, 209, 223, 231, 237, 302, 385, 408, 411, 412, 413, 414, 415, 424, 425, 426, 428, 430, 431], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 115, 125, 126, 129, 133, 136, 148, 149, 150, 155, 156, 159, 160, 170, 173, 196, 213, 214, 215, 217, 220, 221, 223, 228, 230, 238, 239, 241, 242, 243, 244, 245, 246, 250, 255, 259, 260, 261, 265, 266, 297, 306, 313, 319, 321, 326, 337, 339, 349, 371, 385, 392, 393, 394, 398, 400, 401, 406, 411, 412, 413, 414, 415, 417, 420, 424, 425, 426, 427, 428, 430, 431], "multidimension": [1, 2, 67, 101, 102, 428], "slicesampl": [1, 2, 83, 102, 110, 428], "sampler": [1, 2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 197, 276, 321, 326, 349, 411, 413, 424, 425, 428], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 39, 44, 45, 50, 51, 63, 72, 115, 121, 122, 148, 155, 173, 201, 217, 232, 233, 273, 305, 309, 340, 345, 375, 411, 412, 428, 431], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 109, 110, 111, 112, 113, 115, 117, 121, 125, 126, 129, 134, 136, 146, 148, 149, 150, 151, 152, 155, 156, 157, 159, 166, 169, 170, 173, 176, 183, 187, 190, 192, 194, 205, 209, 210, 211, 213, 215, 216, 221, 223, 238, 239, 248, 255, 259, 260, 263, 264, 265, 266, 280, 293, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 340, 341, 342, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 373, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 407, 411, 412, 413, 414, 417, 423, 426, 428], "ensur": [1, 2, 3, 27, 38, 46, 53, 56, 57, 61, 66, 67, 73, 101, 102, 108, 125, 129, 136, 148, 149, 155, 156, 166, 173, 196, 208, 215, 217, 221, 223, 255, 259, 298, 406, 412, 413, 426, 428], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 104, 109, 115, 117, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 170, 172, 174, 179, 182, 183, 184, 190, 192, 194, 198, 199, 201, 205, 208, 210, 212, 221, 222, 223, 225, 228, 230, 235, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 270, 273, 274, 275, 276, 277, 279, 280, 285, 286, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 379, 385, 388, 398, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 83, 136, 256, 286, 287, 315, 405, 411, 412, 413, 414, 415, 418, 424, 425, 427, 431], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 61, 66, 71, 111, 115, 125, 129, 133, 136, 139, 148, 149, 150, 151, 155, 156, 173, 176, 186, 196, 199, 211, 213, 215, 219, 221, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 268, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 302, 303, 304, 305, 309, 312, 315, 325, 338, 339, 350, 355, 371, 388, 402, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 430, 431], "dimension": [1, 53, 57, 58, 66, 67, 68, 181, 255, 259, 351, 356, 364, 425], "num_slic": [1, 2, 83, 89, 102, 109, 110, 428], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 44, 45, 46, 50, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 117, 121, 122, 123, 124, 125, 129, 134, 135, 136, 137, 138, 139, 142, 144, 148, 149, 153, 154, 155, 156, 166, 167, 169, 170, 173, 183, 201, 208, 209, 213, 221, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 257, 258, 260, 262, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 369, 370, 406, 410, 411, 412, 413, 414, 415, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431], "trajectory_kei": [1, 23, 109, 110], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 64, 170, 201, 414, 419, 428, 430], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 170, 173, 201, 388, 391, 398, 408, 411, 412, 413, 414, 415, 419, 421, 424, 425, 428, 430], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 173, 174, 194, 207, 210, 216, 221, 258, 284, 289, 301, 402, 412, 413, 415, 424, 426, 428], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 96, 97, 101, 102, 115, 117, 125, 129, 136, 148, 149, 155, 156, 223, 301], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 115, 125, 129, 136, 143, 149, 150, 151, 152, 155, 156, 213, 369, 399, 404, 411, 412, 413, 416, 423, 430, 431], "make_env": [1, 3, 148, 155, 160, 213, 221, 369, 393, 394, 411, 412, 430, 431], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 101, 107, 125, 129, 136, 148, 149, 155, 156, 215, 234, 236, 247, 280, 299, 303, 304, 305, 306, 326, 336, 390, 404, 408, 411, 412, 415, 416, 417, 421, 428, 431], "behav": [1, 3, 131, 142, 253, 257, 273, 324, 332, 334, 415, 427], "iif": 1, "accordingli": [1, 2, 102, 208, 209, 257, 303, 414], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 115, 117, 123, 124, 125, 128, 129, 130, 131, 132, 136, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 167, 169, 170, 173, 177, 181, 183, 184, 190, 192, 194, 196, 198, 199, 201, 204, 205, 208, 209, 210, 212, 213, 214, 215, 217, 219, 223, 224, 228, 234, 235, 237, 238, 239, 241, 242, 243, 245, 248, 250, 253, 254, 255, 257, 258, 259, 260, 262, 265, 266, 267, 270, 273, 276, 279, 289, 293, 294, 295, 296, 298, 299, 302, 304, 305, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 387, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 89, 101, 115, 125, 129, 136, 148, 149, 155, 156, 169, 183, 225, 298, 305, 417, 418, 420, 424, 425], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 102, 104, 110, 125, 129, 131, 136, 143, 146, 147, 148, 149, 155, 156, 169, 170, 173, 197, 209, 210, 211, 213, 214, 215, 223, 226, 230, 249, 277, 278, 282, 286, 290, 301, 316, 318, 319, 326, 333, 336, 338, 339, 374, 408, 411, 412, 413, 414, 418, 424, 425, 426, 428, 431], "fulli": [1, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 254, 258, 412, 415, 418, 426, 428], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 104, 105, 108, 110, 111, 113, 115, 116, 117, 119, 120, 125, 126, 129, 136, 143, 148, 149, 150, 151, 155, 156, 157, 159, 160, 167, 169, 186, 196, 197, 201, 213, 215, 217, 221, 223, 225, 231, 237, 238, 239, 245, 246, 260, 269, 276, 297, 301, 305, 306, 307, 308, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 351, 353, 354, 369, 376, 388, 405, 407, 411, 412, 413, 414, 415, 417, 418, 424, 425, 426, 428, 430, 431], "consecut": [1, 3, 83, 108, 133, 259, 277, 278, 371, 414, 416, 419, 425, 428, 431], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 125, 126, 128, 129, 136, 143, 144, 148, 149, 155, 156, 196, 219, 223, 316, 388, 402, 412, 413, 416, 417], "therebi": [1, 24, 369, 407, 411, 412], "interrupt": [1, 2, 129, 301, 357], "These": [1, 2, 7, 41, 60, 86, 91, 118, 159, 196, 219, 406, 407, 411, 413, 424, 425, 426, 428, 431], "tool": [1, 2, 3, 5, 406, 414, 416, 424, 426, 428, 431], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 73, 125, 128, 129, 136, 148, 149, 155, 156, 162, 165, 408, 411, 413, 414, 415, 416, 419, 420, 426], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 404], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 404], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 58, 67, 68, 83, 91, 104, 126, 127, 148, 155, 221, 411, 412, 413, 414, 419, 424, 425, 426, 427, 431], "synchron": [1, 14, 19, 21, 52, 54, 59, 73, 143, 400, 401, 412, 413, 424], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 143, 148, 149, 155, 156, 179, 182, 209, 215, 221, 223, 236, 246, 255, 256, 259, 264, 273, 285, 286, 287, 292, 302, 306, 334, 369, 383, 406, 407, 411, 412, 424, 425, 430, 431], "find": [1, 4, 6, 7, 18, 19, 20, 53, 55, 69, 109, 110, 232, 233, 257, 277, 278, 382, 386, 411, 412, 415, 417, 418, 424, 425], "folder": [1, 2, 52, 54, 59, 73, 159, 412], "variou": [1, 2, 3, 255, 259, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 343, 349, 371, 400, 401, 411, 412, 413, 415, 416, 417, 418, 420, 424, 425, 428, 431], "machin": [1, 2, 7, 18, 19, 20, 46, 88, 133, 424, 425, 430], "wonder": 1, "why": [1, 2, 3, 230, 424, 426, 431], "instead": [1, 2, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 46, 56, 57, 61, 66, 70, 73, 89, 125, 129, 135, 136, 148, 149, 155, 156, 186, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 316, 318, 319, 321, 324, 325, 326, 332, 333, 336, 337, 338, 339, 349, 351, 355, 359, 402, 407, 415, 416, 417, 421, 426, 428, 431], "lower": [1, 2, 3, 21, 27, 28, 176, 221, 281, 282, 309, 413, 424, 426], "io": [1, 11, 83, 89, 134, 135, 143, 146, 147, 157, 158, 257, 258, 415], "footprint": [1, 2, 428], "commun": [1, 2, 3, 136, 148, 155, 405, 413, 431], "yet": [1, 121, 122, 134, 427], "plai": [1, 3, 150, 151, 156, 173, 412, 413, 418, 428, 431], "role": [1, 3, 141, 412, 418, 431], "opposit": [1, 424], "direct": [1, 2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 253, 257, 334, 412, 418], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 90, 91, 143, 351, 352, 353, 354, 414, 415, 424, 425], "share": [1, 3, 6, 8, 23, 52, 54, 58, 59, 67, 68, 71, 73, 94, 96, 97, 98, 102, 104, 105, 109, 111, 113, 117, 126, 148, 155, 213, 221, 255, 259, 265, 266, 294, 295, 296, 316, 317, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 402, 404, 406, 413, 415, 421, 423, 424, 425, 430, 431], "among": [1, 3, 150, 151, 213, 325, 339, 424, 425], "prohibit": [1, 3, 115], "slow": [1, 3, 4, 11, 52, 54, 59, 73], "compar": [1, 3, 89, 115, 317, 319, 332, 337, 339, 341, 342, 383, 407, 411, 413, 415, 417, 418, 424, 425, 428, 431], "gpu": [1, 7, 8, 27, 38, 46, 56, 57, 61, 66, 96, 97, 117, 125, 129, 130, 133, 136, 148, 149, 155, 156, 223, 411, 413, 414, 424, 425, 431], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 67, 71, 73, 83, 101, 102, 109, 110, 115, 121, 122, 125, 129, 136, 148, 149, 155, 156, 169, 192, 213, 221, 232, 233, 234, 235, 246, 249, 253, 255, 257, 259, 262, 275, 276, 285, 286, 302, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 406, 407, 411, 412, 413, 415, 417, 424, 425, 426, 428, 431], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 169, 170, 174, 176, 177, 180, 196, 204, 205, 210, 212, 213, 214, 215, 216, 217, 219, 223, 232, 233, 234, 237, 251, 255, 259, 263, 264, 265, 266, 277, 278, 293, 297, 298, 301, 302, 303, 305, 306, 309, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 349, 351, 352, 353, 354, 355, 359, 369, 378, 388, 399, 411, 412, 413, 415, 417, 420, 424, 425, 428, 430, 431], "build": [1, 2, 3, 7, 23, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 130, 131, 134, 135, 136, 140, 141, 143, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 201, 221, 223, 235, 255, 259, 262, 300, 302, 306, 388, 395, 396, 397, 406, 408, 413, 414, 415, 417, 418, 419, 420, 424, 425, 426, 427, 430, 431], "mani": [1, 2, 3, 4, 58, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 143, 144, 152, 316, 318, 325, 333, 336, 406, 411, 412, 413, 415, 416, 417, 419, 421, 424, 425, 426, 428, 430, 431], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 123, 124, 125, 128, 129, 130, 131, 133, 136, 148, 149, 152, 155, 156, 181, 208, 215, 265, 297, 371], "gymnasium": [1, 2, 3, 5, 12, 66, 125, 128, 129, 130, 136, 137, 138, 148, 149, 155, 156, 162, 165, 184, 205, 208, 220, 412, 413, 415, 426, 430], "warn": [1, 3, 57, 61, 125, 129, 136, 148, 149, 155, 156, 232, 233, 251, 277, 278, 412], "quickli": [1, 3, 412, 424, 425, 431], "becom": [1, 2, 3, 4, 21, 253, 257, 424, 425, 431], "quit": [1, 3, 11, 83, 125, 129, 136, 148, 149, 155, 156, 411, 412, 413, 415, 417, 424, 425, 431], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 50, 63, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 148, 149, 150, 151, 152, 155, 156, 159, 160, 289, 306, 334, 383, 402, 407, 411, 414, 424, 427, 428, 431], "filter": [1, 2, 3, 4, 72, 102, 109, 110, 316, 317, 319, 320, 324, 325, 332, 336, 337, 339, 416], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 89, 94, 102, 109, 110, 125, 129, 136, 148, 149, 150, 151, 155, 156, 210, 223, 225, 232, 253, 254, 257, 263, 264, 267, 268, 269, 278, 293, 297, 298, 299, 302, 303, 304, 305, 306, 334, 347, 348, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 424, 425, 426, 428, 430, 431], "still": [1, 2, 3, 9, 56, 66, 73, 74, 89, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 213, 233, 277, 333, 334, 411, 412, 414, 423, 426, 428, 431], "wish": [1, 3, 11, 14, 15, 17, 89, 165, 418, 428], "displai": [1, 3, 7, 125, 129, 136, 148, 149, 155, 156, 388, 408, 411, 412, 425, 426], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 173, 174, 177, 179, 182, 183, 184, 186, 189, 190, 191, 192, 194, 196, 197, 198, 199, 201, 203, 204, 205, 208, 210, 212, 213, 214, 215, 216, 217, 219, 221, 223, 225, 230, 231, 233, 234, 235, 237, 238, 239, 241, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 277, 278, 279, 280, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 349, 351, 352, 353, 354, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 378, 381, 382, 383, 385, 386, 388, 402, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "central": [2, 265, 266, 267, 411, 412, 416, 424, 425, 428], "part": [2, 3, 4, 8, 27, 38, 46, 56, 57, 60, 61, 66, 73, 83, 86, 87, 89, 90, 91, 121, 125, 129, 134, 136, 146, 148, 149, 155, 156, 172, 192, 201, 204, 223, 230, 255, 259, 310, 379, 402, 411, 413, 414, 415, 421, 424, 426, 431], "algorithm": [2, 3, 8, 9, 142, 166, 316, 336, 337, 339, 404, 407, 408, 411, 412, 413, 414, 415, 417, 418, 419, 420, 424, 425, 427, 428, 430], "implement": [2, 3, 9, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 99, 111, 112, 125, 129, 136, 142, 143, 148, 149, 155, 156, 170, 177, 179, 180, 184, 187, 190, 198, 199, 205, 208, 214, 215, 221, 223, 236, 238, 253, 254, 255, 256, 257, 258, 259, 285, 286, 287, 316, 317, 319, 322, 323, 324, 330, 332, 334, 335, 336, 338, 339, 341, 369, 379, 393, 406, 408, 411, 412, 413, 414, 415, 424, 425, 426, 430], "wide": [2, 3, 5, 430], "give": [2, 3, 7, 67, 86, 125, 129, 136, 142, 148, 149, 155, 156, 173, 405, 407, 411, 412, 415, 424, 425, 426, 427, 430], "abil": [2, 334, 426, 428], "panel": [2, 413], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 85, 91, 94, 115, 170, 173, 183, 236, 255, 259, 319, 324, 332, 339, 343, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 111, 113, 117, 125, 129, 136, 142, 146, 147, 148, 149, 155, 156, 209, 213, 215, 221, 223, 255, 259, 316, 319, 334, 339, 391, 406, 408, 411, 412, 413, 414, 415, 424, 425, 426, 428, 431], "almost": [2, 264, 414], "physic": [2, 6, 7, 94, 148, 149, 152, 408, 411, 424, 425, 426], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 111, 113, 117, 125, 128, 129, 130, 136, 148, 149, 155, 156, 210, 223, 267, 277, 278, 321, 334, 349, 411, 412, 414, 424, 425, 427, 428, 430], "liststorag": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 428], "veri": [2, 3, 134, 135, 412, 416, 419, 424, 426, 428, 430, 431], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 89, 102, 104, 107, 109, 110, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 169, 170, 199, 223, 230, 260, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 345, 349, 406, 408, 411, 413, 414, 415, 416, 417, 418, 424, 425, 426, 428, 430, 431], "complex": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 411, 412, 416, 417], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 109, 110, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 167, 169, 170, 172, 173, 174, 177, 179, 181, 182, 183, 184, 186, 189, 192, 194, 196, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 316, 317, 319, 320, 321, 323, 324, 325, 328, 329, 332, 334, 336, 337, 338, 339, 341, 342, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 430, 431], "contigu": [2, 3, 8, 28, 31, 38, 74, 86, 89, 90, 125, 129, 136, 148, 149, 155, 156, 210, 228, 413, 414, 424, 425, 426, 428, 430, 431], "tensorstorag": [2, 58, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 115, 118, 419, 428], "lazymemmapstorag": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 172, 173, 411, 412, 414, 419, 424, 427, 428], "citizen": 2, "pytre": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 118], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 102, 104, 109, 113, 115, 123, 124, 125, 128, 129, 130, 136, 148, 149, 155, 156, 190, 192, 223, 237, 241, 247, 248, 255, 258, 259, 260, 267, 270, 275, 279, 280, 298, 299, 303, 304, 309, 316, 317, 319, 320, 324, 325, 327, 332, 334, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 382, 383, 386, 395, 428, 430], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 102, 107, 109, 110, 125, 128, 129, 130, 136, 140, 141, 148, 149, 155, 156, 159, 160, 210, 213, 215, 223, 302, 306, 319, 339, 341, 383, 400, 401, 402, 408, 412, 413, 416, 418, 424, 426, 431], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 46, 47, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 73, 79, 96, 97, 100, 104, 117, 125, 128, 129, 130, 136, 148, 149, 155, 156, 173, 208, 211, 213, 223, 231, 301, 351, 352, 353, 354, 355, 369, 408, 412, 413, 415, 425, 426, 428, 430], "construct": [2, 3, 5, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 104, 125, 126, 128, 129, 136, 148, 149, 150, 155, 156, 179, 182, 223, 225, 255, 259, 282, 306, 388, 406, 412, 413, 414, 417, 424, 426, 428, 431], "ram": [2, 128, 130, 420, 428, 431], "prealloc": [2, 3, 148, 155, 426], "ve": [2, 60, 411, 414, 421], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 104, 108, 125, 129, 133, 136, 140, 141, 148, 149, 155, 156, 190, 208, 209, 214, 233, 253, 255, 257, 259, 267, 278, 301, 316, 334, 336, 338, 411, 412, 413, 414, 423, 424, 425, 426, 428, 430, 431], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 90, 91, 115, 123, 124, 125, 129, 133, 136, 148, 149, 150, 151, 155, 156, 173, 213, 267, 378, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 421, 424, 425, 426, 428, 430, 431], "start": [2, 3, 4, 5, 14, 21, 24, 41, 71, 72, 73, 83, 91, 102, 109, 110, 125, 126, 129, 136, 139, 148, 149, 155, 156, 178, 230, 384, 410, 411, 412, 415, 422, 425, 426, 428, 429, 431], "replay_buff": [2, 8, 14, 15, 16, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 385, 398, 411, 412, 413, 419, 424, 425, 428], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 41, 46, 50, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 165, 166, 167, 169, 170, 172, 173, 176, 183, 184, 189, 190, 192, 194, 196, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 213, 214, 219, 221, 223, 224, 228, 230, 231, 235, 237, 241, 242, 243, 244, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 265, 266, 267, 270, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 369, 371, 381, 383, 398, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "rb": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 173, 201, 223, 412, 414, 415, 419, 421, 425, 427, 428, 430], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 42, 46, 53, 58, 60, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 104, 109, 110, 115, 117, 121, 122, 125, 126, 129, 134, 135, 136, 142, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 166, 167, 170, 172, 173, 209, 211, 212, 223, 235, 237, 240, 241, 243, 245, 247, 251, 253, 254, 255, 257, 258, 259, 262, 264, 275, 277, 278, 289, 302, 309, 313, 317, 321, 323, 330, 336, 337, 338, 342, 349, 351, 352, 353, 354, 357, 371, 379, 408, 411, 412, 413, 414, 415, 416, 417, 421, 424, 425, 426, 428, 430, 431], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 104, 105, 115, 116, 119, 120, 125, 129, 136, 148, 149, 155, 156, 173, 190, 215, 223, 255, 259, 268, 300, 316, 384, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 430], "string": [2, 18, 19, 20, 27, 38, 41, 46, 55, 56, 57, 61, 66, 72, 73, 92, 125, 129, 136, 140, 146, 148, 149, 155, 156, 165, 196, 208, 219, 223, 255, 259, 298, 301, 302, 303, 315, 370, 387, 407, 411, 413, 414, 428], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 42, 44, 50, 52, 53, 54, 58, 59, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 104, 109, 110, 115, 117, 145, 148, 155, 166, 173, 197, 206, 209, 210, 232, 233, 238, 239, 253, 254, 257, 292, 293, 298, 301, 305, 306, 310, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 379, 407, 411, 413, 417, 419, 428, 431], "30": [2, 3, 58, 66, 87, 109, 110, 169, 191, 281, 282, 369, 373, 410, 412, 413, 418, 419, 424, 425, 426, 428, 429], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 111, 113, 115, 117, 125, 126, 128, 129, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 286, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 398, 400, 401, 402, 406, 408, 411, 412, 414, 415, 416, 417, 418, 419, 420, 423, 426, 428, 430, 431], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 155, 156, 159, 160, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 181, 186, 187, 191, 192, 194, 196, 197, 200, 207, 208, 211, 215, 216, 217, 219, 223, 225, 228, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 297, 298, 299, 301, 302, 304, 305, 306, 316, 317, 318, 325, 327, 328, 333, 334, 335, 336, 337, 341, 342, 351, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 379, 380, 381, 383, 385, 388, 390, 396, 400, 401, 402, 415, 426, 428], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 41, 46, 52, 54, 55, 56, 57, 59, 61, 63, 64, 66, 72, 73, 80, 85, 86, 87, 88, 90, 91, 109, 110, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 148, 149, 152, 155, 156, 159, 160, 169, 173, 175, 176, 178, 179, 180, 182, 183, 186, 189, 192, 194, 196, 199, 201, 204, 206, 208, 209, 210, 213, 216, 219, 221, 223, 230, 231, 255, 263, 264, 297, 298, 301, 303, 304, 317, 319, 339, 351, 352, 353, 354, 406, 411, 413, 414, 416, 417, 418, 420, 424, 425, 426, 427, 428, 430, 431], "onto": [2, 8, 50, 52, 54, 59, 73, 180, 228, 232, 233, 277, 278, 293, 298, 299, 302, 303, 304, 305, 306, 414, 426], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 101, 102, 104, 105, 107, 108, 109, 110, 115, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 159, 160, 166, 173, 174, 208, 209, 210, 211, 215, 223, 231, 238, 239, 260, 263, 264, 266, 277, 278, 301, 303, 304, 312, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 392, 402, 405, 408, 413, 414, 415, 419, 420, 421, 426, 428, 431], "without": [2, 3, 7, 9, 14, 15, 16, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 89, 109, 110, 125, 129, 136, 148, 149, 155, 156, 159, 160, 167, 169, 179, 182, 212, 223, 253, 254, 257, 258, 295, 296, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 350, 351, 352, 353, 354, 355, 398, 405, 406, 411, 412, 413, 415, 416, 417, 418, 419, 424, 425, 426, 428, 431], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 53, 54, 56, 57, 59, 60, 61, 66, 67, 73, 101, 102, 125, 129, 136, 142, 148, 149, 150, 151, 155, 156, 157, 158, 167, 169, 170, 179, 181, 182, 198, 208, 209, 213, 215, 218, 221, 223, 231, 232, 233, 235, 236, 251, 253, 255, 259, 262, 267, 277, 278, 302, 303, 304, 305, 306, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 349, 351, 352, 353, 354, 355, 383, 388, 390, 393, 394, 397, 398, 408, 412, 413, 414, 415, 418, 421, 424, 425, 426, 428, 431], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 92, 102, 109, 110, 113, 125, 129, 134, 135, 136, 148, 149, 155, 156, 166, 197, 221, 235, 238, 239, 241, 243, 245, 253, 257, 260, 262, 265, 266, 293, 305, 310, 379, 385, 411, 413, 414, 419, 421, 426, 428, 431], "cursor": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "afterward": [2, 27, 38, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 424, 431], "tell": [2, 3, 4, 7, 150, 151, 213, 411, 414, 419, 424, 425], "our": [2, 3, 7, 8, 11, 18, 41, 58, 173, 371, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430], "far": [2, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 256, 286, 287, 421, 426, 431], "restrict": [2, 3, 412, 427, 428, 431], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 125, 129, 135, 136, 145, 148, 149, 155, 156, 179, 182, 196, 198, 211, 215, 217, 219, 223, 228, 375, 411, 426], "64": [2, 3, 52, 54, 59, 73, 83, 89, 104, 173, 200, 241, 242, 250, 255, 259, 266, 267, 279, 349, 411, 412, 413, 414, 415, 417, 421, 423, 426, 427, 428, 430, 431], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 109, 110, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 167, 170, 171, 177, 179, 180, 181, 182, 183, 184, 190, 192, 194, 196, 198, 199, 201, 205, 208, 210, 212, 214, 215, 217, 219, 223, 225, 228, 230, 231, 235, 237, 247, 248, 253, 254, 255, 257, 258, 259, 262, 268, 269, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 357, 406, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "unit8": 2, "img": 2, "randint": [2, 72, 104, 212, 415, 428], "255": [2, 104, 212, 411, 415, 426, 428], "uint8": [2, 3, 31, 52, 54, 59, 73, 83, 89, 123, 124, 140, 141, 183, 194, 212, 412, 420, 427, 428, 431], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 41, 46, 53, 58, 60, 63, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 140, 141, 142, 146, 147, 148, 149, 153, 154, 155, 156, 157, 159, 160, 166, 169, 170, 172, 173, 179, 182, 183, 184, 189, 190, 194, 198, 199, 201, 204, 205, 208, 210, 213, 220, 221, 223, 228, 230, 235, 254, 255, 258, 259, 262, 282, 301, 311, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 332, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 371, 382, 383, 386, 412, 414, 415, 417, 420, 421, 423, 426, 427, 430, 431], "ask": [2, 8, 83, 89, 102, 109, 110, 371, 413, 414, 416, 417, 424, 425, 427, 431], "automat": [2, 3, 5, 28, 41, 71, 74, 91, 96, 97, 104, 110, 117, 125, 128, 129, 130, 136, 148, 149, 150, 151, 155, 156, 169, 179, 182, 192, 210, 220, 238, 255, 259, 293, 301, 302, 369, 406, 411, 413, 416, 417, 424, 425, 426, 428, 430], "hand": [2, 3, 7, 21, 31, 424, 425, 426], "look": [2, 3, 5, 7, 8, 27, 38, 46, 56, 57, 61, 66, 102, 125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 196, 197, 217, 223, 236, 302, 306, 307, 308, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 93, 94, 100, 109, 125, 129, 136, 148, 149, 155, 156, 172, 175, 178, 186, 196, 197, 204, 210, 215, 217, 219, 228, 237, 255, 259, 289, 292, 309, 321, 325, 326, 339, 349, 360, 361, 362, 363, 365, 366, 367, 368, 371, 411, 413, 423, 426], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 46, 53, 58, 63, 67, 68, 73, 85, 108, 123, 124, 125, 128, 130, 131, 210, 256, 279, 286, 287, 292, 411, 414, 415, 424, 425, 426, 428, 430], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 205, 225, 231, 411, 419, 428], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 104, 113, 123, 124, 125, 126, 128, 129, 130, 131, 136, 148, 149, 155, 156, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 238, 239, 246, 255, 259, 260, 265, 266, 285, 293, 297, 298, 302, 303, 305, 306, 309, 310, 317, 319, 325, 333, 335, 337, 339, 385, 390, 406, 411, 413, 415, 423, 425, 426, 428, 431], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 173, 412, 413, 415, 419, 428, 430, 431], "throw": [2, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 223, 431], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 170, 172, 173, 177, 179, 182, 183, 184, 194, 198, 199, 201, 205, 208, 210, 214, 215, 223, 230, 231, 235, 237, 245, 246, 247, 248, 251, 255, 259, 262, 277, 278, 279, 280, 288, 289, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 371, 379, 385, 406, 411, 412, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "max": [2, 23, 50, 54, 67, 72, 92, 101, 102, 115, 135, 181, 211, 277, 278, 317, 318, 319, 325, 335, 337, 339, 411, 413, 414, 415, 421], "label": [2, 54, 55, 60, 72, 73, 411, 424, 428], "100": [2, 14, 15, 16, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 176, 183, 192, 201, 206, 208, 223, 264, 265, 299, 301, 371, 380, 398, 412, 413, 414, 415, 416, 418, 421, 423, 424, 425, 426, 427, 428, 430, 431], "rb_pytre": 2, "randn": [2, 53, 56, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 117, 172, 192, 228, 237, 240, 241, 245, 247, 248, 253, 254, 257, 258, 263, 264, 265, 270, 273, 275, 280, 293, 294, 295, 296, 297, 298, 302, 303, 305, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 387, 406, 415, 428, 430, 431], "c": [2, 3, 6, 7, 31, 52, 54, 56, 58, 59, 66, 67, 68, 73, 88, 192, 212, 257, 258, 412, 428], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 117, 125, 129, 136, 148, 149, 155, 156, 170, 172, 174, 179, 181, 182, 192, 198, 201, 223, 228, 230, 234, 235, 242, 243, 244, 250, 251, 253, 254, 255, 257, 258, 259, 263, 264, 266, 267, 277, 278, 279, 288, 304, 312, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 357, 414, 415, 428, 430, 431], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 125, 129, 132, 136, 148, 149, 155, 156, 165, 166, 170, 173, 176, 179, 182, 190, 199, 206, 221, 225, 228, 237, 266, 270, 289, 351, 352, 353, 354, 379, 387, 419, 423, 428, 431], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 117, 194, 238, 239, 260, 266, 411, 415, 419, 421, 424, 426, 427, 428, 430], "ambigu": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 113, 125, 129, 136, 148, 149, 155, 156, 170, 177, 196, 210, 214, 215, 217, 219, 223, 305, 407, 411, 415, 416, 426], "deal": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 334, 407, 411, 413, 425, 428], "interpret": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 412], "put": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 129, 140, 141, 156, 159, 160, 221, 378, 402, 406, 412, 413, 414, 416, 424, 426], "solv": [2, 4, 9, 10, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 405, 411, 412, 413, 419, 421, 424, 425, 426, 428], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 133, 136, 148, 149, 155, 156, 223, 380, 416, 419], "cut": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "distinct": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 170, 418, 423], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 167, 223, 248, 253, 257, 260, 416, 426, 428, 430, 431], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 53, 57, 58, 61, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 128, 129, 130, 133, 134, 135, 136, 139, 148, 149, 150, 151, 155, 156, 169, 179, 182, 197, 237, 260, 279, 301, 302, 306, 307, 308, 312, 334, 351, 352, 353, 354, 406, 407, 411, 412, 413, 416, 418, 423, 424, 425, 426, 427, 428, 431], "collate_fn": [2, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 428, 430], "__init__": [2, 3, 7, 125, 142, 157, 165, 167, 170, 179, 182, 198, 235, 246, 248, 253, 257, 262, 310, 317, 319, 320, 325, 332, 337, 339, 341, 342, 408, 415, 426, 431], "major": 2, "worri": [2, 69], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 97, 98, 102, 109, 111, 113, 117, 125, 126, 129, 133, 136, 148, 149, 155, 156, 169, 231, 411, 413, 416, 424, 425, 426, 431], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 260, 413, 424, 425], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 60, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 191, 210, 256, 286, 287, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 412, 417, 420, 426, 428, 431], "latter": [2, 18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 85, 125, 129, 136, 148, 149, 155, 156, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 336, 400, 401], "inv": [2, 3, 176, 181, 184, 194, 201, 206, 216, 426], "obvious": [2, 415], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 78, 94, 125, 129, 136, 148, 149, 155, 156, 181, 184, 205, 212, 223, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 263, 264, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 351, 415, 428], "multithread": [2, 3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 143, 144, 419, 428], "thread": [2, 14, 15, 17, 52, 54, 59, 73, 121, 122, 134, 135, 148, 155], "prefetch": [2, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 411, 412, 414, 428], "advis": [2, 11, 86, 420, 431], "benchmark": [2, 3, 9, 121, 122, 134, 135], "techniqu": [2, 8, 148, 155, 412, 415, 419, 428], "real": [2, 5, 89, 306, 407, 414, 415, 426], "life": [2, 183], "adopt": [2, 3, 5, 411, 431], "throughput": [2, 9, 135, 411], "constant": [2, 11, 33, 173, 192, 209, 408, 411, 413, 414, 431], "throughout": [2, 3, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 413, 424, 431], "further": [2, 3, 5, 24, 411, 413, 415, 416], "refin": [2, 89, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349], "coupl": [2, 414, 417, 418, 426, 428], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 41, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 73, 83, 85, 89, 96, 97, 102, 109, 110, 111, 113, 115, 117, 125, 126, 129, 136, 148, 149, 155, 156, 167, 172, 174, 179, 181, 182, 190, 192, 197, 209, 210, 212, 215, 221, 251, 293, 302, 303, 306, 313, 351, 352, 353, 354, 355, 371, 375, 406, 410, 411, 412, 413, 414, 415, 422, 424, 425, 426, 428, 429, 430, 431], "first_elt": 2, "128": [2, 83, 85, 89, 110, 121, 122, 134, 135, 242, 245, 410, 412, 414, 415, 421, 424, 426, 427, 428, 429], "wa": [2, 3, 5, 7, 31, 32, 39, 53, 56, 58, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 125, 129, 136, 148, 149, 155, 156, 215, 225, 231, 257, 316, 318, 331, 333, 336, 338, 340, 357, 407, 412, 413, 416, 417, 423, 424, 428, 430], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 41, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 162, 165, 166, 169, 170, 173, 174, 179, 180, 181, 182, 189, 192, 198, 199, 201, 204, 208, 210, 211, 212, 221, 223, 228, 230, 231, 238, 239, 241, 242, 243, 244, 245, 248, 250, 251, 255, 259, 260, 263, 264, 265, 266, 270, 273, 276, 277, 278, 280, 293, 294, 295, 296, 297, 298, 301, 302, 303, 305, 308, 310, 313, 334, 369, 398, 406, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 174], "larger": [2, 4, 66, 255, 259, 324, 332, 430], "volum": 2, "due": [2, 3, 5, 23, 418, 427, 428, 431], "memorymappedtensor": [2, 35, 52, 54, 64, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 373, 419, 427], "well": [2, 3, 8, 12, 21, 23, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 102, 107, 111, 118, 125, 129, 136, 148, 149, 155, 156, 215, 223, 236, 241, 257, 281, 282, 334, 341, 355, 406, 411, 412, 414, 415, 416, 417, 418, 420, 427, 428, 430, 431], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 140, 141, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 178, 179, 180, 182, 204, 207, 209, 216, 223, 235, 257, 305, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 378, 406, 411, 413, 414, 415, 419, 424], "file": [2, 6, 7, 8, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 94, 159, 370, 371, 373, 388, 408, 410, 412, 415, 424, 428, 429], "locat": [2, 7, 52, 54, 59, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 178, 183, 192, 203, 256, 270, 286, 287, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 411, 412, 413, 420, 424, 425, 428], "improv": [2, 4, 11, 187, 316, 407, 415, 424, 425, 428], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 148, 155, 413, 424, 428], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 109, 110, 123, 124, 125, 128, 129, 130, 133, 136, 148, 149, 155, 156, 167, 173, 201, 204, 211, 221, 223, 231, 251, 265, 266, 302, 306, 333, 334, 336, 411, 412, 414, 415, 416, 418, 420, 426, 428, 430], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 62, 63, 71, 74, 75, 76, 77, 78, 96, 102, 146, 147, 181, 213, 234, 257, 258, 324, 414, 415, 419, 428], "sharabl": [2, 148, 155], "collabor": [2, 89], "rather": [2, 4, 113, 146, 147, 199, 406, 411, 412, 413, 416, 418, 424, 425, 428], "incur": [2, 121, 122, 134, 135], "transmiss": 2, "overhead": [2, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 230], "content": [2, 8, 16, 31, 32, 39, 52, 53, 54, 58, 59, 63, 67, 68, 73, 108, 125, 128, 129, 130, 136, 143, 148, 149, 155, 156, 198, 238, 239, 260, 265, 266, 302, 334, 413, 426, 430], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 125, 129, 136, 139, 140, 141, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 228, 248, 270, 293, 294, 295, 296, 298, 302, 303, 305, 306, 308, 309, 310, 311, 319, 339, 349, 383, 404, 406, 407, 411, 412, 413, 414, 417, 418, 427], "writer": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 102, 104, 105, 109, 115, 116, 117, 120, 413, 428], "tensordictroundrobinwrit": [2, 104], "goe": [2, 4, 73, 150, 151, 411, 413, 424, 425, 431], "prioritizedsampl": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 321, 326, 349, 411, 428], "access": [2, 3, 7, 8, 11, 27, 38, 46, 53, 56, 57, 61, 66, 86, 88, 125, 129, 136, 148, 149, 155, 156, 196, 217, 223, 402, 405, 411, 416, 424, 425, 426, 428, 430], "tensordictreplaybuff": [2, 53, 58, 67, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 172, 173, 385, 398, 404, 411, 412, 414, 428], "mp": [2, 18, 19, 20, 83, 84, 85, 86, 87, 88, 89, 90, 91, 126, 221], "def": [2, 3, 12, 22, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 136, 142, 148, 149, 155, 156, 165, 167, 169, 170, 179, 182, 198, 213, 215, 223, 235, 248, 253, 254, 257, 258, 262, 267, 301, 302, 310, 317, 319, 320, 325, 332, 334, 337, 339, 341, 342, 369, 408, 411, 412, 415, 423, 424, 425, 426, 428, 430, 431], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 52, 53, 54, 56, 58, 59, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 115, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 137, 138, 146, 147, 148, 149, 155, 156, 157, 158, 167, 170, 172, 174, 179, 180, 181, 182, 189, 190, 192, 201, 204, 210, 212, 215, 221, 224, 230, 235, 237, 247, 248, 251, 255, 259, 261, 262, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 302, 303, 305, 308, 310, 349, 352, 353, 354, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 379, 387, 406, 407, 411, 414, 425, 426, 430], "__name__": [2, 3, 14, 15, 22, 126, 369, 412, 430], "__main__": [2, 3, 14, 15, 22, 126, 369, 430], "21": [2, 89, 90, 109, 110, 148, 150, 151, 155, 411, 412, 413, 423, 426], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 46, 56, 57, 61, 66, 125, 126, 129, 136, 148, 149, 155, 156, 209, 214, 223, 276, 305, 306, 316, 317, 318, 319, 320, 321, 323, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 349, 350, 351, 352, 353, 354, 355, 391, 397, 398, 407, 408, 414, 415, 421, 424, 426], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 104, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 168, 177, 196, 198, 207, 210, 213, 214, 215, 216, 218, 219, 223, 232, 233, 235, 237, 238, 239, 246, 247, 251, 252, 255, 259, 260, 261, 262, 277, 278, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 378, 381, 385, 388, 402, 412, 415], "join": [2, 126, 404, 412, 413, 415, 424], "now": [2, 3, 7, 53, 58, 67, 68, 104, 146, 147, 148, 173, 205, 266, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 427, 428, 431], "20": [2, 66, 72, 90, 109, 110, 115, 125, 129, 133, 136, 146, 147, 148, 149, 155, 156, 209, 223, 250, 253, 254, 257, 258, 276, 297, 379, 412, 413, 414, 415, 424, 425, 426, 427, 428, 430, 431], "_data": [2, 426], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 85, 91, 104, 107, 115, 120, 125, 129, 131, 136, 142, 143, 148, 149, 150, 151, 155, 156, 159, 160, 170, 172, 183, 190, 192, 197, 209, 213, 215, 220, 223, 225, 230, 232, 241, 243, 249, 251, 265, 266, 276, 277, 278, 279, 281, 282, 288, 289, 299, 301, 304, 306, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 340, 342, 349, 350, 351, 369, 378, 383, 405, 406, 407, 411, 412, 414, 415, 416, 424, 425, 426, 427, 428, 430, 431], "difficult": [2, 4, 148, 420], "pai": [2, 8, 411, 414], "word": [2, 3, 11, 60, 83, 85, 87, 89, 90, 91, 334, 411, 419, 426, 431], "1m": [2, 83, 89, 391, 411, 413, 414], "doe": [2, 3, 18, 52, 53, 54, 59, 67, 72, 73, 83, 85, 89, 93, 94, 100, 101, 102, 109, 111, 113, 120, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 221, 236, 245, 246, 253, 254, 255, 257, 258, 259, 268, 276, 289, 297, 307, 308, 316, 318, 326, 333, 334, 336, 350, 388, 408, 411, 412, 413, 414, 416, 419, 424, 426, 428, 431], "howev": [2, 3, 5, 7, 27, 38, 46, 56, 57, 61, 66, 109, 110, 125, 129, 136, 148, 149, 155, 156, 173, 204, 209, 213, 215, 223, 316, 318, 319, 333, 336, 338, 339, 406, 411, 412, 414, 415, 418, 426, 428, 431], "capac": [2, 53, 58, 67, 68, 96, 97, 101, 109, 117, 413, 419], "There": [2, 10, 104, 236, 255, 259, 316, 336, 406, 408, 413, 414, 415, 417, 419, 424, 425, 426, 428, 430, 431], "circumv": 2, "account": [2, 96, 97, 117, 125, 128, 129, 130, 136, 148, 149, 155, 156, 169, 173, 263, 264, 406, 412, 414, 428, 431], "save": [2, 3, 8, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 104, 111, 112, 113, 117, 118, 125, 129, 136, 148, 149, 155, 156, 220, 223, 370, 371, 373, 378, 388, 408, 415, 419, 420, 421, 424, 425], "convent": [2, 3, 83, 85, 86, 87, 88, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 159, 160, 407, 411, 414, 424, 425, 426], "overridden": [2, 3, 27, 38, 56, 57, 61, 66, 83, 86, 87, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 351, 353, 354, 414, 424], "dim_extend": [2, 53, 58, 67, 68], "obtain": [2, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 136, 148, 149, 155, 156, 172, 196, 209, 219, 235, 237, 276, 279, 385, 411, 413, 416, 417, 418, 424, 425], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 168, 170, 177, 192, 194, 196, 197, 210, 214, 215, 217, 219, 223, 229, 238, 239, 246, 260, 266, 293, 298, 299, 302, 303, 304, 305, 306, 406, 411, 415, 424, 425, 426, 428], "diversifi": 2, "offer": [2, 3, 7, 121, 122, 125, 129, 134, 135, 136, 140, 141, 148, 149, 155, 156, 213, 369, 406, 411, 412, 415, 416, 418, 419, 424, 426, 428, 431], "accomplish": [2, 125, 129, 136, 148, 149, 155, 156, 225, 416], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 84, 86, 125, 129, 136, 148, 149, 155, 156, 173, 225, 317, 323, 324, 332, 341, 378, 408, 416, 427, 428], "docstr": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 416, 417], "extens": [2, 53, 58, 67, 68, 110, 236, 408, 428], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 150, 151, 155, 156, 212, 215, 223, 236, 248, 253, 257, 267, 276, 299, 316, 326, 334, 336, 405, 408, 412, 415, 419, 423, 428], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 125, 129, 136, 148, 149, 155, 156, 179, 182, 213, 221, 223, 231, 236, 253, 255, 257, 259, 277, 278, 302, 306, 326, 412, 415, 417, 423, 424, 425, 431], "happi": [2, 415], "concaten": [2, 8, 14, 15, 21, 41, 42, 44, 73, 89, 173, 174, 192, 214, 257, 260, 308, 411, 412, 417, 424, 425, 426, 428, 431], "schedul": [2, 4, 7, 60, 383, 413, 426], "transformedenv": [2, 3, 11, 46, 125, 126, 129, 136, 148, 149, 155, 156, 166, 167, 170, 173, 176, 177, 179, 182, 183, 184, 186, 189, 190, 191, 192, 194, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 213, 214, 221, 223, 255, 259, 301, 371, 411, 412, 413, 414, 415, 416, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "stepcount": [2, 41, 46, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 213, 214, 223, 237, 411, 412, 413, 414, 415, 416, 421, 424, 425, 430], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 41, 46, 64, 66, 115, 125, 126, 129, 131, 136, 148, 149, 155, 156, 166, 169, 170, 173, 176, 177, 183, 189, 190, 192, 194, 199, 200, 201, 204, 206, 209, 210, 211, 213, 214, 215, 221, 223, 237, 255, 259, 301, 369, 371, 398, 404, 406, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 427, 428, 430, 431], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 173, 201, 404, 419, 428], "cartpol": [2, 3, 11, 35, 46, 64, 66, 123, 124, 125, 126, 129, 136, 148, 149, 155, 156, 169, 170, 173, 204, 209, 221, 223, 301, 369, 412, 414, 417, 419, 420, 421, 428, 431], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 46, 64, 66, 85, 87, 115, 125, 126, 128, 129, 130, 134, 135, 136, 143, 148, 149, 155, 156, 169, 170, 173, 176, 184, 189, 190, 192, 199, 201, 204, 205, 206, 208, 209, 210, 211, 213, 214, 221, 223, 237, 255, 259, 301, 345, 360, 361, 362, 363, 365, 366, 367, 368, 369, 406, 412, 414, 416, 417, 418, 419, 420, 421, 426, 428, 430, 431], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 46, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 150, 151, 155, 156, 166, 167, 170, 173, 179, 182, 190, 198, 201, 224, 235, 248, 262, 280, 282, 293, 298, 302, 303, 317, 319, 321, 323, 337, 339, 341, 342, 398, 406, 411, 412, 413, 414, 415, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431], "8": [2, 3, 6, 7, 46, 52, 54, 58, 59, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 109, 110, 121, 122, 123, 124, 125, 129, 136, 146, 147, 148, 149, 155, 156, 157, 166, 169, 209, 238, 239, 241, 242, 250, 260, 294, 295, 296, 302, 305, 308, 332, 410, 411, 412, 415, 419, 424, 425, 426, 427, 428, 429, 430], "traj_kei": [2, 102, 109, 110, 428], "truncated_kei": [2, 102, 109, 110, 201, 208], "strict_length": [2, 83, 89, 102, 109, 110, 371], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 46, 53, 56, 57, 58, 61, 63, 64, 66, 68, 69, 73, 96, 97, 101, 102, 109, 110, 117, 125, 129, 136, 148, 149, 155, 156, 178, 196, 201, 204, 213, 215, 219, 223, 254, 258, 270, 280, 292, 299, 301, 302, 304, 305, 306, 316, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 379, 391, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 428, 430, 431], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 74, 75, 76, 77, 78, 110, 125, 129, 136, 148, 149, 155, 156, 223, 343, 407, 411, 412, 413, 414, 421, 424, 428, 430], "break": [2, 5, 14, 15, 16, 21, 27, 38, 46, 56, 57, 58, 61, 66, 68, 83, 86, 87, 89, 90, 91, 92, 102, 109, 110, 115, 125, 129, 136, 148, 149, 155, 156, 170, 173, 201, 221, 223, 255, 259, 286, 371, 412, 415, 419, 421, 428, 430], "step_count": [2, 14, 15, 16, 46, 125, 129, 134, 135, 136, 148, 149, 155, 156, 208, 223, 413, 414, 415, 416, 421], "32": [2, 22, 31, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 135, 153, 154, 159, 160, 238, 239, 240, 241, 242, 244, 245, 250, 260, 265, 266, 271, 272, 275, 279, 288, 349, 369, 411, 412, 413, 414, 415, 417, 418, 424, 426, 427, 428, 430, 431], "33": [2, 27, 31, 38, 46, 56, 57, 61, 66, 104, 125, 129, 136, 148, 149, 155, 156, 223, 238, 239, 260, 410, 411, 412, 413, 424, 426, 427, 429], "34": [2, 238, 239, 260, 411, 412, 413, 414, 425, 426], "35": [2, 238, 239, 260, 411, 412, 414, 425, 426], "36": [2, 411, 412, 426, 427], "37": [2, 172, 412, 413, 426], "38": [2, 7, 412, 426], "39": [2, 87, 134, 135, 411, 412, 425, 426], "40": [2, 66, 134, 135, 410, 411, 412, 413, 424, 425, 426, 429], "41": [2, 109, 410, 412, 414, 424, 426, 427, 429], "11": [2, 10, 23, 50, 66, 72, 96, 97, 101, 110, 117, 126, 166, 212, 223, 235, 262, 410, 411, 412, 413, 414, 424, 426, 428, 429], "12": [2, 10, 41, 66, 90, 96, 97, 110, 117, 134, 135, 148, 153, 154, 155, 223, 411, 412, 413, 424, 426, 428], "13": [2, 5, 12, 66, 109, 110, 152, 220, 223, 411, 412, 413, 424, 426, 427, 428], "14": [2, 6, 12, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 125, 129, 136, 148, 149, 155, 156, 192, 223, 411, 412, 424, 425, 426, 428], "15": [2, 23, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 125, 129, 136, 148, 149, 155, 156, 223, 277, 278, 297, 327, 412, 425, 426, 428], "16": [2, 3, 27, 38, 46, 56, 57, 61, 66, 90, 102, 110, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 173, 223, 410, 411, 412, 413, 414, 420, 424, 426, 427, 428, 429], "17": [2, 11, 90, 109, 110, 129, 148, 166, 223, 411, 412, 413, 414, 426, 427], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 412, 413, 420, 424, 425, 427, 431], "sai": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 265, 424, 427, 431], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 44, 50, 58, 63, 97, 98, 102, 105, 109, 110, 117, 125, 128, 129, 130, 133, 136, 148, 149, 155, 156, 179, 182, 197, 204, 213, 265, 266, 303, 316, 319, 336, 412, 413, 414, 415, 424, 425, 426], "handl": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 220, 221, 223, 259, 260, 316, 334, 336, 388, 400, 401, 411, 412, 413, 414, 416, 418, 425, 428], "suggest": [2, 349, 411, 425], "serialenv": [2, 3, 125, 129, 136, 148, 149, 156, 210, 223, 237, 301, 404, 430, 431], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 169, 170, 173, 207, 209, 238, 239, 283, 284, 411, 415, 426, 428], "6": [2, 3, 7, 14, 15, 16, 17, 23, 41, 46, 58, 61, 66, 83, 90, 91, 102, 110, 123, 124, 129, 148, 153, 154, 166, 169, 192, 194, 209, 213, 237, 238, 239, 241, 242, 243, 246, 250, 254, 260, 265, 266, 267, 271, 285, 301, 302, 310, 410, 411, 412, 414, 415, 419, 424, 425, 426, 428, 429, 430, 431], "5": [2, 3, 14, 15, 23, 30, 31, 32, 39, 42, 43, 44, 45, 46, 50, 53, 58, 61, 63, 66, 67, 68, 83, 104, 109, 110, 115, 125, 126, 129, 134, 135, 136, 140, 141, 143, 148, 149, 153, 154, 155, 156, 159, 160, 166, 169, 170, 172, 201, 208, 209, 213, 223, 234, 235, 236, 237, 238, 239, 241, 242, 247, 248, 249, 250, 253, 256, 257, 260, 262, 265, 266, 271, 276, 280, 286, 287, 297, 298, 301, 303, 309, 333, 336, 338, 341, 342, 369, 406, 410, 411, 412, 415, 417, 419, 421, 424, 425, 426, 428, 429, 430, 431], "7": [2, 3, 6, 10, 46, 50, 53, 58, 66, 67, 102, 110, 125, 129, 136, 140, 141, 148, 149, 155, 156, 166, 169, 209, 235, 237, 238, 239, 242, 260, 262, 265, 357, 410, 411, 412, 415, 419, 424, 425, 426, 427, 428, 429, 430], "9": [2, 3, 7, 23, 27, 41, 46, 53, 58, 66, 67, 90, 91, 102, 110, 115, 123, 124, 139, 150, 151, 156, 166, 169, 209, 221, 223, 264, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 349, 407, 410, 411, 412, 413, 415, 419, 424, 425, 426, 427, 428, 429], "18": [2, 41, 90, 109, 110, 153, 154, 159, 160, 213, 223, 266, 411, 412, 414, 425, 426, 431], "19": [2, 90, 109, 110, 115, 223, 410, 411, 412, 413, 424, 426, 428, 429], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 86, 148, 155, 210, 214, 216, 236, 266, 292, 316, 336, 407, 408, 411, 412, 425, 428, 430], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 86, 88, 91, 92, 121, 123, 125, 129, 134, 136, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 155, 156, 159, 160, 161, 180, 181, 184, 199, 204, 205, 208, 213, 215, 217, 220, 223, 231, 255, 259, 298, 303, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 351, 353, 354, 355, 369, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 408, 411, 412, 413, 414, 415, 418, 420, 424, 425, 426, 431], "randomcroptensordict": [2, 411], "unlik": [2, 25, 108, 129, 140, 141, 159, 160, 234, 236, 301, 326, 336, 371, 406, 412, 415, 417, 419, 430], "stop": [2, 3, 16, 21, 60, 91, 102, 109, 110, 125, 129, 136, 148, 149, 155, 156, 413, 419, 424, 425, 430, 431], "signal": [2, 3, 14, 15, 16, 17, 23, 41, 83, 85, 87, 89, 90, 91, 102, 109, 110, 115, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 173, 183, 208, 211, 231, 407, 411, 413, 424, 425, 428, 431], "disk": [2, 3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 388, 408, 411, 412, 414, 415, 419, 420, 424, 428], "dump": [2, 3, 11, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 113, 117, 369, 370, 371, 420, 421, 424], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 112, 113, 117, 118, 124, 125, 129, 136, 148, 149, 155, 156, 157, 165, 221, 223, 388, 402, 408, 411, 413, 415, 428], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 85, 125, 126, 129, 136, 148, 149, 155, 156, 319, 341, 413, 416, 418, 419, 424, 425, 431], "anticip": [2, 179, 182], "compli": [2, 89, 236, 406], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 71, 74, 75, 76, 77, 78, 85, 125, 129, 136, 148, 149, 155, 156, 220, 225, 267, 293, 298, 299, 302, 303, 304, 305, 306, 413, 415, 424, 425, 426, 428], "exact": [2, 3, 23, 148, 257], "statu": [2, 3, 125], "prioriti": [2, 4, 53, 67, 68, 96, 97, 98, 101, 102, 111, 113, 117, 319, 320, 321, 323, 324, 325, 326, 332, 337, 339, 341, 342, 349, 408, 411, 412, 428], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 41, 46, 56, 57, 60, 61, 66, 83, 85, 86, 87, 89, 90, 91, 123, 124, 125, 128, 129, 130, 131, 136, 148, 149, 152, 155, 156, 223, 236, 293, 298, 299, 302, 303, 304, 305, 306, 334, 351, 352, 353, 354, 355, 371, 407, 411, 412, 417, 424, 426, 431], "hood": [2, 21, 83, 125, 129, 136, 148, 149, 155, 156, 236, 426], "naiv": [2, 217, 416], "just": [2, 3, 4, 12, 73, 113, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 169, 176, 231, 266, 379, 408, 411, 412, 413, 414, 415, 416, 417, 419, 424, 425, 426, 428, 430, 431], "public": [2, 88, 112, 196, 219], "serializ": 2, "consum": [2, 108, 110, 301, 412, 413, 419, 425, 428], "much": [2, 8, 14, 15, 17, 53, 67, 89, 101, 102, 148, 155, 333, 336, 413, 415, 416, 420, 424, 425, 426, 428, 431], "duplic": [2, 27, 38, 46, 56, 57, 61, 66, 108, 125, 129, 136, 148, 149, 155, 156, 223, 317, 319, 321, 326, 332, 334, 337, 339, 341, 342, 349], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 41, 46, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 163, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 188, 189, 190, 192, 193, 194, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 230, 237, 240, 241, 242, 243, 244, 245, 248, 251, 255, 259, 265, 271, 272, 275, 276, 277, 278, 280, 281, 293, 294, 295, 296, 297, 298, 301, 302, 303, 310, 311, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 332, 333, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 369, 371, 398, 406, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431], "plu": [2, 14, 15, 17, 60, 148, 155, 426], "enabl": [2, 7, 8, 85, 96, 97, 108, 117, 170, 255, 259, 277, 278, 301, 369, 371, 383, 413, 416, 424, 425, 426, 428], "three": [2, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 56, 92, 319, 406, 408, 413, 415, 416, 417, 424, 425, 426, 428, 431], "flatstoragecheckpoint": 2, "discard": [2, 3, 72, 85, 87, 129, 217, 230, 370, 428, 431], "compress": 2, "At": [2, 251, 261, 412, 413, 414, 419, 423, 426, 427], "correct": [2, 4, 52, 54, 59, 73, 125, 129, 136, 148, 149, 155, 156, 190, 391, 413, 414], "addit": [2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 73, 85, 125, 126, 129, 136, 148, 149, 155, 156, 159, 177, 196, 210, 214, 215, 217, 219, 223, 232, 233, 253, 297, 301, 305, 315, 334, 351, 369, 407, 411, 412, 415, 416, 424, 425, 428], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 46, 56, 57, 61, 62, 63, 66, 73, 125, 129, 136, 148, 149, 155, 156, 196, 217, 219, 223, 316, 336, 411, 426, 427, 431], "appar": [2, 3, 381], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 93, 94, 100, 125, 128, 129, 130, 136, 148, 149, 155, 156, 166, 176, 181, 210, 228, 232, 233, 239, 245, 248, 265, 272, 277, 278, 280, 293, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 313, 316, 321, 323, 324, 325, 336, 341, 342, 349, 406, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 430, 431], "assumpt": [2, 3, 71, 426, 428], "accur": [2, 7, 85, 91, 412, 426, 428], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 41, 46, 47, 55, 64, 66, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 109, 110, 123, 124, 125, 128, 129, 130, 136, 140, 141, 148, 149, 150, 151, 155, 156, 157, 159, 160, 166, 183, 184, 191, 198, 201, 205, 208, 210, 215, 223, 231, 255, 259, 287, 301, 357, 411, 413, 414, 416, 417, 419, 420, 423, 424, 427, 428, 430, 431], "marl": [2, 139, 161, 173, 211, 265, 266, 267, 325, 339, 416, 424, 425], "extra": [2, 10, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 173, 221, 223, 230, 378, 406, 413, 414, 428], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 167, 225], "concret": [2, 411, 413], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 41, 46, 64, 66, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 155, 156, 169, 192, 199, 204, 209, 211, 215, 223, 415, 419, 421, 426, 430, 431], "manual_se": [2, 3, 25, 35, 42, 43, 53, 58, 64, 66, 67, 68, 86, 90, 91, 109, 110, 121, 122, 125, 129, 136, 148, 149, 155, 156, 167, 169, 181, 192, 201, 204, 209, 211, 223, 251, 263, 264, 273, 276, 277, 278, 293, 299, 309, 316, 317, 319, 320, 324, 332, 339, 415, 419, 421, 424, 425, 426, 430, 431], "200": [2, 14, 15, 16, 21, 27, 35, 38, 46, 56, 57, 61, 64, 66, 83, 125, 128, 129, 130, 136, 148, 149, 155, 156, 159, 160, 201, 223, 241, 242, 249, 281, 282, 369, 371, 411, 414, 415, 419, 421, 426, 428], "22": [2, 89, 109, 110, 220, 411, 412, 413, 414, 424, 426], "rb_test": 2, "_storag": [2, 427, 428], "max_siz": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 109, 110, 111, 115, 117, 413, 419], "102": [2, 426], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 52, 54, 59, 73, 143, 213, 245, 263, 264, 265, 315, 319, 369, 411, 413, 415, 424, 425], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 213, 215, 221, 223, 265, 266, 319, 339, 402, 408, 411, 412, 431], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 213, 215, 221, 223, 319, 339, 408, 411], "drawback": 2, "struggl": 2, "big": [2, 413, 419, 428, 431], "sequenti": [2, 9, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 172, 190, 223, 292, 294, 295, 296, 302, 307, 308, 313, 316, 317, 319, 325, 332, 336, 337, 338, 339, 341, 406, 413, 414, 417, 425, 426, 427, 430, 431], "known": [2, 3, 5, 7, 8, 66, 129, 210, 358, 359, 411, 412, 416], "seamless": [2, 260], "integr": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 244, 255, 259, 262, 305, 406, 416, 417, 419, 424, 425, 426, 427], "indiffer": 2, "particularli": [2, 415, 430], "heavili": [2, 11], "smooth": [2, 234, 411, 412, 418], "essenti": [2, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 412, 416, 424, 426, 428], "understand": [2, 3, 8, 411, 412, 415, 416, 417, 424, 425], "purpos": [2, 3, 7, 11, 125, 129, 136, 148, 149, 155, 156, 173, 253, 316, 318, 330, 333, 336, 338, 398, 411, 413, 414, 415, 418, 420, 424, 425, 427, 431], "guid": [2, 11, 150, 151, 153, 154, 209, 405, 411, 425, 430], "explan": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 236], "effect": [2, 3, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 89, 102, 104, 107, 109, 110, 125, 129, 136, 148, 149, 155, 156, 169, 173, 215, 223, 236, 388, 406, 411, 417, 424, 428, 431], "realm": [2, 417], "As": [2, 3, 4, 46, 58, 67, 68, 71, 83, 104, 125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 201, 246, 306, 351, 406, 411, 412, 413, 414, 415, 416, 418, 419, 424, 425, 426, 427, 428, 430, 431], "practition": 2, "often": [2, 3, 8, 267, 331, 334, 388, 411, 412, 416, 418, 426, 428, 431], "encount": [2, 4, 89, 301, 405, 412, 417, 426], "situat": [2, 140, 141], "sometim": [2, 3, 71, 414, 431], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 83, 86, 87, 90, 91, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 253, 254, 255, 257, 258, 259, 262, 294, 295, 296, 334, 337, 408, 412], "immedi": [2, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 136, 148, 149, 155, 156, 223, 350, 424, 425], "199": [2, 410, 411, 426, 429], "info": [2, 3, 14, 15, 53, 58, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 107, 109, 110, 123, 124, 125, 128, 129, 130, 131, 136, 140, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 217, 220, 222, 378, 416, 421, 424, 425, 428, 430], "glanc": [2, 416], "seem": [2, 411, 414, 416], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 60, 62, 63, 125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 173, 197, 253, 255, 257, 259, 288, 294, 295, 296, 311, 406, 412, 414, 416, 424], "less": [2, 143, 289, 400, 401, 407, 413, 414, 428, 430], "omit": [2, 136, 384, 413, 418, 426, 428], "proper": [2, 3, 4, 6, 7, 351, 352, 353, 354, 412, 413, 424, 425, 428], "imposs": [2, 3, 115, 125, 129, 136, 148, 149, 155, 156, 225, 316, 318, 333, 336, 338], "determin": [2, 41, 53, 67, 73, 85, 101, 102, 125, 129, 136, 148, 149, 155, 156, 159, 160, 196, 219, 265, 277, 278, 319, 412, 417, 424, 425], "complic": [2, 56, 66, 426, 428, 431], "matter": [2, 33, 419], "inconsist": [2, 431], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 41, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 230, 307, 308, 316, 319, 339, 405, 411, 414], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 136, 419], "elimin": [2, 3, 416], "upon": [2, 3, 8, 424, 426], "canon": 2, "definit": [2, 50, 111, 265], "markov": [2, 3, 416, 431], "mdp": [2, 230, 416, 426], "context": [2, 3, 5, 8, 27, 38, 46, 56, 57, 61, 66, 110, 125, 126, 129, 136, 145, 148, 149, 155, 156, 210, 216, 223, 236, 255, 259, 266, 268, 292, 297, 347, 348, 351, 352, 353, 354, 356, 364, 371, 383, 406, 407, 411, 412, 413, 414, 415, 424, 425, 426, 427, 428, 430], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 209, 221, 298, 299, 301, 303, 304, 315, 411, 424, 426, 428], "complet": [2, 7, 9, 108, 125, 128, 129, 130, 136, 148, 149, 155, 156, 173, 208, 405, 407, 411, 413, 416, 423], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 41, 46, 47, 60, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 109, 123, 124, 125, 128, 129, 130, 134, 135, 136, 140, 141, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 169, 170, 183, 198, 210, 223, 231, 235, 255, 259, 262, 301, 307, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 411, 412, 413, 414, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 41, 46, 47, 52, 59, 60, 64, 66, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 159, 160, 166, 167, 170, 171, 176, 177, 179, 180, 182, 183, 184, 190, 194, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 218, 219, 221, 223, 228, 230, 235, 255, 262, 297, 301, 311, 316, 317, 319, 320, 321, 323, 324, 325, 328, 332, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 381, 382, 383, 386, 402, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "imit": [2, 3, 330], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 89, 125, 126, 129, 132, 135, 136, 148, 149, 155, 156, 223, 237, 238, 239, 260, 266, 406, 407, 408, 411, 412, 413, 414, 415, 416, 424, 425, 426, 428, 430], "stateless": [2, 3, 41, 125, 129, 136, 148, 149, 155, 156, 170, 214, 334, 369, 411, 416, 426, 431], "simul": [2, 3, 5, 7, 8, 71, 121, 122, 131, 134, 135, 152, 159, 160, 164, 235, 262, 406, 411, 413, 415, 416, 420, 424, 425], "furthermor": [2, 424, 425], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 125, 129, 136, 148, 149, 155, 156, 165, 187, 208, 215, 223, 251, 254, 258, 333, 411, 412, 413, 415, 421, 424, 425, 431], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 80, 107, 113, 120, 125, 127, 129, 136, 142, 148, 149, 155, 156, 167, 170, 179, 180, 181, 182, 184, 190, 198, 199, 205, 208, 210, 213, 214, 223, 228, 231, 232, 233, 235, 262, 293, 302, 308, 309, 313, 316, 336, 404, 411, 413, 414, 417, 424, 425, 426, 431], "accommod": [2, 3, 416, 417], "uniform": [2, 53, 67, 101, 102, 424], "unambigu": 2, "distinguish": [2, 140, 141, 159, 160], "happen": [2, 3, 12, 125, 129, 136, 148, 149, 155, 156, 233, 277, 412, 415, 418, 419, 420, 427, 431], "everyth": [2, 412, 413, 414, 420, 421], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 89, 220, 221, 411, 419, 425], "rule": [2, 66, 148, 179, 182, 306, 406, 413], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 46, 52, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 170, 179, 182, 183, 184, 194, 198, 199, 201, 205, 208, 210, 213, 215, 223, 230, 235, 237, 247, 248, 255, 259, 262, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 392, 405, 406, 412, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "taken": [2, 3, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 125, 129, 136, 148, 149, 155, 156, 166, 200, 263, 264, 407, 411, 413, 414, 417, 424, 425, 426], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 52, 54, 55, 56, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 166, 170, 179, 182, 183, 184, 194, 198, 199, 201, 205, 208, 210, 221, 230, 235, 237, 247, 248, 255, 259, 262, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 310, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 406, 413, 414, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "brought": [2, 413, 414, 417], "step_mdp": [2, 3, 125, 129, 136, 148, 149, 155, 156, 255, 259, 404, 414, 416, 426, 430, 431], "count": [2, 3, 46, 73, 125, 126, 208, 213, 277, 278, 383, 388, 391, 411, 412, 413, 414, 428, 431], "trigger": [2, 7, 56, 66], "partial": [2, 3, 125, 129, 136, 148, 149, 155, 156, 172, 173, 209, 210, 211, 302, 388, 414], "turn": [2, 18, 19, 20, 21, 52, 54, 57, 59, 61, 73, 135, 156, 188, 216, 220, 298, 369, 383, 407, 411, 412, 414, 417, 426, 427], "retain": [2, 125, 129, 136, 148, 149, 155, 156], "regard": [2, 85, 91, 248, 299, 316, 326, 336, 411, 413, 426], "twice": [2, 8, 110], "feasibl": 2, "mostli": [2, 3, 17, 276, 371, 407, 420, 428, 431], "eas": [2, 3, 424, 425], "flat": [2, 115], "manner": [2, 129, 196, 217, 406, 411, 412, 413, 419, 423, 426, 428], "ted2flat": [2, 35, 404], "flat2t": [2, 404], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 170, 301], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 129, 136, 148, 149, 155, 156, 186, 187, 207, 208, 211, 213, 215, 216, 223, 270, 319, 339, 407, 413, 424, 425, 426, 428], "both": [2, 3, 7, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 89, 125, 126, 128, 129, 136, 140, 141, 148, 149, 150, 151, 155, 156, 157, 166, 173, 199, 213, 215, 223, 231, 238, 239, 255, 258, 259, 260, 265, 266, 294, 295, 296, 299, 304, 316, 318, 319, 320, 324, 325, 332, 333, 334, 336, 337, 338, 339, 341, 342, 383, 406, 411, 413, 415, 416, 418, 424, 425, 426, 427, 428, 431], "mark": [2, 3, 16, 91, 125, 129, 136, 148, 149, 155, 156, 255, 259, 351, 353, 354, 419, 428], "identifi": [2, 55, 125, 129, 136, 148, 149, 155, 156], "abov": [2, 3, 7, 27, 38, 46, 56, 57, 61, 66, 74, 125, 129, 136, 148, 149, 155, 156, 223, 256, 286, 287, 315, 407, 408, 411, 413, 415, 416, 417, 424, 425, 426, 431], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 123, 124, 125, 128, 129, 130, 131, 135, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 170, 171, 173, 176, 177, 178, 179, 180, 182, 184, 190, 192, 196, 198, 199, 204, 205, 208, 211, 214, 215, 217, 219, 220, 223, 225, 231, 232, 233, 238, 239, 240, 241, 242, 245, 247, 248, 249, 253, 254, 255, 257, 258, 259, 260, 265, 266, 270, 274, 276, 277, 278, 280, 289, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 369, 371, 379, 406, 407, 411, 412, 413, 414, 415, 416, 417, 420, 423, 424, 425, 426, 427, 430, 431], "typic": [2, 3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 183, 209, 223, 274, 276, 302, 317, 319, 334, 336, 339, 406, 407, 408, 413, 415, 416, 418, 419, 424, 425, 426], "adjust": [2, 11, 210, 411, 424, 425, 426], "grumodul": [2, 172, 210, 292, 313, 414], "lstmmodul": [2, 255, 292, 414, 415], "skip": [2, 3, 27, 38, 46, 56, 57, 61, 66, 83, 125, 129, 136, 148, 149, 155, 156, 187, 213, 215, 223, 225, 302, 306, 319, 334, 339, 351, 352, 353, 354, 370, 371, 381, 383, 411, 412, 426], "accumul": [2, 8, 223], "upcom": [2, 334, 360, 361, 362, 363, 365, 366, 367, 368, 411], "popular": [2, 3, 406, 414, 418, 425], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 223, 404, 412], "shift": [2, 35, 37, 46, 47, 64, 93, 94, 100, 312, 351, 352, 353, 354, 413], "approxim": [2, 425, 431], "would": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 253, 255, 257, 259, 260, 265, 408, 412, 413, 414, 416, 418, 419, 426, 428, 430, 431], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 173, 245, 275, 316, 322, 335, 336, 379, 402, 413, 414, 425, 428], "2x": 2, "small": [2, 110, 217, 234, 411, 413, 415, 424, 425, 431], "clearer": [2, 415, 417], "lazi": [2, 62, 63, 80, 81, 125, 129, 136, 148, 149, 155, 156, 159, 160, 196, 217, 238, 265, 268, 307, 308, 411, 412, 417, 419, 423, 428, 431], "certainli": 2, "benefici": 2, "welcom": [2, 416], "wrapper": [2, 3, 12, 17, 52, 54, 59, 60, 67, 68, 73, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 220, 224, 233, 236, 237, 252, 270, 278, 289, 297, 301, 306, 311, 351, 376, 377, 378, 402, 404, 413, 414, 416, 424, 425, 427, 430, 431], "around": [2, 5, 7, 17, 67, 68, 125, 129, 136, 142, 148, 149, 155, 156, 224, 236, 276, 301, 306, 351, 411, 412, 425, 431], "selecttransform": [2, 125, 129, 136, 148, 149, 155, 156], "excludetransform": [2, 90, 205, 428], "promptli": 2, "virtual": [2, 3, 128], "instal": [2, 3, 5, 10, 18, 19, 20, 57, 66, 85, 88, 125, 129, 136, 148, 149, 150, 151, 153, 154, 155, 156, 373, 388, 405, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 431], "respons": [2, 3, 8, 102, 109, 125, 129, 136, 148, 149, 155, 156, 388, 418, 419, 431], "d4rl": [2, 85, 91], "repositori": [2, 7, 86, 87, 88, 91, 160, 424, 425], "wheel": [2, 413], "publish": 2, "openml": [2, 88, 145], "scikit": [2, 88, 145], "panda": [2, 88], "raw": [2, 3, 4, 60, 256, 286, 287, 412, 415, 419, 426], "go": [2, 3, 7, 48, 139, 148, 197, 201, 297, 357, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "natur": [2, 3, 411, 417, 418, 419, 428], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 125, 129, 136, 148, 149, 155, 156, 170, 177, 186, 190, 196, 210, 214, 215, 217, 219, 223, 267, 277, 278, 297, 305, 391, 407, 411, 412, 413, 415, 416, 424, 425, 426], "fly": [2, 221, 333, 407, 413, 426, 428, 431], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 125, 129, 136, 148, 149, 155, 156, 176, 420, 431], "pre": [2, 7, 22, 27, 38, 46, 56, 57, 61, 66, 72, 89, 97, 125, 129, 136, 148, 149, 155, 156, 196, 217, 219, 223, 431], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 167, 169, 170, 172, 173, 174, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 195, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 213, 214, 215, 217, 218, 220, 221, 223, 236, 253, 257, 267, 286, 298, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 335, 336, 337, 338, 339, 341, 342, 351, 369, 384, 408, 411, 412, 413, 419, 424, 426, 430, 431], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 86, 102, 109, 115, 133, 134, 135, 148, 150, 151, 176, 204, 238, 239, 249, 251, 265, 266, 301, 373, 388, 400, 401, 411, 412, 413, 414, 415, 417, 418, 421, 424, 425, 428, 430], "pipelin": [2, 3, 7, 406, 413], "replac": [2, 3, 6, 7, 31, 32, 39, 46, 63, 83, 89, 102, 109, 110, 169, 181, 183, 189, 230, 251, 406, 424, 428, 430], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 104, 125, 129, 136, 148, 149, 155, 156, 169, 201, 215, 223, 232, 233, 277, 278, 301, 386, 406, 408, 412, 413, 414, 417, 420, 426, 428, 431], "produc": [2, 41, 109, 166, 169, 170, 238, 239, 260, 266, 273, 294, 296, 297, 371, 413, 414, 415, 416, 417, 419, 428, 431], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 89, 93, 108, 125, 129, 136, 148, 149, 150, 151, 155, 156, 213, 215, 223, 236, 316, 317, 319, 332, 334, 336, 337, 338, 339, 341, 342, 413], "download": [2, 7, 10, 83, 85, 86, 87, 89, 90, 91, 133, 196, 219, 371, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 149, 412, 424, 425, 426], "robosetexperiencereplai": [2, 109, 110], "fk1": [2, 90], "v4": [2, 90, 129, 148, 166, 200, 360, 361, 362, 363, 365, 366, 367, 368, 411, 413, 427, 430], "expert": [2, 90], "fk1_microopenrandom_v2d": [2, 90], "func": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 222], "obs_norm": 2, "norm": [2, 4, 8, 121, 122, 234, 388, 411, 412, 413, 424, 425, 426], "num_work": [2, 52, 54, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 143, 148, 155, 411, 412], "os": [2, 54, 72, 92, 412], "cpu_count": [2, 54, 72, 92], "num_chunk": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91], "1000": [2, 4, 41, 58, 66, 96, 101, 109, 110, 125, 129, 136, 148, 149, 155, 156, 173, 221, 232, 251, 276, 277, 278, 302, 306, 331, 411, 412, 413, 414, 415, 417, 419, 421, 427, 428], "mp_start_method": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 148, 155, 213, 412, 430], "fork": [2, 5, 83, 84, 85, 86, 87, 88, 89, 90, 91, 411, 412, 413, 414, 424, 425, 427, 430], "recreat": [2, 426], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 58, 67, 68, 102, 104, 109, 125, 129, 136, 148, 149, 155, 156, 170, 190, 415, 419, 427], "grain": [2, 3, 58, 67, 68, 102, 104, 109, 125, 129, 136, 148, 149, 155, 156, 170], "nomenclatur": 2, "compact": [2, 41, 64, 93, 94, 100], "propos": [2, 173, 183, 236, 261, 331, 340, 406, 414, 428], "replaybufferensembl": [2, 83, 107, 113, 120], "primit": [2, 3, 4, 89, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 102, 104, 115, 125, 129, 136, 140, 141, 148, 149, 155, 156, 223, 411, 425], "dummi": [2, 3, 156, 369, 411, 415, 419, 431], "semant": [2, 62, 63, 128, 130], "ident": [2, 3, 14, 15, 16, 46, 52, 54, 58, 59, 66, 67, 68, 73, 96, 104, 109, 125, 128, 129, 130, 136, 143, 148, 149, 155, 156, 183, 234, 265, 266, 317, 319, 332, 337, 339, 341, 342, 351, 352, 353, 354, 400, 401, 412, 416, 424, 425], "another_kei": [2, 104], "renam": [2, 3, 52, 54, 59, 73, 104, 199, 201, 230, 411], "resiz": [2, 3, 91, 104, 173, 412, 414, 415, 416, 428, 431], "imag": [2, 3, 4, 7, 11, 89, 175, 178, 196, 212, 219, 260, 369, 371, 411, 412, 415, 416, 420, 425, 427, 431], "comops": 2, "totensorimag": [2, 3, 91, 104, 173, 200, 412, 414, 415, 428, 430, 431], "renametransform": [2, 3, 104, 125, 129, 136, 148, 149, 155, 156], "rb0": [2, 104], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 163, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 186, 188, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 214, 215, 216, 217, 219, 221, 235, 237, 247, 255, 259, 262, 279, 288, 289, 293, 294, 295, 296, 297, 298, 301, 302, 303, 305, 306, 308, 309, 310, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 332, 333, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 370, 371, 398, 406, 411, 412, 413, 414, 415, 417, 418, 421, 423, 424, 425, 426, 427, 428, 430, 431], "pixel": [2, 3, 7, 31, 91, 104, 123, 124, 128, 130, 131, 152, 173, 175, 178, 183, 186, 188, 192, 194, 196, 200, 212, 217, 219, 241, 271, 272, 369, 371, 411, 412, 414, 415, 420, 424, 427, 428, 430, 431], "rb1": [2, 104], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 163, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 186, 188, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 235, 237, 247, 248, 255, 259, 262, 279, 280, 288, 289, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 316, 317, 318, 319, 324, 325, 330, 332, 333, 336, 337, 338, 339, 341, 349, 351, 352, 353, 354, 369, 371, 383, 398, 406, 411, 412, 413, 414, 415, 417, 421, 423, 424, 425, 426, 427, 428, 430, 431], "pixels33": [2, 104], "data0": [2, 104], "244": [2, 104, 196, 219, 426], "data1": [2, 104, 430], "_": [2, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 126, 133, 159, 160, 174, 179, 181, 182, 190, 192, 199, 212, 221, 223, 276, 293, 305, 310, 315, 316, 317, 319, 320, 324, 325, 332, 336, 337, 339, 341, 342, 351, 352, 353, 354, 373, 411, 412, 413, 414, 415, 421, 424, 425, 426, 428, 430], "rang": [2, 3, 4, 8, 12, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 115, 125, 126, 129, 136, 140, 141, 148, 149, 155, 156, 201, 212, 221, 223, 254, 258, 276, 333, 341, 342, 407, 408, 411, 413, 414, 415, 418, 419, 421, 424, 425, 426, 428, 430], "parent": [2, 3, 21, 31, 32, 37, 39, 63, 71, 73, 84, 104, 113, 120, 125, 129, 136, 148, 149, 155, 156, 166, 170, 173, 174, 177, 180, 183, 186, 187, 192, 196, 204, 208, 209, 210, 211, 213, 214, 216, 217, 223, 255, 259, 294, 313, 334, 336, 355, 369, 371, 411, 419, 426, 430, 431], "basic": [2, 142, 406, 413, 418, 419, 421, 424, 430, 431], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 142, 148, 149, 155, 156, 169, 213, 214, 215, 221, 223, 246, 256, 264, 268, 273, 285, 286, 287, 301, 316, 319, 334, 336, 338, 339, 417, 419, 426, 428], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 112, 118, 125, 129, 136, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 230, 231, 234, 236, 237, 238, 239, 241, 242, 243, 244, 247, 248, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 268, 269, 277, 278, 280, 281, 282, 283, 284, 286, 289, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 382, 386, 391, 398, 406, 407, 408, 411, 412, 413, 414, 415, 416, 424, 425, 426, 430, 431], "send": [2, 3, 8, 378, 430], "receiv": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 136, 148, 149, 155, 156, 214, 215, 223, 260, 357, 407, 411, 413, 418, 423, 426], "spawn": [2, 3, 4, 18, 22, 133, 143, 148, 155, 213, 412, 424, 425], "check_env_spec": [2, 3, 125, 129, 136, 148, 149, 155, 156, 166, 198, 369, 404, 413, 424, 425, 426], "saniti": [2, 3, 7, 125, 129, 136, 148, 149, 155, 156, 225, 413], "automati": 2, "make_composite_from_td": [2, 71, 404, 426], "fall": [2, 4, 85], "categori": [2, 31, 86, 406, 408], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 46, 56, 57, 61, 66, 74, 125, 129, 136, 148, 149, 155, 156, 176, 191, 221, 223, 224, 232, 251, 277, 278, 281, 282, 293, 298, 299, 302, 303, 304, 305, 306, 309, 316, 317, 319, 320, 332, 336, 337, 339, 341, 342, 404, 406, 411, 412, 413, 415, 424, 426, 430, 431], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 142, 148, 149, 155, 156, 167, 170, 179, 182, 198, 210, 228, 235, 262, 293, 305, 308, 310, 338, 404, 426, 428], "boundeddiscret": [2, 28, 31, 413], "boundedcontinu": [2, 22, 28, 31, 125, 129, 136, 148, 149, 155, 156, 413, 424, 425, 426, 430, 431], "unboundeddiscret": [2, 74, 149, 404, 426, 431], "unboundedcontinu": [2, 74, 125, 129, 136, 148, 149, 155, 156, 198, 210, 228, 308, 313, 404, 413, 414, 424, 425, 426, 431], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 44, 45, 51, 121, 122, 128, 130, 131, 134, 135, 143, 144, 146, 147, 152, 157, 158, 248, 280, 298, 303, 321, 323, 324, 325, 349, 404, 406, 417], "multionehot": [2, 42, 43, 45, 321, 324, 325, 349, 404], "multicategor": [2, 43, 44, 45, 404], "binari": [2, 3, 7, 26, 27, 50, 157, 167, 171, 248, 280, 298, 299, 303, 304, 321, 324, 325, 349, 404], "concept": [2, 125, 129, 136, 148, 149, 155, 156, 276, 412, 428], "arbitrari": [2, 3, 25, 50, 58, 125, 129, 135, 136, 148, 149, 155, 156, 169, 411, 412, 426, 428], "combin": [2, 4, 36, 57, 214, 341, 412, 415, 420, 428, 430], "relat": [2, 3, 4, 10, 53, 148, 186, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 412, 421, 426], "nevertheless": [2, 3, 413, 416, 428], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 109, 110, 170, 210, 246, 305, 308, 317, 319, 332, 334, 337, 339, 341, 342, 415, 424, 425, 426, 428, 430], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 173, 174, 181, 192, 209, 210, 211, 213, 215, 221, 223, 234, 236, 253, 256, 257, 265, 266, 286, 287, 292, 298, 303, 309, 317, 319, 328, 334, 335, 339, 351, 353, 354, 383, 385, 408, 411, 412, 413, 414, 426, 431], "similarli": [2, 21, 27, 38, 46, 56, 57, 61, 66, 108, 113, 125, 129, 136, 148, 149, 155, 156, 223, 265, 307, 308, 324, 332, 431], "possess": [2, 71, 85], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 102, 167, 170, 173, 174, 212, 216, 228, 411, 414, 415, 424, 425, 426], "move": [2, 4, 27, 38, 46, 56, 57, 61, 66, 71, 91, 125, 129, 130, 136, 148, 149, 155, 156, 166, 177, 180, 196, 210, 214, 215, 217, 219, 221, 223, 230, 260, 305, 386, 411, 412, 414, 416, 431], "unbind": [2, 52, 53, 54, 58, 59, 67, 68, 73, 255, 259, 415], "said": [2, 413], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 56, 67, 71, 101, 102, 173, 186, 197, 216, 327, 351, 353, 354, 407, 413, 424, 425, 426], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 63, 125, 129, 136, 148, 149, 155, 156, 180, 407, 411, 412, 414, 418, 424, 425, 428], "predict": [2, 3, 46, 60, 247, 249, 261, 262, 297, 311, 316, 318, 323, 326, 328, 329, 333, 336, 338, 350, 411, 412, 418], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 56, 57, 61, 66, 76, 78, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 252, 255, 259, 316, 318, 319, 321, 324, 325, 326, 332, 333, 336, 337, 338, 339, 349, 351, 352, 353, 354, 359, 431], "mont": [2, 316, 318, 333, 336, 411], "carlo": [2, 316, 318, 333, 336, 411], "mct": [2, 41], "act": [2, 3, 4, 109, 110, 150, 151, 215, 247, 266, 317, 319, 320, 332, 337, 339, 341, 342, 414, 415, 424, 425, 428, 430], "tradit": [2, 418, 424], "integ": [2, 14, 15, 16, 17, 23, 38, 42, 44, 46, 50, 56, 57, 60, 61, 73, 102, 109, 110, 111, 125, 129, 136, 148, 149, 155, 156, 166, 169, 183, 187, 192, 208, 238, 239, 260, 265, 266, 319, 324, 332, 339, 415, 428], "advanc": [2, 3, 21, 53, 58, 67, 68, 125, 129, 136, 148, 149, 155, 156, 416, 419, 428], "rebuild": [2, 41], "initi": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 125, 129, 136, 146, 147, 148, 149, 155, 156, 157, 172, 192, 196, 210, 214, 215, 217, 222, 223, 232, 233, 234, 235, 251, 253, 254, 257, 258, 262, 265, 266, 267, 268, 269, 277, 278, 301, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 402, 406, 407, 411, 412, 414, 416, 417, 419, 424, 426, 431], "pair": [2, 3, 46, 52, 54, 56, 59, 66, 73, 85, 123, 124, 125, 129, 136, 148, 149, 155, 156, 201, 210, 213, 255, 294, 302, 306, 334, 351, 352, 353, 354, 355, 406, 407, 411, 412, 413, 417, 418, 423, 426, 431], "term": [2, 60, 190, 257, 258, 268, 269, 315, 316, 325, 390, 412, 413, 416, 417, 425], "pseudocod": 2, "next_stat": [2, 407], "associ": [2, 3, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 125, 129, 136, 148, 149, 155, 156, 213, 223, 281, 402, 411, 428], "sens": [2, 4, 52, 54, 59, 73, 419, 426], "hard": [2, 3, 7, 115, 123, 124, 148, 331, 412, 431], "let": [2, 3, 6, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 125, 129, 136, 148, 149, 150, 151, 155, 156, 173, 223, 255, 259, 265, 266, 298, 383, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "know": [2, 3, 4, 9, 53, 58, 67, 68, 128, 130, 232, 233, 334, 337, 383, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 425, 428], "next_td": 2, "Of": [2, 3, 7, 405, 426, 431], "cours": [2, 3, 4, 405, 426, 431], "handi": [2, 3, 125, 129, 136, 148, 149, 155, 156, 420], "undertaken": [2, 73, 426], "link": [2, 6, 7, 125, 412, 421], "hash": [2, 38, 56, 57, 61, 66, 73, 136], "past": [2, 4, 301, 412, 428], "node_map": [2, 41], "_index": [2, 56, 66], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 220, 413, 423], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 68, 101, 102, 108, 204, 221, 223, 277, 278, 301, 376, 381, 412, 414, 416, 419, 425, 426, 428], "next_data": [2, 125, 129, 136, 148, 149, 155, 156], "data_map": [2, 41], "obtrain": 2, "form": [2, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 125, 129, 136, 148, 149, 155, 156, 221, 223, 253, 255, 257, 259, 315, 316, 318, 333, 336, 388, 406, 417, 425], "figur": [2, 3, 73, 136, 411, 413, 414, 425, 426, 431], "flowchart": 2, "o": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 258], "get_tre": [2, 41], "vertex": [2, 73], "longer": [2, 12, 73, 412, 421, 424, 425, 428], "vertic": [2, 73], "branch": [2, 41, 73], "repeat": [2, 73, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 235, 246, 413, 424, 425, 426], "depth": [2, 58, 71, 125, 129, 136, 142, 148, 149, 152, 155, 156, 235, 238, 239, 241, 242, 243, 244, 249, 250, 260, 262, 265, 266, 267, 271, 272, 298, 406, 412, 416, 418, 419, 423, 424, 425, 428], "until": [2, 3, 7, 21, 135, 211, 214, 223, 413, 414, 421, 424, 425], "anymor": [2, 52, 54, 59, 73, 215, 305], "utmost": 2, "commonli": [2, 102, 109, 110, 431], "emploi": [2, 269], "languag": [2, 24, 60], "scarc": 2, "address": [2, 428], "subdomain": 2, "facilit": [2, 3, 7, 195, 196, 210, 217, 219, 294, 295, 296, 406, 411, 414, 417, 426], "extern": [2, 3, 179, 182, 424, 431], "token": [2, 54, 55, 60, 69, 72, 92, 136], "dm": [3, 411, 431], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 61, 62, 63, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 89, 106, 112, 115, 116, 118, 119, 121, 122, 125, 129, 133, 134, 135, 136, 142, 143, 144, 148, 149, 155, 156, 159, 180, 201, 217, 218, 230, 255, 259, 265, 267, 294, 300, 316, 317, 319, 320, 321, 323, 324, 325, 327, 332, 336, 337, 338, 339, 341, 342, 352, 353, 378, 388, 406, 407, 408, 411, 412, 414, 416, 417, 418, 420, 424, 425, 426, 428, 431], "abl": [3, 41, 139, 150, 151, 255, 259, 411, 413, 414, 417, 423, 424, 425, 426, 428], "experi": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 101, 102, 125, 129, 136, 148, 149, 155, 156, 225, 373, 374, 375, 376, 377, 378, 405, 412, 413, 415, 419, 420, 424, 425, 428], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 128, 130, 267, 334], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 125, 126, 129, 136, 140, 141, 148, 149, 150, 151, 153, 154, 155, 156, 173, 176, 183, 189, 190, 192, 194, 199, 201, 204, 210, 214, 220, 221, 223, 369, 398, 411, 412, 413, 414, 415, 423, 425, 427, 428, 430, 431], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 177, 181, 183, 190, 196, 210, 214, 215, 217, 219, 223, 226, 235, 237, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 262, 264, 265, 266, 267, 270, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 301, 302, 303, 305, 306, 307, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 398, 406, 407, 411, 412, 413, 414, 415, 417, 418, 421, 423, 424, 425, 426, 427, 430], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 56, 57, 61, 66, 74, 104, 125, 129, 136, 148, 149, 155, 156, 168, 169, 214, 220, 225, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 305, 306, 307, 309, 312, 334, 336, 412, 414, 419, 426, 428], "organis": [3, 90, 125, 129, 136, 148, 149, 155, 156, 215, 412], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 125, 128, 129, 130, 135, 136, 148, 149, 155, 156, 166, 183, 196, 217, 221, 223, 255, 259, 306, 316, 317, 319, 320, 321, 323, 325, 326, 327, 330, 332, 334, 336, 337, 338, 339, 341, 342, 349, 411, 414, 426], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 142, 148, 149, 155, 156, 183, 223], "actual": [3, 4, 7, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 220, 391, 407, 411, 413, 415, 424, 425, 426], "retriev": [3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 125, 128, 129, 130, 136, 148, 149, 155, 156, 174, 180, 183, 192, 230, 235, 238, 262, 301, 302, 306, 309, 313, 316, 317, 318, 319, 321, 333, 336, 337, 339, 341, 342, 349, 351, 352, 353, 354, 402, 408, 412, 413, 417, 426, 431], "care": [3, 8, 27, 38, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 214, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 371, 411, 413, 415, 424, 425, 426, 428], "parametr": [3, 269, 306, 317, 319, 324, 332, 339, 411, 413], "hardwar": [3, 415], "observation_spec": [3, 41, 125, 129, 136, 142, 148, 149, 155, 156, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 188, 189, 190, 192, 194, 196, 198, 200, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 223, 235, 255, 259, 262, 392, 398, 411, 413, 418, 423, 424, 425, 426, 431], "state_spec": [3, 125, 129, 136, 142, 148, 149, 155, 156, 167, 235, 262, 426, 431], "reward_spec": [3, 125, 129, 136, 142, 148, 149, 155, 156, 167, 170, 171, 176, 177, 179, 180, 182, 198, 202, 203, 204, 206, 214, 216, 223, 235, 262, 413, 424, 425, 426, 431], "done_spec": [3, 125, 129, 136, 148, 149, 155, 156, 179, 180, 182, 183, 198, 214, 223, 231, 424, 425, 426, 431], "flag": [3, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160, 189, 277, 278, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 406, 424, 425, 426, 427], "input_spec": [3, 73, 125, 129, 136, 142, 148, 149, 155, 156, 166, 170, 177, 179, 180, 181, 192, 194, 198, 199, 204, 205, 208, 209, 210, 214, 215, 216, 218, 223, 413, 426], "full_action_spec": [3, 73, 125, 129, 136, 146, 147, 148, 149, 155, 156, 157, 158, 166, 235, 262, 413, 424, 425], "full_state_spec": [3, 41, 73, 125, 129, 136, 148, 149, 155, 156, 166, 235, 262, 413], "lock": [3, 31, 32, 39, 52, 54, 59, 63, 73, 125, 129, 135, 136, 148, 149, 155, 156, 170, 210, 221, 426], "output_spec": [3, 73, 125, 129, 136, 148, 149, 155, 156, 170, 177, 179, 180, 184, 190, 198, 199, 205, 208, 214, 215, 223, 426], "full_observation_spec": [3, 73, 125, 129, 136, 148, 149, 155, 156, 235, 262], "full_reward_spec": [3, 73, 125, 129, 136, 148, 149, 155, 156, 170, 180, 198, 424, 425], "full_done_spec": [3, 73, 125, 129, 136, 148, 149, 155, 156, 170, 180, 198, 231, 424, 425], "carri": [3, 21, 44, 72, 125, 129, 136, 148, 149, 155, 156, 210, 334, 412, 414, 424, 425, 426, 428], "nontensorspec": [3, 404], "importantli": [3, 302, 306], "action_s": 3, "help": [3, 4, 27, 38, 46, 56, 57, 61, 66, 71, 125, 129, 136, 148, 149, 155, 156, 183, 223, 316, 318, 333, 336, 338, 405, 407, 411, 412, 413, 414, 424, 425], "With": [3, 134, 135, 139, 209, 408, 412, 423, 424, 425, 428, 431], "necessarili": [3, 125, 129, 136, 148, 149, 155, 156, 431], "present": [3, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 125, 128, 129, 136, 148, 149, 155, 156, 184, 201, 205, 210, 213, 215, 223, 230, 231, 239, 240, 241, 242, 243, 244, 250, 255, 257, 259, 269, 275, 277, 278, 301, 305, 306, 307, 308, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 402, 408, 411, 421, 423, 424, 425, 428, 430], "0s": [3, 83, 89, 210, 414], "step_and_maybe_reset": [3, 125, 129, 136, 148, 149, 155, 156, 416], "done_kei": [3, 23, 35, 37, 41, 47, 64, 93, 94, 100, 109, 125, 129, 136, 148, 149, 155, 156, 169, 173, 183, 201, 208, 223, 230, 424, 425], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 74, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 320, 321, 323, 339, 413, 417, 424, 425, 428], "_reset": [3, 125, 129, 136, 142, 148, 149, 155, 156, 167, 169, 170, 173, 179, 182, 189, 198, 231, 235, 262, 424], "data_": [3, 125, 129, 136, 148, 149, 155, 156], "append": [3, 8, 11, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 136, 148, 149, 155, 156, 169, 176, 177, 201, 210, 215, 220, 254, 255, 258, 259, 298, 303, 411, 412, 413, 414, 415, 424, 425, 426, 427, 428, 430], "seed": [3, 14, 15, 16, 17, 21, 58, 67, 68, 90, 104, 125, 129, 136, 142, 148, 149, 150, 151, 155, 156, 159, 160, 167, 170, 179, 182, 198, 215, 225, 369, 388, 424], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 229, 240, 249, 271, 282, 293, 302, 305, 306, 309, 317, 334, 383, 406, 411, 412, 413, 414, 415, 417, 418, 421, 424, 426, 430, 431], "preced": [3, 46, 414], "risk": [3, 197], "overlap": [3, 67, 115], "reproduc": [3, 57, 61, 125, 129, 136, 148, 149, 155, 156, 173, 225, 411, 413, 415, 425], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 46, 52, 54, 55, 60, 66, 69, 72, 73, 74, 92, 96, 97, 98, 101, 102, 117, 125, 129, 136, 148, 149, 155, 156, 181, 202, 208, 209, 211, 234, 285, 286, 287, 309, 317, 319, 324, 325, 332, 334, 335, 339, 371, 385, 406, 411, 412, 413, 414, 417, 424, 425, 428], "max_step": [3, 11, 115, 125, 129, 136, 140, 141, 142, 148, 149, 155, 156, 159, 160, 208, 213, 223, 369, 416, 417, 418, 420, 421, 424, 425, 430, 431], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 56, 60, 66, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 172, 190, 233, 237, 248, 255, 259, 262, 278, 279, 280, 288, 289, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 311, 313, 317, 319, 320, 324, 325, 327, 328, 329, 330, 332, 334, 337, 339, 341, 342, 349, 350, 351, 352, 353, 354, 383, 398, 404, 411, 413, 414, 418, 421, 423, 424, 425, 426, 427, 431], "trail": [3, 221], "treat": [3, 46, 407, 417, 418], "brief": [3, 413, 416, 418, 428], "deliveri": 3, "design": [3, 27, 38, 46, 50, 56, 57, 61, 66, 107, 113, 120, 125, 129, 136, 140, 141, 148, 149, 155, 156, 166, 173, 197, 213, 215, 223, 297, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 411, 412, 413, 414, 416, 417, 418, 423, 424, 425, 426, 428, 430, 431], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 46, 50, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 111, 125, 129, 136, 148, 149, 155, 156, 208, 209, 221, 223, 228, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 265, 266, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 334, 388, 408, 411, 412, 413, 414, 416, 417, 424, 425, 426], "flank": [3, 414], "dual": 3, "strictli": [3, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339, 411, 413], "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 128, 129, 130, 136, 148, 149, 155, 156, 213, 215, 221, 223, 235, 248, 249, 262, 263, 264, 265, 266, 267, 271, 272, 281, 282, 296, 299, 316, 319, 326, 327, 328, 329, 336, 339, 351, 356, 364, 410, 411, 413, 415, 417, 418, 419, 420, 424, 425, 428], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 101, 102, 109, 125, 129, 136, 148, 149, 155, 156, 177, 192, 196, 201, 203, 210, 215, 217, 219, 221, 223, 230, 238, 239, 240, 241, 242, 243, 244, 246, 250, 260, 263, 264, 265, 266, 268, 269, 273, 275, 279, 285, 286, 287, 288, 292, 305, 323, 325, 331, 337, 340, 364, 382, 383, 385, 388, 393, 394, 396, 398, 399, 400, 401, 402], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 63, 140, 141, 161, 411], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 83, 89, 102, 109, 110, 404], "adjac": [3, 23, 186, 301], "junction": 3, "inittrack": [3, 255, 259, 301, 411, 414], "tutori": [3, 136, 149, 403, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 431], "scratch": [3, 8, 412, 426], "gym3": 3, "envpool": [3, 143, 144], "interfac": [3, 132, 145, 260, 268, 406, 407, 411, 413, 415, 420, 426, 428], "simultan": [3, 20, 135, 143, 144, 148, 155, 426], "advantag": [3, 8, 250, 316, 318, 333, 336, 338, 351, 352, 353, 354, 355, 356, 358, 360, 362, 364, 365, 367, 407, 408, 411, 412, 413, 414, 425, 426, 431], "scale": [3, 4, 24, 85, 125, 129, 136, 148, 149, 155, 156, 173, 190, 192, 203, 209, 212, 221, 234, 249, 256, 270, 281, 282, 286, 287, 294, 295, 296, 302, 306, 308, 316, 317, 319, 332, 336, 337, 338, 339, 386, 392, 402, 406, 411, 412, 413, 414, 417, 425, 430], "varieti": [3, 11], "inherit": [3, 125, 129, 136, 148, 149, 155, 156, 261, 265, 266, 334, 408, 413, 424, 425], "from_pixel": [3, 11, 121, 122, 123, 124, 128, 130, 131, 134, 135, 152, 173, 200, 369, 371, 411, 412, 414, 416, 420, 421, 427, 428, 430, 431], "81": [3, 109, 411, 412, 426, 427], "simpli": [3, 6, 52, 54, 59, 72, 73, 113, 115, 120, 184, 205, 220, 334, 351, 406, 407, 411, 413, 418, 424, 425, 431], "d": [3, 53, 56, 58, 66, 67, 68, 86, 88, 90, 91, 92, 101, 102, 234, 253, 257, 302, 306, 430], "privat": [3, 125, 129, 136, 148, 149, 155, 156, 220, 426, 431], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 42, 44, 50, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 318, 333, 336, 379, 381, 383, 388, 391, 392, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 60, 73, 104, 107, 125, 129, 136, 148, 149, 155, 156, 157, 158, 192, 203, 256, 268, 281, 286, 287, 349, 406, 417, 418, 424, 426, 428], "inner": [3, 125, 129, 136, 148, 149, 155, 156, 181, 408, 412, 413, 425, 431], "logic": [3, 424], "kept": [3, 23, 108, 110, 125, 129, 136, 148, 149, 155, 156, 181, 205, 214, 225, 230, 256, 286, 287, 418, 424], "mind": [3, 83, 89, 102, 109, 110, 125, 129, 136, 148, 149, 155, 156, 424, 425], "desig": 3, "wherev": 3, "expos": [3, 152, 179, 182, 307, 412], "modif": [3, 5, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 136, 148, 149, 155, 156, 186, 223, 231, 334, 407, 413, 426], "lost": [3, 8, 220], "eras": [3, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 102, 109, 125, 129, 136, 148, 149, 155, 156, 215], "intern": [3, 41, 70, 125, 129, 136, 148, 149, 155, 156, 409], "face": [3, 5, 8, 9, 416, 431], "NOT": [3, 93, 94, 100, 110, 197], "outsid": [3, 16, 180, 213, 407, 420, 424, 425, 426], "right": [3, 6, 7, 23, 60, 102, 109, 412, 413, 415, 425, 426, 431], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 214, 215, 223, 225, 351, 352, 353, 354, 424], "preclud": 3, "presenc": [3, 56, 66, 418], "annihil": 3, "reason": [3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 89, 125, 129, 136, 148, 149, 150, 151, 155, 156, 196, 217, 223, 259, 407, 411, 412, 413, 418, 419, 424, 426, 428], "superse": 3, "pettingzoowrapp": [3, 404], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 136, 139, 140, 141, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 346, 406, 412, 417, 419, 425, 428], "environemtn": 3, "__not__": [3, 302, 317, 319, 332, 337, 339, 341, 342], "constrain": [3, 190, 255, 259, 336], "li": 3, "fact": [3, 7, 8, 411, 413, 416, 424, 425, 426, 427, 428, 431], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "perfectli": [3, 408, 411, 415, 426], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 415, 418, 430], "agent0": [3, 415], "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 58, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 136, 148, 149, 155, 156, 169, 246, 402, 406], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 169, 170, 173, 174, 179, 181, 182, 183, 184, 186, 190, 191, 192, 194, 196, 198, 199, 201, 203, 204, 205, 208, 210, 212, 213, 215, 216, 217, 219, 221, 223, 225, 228, 230, 231, 232, 234, 235, 237, 238, 239, 241, 242, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 278, 285, 286, 287, 292, 293, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 349, 351, 352, 353, 354, 357, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 378, 381, 382, 383, 385, 386, 388, 402, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "500": [3, 411, 412, 426, 431], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 83, 86, 148, 155], "bottleneck": [3, 8, 102, 109, 110], "great": [3, 7, 8, 415, 424, 430], "speedup": [3, 8, 424, 431], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 179, 182, 230, 254, 258, 411, 413], "misspecifi": 3, "caus": [3, 7, 8, 96, 97, 117, 125, 129, 133, 136, 148, 149, 155, 156, 197, 431], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 96, 125, 129, 136, 148, 149, 155, 156, 157, 161, 173, 185, 191, 201, 209, 210, 211, 213, 215, 223, 225, 232, 233, 251, 277, 278, 319, 334, 339, 411, 413, 424, 425, 428], "mismatch": [3, 56, 412], "subprocess": [3, 14, 15, 17, 126, 148, 155], "multithreadedenv": [3, 404], "underneath": 3, "higher": [3, 4, 102, 176, 309, 411, 412, 413, 424, 428, 431], "flexibl": [3, 9, 143, 343, 407, 408, 411, 415, 428, 431], "cover": [3, 128, 130, 405, 413, 416, 419, 420, 426, 430], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 71, 72, 73, 74, 91, 92, 104, 125, 129, 136, 139, 142, 145, 148, 149, 150, 151, 155, 156, 170, 177, 179, 180, 183, 184, 190, 196, 198, 199, 205, 208, 210, 213, 214, 215, 217, 219, 221, 223, 226, 229, 230, 232, 233, 238, 239, 260, 265, 266, 269, 279, 288, 290, 298, 302, 305, 306, 313, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 344, 346, 349, 357, 369, 400, 404, 406, 411, 412, 413, 415, 419, 424, 425, 426, 428, 431], "atari": [3, 4, 83, 173, 239, 371, 415, 420, 431], "classic": [3, 142, 151, 412], "benchmark_batched_env": 3, "seamlessli": [3, 426], "infrastructur": [3, 424, 425], "world": [3, 5, 142, 311, 328, 415, 420, 424, 425, 426, 431], "paradigm": [3, 17, 425], "decpodp": 3, "game": [3, 4, 5, 83, 140, 141, 146, 147, 239, 371, 415, 420], "thank": [3, 411, 415, 416, 430], "carrier": [3, 413, 414, 416, 428], "particular": [3, 27, 38, 46, 56, 57, 61, 66, 72, 73, 85, 86, 125, 129, 136, 148, 149, 155, 156, 215, 223, 407, 408, 412, 414, 416, 423, 425, 428], "thu": [3, 333, 425], "vma": [3, 159, 160, 369, 424, 425], "robot": [3, 5, 7, 89, 196, 217, 219, 415, 425], "vmasenv": [3, 369, 404, 424, 425], "balanc": [3, 123, 124, 411, 412, 431], "num_env": [3, 21, 128, 132, 144, 159, 160, 369, 424, 425], "n_agent": [3, 159, 160, 265, 266, 267, 279, 288, 349, 369, 424, 425], "ground_rew": 3, "pos_rew": [3, 425], "style": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91], "vari": [3, 128, 130, 131, 150, 151, 152, 159, 197, 415, 425], "creation": [3, 148, 155, 431], "info_spec": [3, 148], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 42, 43, 44, 45, 50, 51, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 166, 167, 183, 198, 231, 248, 273, 276, 280, 298, 299, 302, 303, 304, 321, 324, 325, 349, 404, 414, 424, 425, 431], "simpl": [3, 9, 27, 38, 46, 50, 56, 57, 61, 66, 71, 125, 129, 136, 148, 149, 155, 156, 223, 241, 301, 306, 321, 323, 334, 338, 407, 411, 412, 413, 416, 417, 418, 424, 425, 428, 431], "prefix": [3, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 302, 319, 334, 339, 370, 414, 418, 431], "exactli": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 131, 136, 148, 149, 155, 156, 213, 215, 223, 253, 257, 273, 319, 339, 411, 414, 419, 424, 425], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 125, 129, 136, 148, 149, 155, 156, 166, 167, 181, 224, 230, 232, 233, 235, 251, 261, 262, 277, 278, 301, 424, 425], "reward_kei": [3, 35, 37, 41, 47, 64, 93, 94, 100, 125, 129, 136, 148, 149, 155, 156, 223, 230, 235, 262, 382, 386, 424, 425], "set_kei": [3, 183, 316, 318, 319, 321, 324, 325, 326, 332, 333, 334, 336, 337, 338, 339, 349, 355, 411, 424, 425], "awai": [3, 413, 416, 424, 425, 430], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 42, 43, 44, 45, 48, 49, 50, 51, 63, 71, 73, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 189, 208, 306], "full": [3, 125, 129, 136, 148, 149, 155, 156, 236, 255, 259, 299, 379, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "autoresettransform": 3, "invalid": [3, 27, 38, 46, 56, 57, 61, 66, 115, 125, 129, 136, 148, 149, 155, 156, 161, 223, 263, 264], "nan": [3, 169, 220], "auto_reset": [3, 41, 125, 129, 135, 136, 148, 149, 155, 156, 169, 223, 426], "auto_reset_replac": [3, 169], "placehold": [3, 131, 183, 215], "set_gym_backend": [3, 125, 128, 129, 136, 148, 149, 155, 156, 162, 169, 404, 416, 430], "autoresettinggymenv": [3, 169], "_step": [3, 125, 129, 136, 148, 149, 155, 156, 167, 169, 170, 179, 182, 186, 198, 199], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 125, 129, 136, 142, 148, 149, 155, 156, 167, 169, 170, 177, 179, 182, 196, 198, 210, 214, 215, 217, 219, 223, 232, 233, 235, 248, 251, 255, 259, 262, 265, 266, 279, 288, 302, 305, 310, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 408, 411, 415, 426, 430], "super": [3, 142, 167, 169, 170, 179, 182, 198, 235, 248, 262, 310, 317, 319, 320, 325, 332, 337, 339, 341, 342, 411, 426, 430], "td_reset": [3, 169], "exclud": [3, 8, 41, 66, 85, 90, 125, 129, 136, 148, 149, 155, 156, 169, 173, 184, 230, 279, 318, 336, 424, 425, 428], "r": [3, 4, 41, 46, 166, 167, 169, 176, 192, 206, 213, 221, 234, 237, 254, 306, 315, 350, 369, 412, 426, 431], "break_when_any_don": [3, 125, 129, 136, 148, 149, 155, 156, 169, 213, 223, 237, 301, 425], "3633e": [3, 169], "02": [3, 125, 129, 136, 148, 149, 155, 156, 169, 410, 411, 412, 413, 414, 421, 424, 426, 427, 429], "4877e": [3, 169], "01": [3, 169, 192, 234, 277, 278, 312, 316, 318, 333, 336, 410, 411, 412, 414, 424, 426, 427, 429], "2849e": [3, 169], "7584e": [3, 169], "6609e": [3, 169], "6166e": [3, 169], "8366e": [3, 169], "2761e": [3, 169], "5685e": [3, 169], "4102e": [3, 169], "8111e": [3, 169], "9959e": [3, 169], "0865e": [3, 169], "5644e": [3, 169], "2119e": [3, 169], "2542e": [3, 169], "03": [3, 125, 129, 136, 148, 149, 155, 156, 169, 192, 410, 411, 412, 424, 426, 427, 429], "9952e": [3, 169], "4059e": [3, 169], "2094e": [3, 169], "9009e": [3, 169], "5140e": [3, 169], "3554e": [3, 169], "2920e": [3, 169], "7893e": [3, 169], "6429e": [3, 169], "3057e": [3, 169], "2867e": [3, 169], "6963e": [3, 169], "3818e": [3, 169], "2576e": [3, 169], "2679e": [3, 169], "1640e": [3, 169], "00": [3, 121, 122, 169, 410, 411, 412, 413, 414, 424, 425, 426, 427, 429], "6972e": [3, 169], "0212e": [3, 169], "5959e": [3, 169], "4637e": [3, 169], "3121e": [3, 169], "2168e": [3, 169], "5232e": [3, 169], "7704e": [3, 169], "7457e": [3, 169], "4127e": [3, 169], "1064e": [3, 169], "0854e": [3, 169], "5712e": [3, 169], "2189e": [3, 169], "5235e": [3, 169], "8289e": [3, 169], "0009e": [3, 169], "0257e": [3, 169], "8893e": [3, 169], "5872e": [3, 169], "9405e": [3, 169], "7766e": [3, 169], "0403e": [3, 169], "0626e": [3, 169], "2959e": [3, 169], "7263e": [3, 169], "2775e": [3, 169], "9564e": [3, 169], "0411e": [3, 169], "6769e": [3, 169], "6354e": [3, 169], "8698e": [3, 169], "1765e": [3, 169], "6292e": [3, 169], "5375e": [3, 169], "1820e": [3, 169], "7023e": [3, 169], "5836e": [3, 169], "9016e": [3, 169], "4826e": [3, 169], "6191e": [3, 169], "6387e": [3, 169], "8667e": [3, 169], "2056e": [3, 169], "1147e": [3, 169], "5991e": [3, 169], "0278e": [3, 169], "5219e": [3, 169], "3067e": [3, 169], "6617e": [3, 169], "3322e": [3, 169], "2629e": [3, 169], "4599e": [3, 169], "7298e": [3, 169], "5848e": [3, 169], "0148e": [3, 169], "5745e": [3, 169], "6982e": [3, 169], "7877e": [3, 169], "3527e": [3, 169], "7285e": [3, 169], "6668e": [3, 169], "0583e": [3, 169], "6956e": [3, 169], "3962e": [3, 169], "9845e": [3, 169], "5015e": [3, 169], "5903e": [3, 169], "9993e": [3, 169], "9418e": [3, 169], "0196e": [3, 169], "6557e": [3, 169], "2109e": [3, 169], "8997e": [3, 169], "1507e": [3, 169], "7363e": [3, 169], "0310e": [3, 169], "9574e": [3, 169], "8980e": [3, 169], "0090e": [3, 169], "forecast": 3, "awar": [3, 7, 96, 97, 98, 111, 113, 117, 255, 259, 412, 414], "detect": [3, 91, 334, 407], "return_contigu": [3, 125, 129, 136, 148, 149, 155, 156, 225, 423], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 125, 127, 129, 136, 148, 149, 155, 156, 167, 169, 170, 172, 173, 174, 177, 179, 180, 183, 184, 185, 186, 189, 190, 195, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 213, 214, 215, 220, 221, 223, 225, 230, 231, 232, 233, 235, 251, 255, 259, 261, 262, 277, 278, 297, 299, 301, 304, 305, 306, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 350, 351, 352, 353, 354, 355, 388, 411, 424, 426], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 46, 50, 53, 56, 57, 60, 61, 66, 67, 74, 89, 101, 102, 104, 125, 129, 136, 148, 149, 155, 156, 166, 169, 173, 177, 179, 182, 190, 192, 196, 201, 202, 203, 209, 210, 212, 214, 215, 217, 219, 221, 223, 232, 233, 234, 236, 237, 246, 249, 253, 256, 257, 260, 263, 264, 268, 269, 276, 281, 282, 285, 287, 305, 309, 312, 314, 315, 316, 317, 318, 319, 323, 324, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 350, 356, 357, 358, 359, 360, 361, 362, 363, 364, 386, 411, 412, 428, 431], "_set_se": [3, 167, 170, 179, 182, 198, 426], "lazystackedtensordict": [3, 41, 63, 83, 125, 129, 136, 142, 148, 149, 155, 156, 423], "float32": [3, 14, 15, 16, 28, 31, 35, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 109, 117, 121, 122, 125, 128, 129, 130, 134, 135, 136, 142, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 159, 160, 166, 170, 179, 182, 183, 184, 192, 194, 198, 199, 201, 205, 208, 210, 212, 228, 230, 235, 237, 247, 248, 255, 259, 262, 277, 278, 279, 280, 288, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 308, 310, 313, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 349, 406, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431], "exclusive_field": [3, 83, 423], "stack_dim": [3, 83, 423], "dramat": 3, "carefulli": [3, 424, 425, 431], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 223, 225, 293, 298, 299, 302, 303, 304, 305, 306, 317, 319, 332, 337, 339, 341, 342, 413, 424, 425], "plain": [3, 8, 416], "larg": [3, 4, 30, 52, 54, 59, 73, 110, 179, 182, 217, 316, 318, 333, 336, 338, 412, 413, 424, 425, 428], "expens": [3, 102, 109, 110, 369, 428], "absent": [3, 31, 32, 39, 63, 66, 85, 125, 129, 136, 148, 149, 155, 156, 205, 215], "torchvis": [3, 11, 196, 219, 373, 424, 430, 431], "base_env": [3, 122, 125, 129, 130, 135, 136, 147, 148, 149, 155, 156, 158, 166, 167, 170, 176, 179, 181, 182, 190, 194, 198, 200, 206, 208, 210, 211, 213, 215, 223, 371, 411, 412, 413, 415, 424, 427, 430, 431], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 136, 142, 148, 149, 155, 156, 165, 168, 170, 177, 183, 210, 215, 223, 238, 239, 260, 267, 315, 334, 369, 393, 394, 400, 401, 402, 412, 428], "bring": [3, 413, 416, 431], "signific": [3, 5, 8, 413, 430, 431], "kind": [3, 58, 71, 418, 424, 428], "consult": 3, "interest": [3, 302, 306, 406, 412, 413, 416, 425, 426, 431], "resize_par": 3, "easi": [3, 5, 11, 83, 88, 123, 124, 125, 129, 134, 135, 136, 148, 149, 155, 156, 232, 233, 251, 277, 278, 406, 407, 411, 412, 413, 425, 427, 428, 430, 431], "revers": [3, 257], "order": [3, 11, 16, 27, 38, 46, 50, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 110, 125, 129, 136, 148, 149, 155, 156, 174, 179, 182, 194, 213, 215, 223, 276, 293, 298, 305, 307, 308, 310, 316, 317, 319, 320, 324, 325, 332, 336, 337, 338, 339, 341, 342, 412, 424, 425], "chain": [3, 52, 53, 54, 58, 59, 67, 68, 73, 83, 85, 86, 87, 88, 89, 90, 91, 136, 177, 181, 238, 239, 308, 431], "in_keys_inv": [3, 163, 176, 179, 180, 182, 192, 193, 194, 198, 199, 201, 206, 214, 216, 411, 423, 426, 431], "append_transform": [3, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 163, 166, 172, 196, 210, 213, 215, 217, 221, 237, 255, 259, 369, 411, 414, 424, 426, 428, 430, 431], "doubletofloat": [3, 411, 413, 423], "float64": [3, 27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 124, 125, 129, 136, 140, 141, 148, 149, 155, 156, 166, 177, 179, 182, 196, 210, 214, 215, 217, 219, 223, 305, 423, 431], "constrast": 3, "out_keys_inv": [3, 163, 176, 179, 180, 182, 192, 193, 194, 198, 199, 206, 214, 216, 426], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 102, 108, 109, 111, 113, 117, 125, 129, 136, 148, 149, 155, 156, 170, 177, 179, 180, 182, 184, 190, 198, 199, 205, 208, 214, 215, 221, 223, 257, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 407, 411, 414, 424, 425, 426, 427, 428, 431], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 128, 129, 130, 136, 148, 149, 155, 156, 157, 158, 179, 182, 183, 204, 213, 215, 223, 230, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 369, 371, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 408, 411, 413, 416, 428], "manipul": [3, 4, 8, 123, 124, 196, 217, 431], "third_transform": 3, "unexpect": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 431], "behviour": 3, "fortun": [3, 414, 415, 416, 417, 420], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 83, 96, 125, 129, 136, 148, 149, 155, 156, 210, 223, 231, 306, 351, 352, 353, 354, 411, 413, 420, 424, 425], "catfram": [3, 301, 412], "hold": [3, 347, 348, 426, 428], "notic": [3, 115, 173, 413, 421, 426], "parenthood": 3, "henc": [3, 53, 197, 231, 265, 411, 413, 424, 425, 426], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 148, 155, 369, 426], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 128, 129, 130, 136, 140, 141, 148, 149, 150, 151, 155, 156, 159, 160, 166, 181, 273, 276, 280, 323, 324, 325, 326, 406, 412, 413, 417, 424, 425, 426, 431], "might": [3, 52, 54, 55, 59, 73, 375, 405, 411, 416, 431], "action_mask": [3, 134, 135, 150, 151, 153, 154, 167], "unavail": [3, 150, 151], "probabl": [3, 4, 8, 60, 104, 107, 236, 237, 246, 248, 251, 253, 255, 257, 259, 260, 263, 264, 273, 286, 287, 302, 306, 319, 406, 412, 415, 417, 430], "probabilistictensordictmodul": [3, 190, 306, 307, 430], "tensordictsequenti": [3, 56, 66, 237, 251, 255, 259, 277, 298, 301, 307, 313, 406, 411, 412, 414, 415, 417, 421, 423, 424, 427, 430], "maskedcategor": [3, 264, 404], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 136, 142, 148, 149, 155, 156, 177, 190, 196, 210, 214, 215, 217, 219, 223, 235, 237, 238, 239, 241, 242, 243, 244, 248, 250, 251, 260, 262, 265, 266, 268, 269, 270, 277, 278, 280, 281, 282, 293, 294, 295, 296, 300, 301, 302, 303, 305, 308, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 398, 406, 412, 415, 423, 427, 430], "in_feat": 3, "out_feat": 3, "logit": [3, 54, 60, 247, 263, 264, 273, 276, 299, 302, 324, 325, 406], "dist": [3, 10, 263, 264, 273, 417], "distribution_class": [3, 190, 294, 295, 296, 297, 302, 306, 308, 316, 317, 319, 324, 325, 332, 336, 337, 338, 339, 406, 411, 413, 417, 424, 425, 430], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 87, 121, 122, 125, 129, 130, 134, 135, 136, 141, 144, 146, 147, 148, 149, 150, 151, 155, 156, 158, 160, 213, 223, 225, 233, 255, 259, 278, 289, 294, 295, 296, 301, 303, 311, 334, 349, 406, 411, 412, 413, 414, 418, 421, 424, 425, 431], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 167, 197, 223], "enviorn": [3, 140, 150, 151, 159, 160], "itself": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 162, 169, 223, 334, 341, 413, 416], "ey": 3, "report": [3, 121, 122, 134, 135, 420], "foremost": 3, "callback": [3, 125, 129, 136, 148, 149, 155, 156, 425], "ad": [3, 4, 16, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 125, 129, 136, 148, 149, 155, 156, 204, 213, 215, 223, 234, 268, 269, 277, 278, 316, 318, 319, 321, 326, 333, 336, 339, 349, 412, 414, 415, 417, 424, 428, 430, 431], "tensordictrecord": [3, 404], "videorecord": [3, 11, 369, 404, 413, 420, 421, 424], "csvlogger": [3, 11, 369, 371, 404, 412, 420, 421, 424], "wandblogg": [3, 404, 420], "tensorboardlogg": [3, 398, 404, 420], "tag": [3, 7, 11, 369, 371, 373, 376, 402, 420, 421, 424], "mp4": [3, 369, 371, 373, 421, 424], "video_format": [3, 369, 371, 373, 421, 424], "whc": 3, "cwh": 3, "exp": [3, 270, 315], "al": [3, 24, 128, 130, 183, 194, 235, 415, 431], "pong": [3, 83, 144, 194, 415, 431], "v5": [3, 128, 130, 144, 183, 194, 415, 431], "cach": [3, 52, 54, 72, 83, 85, 86, 87, 89, 90, 91, 92, 102, 109, 125, 129, 136, 148, 149, 155, 156, 169, 179, 182, 196, 215, 219, 230, 236, 380, 427], "grow": 3, "dumpi": 3, "tediou": [3, 416], "workspac": [3, 73, 125, 129, 136, 148, 149, 155, 156], "pixelrendertransform": [3, 404, 424], "stream": [3, 89], "alik": [3, 369], "envcreat": [3, 16, 22, 148, 155, 213, 369, 398, 399, 402, 404, 411, 412, 430, 431], "render_mod": [3, 369, 426], "rgb_arrai": [3, 369, 424, 425, 426], "uncom": [3, 420], "line": [3, 7, 27, 38, 46, 56, 57, 61, 66, 83, 125, 129, 136, 148, 149, 155, 156, 223, 412, 415, 420, 424, 425], "comment": [3, 408, 412, 430], "pixels_record": [3, 369], "close": [3, 16, 129, 143, 190, 316, 318, 333, 336, 369, 411, 412, 416, 423, 424, 426, 430], "mission": 3, "irrespect": [3, 305, 306], "dmcontrol": [3, 125, 129, 136, 148, 149, 155, 156], "jumanji": [3, 125, 129, 134, 135, 136, 148, 149, 155, 156], "special": [3, 75, 77, 404, 411, 414, 415, 431], "framework": [3, 4, 9, 22, 121, 122, 125, 129, 134, 135, 136, 142, 148, 149, 155, 156, 253, 430, 431], "Its": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 221, 223, 305, 355], "success": [3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 173, 214, 251, 319, 341, 412, 419, 421, 426, 428, 430], "foundat": [3, 5, 150, 151, 413, 425], "inspir": [3, 415, 426], "gone": [3, 4, 5, 301], "prefer": [3, 14, 15, 17, 20, 23, 24, 53, 58, 67, 68, 197, 205, 336, 341, 385, 406, 413, 424, 425, 428, 430], "maintain": [3, 5, 9, 33, 426], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 412, 413, 414, 419, 424, 425, 426, 428, 431], "decor": [3, 8, 12, 165, 255, 259, 292, 334, 351, 352, 353, 354, 414, 430], "relev": [3, 60, 125, 129, 136, 148, 149, 155, 156, 351, 352, 353, 354, 355, 378, 415, 426], "gym_backend": [3, 165, 404], "env1": [3, 237, 423], "venv": 3, "python3": [3, 6, 7, 10, 415], "site": [3, 6, 7, 90, 165, 415], "env2": [3, 423], "_env": [3, 6, 128, 431], "classic_control": 3, "pendulumenv": [3, 41, 404, 426], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 138, 162], "side": [3, 4, 431], "v0": [3, 14, 15, 52, 54, 59, 73, 125, 129, 131, 134, 135, 136, 137, 138, 148, 149, 155, 156, 177, 215, 221, 398], "26": [3, 110, 125, 129, 136, 148, 149, 155, 156, 410, 411, 412, 414, 424, 426, 427, 429], "fun": [3, 12, 165, 413, 424, 425], "reveal": 4, "bug": 4, "curv": 4, "exploit": [4, 417], "cv": 4, "flip": [4, 135], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 173, 179, 182, 184, 192, 199, 201, 223, 314, 324, 332, 404, 426], "prescript": 4, "tune": [4, 24, 190, 424, 425, 427], "coeffici": [4, 24, 33, 60, 190, 425], "bonu": [4, 316, 318, 333, 336], "beta": [4, 53, 67, 101, 102, 324, 332, 333, 411, 412, 428, 430], "reduc": [4, 6, 30, 115, 125, 129, 136, 148, 149, 155, 156, 209, 230, 234, 236, 286, 404, 412, 424], "downstream": [4, 407, 411], "formul": [4, 424, 425], "ob": [4, 8, 23, 31, 32, 39, 53, 58, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 109, 110, 115, 125, 129, 136, 148, 149, 155, 156, 167, 169, 179, 180, 182, 192, 206, 212, 228, 230, 241, 242, 243, 244, 265, 266, 267, 303, 310, 317, 319, 320, 325, 332, 337, 339, 341, 342, 351, 352, 353, 354, 412, 415, 423, 424, 426, 428, 430, 431], "rate": [4, 11, 83, 221, 350, 412, 413, 424, 425], "gradient": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 236, 256, 264, 269, 273, 286, 287, 316, 318, 319, 320, 324, 325, 330, 332, 333, 334, 336, 337, 338, 339, 341, 342, 350, 351, 352, 353, 354, 388, 411, 413, 424, 425, 426], "easier": [4, 57, 406, 411, 430], "local": [4, 7, 10, 16, 21, 27, 38, 46, 56, 57, 61, 66, 102, 109, 125, 129, 136, 148, 149, 155, 156, 215, 223, 265, 266, 279, 288, 349, 376, 378, 415, 420, 421, 424, 425], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 253, 254, 257, 258, 400, 401], "sum": [4, 21, 27, 44, 50, 66, 115, 121, 122, 123, 124, 128, 130, 131, 134, 135, 143, 144, 152, 172, 204, 263, 264, 286, 288, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 333, 335, 336, 337, 338, 339, 341, 342, 350, 357, 407, 411, 412, 413, 414, 415, 418, 421, 424, 425, 426, 431], "stat": [4, 192, 221, 392, 402, 412, 413], "w": [4, 104, 146, 147, 173, 175, 178, 200, 212, 253, 277, 278, 371, 412, 414, 428], "yield": [4, 14, 15, 16, 21, 27, 38, 46, 56, 57, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 223, 334, 411, 418], "insight": [4, 415], "auxiliari": [4, 418], "credit": 4, "futur": [4, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 93, 94, 100, 125, 129, 136, 148, 149, 155, 156, 196, 213, 215, 219, 223, 260, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 405], "spars": [4, 414], "intermedi": [4, 14, 15, 41, 56, 66, 172, 237, 255, 259, 299, 411, 415, 427], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 411], "discov": 4, "score": [4, 60, 274, 276], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 53, 56, 58, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 140, 141, 150, 151, 159, 160, 167, 169, 170, 172, 173, 174, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 213, 214, 217, 218, 220, 221, 223, 224, 235, 255, 259, 298, 303, 387, 406, 411, 415, 416, 424, 428], "explicit": [4, 12, 72, 104, 428], "mechan": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 412, 418, 426], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 125, 129, 136, 148, 149, 155, 156, 257, 324, 332, 413, 425], "addition": [4, 246], "timestep": [4, 60, 85, 201, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 424, 425], "realli": 4, "huge": [4, 266, 414], "std": [4, 192, 221, 232, 233, 270, 275, 411, 431], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 410, 414, 416, 418, 419, 420, 421, 422, 423, 427, 428, 429], "estim": [4, 83, 102, 109, 110, 183, 190, 241, 286, 294, 295, 296, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "unseen": 4, "extrins": 4, "wrong": [4, 102, 109], "bonus": 4, "denser": 4, "prior": [4, 61, 282, 328, 425], "freshli": 4, "drop": [4, 108, 110, 230], "meant": [4, 46, 142], "encourag": [4, 148, 276, 411, 412, 428], "measur": [4, 96, 97, 117, 121, 122, 134, 135, 413, 419], "novelti": 4, "revisit": 4, "previous": [4, 413, 431], "diminish": 4, "decreas": [4, 24, 417], "ideal": [4, 192, 426], "down": [4, 14, 15, 16, 17, 407, 414, 416], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 222, 269, 277, 278, 291, 337, 341, 342, 383, 402, 411, 424], "exploratori": [4, 316, 318, 333, 336], "misalign": 4, "trade": [4, 417], "unavoid": 4, "divers": [4, 148, 155], "bootstrap": [4, 326, 352, 358, 359, 411, 414], "noisi": [4, 268, 269, 291, 406], "unstabl": [4, 256, 286, 287], "inher": [4, 316, 336], "stochast": [4, 190, 249, 269, 271, 282, 317, 319, 322, 324, 325, 330, 332, 335, 337, 339, 406, 413, 417, 425], "enemi": 4, "pomdp": [4, 428], "loos": [4, 406, 412, 413], "nonexist": 4, "architectur": [4, 245, 418, 424, 425, 430], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 42, 44, 53, 55, 56, 58, 60, 63, 66, 69, 72, 73, 89, 92, 95, 104, 105, 107, 113, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 163, 171, 172, 173, 174, 175, 178, 179, 181, 182, 186, 188, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 209, 211, 212, 214, 221, 238, 239, 246, 248, 253, 257, 260, 263, 264, 265, 266, 273, 280, 284, 297, 307, 308, 322, 370, 371, 383, 384, 385, 387, 388, 406, 411, 413, 414, 415, 423, 424, 425, 431], "lstm": [4, 210, 258, 259, 270, 415], "rel": [4, 104, 210, 246, 285, 411, 412, 424, 425, 428], "tend": 4, "stabl": [4, 9, 10, 145], "compens": 4, "descent": [4, 269], "minimum": [4, 74, 148, 155, 202, 249, 270, 285, 286, 287, 309, 312, 315, 317, 319, 325, 334, 335, 339, 379, 411, 413, 421, 424, 425], "manual": [4, 11, 18, 20, 21, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 129, 130, 411, 414, 428], "deviat": [4, 192, 221, 232, 233, 235, 249, 262, 268, 269, 275, 276, 336, 341, 342, 411, 417, 425], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 102, 109, 169, 253, 254, 257, 258, 415, 416, 417, 418, 419, 420, 421], "stabil": [4, 187, 236, 316, 318, 333, 336, 338], "stage": [4, 411, 426], "never": [4, 14, 15, 17, 28, 74, 102, 419, 430], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 42, 43, 44, 45, 50, 51, 63, 94, 221, 256, 286, 287, 316, 318, 333, 336, 338, 386, 420, 428], "entir": [4, 89, 125, 129, 136, 148, 149, 155, 156, 265, 413, 416, 426, 428], "submit": [4, 128, 170, 405, 430], "system": [4, 5, 94, 413, 424, 425, 426], "adequ": [4, 125, 129, 136, 148, 149, 155, 156, 225, 413, 424, 425], "infeas": 4, "allevi": [4, 406], "prune": [4, 136], "fire": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "illeg": 4, "chess": [4, 146, 147], "grasp": 4, "top": [4, 115, 121, 122, 134, 135, 178, 235, 262, 417], "wherein": 4, "cumul": [4, 204, 209, 235, 357, 413], "q": [4, 9, 125, 129, 136, 148, 149, 155, 156, 241, 242, 243, 244, 247, 248, 250, 279, 280, 288, 296, 299, 303, 304, 317, 319, 320, 321, 323, 324, 325, 326, 331, 332, 337, 339, 341, 342, 349, 404, 411, 418], "flow": [4, 411, 413, 424, 425, 426, 428], "reparameter": [4, 246, 264, 273], "soft": [4, 331, 339, 340, 424], "critic": [4, 8, 294, 300, 316, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 411, 418], "clip": [4, 60, 176, 202, 316, 318, 333, 336, 338, 341, 342, 388, 413, 425, 426], "oppos": [4, 72], "incorrect": [4, 109], "thought": [4, 125, 129, 136, 148, 149, 155, 156], "region": 4, "squash": [4, 414, 430], "tanh": [4, 238, 239, 253, 254, 256, 257, 258, 260, 266, 285, 286, 287, 309, 413, 415, 417, 424, 425, 426, 427, 430], "prob": [4, 263, 264, 273, 276, 413, 425], "rememb": [4, 424], "remap": 4, "origin": [4, 8, 52, 54, 56, 59, 60, 66, 73, 133, 180, 181, 190, 196, 215, 219, 223, 253, 302, 305, 306, 317, 319, 331, 332, 334, 336, 337, 339, 341, 342, 411, 415, 423, 426, 431], "histor": 5, "ceas": 5, "farama": [5, 87, 137, 138, 150, 151, 413, 426], "best": [5, 9, 133, 255, 259, 424, 425, 428, 430], "gymwrapp": [5, 125, 129, 136, 148, 149, 155, 156, 184, 205, 208, 220, 404, 413, 430], "feel": [5, 405, 421, 430], "free": [5, 7, 179, 182, 230, 316, 328, 336, 408, 413, 421, 425, 430], "gladli": 5, "prepar": [6, 37, 86, 413], "conda": [6, 7, 405], "cmake": 6, "activ": [6, 7, 9, 41, 238, 239, 245, 249, 260, 265, 266, 318, 333, 336, 406, 415, 426, 430], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 86, 405], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 131], "y": [6, 7, 56, 58, 66, 145, 250, 265, 289, 411, 425, 428], "facebookresearch": [6, 86, 131], "subdirectori": 6, "verbos": [6, 421], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 80, 125, 129, 136, 148, 149, 155, 156, 198, 207, 223, 334, 424, 425, 430, 431], "command": [6, 7, 10, 156, 413, 424, 425, 426, 431], "readm": [6, 7, 159, 430], "md": [6, 7], "habitatenv": [6, 404], "_has_habitat": 6, "available_env": [6, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 137, 140, 141, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 431], "startswith": [6, 237, 407, 411, 418], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 126, 334, 411], "env_nam": [6, 121, 123, 125, 126, 128, 129, 131, 134, 136, 137, 143, 148, 149, 152, 155, 156, 411, 413, 431], "llvmlite": 6, "config": [6, 7, 196, 219, 240, 245, 275, 392, 393, 394, 396, 399], "var": [6, 7, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 334, 339], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 298, 334], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 334, 339, 415, 428], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7, 415], "libgldispatch": [6, 7], "offici": [7, 85, 415], "stand": [7, 36, 123, 124, 148, 155, 423, 426, 431], "joint": [7, 412], "contact": [7, 55, 424], "engin": [7, 152, 426], "biomechan": 7, "graphic": 7, "anim": [7, 425], "area": 7, "demand": [7, 420, 431], "fast": [7, 9, 121, 122, 199, 230, 337, 411, 412, 413, 430], "articul": 7, "acquir": [7, 413], "deepmind": [7, 8, 9, 89, 123, 124, 125, 129, 136, 140, 141, 146, 147, 148, 149, 155, 156, 183, 413, 416], "whomev": 7, "licenc": 7, "incorpor": [7, 125, 129, 136, 148, 149, 155, 156, 232, 233, 251, 277, 278, 341, 414, 417, 426], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 405], "tip": [7, 405], "glfw": [7, 411], "osmesa": 7, "egl": 7, "advic": [7, 89, 431], "sudo": [7, 405], "apt": [7, 425], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 136, 294, 295, 296], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 411, 413, 414, 424, 425, 428], "roboti": 7, "html": [7, 14, 15, 143, 145, 146, 147], "wget": 7, "mujoco210": 7, "tar": [7, 86], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 148, 155], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 52, 54, 72, 92], "bin": [7, 248, 276, 299, 406], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 244, 302, 306, 411, 413, 415, 428], "nvidia": [7, 133, 415], "older": [7, 12], "hack": [7, 411], "adatp": 7, "script": [7, 86, 125, 129, 136, 148, 149, 155, 156, 225, 398, 402, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "unnot": [7, 197], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 94, 412, 428], "troubleshoot": 7, "gl": 7, "h": [7, 104, 173, 175, 178, 200, 212, 253, 254, 255, 257, 258, 259, 262, 371, 412, 414, 428], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 44, 45, 50, 51], "directori": [7, 52, 54, 59, 72, 73, 83, 85, 86, 87, 89, 90, 91, 96, 376, 378, 408, 411, 417, 420, 424], "devel": 7, "ubuntu": [7, 133], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 412, 414, 423], "libstdc": [7, 415], "glibcxx_3": [7, 415], "29": [7, 109, 110, 411, 412, 415, 424, 426, 427], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 58, 61, 66, 95, 96, 97, 98, 102, 105, 109, 110, 111, 116, 117, 119, 125, 129, 136, 148, 149, 155, 156, 223, 253, 254, 257, 258, 286, 351], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 136, 148, 149, 155, 156, 191, 213, 215, 223, 319, 339, 407, 415, 431], "job": [7, 18, 19, 20, 22, 58, 67, 68, 104, 428, 430], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 109, 121, 122, 412, 414, 426], "114": [7, 415, 426], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 426], "offscreenopenglcontext": 7, "opengl": [7, 424, 425], "global": [7, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 104, 125, 129, 136, 148, 149, 150, 151, 155, 156, 213, 223, 279, 288, 302, 306, 349, 408, 411, 424, 425], "cuda_visible_devic": 7, "id": [7, 23, 60, 73, 102, 104, 109, 110, 125, 128, 129, 136, 148, 149, 155, 156, 157, 158, 277, 278, 319, 337, 374, 378, 419, 428], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 424], "onscreen": 7, "101": [7, 426, 428], "correctli": [7, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "lgl": 7, "libegl": 7, "x11": [7, 425], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 408], "n_training_step": 8, "datapoint": [8, 72, 428], "n_data_per_train": 8, "no_grad": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 190, 223, 236, 253, 254, 257, 258, 351, 352, 353, 354, 413, 414, 415, 425], "loss_fn": [8, 414, 418, 419, 430], "zero_grad": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 276, 408, 411, 413, 414, 415, 418, 421, 424, 425, 426], "backpropag": [8, 121, 122, 134, 135, 148, 316, 317, 318, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 342, 349, 418, 425, 426], "differenti": [8, 72, 121, 122, 190, 319, 341, 351, 352, 353, 354, 414, 417, 418, 424, 425, 426], "denomin": 8, "artifact": 8, "numer": [8, 58, 129, 221, 256, 286, 287, 293, 298, 299, 302, 303, 304, 305, 306, 386, 413, 428, 431], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 50, 73, 74, 83, 89, 102, 109, 110, 426, 428], "compuat": 8, "fix": [8, 33, 148, 210, 317, 319, 335, 339, 412, 421, 426, 431], "retain_graph": [8, 121, 122], "discuss": [8, 9, 419, 424, 425], "inplac": [8, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 223, 411, 415], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 136, 148, 149, 155, 156, 167, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 195, 196, 197, 198, 199, 201, 204, 205, 208, 209, 210, 211, 213, 214, 217, 218, 220, 221, 223, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 275, 277, 278, 279, 281, 282, 284, 288, 289, 297, 299, 301, 302, 304, 305, 306, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 349, 351, 352, 353, 354, 355, 404, 407, 414, 415, 426, 430], "submodul": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 162, 210, 223, 255, 259, 313, 334], "param": [8, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 136, 142, 148, 149, 155, 156, 170, 177, 179, 180, 184, 190, 198, 199, 205, 208, 214, 223, 246, 248, 265, 266, 267, 285, 297, 302, 305, 308, 334, 344, 348, 351, 352, 353, 354, 355, 411, 415, 421, 424, 425, 426, 427, 430], "grad": [8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 136, 148, 149, 155, 156, 223, 411, 413], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 150, 151, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 270, 279, 305], "factor": [8, 11, 24, 46, 201, 223, 232, 233, 234, 251, 256, 269, 277, 278, 286, 287, 317, 323, 326, 327, 329, 340, 357, 411, 412, 415, 417, 421, 424, 425, 428, 431], "fit": [8, 12, 57, 192, 210, 407, 408, 411], "bottlneck": 8, "brax": [8, 121, 122, 125, 129, 136, 148, 149, 155, 156, 199, 416, 431], "jax": [8, 12, 121, 122, 134, 135], "improperli": 8, "underli": [8, 125, 126, 129, 136, 148, 149, 155, 156, 334, 414, 416, 418, 420, 426], "tedeiou": 8, "priorit": [8, 53, 67, 101, 102, 319, 320, 321, 323, 324, 325, 332, 337, 339, 341, 342, 411, 412, 419, 430], "amount": [8, 277, 278, 412, 428], "costli": [8, 426], "constitut": [8, 412, 425, 426], "profil": 8, "frequent": [8, 41, 428], "program": [8, 324, 332, 415, 431], "functorch": [8, 10], "incl": 8, "suit": [8, 124, 413, 416, 430, 431], "mujoco_instal": 8, "valueerror": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 108, 194, 415, 430, 431], "idea": [9, 337, 408, 414, 417, 424, 425], "introductori": 9, "intro": [9, 413, 414], "dai": [9, 430], "2022": [9, 10, 236, 426, 430], "spin": [9, 123, 124, 431], "deep": [9, 173, 241, 242, 243, 244, 247, 277, 278, 316, 319, 331, 339, 340, 411, 424], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 417], "summari": [9, 192, 221, 411, 412, 413, 414], "reddit": 9, "reagent": 9, "orient": [9, 91, 431], "baselines3": 9, "tf": 9, "bandit": [9, 145], "tensorflow": [9, 263, 264], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 415, 421], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 430], "grade": 9, "factori": [9, 69, 411], "cherri": 9, "jaxrl": 9, "mbrl": [9, 142, 406], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 413, 414, 424, 425], "notebook": [10, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "24": [10, 90, 110, 128, 143, 144, 276, 301, 410, 411, 412, 413, 414, 419, 424, 426, 429], "pip3": [10, 411, 413, 414, 424, 425], "url": [10, 131], "org": [10, 14, 15, 24, 53, 86, 87, 89, 91, 101, 102, 121, 122, 123, 124, 131, 134, 135, 140, 141, 143, 144, 145, 152, 159, 160, 173, 196, 217, 234, 240, 241, 242, 243, 244, 245, 248, 249, 250, 257, 262, 263, 264, 269, 271, 272, 276, 277, 278, 279, 281, 282, 288, 299, 316, 317, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 338, 339, 340, 341, 351, 356, 364, 403, 422, 427], "whl": 10, "u": [10, 88, 253, 254, 257, 258, 426], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 413, 424, 425, 426, 428], "power": [11, 412], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 205, 404], "ultim": [11, 256, 286, 287], "ffmpeg": 11, "whatev": [11, 407, 411], "fed": [11, 425, 428], "feed": [11, 196, 219, 334, 406, 411, 424, 425, 428], "suppos": [11, 148, 383, 408, 431], "snippet": [11, 196, 217, 411], "gave": 11, "extrem": [11, 148, 155, 316, 318, 333, 336, 338], "blurri": [11, 415], "stitch": 11, "exp_nam": [11, 371, 372, 373, 376, 377, 378, 398, 412, 420, 421], "my_exp": [11, 420], "pixels_onli": [11, 123, 124, 128, 130, 131, 152, 411, 412, 420, 421, 430, 431], "my_video": [11, 420], "record_env": [11, 420, 421], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 296, 406], "module_nam": [12, 334], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 102, 104, 115, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 136, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 169, 173, 183, 189, 190, 196, 200, 208, 209, 213, 215, 217, 219, 220, 221, 223, 229, 231, 235, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 255, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 275, 279, 280, 288, 293, 298, 299, 302, 303, 304, 305, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 349, 350, 351, 352, 353, 354, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 396, 402, 412, 413, 415], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": [12, 41], "vs": [12, 255, 259], "x": [12, 23, 46, 56, 57, 58, 60, 61, 66, 89, 110, 136, 190, 212, 234, 236, 237, 239, 248, 250, 253, 254, 255, 257, 258, 259, 260, 262, 265, 266, 289, 298, 302, 303, 312, 315, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 388, 411, 415, 424, 426, 428, 430], "23": [12, 90, 110, 410, 411, 412, 414, 424, 426, 429], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 90, 121, 122, 129, 134, 135, 258, 315, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 411, 412, 413, 414, 415, 421, 424, 425, 426, 428, 431], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 217, 239, 240, 275], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 90, 94, 102, 109, 110, 125, 126, 127, 128, 129, 130, 136, 140, 141, 143, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 190, 210, 213, 215, 220, 221, 223, 238, 239, 240, 241, 242, 243, 244, 245, 250, 260, 275, 302, 306, 319, 339, 341, 375, 376, 383, 388, 393, 394, 400, 401, 402, 406, 411, 412, 413, 428, 430, 431], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 126, 148, 155, 411, 430], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 412], "create_env_kwarg": [14, 15, 16, 17, 21, 126, 143, 148, 155, 213, 411, 431], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 46, 201, 412, 428], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 226, 229, 302, 306, 383], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 52, 54, 59, 73, 148, 155], "num_sub_thread": [14, 15, 17, 148, 155], "set_trunc": [14, 15, 16, 17, 125, 129, 136, 148, 149, 155, 156], "use_buff": [14, 15, 16, 148, 155], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 125, 129, 136, 148, 149, 155, 156], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 46, 306, 336, 413, 419, 428], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 102, 109, 232, 233, 277, 278, 285, 286, 293, 298, 299, 302, 303, 304, 305, 306, 308, 406, 430], "sota": [14, 15, 142, 187, 338, 379, 393, 411, 412, 430], "guard": [14, 15], "doc": [14, 15, 69, 131, 134, 135, 145, 152, 378, 412, 415, 424, 425, 428], "env_mak": [14, 15, 16, 21, 398, 431], "2000": [14, 15, 16, 46, 72, 132, 276, 371, 413, 428], "50": [14, 15, 16, 21, 55, 60, 83, 91, 109, 110, 140, 141, 223, 412, 413, 414, 424, 425, 426, 428], "shutdown": [14, 15, 16, 17, 21, 170, 411, 430], "del": [14, 15, 16, 411, 412, 413, 423, 424, 430, 431], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 59, 60, 64, 67, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 109, 125, 129, 136, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 166, 170, 183, 194, 201, 208, 248, 277, 278, 280, 298, 299, 302, 303, 304, 406, 413, 414, 415, 416, 417, 419, 420, 426, 428, 430, 431], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 172, 289, 298, 301, 303, 414], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 72], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 412], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 83, 89, 102, 109, 110, 234, 425], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 129, 169, 210, 220, 259, 414, 426, 427], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 390, 412], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 92, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 177, 179, 182, 190, 196, 210, 214, 215, 217, 219, 221, 223, 305, 424, 431], "span": [14, 15, 16, 17, 18, 19, 20, 21, 89, 102, 109, 110], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 46, 223, 301, 412, 413, 424, 425], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 60, 378, 406, 424, 425, 426], "round": [14, 15, 16, 17, 18, 19, 20, 21, 83], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 87, 125, 129, 136, 148, 149, 155, 156, 223], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 302, 334, 383, 406, 411, 412, 413, 414, 417, 424, 430], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 220], "ratio": [14, 15, 17, 60, 411, 413], "finish": [14, 15, 17, 21, 129, 201, 431], "rest": [14, 15, 17, 236, 406, 413, 414, 424, 426, 430], "earli": [14, 15, 17, 46, 129, 208, 430], "safeti": [14, 15, 17, 142, 148, 155], "harm": [14, 15, 17, 148, 155], "exclus": [14, 15, 79, 80, 83, 89, 102, 109, 110, 170, 184, 186, 253, 255, 257, 259, 263, 264, 298, 299, 303, 304, 340, 341, 342, 351, 352, 353, 354, 355, 378, 402, 406], "add_truncated_kei": [14, 15, 16, 17, 125, 129, 136, 148, 149, 155, 156, 215], "trust": [14, 15, 16, 125, 129, 136, 140, 141, 148, 149, 155, 156, 259], "cudagraphmodul": [14, 15, 16, 125, 129, 136, 148, 149, 155, 156], "behaviour": [14, 15, 16, 56, 66, 414, 415, 430], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 104, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 168, 170, 177, 196, 198, 207, 210, 213, 214, 215, 216, 218, 219, 222, 223, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 247, 250, 251, 252, 255, 256, 259, 260, 261, 262, 265, 266, 267, 273, 277, 278, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 369, 371, 375, 376, 378, 381, 388, 393, 394, 399, 400, 401, 407, 413, 415, 425], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 221, 223, 319, 339, 412], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 125, 129, 136, 148, 149, 155, 156, 215], "increment": [14, 15, 16, 17, 125, 129, 136, 148, 149, 155, 156, 192, 333], "env_fn": [14, 15, 16, 17, 126, 400, 401], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 109, 110, 243, 244, 426], "out_se": [14, 15, 16, 17, 431], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 336], "whole": [16, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 302, 319, 339, 379, 411, 413], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 415, 417], "policy_state_dict": 16, "env_state_dict": 16, "mere": [17, 415], "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 70, 246, 388], "respect": [18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 171, 177, 179, 182, 196, 197, 206, 210, 214, 215, 217, 219, 223, 253, 257, 265, 282, 305, 310, 316, 318, 333, 336, 338, 351, 353, 354, 384, 413, 414, 424, 425], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 405, 412, 413, 415, 417, 420, 423, 428, 430], "fashion": [18, 20, 21, 52, 54, 59, 73, 110], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 41, 83, 86, 87, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 186], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 53, 56, 57, 58, 61, 66, 67, 68, 85, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312, 411], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 426], "visit": [18, 19, 20, 73], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 157], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 276, 411], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 50, 83, 302, 306], "tensorpiperpcbackendopt": 20, "_td": [21, 126], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 400, 401, 411, 412], "coordin": [21, 178], "init": [21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223, 265, 266, 267, 378, 412, 413], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 245, 412, 415, 428], "equat": [21, 56, 73, 89, 129, 221, 277, 278, 315, 318, 340, 413, 416, 426], "exce": [21, 428], "indefinit": [21, 82], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 234, 388, 411, 413, 414], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 341, 418], "jump": [22, 416], "host": [22, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 240, 245, 275, 297], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 102, 109, 110], "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 110, 125, 129, 136, 148, 149, 155, 156, 163, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 221, 223, 224, 230, 231, 232, 233, 237, 248, 251, 277, 278, 280, 297, 301, 306, 321, 349, 369, 371], "as_nest": 23, "durat": [23, 425], "meta": [23, 52, 54, 59, 71, 73, 85, 127, 131, 316, 318, 333, 336, 338, 408, 413, 424, 425, 428], "aren": [23, 209, 414], "eventu": [23, 279, 414, 426], "supersed": 23, "recov": [23, 85, 87, 89, 90, 91, 109, 110, 233, 278, 307, 324, 332, 423], "layout": [23, 415], "to_padded_tensor": 23, "nested_tensor": [23, 128, 130], "stride": [23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 238, 239, 241, 242, 250, 265, 412, 415, 424, 430], "jag": 23, "focu": [23, 411, 412, 413, 415, 417, 418, 419, 424], "team": [23, 424, 425, 430], "cat": [23, 41, 310, 317, 319, 320, 332, 337, 339, 341, 342, 424, 428, 430], "arang": [23, 50, 102, 109, 110, 166, 248, 264, 298, 379, 406, 428], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 68, 74, 83, 89, 109, 134, 135, 146, 147, 156, 228, 301, 428], "data_split": 23, "got": [23, 419], "init_kl_coef": 24, "horizon": [24, 140, 141, 159, 160, 235, 262, 413], "kl": [24, 33, 60, 190, 328, 333], "describ": [24, 52, 54, 59, 71, 73, 174, 214, 224, 285, 286, 321, 374, 407, 411, 413, 424, 425, 426, 431], "ziegler": 24, "et": [24, 235], "relax": [24, 369], "penalti": [24, 60, 330, 333], "strai": [24, 60], "greater": [24, 83, 102, 109, 110, 255, 259, 319, 411, 412], "increas": [24, 94, 211, 236, 277, 278, 424, 425], "pull": [24, 428], "toward": [24, 219], "aggress": 24, "kl_coef": [24, 33, 60], "arxiv": [24, 53, 86, 89, 91, 101, 102, 121, 122, 123, 124, 134, 135, 140, 141, 143, 144, 152, 159, 160, 173, 196, 217, 234, 240, 241, 242, 243, 244, 245, 248, 249, 250, 257, 262, 269, 271, 272, 276, 277, 278, 279, 281, 282, 288, 299, 316, 317, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 335, 336, 339, 340, 341, 351, 356, 364, 427], "pdf": [24, 173, 240, 241, 242, 243, 244, 248, 276, 277, 278, 299, 319, 326, 330, 337, 340, 341, 351, 356, 364], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 424, 425], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 190], "newest": 24, "int8": [25, 125, 139, 150, 151, 171], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 121, 122, 125, 128, 130, 131, 134, 135, 143, 144, 146, 147, 152, 157, 158, 166, 181, 272, 273, 276, 281, 315, 412, 413, 414, 417, 426, 428], "null": [25, 28, 29, 31, 32, 39, 40, 48, 49, 53, 62, 63, 67, 71, 74, 75, 76, 77, 78, 101, 102, 171], "denot": [25, 425], "nmber": 25, "clariti": [25, 41], "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 134, 135, 142, 146, 147, 157, 158, 167, 170, 179, 182, 198, 224, 235, 262, 302, 316, 317, 319, 320, 321, 323, 324, 325, 332, 334, 336, 337, 339, 341, 342, 415, 426, 430, 431], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "cardin": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 248, 280, 298, 299, 304, 413], "outcom": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 246, 264, 285, 334, 424], "cartesian": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 431], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 129, 277, 278, 309, 369, 415, 424], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 60, 62, 63, 71, 74, 75, 76, 77, 78, 101, 125, 129, 130, 136, 148, 149, 155, 156, 183, 253, 254, 257, 258, 411, 424, 428], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 129, 309, 369, 415, 424, 426], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 246, 325, 339], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 238, 239, 260, 283, 284], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 146, 147, 148, 149, 152, 155, 156, 157, 158, 177, 179, 182, 196, 210, 214, 215, 217, 219, 221, 223, 305, 315, 334, 411, 412, 413, 426, 428], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 426, 431], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 411], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 406], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 264, 273, 302, 407], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 62, 63, 71, 74, 75, 76, 77, 78, 181, 232, 233, 257, 277, 278, 293, 298, 299, 302, 303, 304, 305, 306, 378, 406, 430, 431], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 103, 334, 431], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156, 192, 221, 232, 233, 234, 238, 239, 256, 260, 263, 264, 270, 286, 287, 302, 306, 318, 319, 333, 336, 383, 386, 402, 406, 408, 414, 417, 425, 431], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 210, 251, 302, 306, 413, 424, 425], "set_provisional_n": [25, 26, 30, 34, 42, 43], "temporarili": [25, 26, 30, 34, 42, 43, 94, 125, 129, 136, 148, 149, 155, 156, 225, 419, 428], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 196, 217, 219, 305], "to_categor": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_categorical_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 136, 148, 149, 155, 156], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 214, 215, 270, 285, 402], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_one_hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 121, 122, 128, 130, 131, 134, 135, 140, 141, 143, 144, 146, 147, 150, 151, 152, 157, 158, 159, 160, 166, 167, 181, 248, 273, 274, 280, 298, 299, 303, 304, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 414], "categ": [25, 26, 30, 34, 44, 45, 302], "categ_sampl": [25, 26, 30, 34, 44, 45, 50, 51], "onehot_sampl": [25, 26, 30, 34, 44, 45], "to_one_hot_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "categoricalbox": [25, 26, 30, 34, 44, 45, 50, 51, 149, 417, 424, 425, 431], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "update_mask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "disabl": [25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 256, 287, 369, 411, 424], "unmask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "ts": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 413, 414, 416, 424, 425, 428], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "child": [27, 38, 41, 46, 56, 57, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 223, 412], "fn": [27, 38, 46, 55, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 223, 270, 400, 401], "recurs": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 79, 80, 125, 129, 136, 148, 149, 155, 156, 223, 334, 415], "children": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 73, 125, 129, 136, 148, 149, 155, 156, 223], "init_weight": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "m": [27, 38, 42, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 181, 223, 237, 306, 412, 426], "fill_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 412, 414], "net": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 242, 244, 247, 250, 266, 316, 317, 319, 325, 332, 336, 337, 338, 339, 398, 412, 426, 427, 430], "in_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 238, 239, 241, 242, 243, 244, 250, 260, 265, 266, 268, 269, 294, 305, 313, 321, 323, 415, 417, 418, 430], "out_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 142, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 235, 238, 239, 241, 242, 243, 244, 249, 250, 255, 259, 260, 262, 265, 266, 268, 269, 294, 298, 305, 313, 321, 323, 406, 411, 414, 415, 417, 418, 421, 430], "bia": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 213, 214, 215, 217, 219, 223, 234, 238, 239, 241, 242, 243, 244, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 266, 268, 269, 270, 277, 278, 305, 312, 314, 315, 319, 334, 339, 407, 411, 412, 413, 414, 415, 425, 430], "requires_grad": [27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 136, 148, 149, 155, 156, 190, 213, 215, 223, 276, 319, 339], "bfloat16": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "datatyp": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 428], "member": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334, 371], "xdoctest": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 213, 214, 215, 217, 219, 223, 305, 319, 334, 339], "buf": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "20l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334], "1l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334], "5l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334], "__call__": [27, 38, 46, 55, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 306, 408], "doubl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 179, 180, 182, 196, 210, 214, 215, 217, 219, 223, 305, 321, 326, 331, 337, 340, 349, 411, 412, 413, 414, 431], "eval": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 221, 223, 236, 406, 411, 412, 413], "evalu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 130, 136, 140, 141, 148, 149, 155, 156, 215, 223, 236, 246, 263, 264, 273, 287, 337, 393, 394, 412, 413, 421], "dropout": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 236, 237, 253, 255, 257, 259, 260, 406, 414], "batchnorm": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 234], "comparison": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 215, 223, 334, 411, 412], "similar": [27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 89, 125, 129, 136, 148, 149, 150, 151, 155, 156, 177, 196, 210, 214, 215, 217, 218, 219, 221, 223, 294, 296, 302, 305, 306, 407, 411, 412, 413, 414, 415, 417, 418, 419, 420, 426, 428, 430, 431], "extra_repr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "recip": [27, 38, 55, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312], "silent": [27, 38, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 267, 270, 271, 272, 275, 277, 278, 281, 282, 284, 289, 297, 299, 301, 304, 309, 312], "get_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "get_submodul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "qualifi": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "referenc": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "attributeerror": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "resolv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "someth": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 139, 148, 149, 155, 156, 223, 405, 412, 413, 426, 431], "get_extra_st": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223], "set_extra_st": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223], "picklabl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223], "pickl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223], "get_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "net_b": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "net_c": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "conv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 238, 239, 412, 415], "conv2d": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 239, 241, 242, 250, 265, 415, 430], "kernel_s": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 238, 239, 241, 242, 250, 265, 271, 412, 430], "diagram": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "degre": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "named_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "half": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 411], "ipu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "strict": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339, 415], "descend": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "get_swap_module_params_on_convers": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "persist": [27, 36, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 230, 319, 339], "enforc": [27, 38, 46, 56, 57, 61, 66, 108, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 307, 319, 339, 426], "preserv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "missing_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "unexpected_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "namedtupl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 253, 257, 350, 413, 426], "idx": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "mtia": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "named_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "remove_dupl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334], "prepend": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 334, 415], "running_var": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "named_children": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "conv4": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "conv5": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "memo": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "named_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 190, 223, 334], "register_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "removablehandl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "favor": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 413], "register_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "running_mean": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "alongsid": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 420], "num_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 234], "register_forward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 248, 280], "with_kwarg": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "always_cal": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_module_forward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "regardless": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 318, 333, 336], "register_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "invok": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "And": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 418], "forward_pr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_module_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "grad_input": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "grad_output": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "subsequ": [27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 169, 223, 414, 424], "technic": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 412, 414, 415, 417], "caller": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_module_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "backward_pr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_module_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_load_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "incompatible_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "thrown": [27, 38, 46, 56, 57, 61, 62, 66, 125, 129, 136, 148, 149, 155, 156, 223, 428], "register_load_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "local_metadata": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "error_msg": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "noqa": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "b950": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 408], "alia": [27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 125, 129, 136, 148, 149, 155, 156, 223], "register_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "register_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "keep_var": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "requires_grad_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 415], "autograd": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339], "freez": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 221, 223], "finetun": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "gan": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "set_submodul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "overid": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "share_memori": [27, 38, 46, 56, 57, 61, 66, 125, 126, 129, 136, 148, 149, 155, 156, 223, 411], "share_memory_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223, 430], "destin": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 172, 179, 180, 182, 213, 215, 217, 221, 223, 230, 319, 339, 371], "averag": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 221, 223, 277, 278, 319, 327, 328, 339, 386, 411, 413], "shallow": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 339, 414], "pleas": [27, 38, 46, 56, 57, 61, 66, 70, 87, 125, 128, 129, 136, 148, 149, 150, 151, 155, 156, 170, 173, 211, 213, 215, 223, 265, 266, 267, 319, 339, 405], "detach": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 213, 215, 223, 319, 330, 334, 339, 341, 351, 352, 353, 354, 411], "non_block": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 414], "memory_format": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "channels_last": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "unchang": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 181, 196, 210, 214, 215, 217, 219, 223, 251, 305, 385, 411, 428], "tri": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 420], "pin": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "4d": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "ignore_w": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "1913": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "3420": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "5113": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "2325": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "torch_doctest_cuda1": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "gpu1": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "1914": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 426], "5112": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "2324": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "float16": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 254, 258, 305], "cdoubl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "3741": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "j": [27, 38, 46, 53, 56, 57, 61, 66, 101, 102, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 408, 418], "2382": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305, 426], "5593": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "4443": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "complex128": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "6122": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "1150": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 177, 196, 210, 214, 215, 217, 219, 223, 305], "to_empti": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "dst_type": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "xpu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "set_to_non": [27, 38, 46, 56, 57, 61, 66, 125, 129, 136, 148, 149, 155, 156, 223], "upper": [28, 107, 191], "continuousbox": [28, 31, 74, 125, 129, 136, 148, 149, 155, 156, 210, 228, 413, 414, 424, 425, 426, 430, 431], "inst": 30, "provision": 30, "descript": [31, 159, 169, 412, 413], "akin": 31, "unnam": 31, "compositespec": [31, 404, 426, 431], "constraint": [31, 142, 286, 413, 424, 425], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 174, 411], "_nodefault": [31, 32, 39, 52, 54, 59, 63, 73], "is_empti": [31, 32, 39, 63, 426], "include_nest": [31, 32, 39, 63], "leaves_onli": [31, 32, 39, 63], "is_leaf": [31, 32, 39, 63], "_compositespecitemsview": [31, 32, 39, 63], "_compositespeckeysview": [31, 32, 39, 63], "reflect": [31, 32, 39, 63, 130, 150, 151, 220, 230, 334, 391, 412, 413, 414, 425], "lock_": [31, 32, 39, 63], "succeed": [31, 32, 39, 63], "pop": [31, 32, 39, 63], "keyerror": [31, 32, 39, 63, 215], "extract": [31, 32, 39, 63, 86, 169, 300, 411, 413, 430], "selected_kei": [31, 32, 39, 63, 205, 411], "unlock_": [31, 32, 39, 63], "unlock": [31, 32, 39, 52, 54, 59, 63, 73], "_compositespecvaluesview": [31, 32, 39, 63], "multipli": [33, 236, 253, 257, 316, 317, 318, 319, 325, 333, 335, 336, 337, 339, 386, 411, 424], "calcul": [33, 60, 201, 253, 316, 318, 323, 333, 336, 338, 341], "shift_kei": [35, 37, 47, 64], "is_full_kei": [35, 37, 47, 64], "is_ful": [35, 37, 47, 64], "tempfil": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 398, 411, 412, 415, 424, 428], "register_save_hook": [35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "temporarydirectori": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 411, 412, 415, 424, 428], "tmpdir": [35, 53, 58, 64, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 411, 412, 415, 424], "rb_load": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "register_load_hook": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "filesystem": [36, 428], "ted2nest": [37, 404], "stackedcomposit": [39, 404], "tensordictmap": [41, 404], "observation_kei": [41, 125, 129, 136, 148, 149, 155, 156], "excluded_kei": [41, 184], "consolid": [41, 66, 80, 97], "lazili": [41, 266, 426], "from_tensordict_pair": [41, 66], "querymodul": [41, 66], "get_keys_from_env": 41, "cattensor": [41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 136, 148, 149, 155, 156, 411, 423, 426, 431], "unsqueezetransform": [41, 173, 426, 428], "oracl": 41, "obs_kei": 41, "state_kei": [41, 125, 129, 136, 148, 149, 155, 156], "reset_st": 41, "rollout0": 41, "rollout1": 41, "rollout1b": 41, "collaps": 41, "max_length": [41, 52, 54, 55, 69, 72, 73, 92, 415, 421], "valid_path": [41, 73], "assert_clos": [41, 255, 259], "subtre": [41, 73], "Or": [41, 153, 154, 265], "rollout_from_path": [41, 73], "plot": [41, 73, 411, 413, 414, 424, 425, 426], "nvec": [42, 44], "remove_singleton": 42, "ax": [42, 268, 269, 424], "Not": [42, 43, 58, 121, 122, 134, 213, 255, 259], "neither": [42, 43, 44, 45, 89, 157, 426], "use_regist": [44, 50], "mone_hot": [44, 45], "boxlist": [44, 45], "gamma": [46, 201, 223, 262, 316, 317, 319, 320, 321, 323, 325, 326, 327, 329, 332, 334, 336, 337, 338, 339, 341, 342, 343, 344, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 398, 407, 411, 412, 413, 424, 425, 430], "sutton": [46, 407, 424, 425], "1988": 46, "tempor": [46, 255, 259, 262, 352, 353, 358, 359], "44": [46, 109, 410, 412, 414, 426, 429, 430], "discount": [46, 89, 126, 201, 223, 317, 323, 326, 327, 329, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 407, 412, 413, 424, 425], "ahead": [46, 223, 431], "bias": [46, 253, 254, 257, 258, 312, 407, 411], "mitig": 46, "multisteptransform": [46, 404], "99": [46, 201, 221, 262, 329, 344, 350, 357, 398, 411, 412, 413, 415, 418, 421, 424, 425, 426, 430], "nontermin": 46, "original_reward": 46, "newli": [46, 125, 129, 136, 148, 149, 155, 156], "OR": 46, "row": [47, 65, 134, 135], "shae": 48, "nontensordata": [48, 83, 89, 146, 147, 369], "nontensor": [49, 404], "unidimension": 50, "action_valu": [50, 247, 248, 280, 298, 299, 303, 304, 319, 325, 334, 349, 406, 414, 415, 417, 421], "keepdim": 50, "chosen_action_valu": [50, 279, 280, 288, 303, 304, 349, 406, 414, 415, 417], "priori": 50, "uniqu": [50, 73, 109, 110, 136, 140, 141, 173, 183, 209, 210, 211, 213, 301, 378, 419, 428], "tensor_spec": [50, 71, 167, 224, 231, 324, 325, 336, 338], "one_hot": [50, 51, 248, 264, 280], "one_hot_sampl": [50, 51], "chosen_data": [52, 92], "rewarddata": [52, 92, 404], "rejected_data": [52, 92], "dataclass": [52, 54, 59, 71, 73, 334], "from_dataset": [52, 54, 92], "dataset_nam": [52, 54, 60, 72, 92, 145], "550": [52, 54, 60, 72, 92, 109, 110, 426], "root_dir": [52, 54, 72, 92], "from_disk": [52, 54, 72, 92], "carperai": [52, 54, 60, 72], "openai_summarize_comparison": [52, 54, 72], "sequen": [52, 54], "load_from_disk": [52, 54, 72, 92], "load_dataset": [52, 54, 72, 92], "attention_mask": [52, 54, 55, 59, 60, 69, 72, 92], "92534": 52, "input_id": [52, 54, 55, 59, 60, 69, 72, 92, 136], "end_scor": [52, 59, 60, 92], "sub_data": [52, 54], "from_tensordict": [52, 54, 59, 73], "non_tensordict": [52, 54, 59, 73], "getattr": [52, 54, 59, 73], "tensorclass": [52, 54, 59, 73, 92, 96, 97, 117], "pathlib": [52, 54, 59, 73, 96, 415], "load_memmap": [52, 54, 59, 73], "load_": [52, 54, 59, 73], "load_memmap_": [52, 54, 59, 73], "fetch": [52, 54, 59, 73, 121, 122, 123, 124, 190, 417, 427, 428, 431], "fromkei": [52, 54, 59, 73], "memmap": [52, 54, 59, 73, 96, 148, 155, 221, 371, 373, 385, 428], "saved_td": [52, 54, 59, 73], "td_load": [52, 54, 59, 73], "fake": [52, 54, 59, 73, 125, 129, 136, 148, 149, 155, 156, 411, 412, 415], "_subclass": [52, 54, 59, 73], "faketensormod": [52, 54, 59, 73], "faketensor": [52, 54, 59, 73], "from_flatten": [52, 54, 59, 73], "attemptedli": [52, 54, 59, 73], "copy_exist": [52, 54, 59, 73], "return_earli": [52, 54, 59, 73], "share_non_tensor": [52, 54, 59, 73], "existsok": [52, 54, 59, 73, 96], "mimic": [52, 54, 59, 73, 125, 129, 136, 148, 149, 155, 156], "cross": [52, 54, 59, 73, 235], "tensordictfutur": [52, 54, 59, 73], "serialis": [52, 54, 59, 73], "deepli": [52, 54, 59, 73], "insid": [52, 54, 59, 73, 148, 431], "memmap_": [52, 54, 59, 73, 221], "memmap_lik": [52, 54, 59, 73], "contentless": [52, 54, 59, 73], "1_000_000": [52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 411, 414, 424], "alloc": [52, 54, 59, 73, 97, 246, 263, 264, 411], "memmap_refresh_": [52, 54, 59, 73], "refresh": [52, 54, 59, 73, 421, 424, 425], "saved_path": [52, 54, 59, 73], "setattr": [52, 54, 59, 73], "tent": [52, 54, 59, 72, 73], "to_tensordict": [52, 54, 59, 73, 414], "retain_non": [52, 54, 59, 73], "discrard": [52, 54, 59, 73], "switch": [52, 54, 59, 73, 256, 287, 369], "alpha": [53, 67, 101, 102, 238, 239, 241, 242, 243, 244, 250, 265, 317, 319, 325, 335, 337, 339, 341, 411, 428, 430], "ep": [53, 67, 101, 102, 192, 221, 234, 277, 278, 318, 340, 386, 411, 412, 414, 415, 418, 421], "1e": [53, 67, 101, 102, 192, 221, 234, 246, 249, 270, 285, 411, 412, 413, 425], "08": [53, 67, 101, 102, 410, 411, 412, 413, 414, 425, 426, 429], "pin_memori": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 195, 411, 415, 430], "schaul": [53, 101, 102], "quan": [53, 101, 102], "antonogl": [53, 101, 102], "silver": [53, 101, 102], "2015": [53, 101, 102], "ab": [53, 86, 89, 91, 101, 102, 121, 122, 123, 124, 134, 135, 140, 141, 143, 144, 152, 159, 160, 172, 196, 217, 221, 234, 240, 245, 249, 250, 257, 262, 269, 271, 272, 279, 281, 282, 288, 316, 317, 321, 322, 323, 324, 327, 328, 329, 331, 332, 335, 336, 339, 427], "1511": [53, 101, 102, 250], "05952": [53, 101, 102], "expon": [53, 67, 101, 102], "\u03b1": [53, 67, 101, 102], "delta": [53, 67, 101, 102, 253, 257, 285, 302, 306, 404, 407, 424], "1_000": [53, 58, 67, 68, 424, 428], "merg": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 426], "mini": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 425], "decid": [53, 58, 67, 68, 424, 430], "meth": [53, 58, 67, 68, 255, 259, 334, 426], "incompat": [53, 58, 67, 68, 338, 428], "drop_last": [53, 58, 67, 68, 108, 110], "notion": [53, 58, 67, 68, 276], "caution": [53, 58, 67, 68, 108, 125, 129, 136, 148, 149, 155, 156, 225, 431], "codebas": [53, 58, 67, 68, 426], "approach": [53, 58, 67, 68, 192, 234, 265, 266, 341, 411, 413, 418, 419, 424, 431], "return_info": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 428], "tensordictprioritizedreplaybuff": [53, 404, 430], "simplifi": [53, 417, 426, 428], "_weight": [53, 67, 101, 102, 428, 430], "update_prior": [53, 101, 102, 385, 408, 412, 428, 430], "36278465": 53, "invert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 314, 413], "tqdm": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 388, 411, 413, 414, 424, 425, 426], "randomsampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 411, 424], "td_error": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 319, 320, 321, 323, 324, 325, 326, 332, 334, 337, 339, 341, 342, 349, 411, 418, 428, 430], "update_tensordict_prior": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 411, 428, 430], "insert_transform": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 168, 215], "insert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 115, 116, 119, 120, 168, 177, 215, 216], "set_sampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_storag": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_writ": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "write_count": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "prompt_rindex": [54, 55, 60], "promptdatatldr": 54, "116722": 54, "prompt": [55, 60], "return_tensordict": [55, 69], "text": [55, 60, 69, 87, 136, 253, 254, 257, 258, 277, 278, 413], "tensodict": [55, 69], "orign": [55, 56, 66, 69], "valid_sampl": 55, "eough": 55, "toknen": 55, "meet": 55, "criterion": 55, "autotoken": [55, 69, 72], "from_pretrain": [55, 60, 69, 136], "gpt2": [55, 60, 69, 72, 136, 240, 245, 275], "pad_token": [55, 69], "eos_token": 55, "enough": [55, 428], "inde": [55, 181, 413, 415, 426], "index_kei": [56, 66], "hash_kei": 56, "_hash": 56, "hash_modul": [56, 61, 66], "siphash": [56, 57, 66, 136], "hash_to_int": 56, "hashtoint": 56, "query_modul": [56, 66], "key1": [56, 66, 174, 379, 387, 430], "key2": [56, 66, 174, 379, 387, 430], "write_hash": 56, "is_tdmodule_compat": [56, 66], "reset_out_kei": [56, 66], "mod": [56, 66, 190, 237, 255, 259, 301, 309, 414, 415, 421], "select_out_kei": [56, 66, 316, 317, 319, 320, 324, 325, 332, 336, 337, 339, 341, 342, 415], "reset_parameters_recurs": [56, 66, 334], "relu": [56, 66, 142, 235, 245, 262, 270, 315, 415], "old_param": [56, 66], "bork": [56, 66], "dork": [56, 66], "reset_paramet": [56, 66, 267], "from_modul": [56, 66, 248, 305, 308, 430], "rid": [56, 66], "out_keys_sourc": [56, 66], "rubric": [56, 66, 192, 308], "revert": [56, 66, 125, 129, 136, 148, 149, 155, 156, 225, 417, 428], "seq": [56, 66, 237, 253, 255, 257, 259, 301, 414, 415, 421, 423], "z": [56, 66, 254], "n_compon": 57, "dtype_cast": 57, "as_tensor": [57, 61, 415], "init_method": 57, "emb": [57, 414], "sklearn": [57, 88, 145], "byte": [57, 61], "builtin": [57, 61], "pythonhashse": [57, 61], "todo": 57, "storagecheckpointerbas": [58, 111], "roundrobinwrit": [58, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_pytre": [58, 428], "tree_map": [58, 428], "did": [58, 220, 357, 412, 413, 419, 428, 431], "assert0": [58, 428], "ref_model": 60, "reward_model": [60, 311], "max_new_token": 60, "score_clip": 60, "kl_schedul": 60, "klcontrollerbas": 60, "num_step": [60, 415], "causal": 60, "sentenc": 60, "frozen": [60, 190, 221], "gpt2rewardmodel": 60, "get_dataload": [60, 404], "promptdata": [60, 404], "gpt2lmheadmodel": 60, "dl": 60, "block_siz": [60, 92], "tensorclass_typ": [60, 92], "openai_summarize_tldr": 60, "config_class": 60, "model_path": 60, "rollout_from_model": 60, "rollout_from_data": 60, "600": [60, 420, 426, 428], "reward_kl": [60, 190], "reward_raw": 60, "sample_log_prob": [60, 294, 295, 296, 302, 306, 308, 336, 413, 417, 425, 430], "create_rollout_td": 60, "log_prob": [60, 246, 263, 264, 273, 276, 287, 306, 319], "log_ratio": 60, "replic": [60, 407], "rindex": 60, "eo": 60, "generation_config": 60, "generationconfig": 60, "ti": [60, 360, 361, 362, 363, 365, 366, 367, 368, 412], "log_probs_gen": 60, "logprobs_of_label": 60, "hash_a": 61, "4669941682990263259": 61, "3778166555168484291": 61, "9122128731510687521": 61, "hash_b": 61, "heterogen": [62, 63, 125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 225, 265, 266, 411, 412], "220": [64, 426], "resembl": 66, "tensormap": 66, "collat": [66, 104], "subtyp": 66, "embedding_storag": 66, "tensor_dict_storag": 66, "new_index": 66, "key3": 66, "retrieve_valu": 66, "storage_constructor": 66, "write_fn": 66, "tensordictstorag": 66, "thumb": [66, 148, 413], "lazydynamicstorag": 66, "fixedstorag": 66, "randomprojectionhash": 66, "priority_kei": [67, 68, 84, 101, 319, 321, 324, 325, 326, 332, 334, 337, 339, 341, 342, 349, 428, 430], "reduct": [67, 101, 102, 115, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 335, 336, 337, 338, 339, 341, 342], "prioritizedreplaybuff": [67, 404, 430], "min": [67, 101, 102, 115, 277, 278, 317, 318, 319, 325, 335, 337, 339, 412, 413], "median": [67, 101, 102, 115, 134, 135, 166, 302, 306], "include_info": [67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "huggingfac": [69, 86, 91, 300], "co": [69, 183, 426], "pad_trunc": 69, "am": 69, "me": 69, "reassur": 69, "ok": 69, "primarili": [71, 197, 417], "educ": 71, "guess": 71, "knowledg": [71, 125, 129, 136, 148, 149, 155, 156, 418, 420], "tokenizer_fn": 72, "tensordicttoken": [72, 404], "pre_tokenization_hook": 72, "valid_s": 72, "tokenizer_class": 72, "tokenizer_model_nam": 72, "tokein": 72, "elementwis": 72, "vocabulari": [72, 136], "loader": [72, 413, 415], "185068": 72, "dataset_to_tensordict": 72, "data_dir": 72, "batch_dim": [72, 125, 129, 136, 148, 149, 155, 156, 402], "valid_mask_kei": 72, "conver": 72, "batch_dimens": 72, "filder": 72, "from_dict": 72, "data_memmap": 72, "win": 73, "node_id": 73, "node_data": 73, "_parent": 73, "weakref": 73, "ref": 73, "branching_act": 73, "prev_act": 73, "edg": [73, 415], "travers": 73, "breadth": 73, "bf": 73, "fully_expand": 73, "get_vertex_by_hash": 73, "get_vertex_by_id": 73, "is_termin": 73, "make_nod": 73, "node_observ": 73, "bag": 73, "num_children": 73, "num_vertic": 73, "count_repeat": 73, "recustruct": 73, "scope": [73, 125, 129, 136, 148, 149, 155, 156, 415, 431], "plotli": 73, "make_label": 73, "visual": [73, 196, 217, 219, 371, 413, 424, 426], "notimplementederror": [73, 411], "unsupport": 73, "selected_act": 73, "key_typ": 73, "liter": [73, 292], "recurse_through_entri": 80, "recurse_through_stack": 80, "dataset_id": [83, 85, 86, 87, 89, 90, 91], "num_proc": 83, "slice_len": [83, 89, 102, 109, 110, 371], "strict_len": 83, "arari": 83, "2600": 83, "million": [83, 414], "consequ": [83, 94, 257, 419], "50x10": 83, "available_dataset": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110], "ataridqn": 83, "immutabledatasetwrit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "shorter": [83, 89, 102, 109, 110], "Be": [83, 89, 102, 109, 110], "game_nam": 83, "krull": 83, "1d": [83, 101, 102, 109, 110, 115], "cheapli": 83, "invalid_rang": 83, "999998": 83, "999999": 83, "add_count": 83, "84": [83, 109, 200, 412, 414, 415, 426, 428], "valueestim": [83, 316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 344, 349, 404, 407, 411, 424, 425], "convolut": [83, 238, 239, 241, 242, 265, 283, 415, 417], "2657628": 83, "2657629": 83, "2657630": 83, "2657631": 83, "2657632": 83, "2657633": 83, "2657634": 83, "2657635": 83, "2657636": 83, "2657637": 83, "2657638": 83, "2657639": 83, "2657640": 83, "2657641": 83, "2657642": 83, "2657643": 83, "2657644": 83, "2657645": 83, "2657646": 83, "2657647": 83, "2657648": 83, "2657649": 83, "2657650": 83, "2657651": 83, "2657652": 83, "2657653": 83, "2657654": 83, "2657655": 83, "2657656": 83, "2657657": 83, "2657658": 83, "2657659": 83, "2657660": 83, "2657661": 83, "2657662": 83, "2657663": 83, "2657664": 83, "2657665": 83, "2657666": 83, "2657667": 83, "2657668": 83, "2657669": 83, "2657670": 83, "2657671": 83, "2657672": 83, "2657673": 83, "2657674": 83, "2657675": 83, "2657676": 83, "2657677": 83, "2657678": 83, "2657679": 83, "2657680": 83, "2657681": 83, "2657682": 83, "2657683": 83, "2657684": 83, "2657685": 83, "2657686": 83, "2657687": 83, "2657688": 83, "2657689": 83, "2657690": 83, "2657691": 83, "1995687": 83, "1995688": 83, "1995689": 83, "1995690": 83, "1995691": 83, "1995692": 83, "1995693": 83, "1995694": 83, "1995695": 83, "1995696": 83, "1995697": 83, "1995698": 83, "1995699": 83, "1995700": 83, "1995701": 83, "1995702": 83, "1995703": 83, "1995704": 83, "1995705": 83, "1995706": 83, "1995707": 83, "1995708": 83, "1995709": 83, "1995710": 83, "1995711": 83, "1995712": 83, "1995713": 83, "1995714": 83, "1995715": 83, "1995716": 83, "1995717": 83, "1995718": 83, "1995719": 83, "1995720": 83, "1995721": 83, "1995722": 83, "1995723": 83, "1995724": 83, "1995725": 83, "1995726": 83, "1995727": 83, "1995728": 83, "1995729": 83, "1995730": 83, "1995731": 83, "1995732": 83, "1995733": 83, "1995734": 83, "1995735": 83, "1995736": 83, "1995737": 83, "1995738": 83, "1995739": 83, "1995740": 83, "1995741": 83, "1995742": 83, "1995743": 83, "1995744": 83, "1995745": 83, "1995746": 83, "1995747": 83, "1995748": 83, "1995749": 83, "1995750": 83, "left": [83, 85, 89, 102, 109, 170, 177, 178, 179, 180, 184, 190, 196, 198, 199, 205, 208, 211, 214, 217, 219, 223, 251, 265, 412, 413, 415, 419, 420], "untouch": [83, 89, 170, 177, 179, 180, 184, 190, 198, 199, 205, 208, 214, 223], "_max_run": 83, "dataset_asterix": 83, "asterix": 83, "dataset_pong": 83, "sample_from_al": [83, 104, 107], "buffer_id": [83, 107, 113], "hidden": [83, 148, 155, 172, 241, 249, 253, 254, 255, 257, 258, 259, 271, 272, 281, 282, 294, 295, 296, 297, 305, 308, 318, 333, 336, 406, 414, 423, 430], "data_path": [83, 84, 85, 86, 87, 88, 89, 90, 91], "data_path_root": [83, 84, 85, 86, 87, 88, 89, 90, 91], "delet": [83, 84, 85, 86, 87, 88, 89, 90, 91, 174, 378], "chunksiz": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pool": [83, 84, 85, 86, 87, 88, 89, 90, 91, 211], "max_tasks_per_child": [83, 84, 85, 86, 87, 88, 89, 90, 91], "worker_thread": [83, 84, 85, 86, 87, 88, 89, 90, 91], "index_with_gener": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pbar": [83, 84, 85, 86, 87, 88, 89, 90, 91, 411, 413, 414, 424, 425, 426], "num_fram": [83, 84, 85, 86, 87, 88, 89, 90, 91], "unitari": [83, 84, 85, 86, 87, 88, 89, 90, 91, 426], "minariexperiencereplai": [83, 84, 85, 86, 88, 89, 90, 91], "1000000": [83, 84, 85, 86, 87, 88, 89, 90, 91], "distance_from_origin": [83, 84, 85, 86, 87, 88, 89, 90, 91], "forward_reward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qpo": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qvel": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_ctrl": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 148], "reward_forward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_surv": [83, 84, 85, 86, 87, 88, 89, 90, 91], "x_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 148], "x_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 148], "y_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "y_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91], "achieved_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "desired_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "27": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 121, 122, 148, 155, 411, 412, 413, 414, 426, 427], "_collate_id": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x120e21dc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_next_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "new_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "31": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 134, 135, 412, 424, 426], "full_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x168406fc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "from_env": 85, "use_truncated_as_don": 85, "direct_download": 85, "terminate_on_end": 85, "env_kwarg": [85, 90, 91, 170, 400, 401, 411], "reconstruct": [85, 109, 110, 328, 411, 431], "get_dataset": 85, "qlearning_dataset": 85, "fewer": [85, 102, 109], "unexpectedli": 85, "traj_split": 85, "observationnorm": [85, 221, 402, 411, 412, 413, 414, 430], "maze2d": 85, "umaz": 85, "loc": [85, 125, 129, 136, 148, 149, 155, 156, 190, 192, 203, 221, 256, 270, 286, 287, 294, 295, 296, 302, 306, 308, 316, 317, 319, 332, 336, 337, 338, 339, 392, 402, 406, 411, 412, 413, 414, 417, 425, 430], "gen": 86, "dgrl": 86, "accompani": [86, 170, 208], "gap": 86, "2312": 86, "05742": 86, "gen_dgrl": 86, "procgen": 86, "bigfish": 86, "bossfight": 86, "1m_e": 86, "1m_": 86, "comma": [86, 415], "npy": 86, "mmap": [86, 90, 91], "minut": [86, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "internet": [86, 91], "connect": [86, 91, 157], "minari": 87, "websit": [87, 89], "currenrtli": 87, "minari_data": 87, "door": 87, "torchrl_logg": [87, 421], "28": [87, 109, 110, 265, 411, 412, 413, 414, 424, 426], "door_body_po": 87, "dua": 88, "graff": 88, "2017": 88, "uci": 88, "archiv": 88, "ic": 88, "edu": 88, "ml": [88, 157, 158], "adult_num": [88, 145], "adult_onehot": [88, 145], "mushroom_num": [88, 145], "mushroom_onehot": [88, 145], "covertyp": [88, 145], "shuttl": [88, 145], "magic": [88, 145, 415, 416], "shuffl": [89, 108, 110, 425], "embodi": [89, 427], "institut": 89, "demonstr": [89, 413, 415, 419, 424, 425, 426, 428, 431], "527": [89, 426], "skill": 89, "160266": 89, "googl": [89, 90, 121, 122, 140, 141, 146, 147, 234, 413, 414, 424, 425], "open_x_embodi": 89, "2310": [89, 152], "08864": 89, "language_instruct": 89, "get_non_tensor": 89, "nor": [89, 157], "insuffici": 89, "chosen": [89, 159, 160, 209, 210, 279, 280, 288, 304, 371, 406, 420], "openx": 89, "__will": 89, "change__": 89, "randomli": [89, 108, 156, 191, 192, 210, 251, 302, 306, 417, 424, 425, 426, 428], "crop": [89, 175, 197, 371], "modal": [89, 411], "cmu_stretch": [89, 371], "is_init": [89, 91, 172, 189, 255, 259, 277, 278, 301, 313, 414, 415], "language_embed": 89, "512": [89, 250, 412, 415, 426], "lift": 89, "green": [89, 424], "garbag": 89, "lid": 89, "roboset": 90, "h5": [90, 91, 94], "roboh": [90, 152], "concis": [90, 418], "75": [90, 109, 412, 414, 426], "totensor": 91, "image_s": 91, "v": [91, 221, 253, 254, 257, 258, 294, 324, 332, 339, 411, 412], "npz": 91, "2206": [91, 143, 144], "04779": [91, 317, 323], "vd4rl": 91, "squar": [91, 175, 178, 256, 286, 287, 371], "rectangular": [91, 238, 239], "walker_walk": 91, "64px": 91, "height": [91, 175, 178, 200], "veloc": [91, 123, 124, 125, 129, 136, 148, 149, 155, 156, 173, 424, 425, 426, 431], "infinit": [92, 140, 141, 159, 160, 419, 428], "block": [92, 95, 120, 406, 411, 414, 415, 418, 419, 424, 428], "pairwisedataset": [92, 404], "256": [92, 140, 141, 245, 412, 413, 415, 424, 425, 426], "checkpoint_fil": 94, "h5_kwarg": 94, "iff": 94, "suffix": [94, 383], "h5py": 94, "create_dataset": 94, "immut": [95, 125, 129, 136, 148, 155, 199, 215], "piec": [95, 105, 116, 119, 120, 411, 412, 413, 420, 424, 425, 426, 428], "scratch_dir": [96, 411, 428], "sent": [96, 97, 117, 221], "mistak": [96, 97, 117], "overewritten": 96, "tensorstoragecheckpoint": 96, "main_ckpt_dir": 96, "rb_memmap": 96, "10_000_000": 96, "myclass": [96, 97, 117], "foo": [96, 97, 117, 297, 428, 431], "bar": [96, 97, 117, 297, 381, 382, 383, 388, 408, 412], "attach": [96, 97, 98, 111, 113, 117, 412], "entiti": [96, 97, 98, 111, 113, 117], "expans": [97, 334], "zero_": [97, 117, 228], "unlimit": 98, "liststoag": 99, "max_capac": [101, 102, 411, 428], "max_priority_within_buff": [101, 102], "data_0": 101, "data_1": 101, "smoothen": 101, "tdrb": 101, "pack": [101, 253, 257, 413, 416, 431], "nd": [101, 102], "sum_tre": [101, 102], "min_tre": [101, 102], "end_kei": [102, 109, 110], "cache_valu": [102, 109, 110], "closer": [102, 430], "readili": [102, 109, 110], "conjunct": [102, 109, 110, 412], "Will": [102, 109, 143, 371], "buffer0": [102, 109], "immutablewrit": [102, 109], "buffer1": [102, 109], "other_sampl": [102, 109], "short": [102, 109, 110, 121, 122, 125, 129, 134, 135, 136, 148, 149, 155, 156, 225, 257, 258, 412, 413, 416, 417, 425, 428], "tolist": 102, "120110917137936e": 102, "06": [102, 246, 285, 411, 412, 424, 425, 426], "storageensembl": [104, 107], "samplerensembl": 104, "writerensembl": [104, 113], "num_buffer_sampl": [104, 107], "ensembl": [104, 107, 113, 114, 120, 305, 337], "forbidden": 104, "0x13a2ef430": 104, "0x13a2f9310": 104, "interpol": [104, 200, 412, 414, 415], "interpolationmod": [104, 414], "bilinear": [104, 200, 414], "0x13a2f9220": 104, "0x13a2f9f70": 104, "0x13a2d9b50": 104, "0x13a2f95b0": 104, "0x128648260": 104, "roundrobin": [105, 116], "incomplet": [108, 110], "fresh": 108, "haven": [108, 427], "remain": [108, 172, 180, 181, 190, 209, 269, 418], "draw": [108, 251], "slicesamplerwithoutreplac": [109, 428], "ep_1": [109, 110], "ep_2": [109, 110], "73": [109, 411, 412, 426, 427], "74": [109, 412, 426, 427], "76": [109, 412, 426], "77": [109, 412, 426], "42": [109, 260, 276, 316, 317, 319, 320, 324, 332, 339, 412, 426, 428], "43": [109, 411, 412, 414, 426], "45": [109, 411, 412, 425, 426, 427], "67": [109, 411, 412, 423, 426], "68": [109, 411, 412, 426, 427], "69": [109, 412, 424, 426], "70": [109, 412, 413, 424, 425, 426, 427], "71": [109, 412, 426, 428], "80": [109, 121, 122, 411, 412, 413, 424, 425, 426], "82": [109, 411, 412, 424, 426, 427], "83": [109, 412, 426], "78": [109, 411, 412, 426, 427], "79": [109, 411, 412, 426], "320": [109, 110, 123, 124, 410, 412, 419, 426, 429, 431], "700": [109, 110], "dataid": [109, 110], "counter": [110, 213, 301, 381, 408, 415], "request": [110, 170, 197], "51": [110, 412, 426], "__len__": 111, "rank_kei": 115, "rank": [115, 235], "samplerwithoutreplac": [115, 413, 425, 428], "get_insert_index": 115, "convers": [121, 122, 134, 135, 407], "2106": [121, 122, 322, 341], "13281": [121, 122], "categorical_action_encod": [121, 122, 125, 128, 129, 130, 131, 134, 135, 136, 143, 144, 148, 149, 152, 155, 156, 415], "frame_skip": [121, 122, 123, 124, 128, 129, 130, 131, 134, 135, 137, 138, 143, 144, 152, 187, 381, 383, 391, 408, 411, 412, 413, 430], "allow_done_after_reset": [121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 143, 144, 146, 147, 152, 157, 158], "toler": [121, 122, 123, 124, 128, 130, 131, 134, 135, 143, 144, 146, 147, 152, 157, 158, 246, 285], "availalb": [121, 122, 134, 135], "is_avail": [121, 122, 411, 412, 413, 414, 424, 425, 427], "els": [121, 122, 170, 253, 254, 257, 258, 271, 406, 408, 411, 412, 413, 414, 424, 425, 426, 427], "ant": [121, 122, 125, 129, 132, 136, 148, 149, 155, 156, 427], "87": [121, 122, 411, 412, 426, 427], "acrobot": [121, 122, 123, 124, 431], "advant": [121, 122, 134, 135], "timer": [121, 122, 134, 135], "timeit": [121, 122, 134, 135, 415], "310": [121, 122, 426], "ms": [121, 122, 134, 135], "268": [121, 122, 426], "433": [121, 122, 426], "213": [121, 122, 426], "8605": [121, 122], "pipelineenv": 122, "get_environ": 122, "dm_control": [123, 124, 411, 423, 431], "2006": [123, 124, 317, 323], "12983": [123, 124], "task_nam": [123, 125, 129, 136, 148, 149, 155, 156], "cheetah": [123, 124, 125, 129, 136, 148, 149, 155, 156, 371, 411, 431], "240": [123, 124, 426, 430, 431], "swingup": [123, 124, 431], "swingup_spars": [123, 124, 431], "ball_in_cup": [123, 124, 431], "catch": [123, 124, 415, 431], "balance_spars": [123, 124, 431], "three_pol": [123, 124, 431], "two_pol": [123, 124, 431], "finger": [123, 124, 431], "turn_easi": [123, 124, 431], "turn_hard": [123, 124, 431], "fish": [123, 124, 431], "upright": [123, 124, 412, 431], "swim": [123, 124, 431], "hopper": [123, 124, 431], "hop": [123, 124, 431], "humanoid": [123, 124, 148, 155, 423, 431], "walk": [123, 124, 148, 155, 412, 423, 431], "run_pure_st": [123, 124, 431], "bring_bal": [123, 124, 431], "bring_peg": [123, 124, 431], "insert_bal": [123, 124, 431], "insert_peg": [123, 124, 431], "point_mass": [123, 124, 431], "reacher": [123, 124, 431], "swimmer": [123, 124, 431], "swimmer6": [123, 124, 431], "swimmer15": [123, 124, 431], "walker": [123, 124, 431], "dog": [123, 124, 431], "trot": [123, 124, 431], "humanoid_cmu": [123, 124, 431], "lqr": [123, 124, 431], "lqr_2_1": [123, 124, 431], "lqr_6_2": [123, 124, 431], "quadrup": [123, 124, 431], "escap": [123, 124, 431], "stacker": [123, 124, 431], "stack_2": [123, 124, 415, 431], "stack_4": [123, 124, 415, 431], "deviceless": 125, "run_type_check": [125, 142], "counterenv": 125, "discretebox": [125, 129, 136, 148, 149, 155, 156], "sort": [125, 129, 136, 148, 149, 155, 156, 174, 277, 278], "another_act": [125, 129, 136, 148, 149, 155, 156], "mutabl": [125, 129, 136, 148, 149, 155, 156], "action_spec_unbatch": [125, 129, 136, 148, 149, 155, 156, 413, 425], "had": [125, 129, 136, 148, 149, 155, 156, 417, 419], "_callabletransform": [125, 129, 136, 148, 149, 155, 156], "auto_specs_": [125, 129, 136, 148, 149, 155, 156], "batch_lock": [125, 127, 129, 136, 148, 155, 170, 210, 215, 426], "action_spac": [125, 129, 136, 148, 149, 155, 156, 183, 248, 280, 298, 299, 303, 304, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 414, 415, 417, 421], "check_dtyp": [125, 129, 136, 148, 149, 155, 156, 225], "discrep": [125, 129, 136, 148, 149, 155, 156, 225, 316, 318, 320, 321, 333, 336, 338, 349], "broken": [125, 129, 136, 148, 149, 155, 156, 225], "rng": [125, 129, 136, 148, 149, 155, 156, 225, 426], "done_keys_group": [125, 129, 136, 148, 149, 155, 156], "outer": [125, 129, 136, 148, 149, 155, 156, 408, 411, 412, 431], "another_don": [125, 129, 136, 148, 149, 155, 156], "done_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "empty_cach": [125, 129, 136, 148, 149, 155, 156, 215], "fake_tensordict": [125, 129, 136, 148, 149, 155, 156, 412, 415], "braxenv": [125, 129, 136, 148, 149, 155, 156, 199, 404, 416], "envnam": [125, 129, 136, 148, 149, 155, 156], "full_action_spec_unbatch": [125, 129, 136, 148, 149, 155, 156, 424, 425], "full_done_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "full_observation_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "full_reward_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "pipeline_st": [125, 129, 136, 148, 149, 155, 156], "full_state_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "attibut": [125, 129, 136, 148, 149, 155, 156], "input_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "maybe_reset": [125, 129, 136, 148, 149, 155, 156], "speak": [125, 129, 136, 148, 149, 155, 156, 411], "observation_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "output_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "rand_act": [125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 170, 416], "register_gym": [125, 129, 136, 148, 149, 155, 156, 416], "entry_point": [125, 129, 136, 148, 149, 155, 156], "info_kei": [125, 129, 136, 148, 149, 155, 156], "reward_threshold": [125, 129, 136, 148, 149, 155, 156], "nondeterminist": [125, 129, 136, 148, 149, 155, 156], "max_episode_step": [125, 128, 129, 130, 136, 148, 149, 155, 156], "order_enforc": [125, 129, 136, 148, 149, 155, 156], "autoreset": [125, 129, 136, 148, 149, 155, 156], "disable_env_check": [125, 128, 129, 136, 143, 144, 148, 149, 155, 156], "apply_api_compat": [125, 129, 136, 148, 149, 155, 156], "nasium": [125, 129, 136, 148, 149, 155, 156], "dmcontrolenv": [125, 129, 136, 148, 149, 155, 156, 371, 404, 411, 416, 423, 431], "dmc": [125, 129, 136, 148, 149, 155, 156], "removeemptyspec": [125, 129, 136, 148, 149, 155, 156], "threshold": [125, 129, 136, 148, 149, 155, 156, 251, 317, 318, 413], "learnt": [125, 129, 136, 148, 149, 155, 156, 398], "checker": [125, 128, 129, 136, 143, 144, 148, 149, 155, 156], "stepapicompat": [125, 129, 136, 148, 149, 155, 156], "deem": [125, 129, 136, 140, 141, 148, 149, 155, 156, 159, 160], "envgym": [125, 129, 136, 148, 149, 155, 156], "0855": [125, 129, 136, 148, 149, 155, 156], "0215": [125, 129, 136, 148, 149, 155, 156, 426], "0881": [125, 129, 136, 148, 149, 155, 156], "0412": [125, 129, 136, 148, 149, 155, 156, 426], "1101": [125, 129, 136, 148, 149, 155, 156, 426], "0080": [125, 129, 136, 148, 149, 155, 156], "0254": [125, 129, 136, 148, 149, 155, 156, 426], "0424": [125, 129, 136, 148, 149, 155, 156], "9609e": [125, 129, 136, 148, 149, 155, 156], "9776e": [125, 129, 136, 148, 149, 155, 156], "04": [125, 129, 133, 136, 148, 149, 155, 156, 411, 412, 425, 426], "6347e": [125, 129, 136, 148, 149, 155, 156], "3842e": [125, 129, 136, 148, 149, 155, 156], "5338e": [125, 129, 136, 148, 149, 155, 156], "3064e": [125, 129, 136, 148, 149, 155, 156], "0381e": [125, 129, 136, 148, 149, 155, 156], "6656e": [125, 129, 136, 148, 149, 155, 156], "05": [125, 129, 136, 148, 149, 155, 156, 234, 411, 412, 413, 424, 425, 426, 427], "0204e": [125, 129, 136, 148, 149, 155, 156], "0833": [125, 129, 136, 148, 149, 155, 156, 426], "0275": [125, 129, 136, 148, 149, 155, 156, 426], "0612": [125, 129, 136, 148, 149, 155, 156], "0770": [125, 129, 136, 148, 149, 155, 156], "1256": [125, 129, 136, 148, 149, 155, 156], "0082": [125, 129, 136, 148, 149, 155, 156], "0186": [125, 129, 136, 148, 149, 155, 156, 426], "0476": [125, 129, 136, 148, 149, 155, 156], "2221": [125, 129, 136, 148, 149, 155, 156], "2256": [125, 129, 136, 148, 149, 155, 156], "5930": [125, 129, 136, 148, 149, 155, 156, 426], "6937": [125, 129, 136, 148, 149, 155, 156], "5865": [125, 129, 136, 148, 149, 155, 156, 426], "5479": [125, 129, 136, 148, 149, 155, 156], "0187": [125, 129, 136, 148, 149, 155, 156, 426], "6825": [125, 129, 136, 148, 149, 155, 156], "5224": [125, 129, 136, 148, 149, 155, 156, 426], "0018": [125, 129, 136, 148, 149, 155, 156, 426], "1005": [125, 129, 136, 148, 149, 155, 156, 410, 412, 426, 429], "0335": [125, 129, 136, 148, 149, 155, 156], "0268": [125, 129, 136, 148, 149, 155, 156], "0133": [125, 129, 136, 148, 149, 155, 156], "0627": [125, 129, 136, 148, 149, 155, 156], "0074": [125, 129, 136, 148, 149, 155, 156, 426], "0488": [125, 129, 136, 148, 149, 155, 156, 426], "0353": [125, 129, 136, 148, 149, 155, 156], "0075": [125, 129, 136, 148, 149, 155, 156, 426], "0069": [125, 129, 136, 148, 149, 155, 156], "0098": [125, 129, 136, 148, 149, 155, 156, 426], "0058": [125, 129, 136, 148, 149, 155, 156, 426], "0033": [125, 129, 136, 148, 149, 155, 156, 426], "0157": [125, 129, 136, 148, 149, 155, 156], "0004": [125, 129, 136, 148, 149, 155, 156, 414, 426], "0381": [125, 129, 136, 148, 149, 155, 156], "0452": [125, 129, 136, 148, 149, 155, 156], "11355747": [125, 129, 136, 148, 149, 155, 156], "04257728": [125, 129, 136, 148, 149, 155, 156], "00408397": [125, 129, 136, 148, 149, 155, 156], "04155852": [125, 129, 136, 148, 149, 155, 156], "0389733": [125, 129, 136, 148, 149, 155, 156], "01409826": [125, 129, 136, 148, 149, 155, 156], "0978704": [125, 129, 136, 148, 149, 155, 156], "08808327": [125, 129, 136, 148, 149, 155, 156], "03970837": [125, 129, 136, 148, 149, 155, 156], "00535434": [125, 129, 136, 148, 149, 155, 156], "02353762": [125, 129, 136, 148, 149, 155, 156], "05116226": [125, 129, 136, 148, 149, 155, 156], "02788907": [125, 129, 136, 148, 149, 155, 156], "06848346": [125, 129, 136, 148, 149, 155, 156], "05154399": [125, 129, 136, 148, 149, 155, 156], "0371798": [125, 129, 136, 148, 149, 155, 156], "05128025": [125, 129, 136, 148, 149, 155, 156], "dydact": [125, 129, 136, 148, 149, 155, 156], "gym_env": [125, 129, 136, 148, 149, 155, 156, 430], "reset_kei": [125, 129, 136, 148, 149, 155, 156, 173, 204, 209, 210, 211, 424], "multitask": [125, 129, 136, 148, 149, 155, 156], "multiag": [125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 231, 266, 279, 288, 349], "another_reward": [125, 129, 136, 148, 149, 155, 156], "reward_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "auto_cast_to_devic": [125, 129, 136, 148, 149, 155, 156, 425], "break_when_all_don": [125, 129, 135, 136, 148, 149, 155, 156], "soon": [125, 129, 136, 148, 149, 150, 151, 155, 156], "__sort": [125, 129, 136, 148, 149, 155, 156], "as__": [125, 129, 136, 148, 149, 155, 156], "argmaxmodul": [125, 129, 136, 148, 149, 155, 156], "argmax": [125, 129, 136, 148, 149, 155, 156, 248, 280, 299, 304, 415, 417], "n_ob": [125, 129, 136, 148, 149, 155, 156, 190, 301, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 418], "n_act": [125, 129, 136, 148, 149, 155, 156, 190, 316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 418], "ourselv": [125, 129, 136, 148, 149, 155, 156, 413, 431], "emul": [125, 129, 136, 148, 149, 155, 156], "epoch": [125, 129, 136, 148, 149, 155, 156, 388, 413, 424, 425], "input_td": [125, 129, 136, 148, 149, 155, 156], "rollout_td": [125, 129, 136, 148, 149, 155, 156], "state_spec_unbatch": [125, 129, 136, 148, 149, 155, 156], "prevail": [125, 129, 136, 148, 149, 155, 156, 174, 204, 231], "next_tensordict": [125, 129, 136, 148, 149, 155, 156, 230], "precomput": [125, 129, 136, 148, 149, 155, 156], "_stepmdp": [125, 129, 136, 148, 149, 155, 156, 230], "exclude_act": [125, 129, 136, 148, 149, 155, 156, 230], "leverag": [125, 129, 136, 139, 148, 149, 150, 151, 155, 156, 411, 425, 431], "minim": [125, 129, 136, 148, 149, 155, 156, 373, 428], "reset_data": [125, 129, 136, 148, 149, 155, 156, 431], "creator": [126, 393, 394, 400, 401, 402], "substitut": [126, 209, 221, 417], "vecnorm": [126, 402], "env_creat": [126, 411], "test_env1": 126, "observation_count": [126, 431], "test_env2": 126, "sleep": [126, 431], "ps": 126, "p1": 126, "p2": 126, "9934": 126, "make_vari": [126, 213], "variant": [126, 213, 236, 406], "trajcount": 126, "env_creator_pendulum": 126, "env_creator_cartpol": 126, "env_str": 127, "device_map": 127, "accross": [128, 130], "registri": [128, 157], "asyncvectorenv": 128, "involv": [128, 130, 131, 140, 141, 152, 170, 213, 255, 259, 416, 418], "pixel_observ": [128, 130, 131, 152], "pixelobservationwrapp": [128, 130, 131, 152], "adventur": [128, 130, 431], "airraid": [128, 130, 431], "alien": [128, 130, 431], "time_limit": 128, "timelimit": [128, 140, 141, 159, 160], "default_info_dict_read": [128, 129, 130, 148], "reader": [128, 129, 130, 148, 412], "set_info_dict_read": [128, 129, 130, 148, 416], "info_dict": [128, 129, 130, 148], "auto_register_info_dict": [128, 129, 130, 148], "multibinari": [128, 130], "multidiscret": [128, 130], "rag": [128, 130], "gym_conversion_exampl": [128, 130], "info_dict_read": [129, 148], "ignore_priv": 129, "baseinfodictread": 129, "tensordictprim": [129, 148, 237, 255, 259, 313, 406, 414], "succe": [129, 148], "underscor": 129, "primer": [129, 210, 237, 255, 259, 313, 414], "halfcheetah": [129, 148, 166, 200, 411, 430], "reward_run": [129, 148], "read_act": 129, "read_don": 129, "nonsens": 129, "fallback": 129, "read_ob": 129, "dictat": [129, 302, 306, 336, 411, 426], "read_reward": 129, "hoc": [129, 148, 417], "dict_read": 129, "my_info_kei": 129, "some_env": 129, "vecenv": 130, "vectorenv": 130, "convert_actions_to_numpi": 130, "isaaclab": 130, "secur": 131, "habitat3": 131, "ai": [131, 427], "habitatrenderpick": 131, "isaacgym": [132, 133], "isaacgymwrapp": [132, 404], "isaacgymenv": [133, 404], "webpag": 133, "isaac": 133, "essenc": [133, 416], "instadeepai": [134, 135], "2306": [134, 135], "09884": [134, 135], "snake": [134, 135], "grid": [134, 135, 371], "bodi": [134, 135], "body_st": [134, 135], "fruit_posit": [134, 135], "col": [134, 135], "head_posit": [134, 135], "tail": [134, 135], "game2048": [134, 135], "maze": [134, 135], "cleaner": [134, 135], "cvrp": [134, 135], "multicvrp": [134, 135], "minesweep": [134, 135], "rubikscub": [134, 135], "knapsack": [134, 135], "sudoku": [134, 135], "tsp": [134, 135], "connector": [134, 135], "v2": [134, 135, 153, 154, 345, 360, 361, 362, 363, 365, 366, 367, 368, 414], "mmst": [134, 135], "graphcolor": [134, 135], "partli": [134, 135], "scrambl": [134, 135], "robotwarehous": [134, 135], "tetri": [134, 135], "binpack": [134, 135], "jobshop": [134, 135], "0x1fca91910": 134, "122": [134, 135, 426, 431], "0x1ff9baee0": 134, "134": [134, 135, 426, 428], "0x1ff9ba7c0": 134, "172": [134, 135, 426], "jit": 135, "eager": 135, "tdreset": [135, 223, 423], "whichev": 135, "drastic": [135, 148, 428], "mctsforest": [136, 404], "noth": [136, 411, 413], "overview": [136, 413, 415, 418, 424, 425, 430], "beam": 136, "vocab_s": 136, "hashing_modul": 136, "text_output": 136, "decod": [136, 163, 271], "batch_decod": 136, "text_kei": 136, "gpt2token": 136, "nontensorstack": 136, "make_tensordict": 136, "mo": [137, 138], "minecart": [137, 138], "mo_gym": 138, "qualnam": 139, "neural": [139, 150, 151, 238, 239, 274, 276, 283, 305, 406, 412, 413, 414, 417, 424, 425, 426, 431], "group_map": [139, 140, 141, 146, 147, 150, 151, 157, 158, 159, 160, 161, 424], "constructiuon": [139, 150, 151], "premad": [139, 140, 141, 150, 151, 159, 160, 349], "all_in_one_group": [139, 146, 147, 161], "agent_0": [139, 150, 151, 157, 161, 424], "agent_1": [139, 150, 151, 157, 161], "agent_2": [139, 150, 151, 157, 161], "agent_3": [139, 157], "one_group_per_ag": [139, 150, 151], "meltingpot": [140, 141], "2211": [140, 141], "13746": [140, 141], "melt": [140, 141], "pot": [140, 141], "novel": [140, 141, 418], "social": [140, 141], "familiar": [140, 141, 412, 425, 431], "unfamiliar": [140, 141], "broad": [140, 141], "cooper": [140, 141, 424, 425], "decept": [140, 141], "reciproc": [140, 141], "stubborn": [140, 141], "substrat": [140, 141], "ml_collect": 140, "config_dict": 140, "configdict": 140, "categorical_act": [140, 141, 146, 147, 150, 151, 153, 154, 157, 158, 159, 160], "marlgroupmaptyp": [140, 141, 146, 147, 150, 151, 157, 158, 159, 160, 161, 404, 424], "agent_nam": [140, 141, 159, 160, 161], "agent_names_to_indices_map": [140, 141, 159, 160], "env_torchrl": [140, 141], "commons_harvest__open": [140, 141], "rgb": [140, 141], "144": [140, 141, 426], "192": [140, 141, 412, 426, 428], "collective_reward": [140, 141], "ready_to_shoot": [140, 141], "88": [140, 141, 153, 154, 411, 412, 426, 427], "substrate_config": 141, "get_config": 141, "mp_env": 141, "build_from_config": 141, "default_player_rol": 141, "environn": 142, "mymbenv": [142, 235, 262], "world_model": [142, 235, 262, 328], "hidden_observ": [142, 235, 262], "mlp": [142, 235, 238, 239, 241, 242, 243, 244, 250, 255, 259, 262, 266, 267, 294, 298, 313, 321, 323, 406, 412, 415, 417, 418, 421, 423, 427, 430], "worldmodelwrapp": [142, 235, 262], "activation_class": [142, 235, 238, 239, 241, 242, 243, 244, 249, 250, 260, 262, 265, 266, 412, 417, 424, 425, 430], "activate_last_lay": [142, 235, 244, 260, 262], "sail": [143, 144], "sg": [143, 144], "10558": [143, 144], "readthedoc": [143, 146, 147], "en": [143, 146, 147], "python_interfac": 143, "envpoolmixin": 144, "env_bas": 144, "task_id": 144, "env_typ": 144, "gym_reset_return_info": 144, "envpool_env": 144, "www": [145, 263, 264], "fetch_openml": 145, "106": [145, 411, 426], "openspiel": [146, 147], "open_spiel": [146, 147], "game_str": 146, "return_st": [146, 147, 150, 151], "4672": [146, 147, 412], "current_play": [146, 147], "fen": [146, 147], "rnbqkbnr": [146, 147], "pppppppp": [146, 147], "kqkq": [146, 147], "674": 146, "2048": [146, 147, 412, 427], "add_nois": [146, 147], "amazon": [146, 147], "backgammon": [146, 147], "restor": [146, 147], "td_restor": [146, 147], "pyspiel": 147, "load_gam": 147, "new_initial_st": 147, "3009": [147, 426], "my_env_fun": [148, 155], "custom_attribute_list": [148, 155], "custom_attribut": [148, 155], "custom_method_list": [148, 155], "custom_method": [148, 155], "deploi": [148, 155, 170, 415], "slight": [148, 155, 412], "share_individual_td": [148, 155], "shared_memori": [148, 155], "policy_proof": [148, 155], "ll": [148, 155, 253, 254, 257, 258, 411, 412, 413, 414, 416, 417, 418, 419, 421, 425, 431], "serial_for_singl": [148, 155, 412], "circular": [148, 155, 411], "list_of_kwarg": [148, 155], "com_veloc": [148, 155], "head_height": [148, 155], "joint_angl": [148, 155], "torso_vert": [148, 155], "stringent": [148, 413, 424, 425], "inter": 148, "penv": [148, 213], "env_fix": 148, "influenc": 148, "myenv": [148, 170, 179, 182], "pipe": 148, "update_kwarg": [148, 155], "th": [149, 186, 216, 253, 257, 426], "thdot": [149, 426], "max_spe": [149, 426], "max_torqu": [149, 426], "gen_param": [149, 426], "gravit": [149, 426], "torqu": [149, 426], "pettingzoo": [150, 151, 424, 425], "pet": [150, 151], "zoo": [150, 151], "__": [150, 151], "aecenv": [150, 151], "use_mask": [150, 151], "dead": [150, 151], "done_on_ani": [150, 151, 424], "compulsori": [150, 151], "adversary_0": [150, 151, 424], "adversari": [150, 151, 330, 424], "sisl": 150, "multiwalker_v9": 150, "aec": [150, 151], "n_piston": [150, 151], "pistonball_v6": [150, 151], "piston": [150, 151], "piston_0": [150, 151], "piston_1": [150, 151], "piston_20": [150, 151], "tictactoe_v3": [150, 151], "player": [150, 151, 156], "player_1": [150, 151], "player_2": [150, 151], "butterfli": 151, "parallel_env": [151, 411, 430, 431], "vikashplu": 152, "wiki": 152, "06828": 152, "from_depth": 152, "smacv2": [153, 154], "starcraft": [153, 154], "challeng": [153, 154, 416, 426, 427], "10gen_terran": [153, 154], "10gen_zerg": [153, 154], "10gen_protoss": [153, 154], "3m": [153, 154], "8m": [153, 154], "25m": [153, 154], "5m_vs_6m": [153, 154], "8m_vs_9m": [153, 154], "10m_vs_11m": [153, 154], "27m_vs_30m": [153, 154], "mmm": [153, 154], "mmm2": [153, 154], "2s3z": [153, 154], "3s5z": [153, 154], "3s5z_vs_3s6z": [153, 154], "3s_vs_3z": [153, 154], "3s_vs_4z": [153, 154], "3s_vs_5z": [153, 154], "1c3s5z": [153, 154], "2m_vs_1z": [153, 154], "corridor": [153, 154], "6h_vs_8z": [153, 154], "2s_vs_1sc": [153, 154], "so_many_banel": [153, 154], "bane_vs_ban": [153, 154], "2c_vs_64zg": [153, 154], "old": [153, 154, 333, 431], "smac": [153, 154], "map_nam": [153, 154], "176": [153, 154, 426], "battle_won": [153, 154], "dead_al": [153, 154], "dead_enemi": [153, 154], "episode_limit": [153, 154], "322": [153, 154, 410, 421, 424, 425, 426, 429], "procedur": [153, 154], "distribution_config": [153, 154], "n_unit": [153, 154], "n_enemi": [153, 154], "team_gen": [153, 154], "dist_typ": [153, 154], "weighted_team": [153, 154], "unit_typ": [153, 154], "marin": [153, 154], "maraud": [153, 154], "medivac": [153, 154], "exception_unit_typ": [153, 154], "start_posit": [153, 154], "surrounded_and_reflect": [153, 154], "map_x": [153, 154], "map_i": [153, 154], "capability_config": [153, 154], "131": [153, 154, 426], "starcraft2env": 154, "tic": 156, "tac": 156, "toe": 156, "single_play": 156, "player1": 156, "desired_batch_s": 156, "board": 156, "player0": 156, "uniti": [157, 158], "technolog": [157, 158], "llapi": [157, 158], "mlagents_env": [157, 158], "unityenviron": [157, 158], "file_nam": 157, "registered_nam": 157, "localhost": 157, "3dball": 157, "group_0": 157, "vectorsensor_size8": 157, "continuous_act": [157, 159, 160, 369, 424, 425], "agent_10": 157, "agent_11": 157, "agent_4": 157, "agent_5": 157, "agent_6": 157, "agent_7": 157, "agent_8": 157, "agent_9": 157, "group_reward": 157, "proroklab": [159, 160], "vectorizedmultiagentsimul": [159, 160], "2207": [159, 160], "03530": [159, 160], "basescenario": 159, "perfrom": [159, 160], "defaultt": 159, "repositiori": 159, "sparsiti": 159, "unbatched_action_spec": [159, 160], "unbatched_observation_spec": [159, 160], "unbatched_reward_spec": [159, 160], "het_spec": [159, 160], "het_specs_map": [159, 160], "flock": [159, 160, 369], "agent_collision_rew": [159, 160], "agent_distance_rew": [159, 160], "ca": 161, "environment4": 161, "get_group_map": 161, "sumbodul": 162, "model_bas": [163, 164, 235, 262], "model_based_env": [163, 327], "dreamerenv": [163, 327, 404], "model_based_env_ev": 163, "num_interv": 166, "out_action_kei": 166, "samplingstrategi": 166, "optino": 166, "intenum": 166, "interv": [166, 370, 371, 380, 390, 412, 426], "action_disc": 166, "transform_input_spec": [166, 170, 177, 179, 180, 181, 192, 194, 198, 199, 204, 208, 209, 210, 214, 216, 218, 223], "masker": 167, "maskedenv": 167, "ones_lik": 167, "scatter": 167, "fill_float": 169, "fill_int": 169, "fill_bool": 169, "someenvclass": 169, "autoresetenv": 169, "argumet": 169, "fooenv": 169, "sign": [169, 206, 351, 424], "envtyp": 169, "reshape_fn": [170, 415], "reset_func": 170, "environmt": 170, "tensordict_batch_s": 170, "tensordict_reset": [170, 426], "transform_env_batch_s": [170, 177, 214, 223], "transform_output_spec": [170, 177, 179, 180, 184, 190, 198, 199, 205, 208, 214, 223], "transform_observation_spec": [170, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 188, 189, 190, 192, 194, 198, 199, 200, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 223, 426], "transform_reward_spec": [170, 171, 176, 177, 179, 180, 184, 190, 198, 199, 202, 203, 204, 205, 206, 208, 214, 216, 223], "transformfull_done_spec": [170, 177, 179, 180, 184, 190, 198, 199, 205, 208, 214, 223], "biner": 171, "burn_in": 172, "burn": 172, "date": [172, 374], "retur": 172, "burnt": 172, "gru_modul": [172, 255, 313], "input_s": [172, 210, 253, 254, 255, 257, 258, 259, 313, 414, 415], "hidden_s": [172, 210, 253, 254, 255, 257, 258, 259, 313, 414, 415], "default_recurrent_mod": [172, 255, 259], "burn_in_transform": 172, "gru": [172, 210, 254, 255, 313, 415], "num_lay": [172, 253, 255, 257, 259, 271, 272, 313, 415], "86": [172, 411, 412, 415, 426], "3008": [172, 412], "0344": 172, "padding_valu": [173, 263, 264], "as_invers": 173, "movement": 173, "1312": [173, 412], "5602": 173, "consumpt": [173, 404], "followin": 173, "pictur": 173, "pixels_trsf": [173, 428], "grayscal": [173, 412, 414, 415, 428, 431], "data_exclud": [173, 428], "del_kei": [174, 217, 423, 426], "unsqueeze_if_oor": 174, "observation_posit": 174, "observation_veloc": 174, "center": [175, 276, 371], "width": [175, 178, 200], "scalar": [176, 202, 232, 233, 242, 244, 251, 268, 269, 277, 278, 312, 316, 317, 318, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 349, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 406, 412, 418, 426], "permit": [176, 186, 216, 316, 318, 333, 336, 338], "rewardsc": [177, 215, 411, 412, 414], "rewardclip": 177, "transformed_env": [177, 214, 215, 416], "transform_env_devic": [177, 180, 214, 223], "dtype_in": 179, "dtype_out": 179, "scan": [179, 182, 307, 308], "resp": [179, 182], "not_transform": [179, 182], "constructedw": [179, 182], "orig_devic": 180, "unspecifi": 180, "transform_done_spec": [180, 214, 223], "num_actions_effect": 181, "max_act": 181, "include_forward": 181, "num_act": [181, 239, 325, 415, 417], "action_out": 181, "_call": [181, 186, 426], "eol_kei": 183, "lives_kei": 183, "eol_attribut": 183, "unwrap": 183, "breakout": 183, "210": [183, 194, 415, 426, 431], "160": [183, 194, 412, 415, 426, 431], "eol_transform": 183, "eol": 183, "dqnloss": [183, 316, 317, 319, 320, 323, 325, 326, 327, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 349, 395, 404, 407, 412, 414, 415, 421], "register_kei": 183, "loss_or_advantag": 183, "lossmodul": [183, 388, 397, 398, 404, 407], "valueestimatorbas": [183, 334, 404], "finit": [185, 276, 417, 428], "first_dim": 186, "last_dim": 186, "allow_positive_dim": [186, 216], "frameskip": 186, "repeatedli": [187, 413, 425], "init_kei": [189, 301], "tracker": 189, "pi_curr": 190, "pi_0": 190, "overfit": 190, "probabilist": [190, 226, 302, 316, 336, 404, 413, 430], "get_dist": [190, 306, 307], "normalparamextractor": [190, 294, 295, 296, 302, 308, 316, 317, 319, 325, 332, 336, 337, 338, 339, 341, 342, 406, 413, 417, 425, 430], "probabilisticactor": [190, 294, 295, 296, 297, 316, 317, 319, 322, 324, 325, 332, 335, 336, 337, 338, 339, 341, 342, 406, 411, 413, 417, 424, 425], "tanhnorm": [190, 294, 295, 296, 302, 308, 316, 317, 319, 332, 336, 337, 338, 339, 341, 342, 404, 413, 425, 430], "return_log_prob": [190, 294, 295, 296, 302, 306, 308, 338, 406, 413, 417, 424, 425, 430], "apply_": 190, "copy_": [190, 411], "formulat": 190, "diverg": [190, 255, 259, 302, 306, 328, 333], "noop": [191, 430], "trial": 191, "standard_norm": [192, 203, 221, 411, 412, 414], "affin": [192, 203, 221], "layer": [192, 221, 234, 238, 239, 241, 242, 247, 249, 253, 254, 255, 257, 258, 259, 260, 265, 266, 268, 269, 271, 272, 283, 284, 291, 300, 309, 406, 412, 413, 414, 415, 417, 424, 427], "epsilon": [192, 232, 233, 251, 252, 277, 278, 340, 386, 412, 413, 414, 417], "recover": 192, "set_default_tensor_typ": 192, "doubletensor": 192, "isclos": 192, "next_ob": [192, 351, 352, 353, 354, 430], "init_stat": [192, 411, 412, 413, 414], "3752e": 192, "5087e": 192, "9294e": 192, "9636": 192, "5608": 192, "6408": 192, "num_it": [192, 412, 413], "reduce_dim": [192, 411, 412, 413, 414], "cat_dim": [192, 411, 412, 413, 414], "keep_dim": [192, 412, 414], "statist": [192, 221, 234, 338, 402, 411, 412, 413, 431], "gaussian": [192, 210, 232, 233, 235, 262, 268, 269, 275, 413, 415, 424], "empir": [192, 235, 262, 302, 306, 411, 413, 425], "3d": [192, 238], "reorder": 194, "in_keys_in": [194, 216], "channel": [194, 212, 265, 271, 272, 412], "r3m": [196, 427], "resnet": [196, 217, 219], "embed": [196, 217, 218, 219, 241, 279, 293, 294, 295, 296, 305, 310, 427], "ego4d": [196, 217, 219], "univers": [196, 217, 219, 416], "suraj": [196, 217], "nair": [196, 217], "aravind": [196, 217], "rajeswaran": [196, 217], "vikash": [196, 217, 219], "kumar": [196, 217, 219], "chelsea": [196, 217], "finn": [196, 217], "abhinav": [196, 217], "gupta": [196, 217], "2203": [196, 217, 262, 413, 426, 427], "12601": [196, 217, 427], "_init": [196, 217, 411], "resnet50": [196, 219, 427], "model_nam": [196, 217, 219, 374, 415], "resnet34": 196, "resnet18": 196, "r3m_vec": [196, 427], "stack_imag": [196, 219], "tread": [196, 219], "separet": [196, 219], "hub": [196, 219, 416, 427], "resnet50_weight": [196, 219], "imagenet1k_v1": [196, 219], "download_path": [196, 219], "tensor_pixels_kei": [196, 219], "sub_seq_len": 197, "sample_dim": [197, 411], "hesit": 197, "robust": [197, 234], "mix": [197, 279, 288, 349, 411, 424, 425], "improp": 197, "dummyenv": 198, "another_oth": 198, "other_reward": 198, "create_copi": 199, "stuff": [199, 419], "newnam": 199, "r2g": 201, "reward_to_go": 201, "bernoulli_": 201, "9010": 201, "9404": [201, 357], "9701": [201, 357], "9900": [201, 357], "0000": [201, 211, 251, 276, 309, 357, 413, 414, 426, 430], "crash": 201, "clamp_min": 202, "clamp_max": 202, "clip_min": 202, "clip_max": 202, "episode_": 204, "reward1": 204, "reward2": 204, "episode_reward": [204, 424, 425], "keep_reward": 205, "keep_don": 205, "logical_or": 206, "step_count_kei": 208, "update_don": 208, "disjunct": 208, "recognis": 208, "target_return": 209, "subtract": 209, "default_valu": [210, 313, 414], "unit": [210, 235, 249, 253, 254, 271, 272, 281, 282, 413], "mykei": 210, "__unless": 210, "exists__": 210, "get_primers_from_modul": [210, 237, 255, 259, 404], "recurrent_st": [210, 255, 259, 313, 414], "10th": 211, "0216": [211, 426], "1149": 211, "1990": 211, "2749": 211, "3281": 211, "9290": 211, "3702": 211, "8978": 211, "from_int": 212, "shape_toler": 212, "permuat": 212, "ri": 212, "traj_count": 213, "traj": 213, "countingenv": 213, "mocking_class": 213, "make_env_c0": 213, "make_env_c1": 213, "principl": 214, "cattransform": 214, "notabl": 214, "rewardsum": [214, 223, 230, 424, 425], "smoothli": [215, 234], "add_1": [215, 415], "cache_spec": 215, "set_missing_toler": 215, "danger": 216, "vc1": 217, "vc1_vec": 217, "untrain": 217, "make_noload_model": 217, "vip": [218, 219, 427], "implicit": [219, 324, 332, 428], "jason": 219, "ma": 219, "shagun": 219, "sodhani": 219, "dinesh": 219, "jayaraman": 219, "osbert": 219, "bastani": 219, "ami": 219, "zhang": 219, "vip_vec": 219, "final_nam": 220, "sb3": 220, "terminal_obs_read": 220, "truli": [220, 430], "till": 220, "shared_td": 221, "decai": [221, 232, 233, 251, 340, 386, 411, 412, 414, 431], "9999": 221, "0001": [221, 249, 270, 413, 426], "to_observation_norm": 221, "frozen_copi": 221, "race": 221, "underflow": [221, 386], "build_td_for_shared_vecnorm": 221, "memmori": 221, "queue": [221, 428, 430], "td_share": 221, "unfreez": 221, "train_env": 221, "eval_env": 221, "state_dim": [222, 240, 245, 275, 281, 282, 297], "action_dim": [222, 240, 241, 243, 245, 275, 297, 411, 423], "gsde": [222, 337, 402], "gsdemodul": 222, "rb_transform": 223, "resist": 223, "insensit": 223, "sensit": [223, 412, 414], "_orig": 223, "95": [223, 262, 344, 411, 412, 413, 414, 426, 427], "window": [223, 301, 424, 428, 430], "edit": [223, 419], "cube": 224, "unsqueeze_null_shap": 228, "probabilistictdmodul": [229, 260, 302, 306, 350, 383], "keep_oth": [230, 426], "exclude_reward": 230, "exclude_don": 230, "next_": 230, "write_full_fals": 231, "_terminated_or_trunc": 231, "po": [232, 233, 252], "sigma_init": [232, 233, 424], "sigma_end": [232, 233, 424], "annealing_num_step": [232, 233, 251, 277, 278, 411, 412, 414, 415, 417, 421, 424], "sigma": [232, 233, 253, 254, 256, 257, 258, 277, 278, 286, 287, 413, 424], "captur": [232, 233, 251, 277, 278, 415], "omiss": [232, 233, 251, 277, 278], "ommit": [232, 233, 251, 277, 278], "momentum": 234, "max_r": 234, "max_d": 234, "warmup_step": 234, "batchrenorm": 234, "1702": 234, "03275": 234, "corenet": 234, "enhanc": 234, "warmup": 234, "phase": [234, 236, 425, 428], "outlier": 234, "period": 234, "varianc": [234, 235, 236, 256, 270, 286, 287, 407, 411, 413, 425], "warm": 234, "renorm": 234, "entropi": [235, 273, 316, 317, 318, 319, 324, 325, 332, 333, 335, 336, 337, 339, 341, 342, 425], "botev": 235, "2013": 235, "cem": 235, "plan": [235, 261, 262], "k": [235, 237, 253, 254, 257, 258], "maximis": [235, 241, 243, 262, 412, 413, 425], "modelbasedenv": [235, 262], "planning_horizon": [235, 262], "optim_step": [235, 262, 412, 415, 421], "mpc": [235, 261, 262], "num_candid": [235, 262], "candid": [235, 262], "top_k": [235, 262], "modelbasedenvbas": [235, 261, 262, 404], "safemodul": [235, 261, 294, 296, 306, 316, 317, 319, 324, 325, 332, 336, 337, 338, 339, 341, 342, 393, 394, 398, 404, 430], "hausknecht": 236, "wagen": 236, "reus": [236, 241, 378], "consistentdropoutmodul": [236, 406], "capit": 236, "themselv": [236, 412], "conceptu": 236, "devianc": 236, "set_exploration_typ": [236, 334, 383, 404, 406, 413, 414, 415, 417, 424, 430], "_main_async_collector": 236, "asyncdatacollector": [236, 404], "ditto": 236, "consistentdropout": 237, "input_shap": 237, "batcht": 237, "make_tensordict_prim": [237, 255, 259, 414], "input_dtyp": 237, "pase": 237, "get_default_dtyp": [237, 386], "mask_6127171760": 237, "env0": [237, 431], "num_cel": [238, 239, 241, 242, 243, 244, 249, 250, 255, 259, 260, 265, 266, 294, 313, 412, 413, 414, 415, 417, 418, 421, 424, 425, 430], "elu": [238, 239, 241, 242, 243, 244, 249, 250, 265, 412, 430], "activation_kwarg": [238, 239, 260], "norm_class": [238, 239, 241, 242, 260], "norm_kwarg": [238, 239, 260], "bias_last_lay": [238, 239, 241, 242, 243, 244, 250, 260], "aggregator_class": [238, 239, 241, 242, 412, 414, 430], "squashdim": [238, 239, 241, 250, 265, 430], "aggregator_kwarg": [238, 239, 241, 242, 412, 414], "squeeze_output": [238, 239, 241, 242, 412, 414], "cell": [238, 239, 253, 254, 255, 257, 258, 259, 260, 265, 266, 413, 415, 416, 417, 418, 419, 420, 421], "kernel": [238, 239, 265], "cnet": [238, 239], "conv3d": 238, "lazyconv2d": [239, 241, 242, 250, 265, 430], "default_atari_dqn": [239, 415], "semin": 239, "transformer_config": [240, 275, 297], "dtconfig": [240, 245, 275], "2202": [240, 245, 335], "05607": [240, 245, 335], "decisiontransform": [240, 275], "return_to_go": [240, 245, 275, 297], "conv_net_kwarg": [241, 242], "mlp_net_kwarg": [241, 242, 243], "use_avg_pool": [241, 242], "WITH": [241, 242, 243, 244, 277, 278, 340], "1509": [241, 242, 243, 244, 262, 277, 278, 321, 331, 340], "02971": [241, 242, 243, 244, 277, 278, 340], "convnet": [241, 242, 250, 265, 414, 415, 417, 430], "ndims_in": [241, 415], "avgpool": [241, 242], "lazylinear": [241, 242, 243, 244, 250, 260, 406, 413, 417, 426, 427, 430], "2304": [241, 412, 426], "adaptiveavgpool2d": [242, 412, 414], "output_s": [242, 412, 414], "squeeze2dlay": 242, "400": [243, 244, 420, 425, 426, 428], "mlp_net_kwargs_net1": 244, "mlp_net_kwargs_net2": 244, "mlp1": 244, "mlp2": 244, "decion": 245, "desdescrib": 245, "n_embd": 245, "n_layer": [245, 253, 257], "n_head": 245, "n_inner": 245, "n_posit": 245, "resid_pdrop": 245, "attn_pdrop": 245, "gpt2config": 245, "atol": [246, 285], "rtol": [246, 285], "batch_shap": [246, 273, 285], "event_shap": [246, 285], "absolut": [246, 285, 411], "_instanc": 246, "densiti": [246, 263, 264, 273, 287], "mass": [246, 263, 264, 273, 287, 426], "rsampl": [246, 264, 273, 306], "sample_shap": [246, 263, 264, 273], "softmax": [247, 264, 273, 298, 299], "var_num": [248, 280, 298, 299, 304], "action_value_kei": [248, 280, 298, 299, 303, 304, 319, 334, 349], "action_mask_kei": [248, 251, 280, 298, 299, 303, 304], "perspect": [248, 299, 326, 413, 415], "1707": [248, 299, 326, 336], "06887": [248, 299, 326], "mult": [248, 266, 280, 298, 299, 303, 304], "tensordict_modul": [248, 253, 254, 257, 258, 280, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 319, 320, 324, 325, 332, 336, 337, 338, 339, 341, 342, 406, 415], "nbin": [248, 298, 406], "customdistributionalqv": 248, "log_softmax": [248, 298], "qvalue_actor": [248, 280, 298, 303, 406], "to_modul": [248, 305, 308, 411, 430], "std_bia": 249, "std_min_val": 249, "belief": [249, 271, 281, 282], "1912": [249, 327, 328, 329], "01603": [249, 327, 328, 329], "softplu": [249, 270, 312, 314, 315], "out_features_valu": 250, "cnn_kwarg": [250, 412], "mlp_kwarg": [250, 412], "duel": 250, "cnn": [250, 265, 412, 415, 417, 430], "06581": 250, "greedi": [251, 252, 280, 299, 304, 412, 414, 415, 417], "eps_init": [251, 277, 278, 412, 414, 415, 417, 421], "eps_end": [251, 277, 278, 412], "explorative_polici": [251, 277, 278], "9055": 251, "9277": 251, "6295": 251, "2532": 251, "grad_fn": [251, 293, 430], "addbackward0": 251, "batch_first": [253, 255, 257, 259, 414], "bidirect": [253, 257, 414], "cudnn": [253, 254, 255, 257, 258, 259, 414, 415], "rnn": [253, 254, 255, 257, 258, 259, 292, 325, 339, 414, 415, 417], "device_count": [253, 254, 257, 258, 431], "n_in": [253, 254, 257, 258], "n_out": [253, 254, 257, 258], "h0": [253, 254, 257, 258], "h1": [253, 254, 257, 258], "vectoris": [253, 254, 257, 258], "call_gru": [253, 254], "h_out": [253, 254, 257, 258], "batched_cal": [253, 254, 257, 258], "gate": [253, 254, 257], "r_t": 253, "w_": [253, 254, 257, 258], "ir": [253, 254], "x_t": [253, 257], "b_": [253, 254, 257, 258], "hr": [253, 254, 257], "h_": [253, 254, 257], "z_t": 253, "iz": [253, 254], "hz": [253, 254], "n_t": 253, "odot": [253, 254, 257, 258], "hn": [253, 254, 257], "h_t": [253, 257], "sigmoid": [253, 254, 257, 258, 415], "hadamard": [253, 254, 257, 258], "multilay": [253, 257], "_t": [253, 257, 425, 426], "ge": [253, 257], "bernoulli": [253, 257], "b_ih": [253, 254, 257, 258, 259], "b_hh": [253, 254, 257, 258, 259], "h_0": [253, 257, 258], "unbatch": [253, 257], "pack_padded_sequ": [253, 257], "pack_sequ": [253, 257], "num": [253, 257, 421], "_layer": [253, 257], "_size": [253, 254, 257, 258], "h_n": [253, 257], "packedsequ": [253, 257], "weight_ih_l": [253, 257], "learnabl": [253, 254, 257, 258], "w_ir": 253, "w_iz": 253, "w_in": 253, "num_direct": [253, 257], "weight_hh_l": [253, 257], "w_hr": 253, "w_hz": 253, "w_hn": 253, "bias_ih_l": [253, 257], "b_ir": 253, "b_iz": 253, "b_in": 253, "bias_hh_l": [253, 257], "b_hr": 253, "b_hz": 253, "b_hn": 253, "mathcal": [253, 254, 257, 258], "sqrt": [253, 254, 257, 258, 277, 278], "frac": [253, 254, 257, 258, 413], "seq_len": [253, 257], "subtli": 253, "matrix": [253, 257, 268, 269], "contrast": [253, 276, 331, 428], "hx": [253, 254, 257, 258, 415], "lstmcell": [254, 259, 415], "gru_cel": 254, "weight_ih": [254, 258], "weight_hh": [254, 258], "bias_ih": [254, 258], "bias_hh": [254, 258], "rocm": [254, 258], "embedd": [255, 259], "grucel": [255, 305], "python_bas": [255, 259], "custom_kei": [255, 259], "hasn": [255, 259], "set_recurrent_mod": [255, 259, 414], "recurrent_mod": [255, 259, 292], "rs": [255, 411], "gru_module_train": 255, "policy_train": [255, 259], "traj_td": [255, 259], "make_cudnn_bas": [255, 259], "make_python_bas": [255, 259, 415], "supplementari": [255, 259, 413, 431], "That": [255, 259, 413, 424], "dealt": [255, 259], "poorli": [255, 259], "data_collector": [255, 259, 412], "policy_infer": [255, 259], "td_inf": [255, 259], "upscal": [256, 286, 287], "tanh_loc": [256, 286, 287], "event_dim": [256, 285, 286], "poor": [256, 286, 287], "explos": [256, 286, 287], "formula": [256, 286, 287, 316, 318, 333, 336, 407, 413], "proj_siz": 257, "c0": [257, 258], "c1": [257, 258], "call_lstm": [257, 258], "c_out": [257, 258], "i_t": 257, "ii": [257, 258], "hi": [257, 258], "f_t": 257, "hf": [257, 258], "g_t": 257, "ig": [257, 258], "hg": [257, 258], "o_t": 257, "ho": [257, 258], "c_t": 257, "c_": 257, "forget": 257, "1402": 257, "1128": 257, "c_0": [257, 258], "proj": 257, "c_n": 257, "w_ii": 257, "w_if": 257, "w_ig": 257, "w_io": 257, "w_hi": 257, "w_hf": 257, "w_hg": 257, "w_ho": 257, "b_ii": 257, "b_if": 257, "b_ig": 257, "b_io": 257, "b_hi": 257, "b_hf": 257, "b_hg": 257, "b_ho": 257, "weight_hr_l": 257, "_revers": 257, "analog": [257, 417], "cn": 257, "lstm_cell": 258, "h_1": 258, "c_1": 258, "time_step": [258, 301], "cx": 258, "correspont": 259, "recurrent_state_h": [259, 414], "recurrent_state_c": [259, 414], "triplet": [259, 303, 304], "lstm_modul": 259, "rs_h": 259, "rs_c": 259, "hidden0": [259, 415], "hidden1": [259, 415], "single_bias_last_lay": 260, "layer_class": 260, "layer_kwarg": 260, "perceptron": [260, 417], "aslo": 260, "noisylinear": [260, 268, 404, 412], "noisylazylinear": [260, 404], "mpcplanner": 261, "tensordict_out": [261, 431], "mppi": 262, "covari": 262, "william": [262, 338], "aldrich": 262, "theodor": 262, "01149": 262, "hansen": 262, "wang": 262, "su": 262, "04955": 262, "valueoper": [262, 294, 295, 296, 316, 317, 318, 319, 320, 325, 332, 333, 336, 337, 338, 339, 341, 342, 398, 406, 411, 413, 418], "tdlambdaestim": [262, 404, 411], "value_net": [262, 321, 323, 338, 351, 352, 353, 354, 413, 415, 417, 418, 421], "adv": 262, "lmbda": [262, 344, 351, 354, 356, 362, 363, 364, 367, 368, 407, 411, 413, 425], "value_network": [262, 320, 321, 323, 324, 326, 332, 339, 351, 352, 353, 354, 407, 411, 413, 415, 418, 421, 424], "temperatur": [262, 317, 324, 332], "neg_inf": [263, 264], "inf": [263, 264], "api_doc": [263, 264], "tf_agent": [263, 264], "event": [263, 264, 273, 360, 361, 362, 363, 365, 366, 367, 368, 428], "unnorm": [263, 264, 273], "sparse_mask": [263, 264], "dens": [263, 264], "0831": [263, 264], "1203": [263, 264], "0928": [263, 264], "1972": [263, 264, 426], "grad_method": [264, 273], "reparamgradientstrategi": [264, 273], "passthrough": [264, 273], "relaxedonehot": [264, 273], "sample_non_valid": 264, "zeros_lik": [264, 426], "share_param": [265, 266, 267, 424, 425], "use_td_param": [265, 266, 267], "get_stateful_net": [265, 266, 267, 334, 406, 407], "from_stateful_net": [265, 266, 267, 334, 407], "homogen": [265, 266, 424, 425], "tensordictparam": [265, 266], "_empty_net": [265, 266], "roughli": [265, 266, 430], "agent_network": [265, 266], "modulelist": [265, 266, 430], "2592": [265, 412], "decentr": 265, "n_agent_input": [266, 267, 424, 425], "n_agent_output": [266, 267, 424, 425], "toech": 266, "centalis": 266, "shown": [266, 406, 415, 423, 424, 425, 428], "agent_dim": 267, "vmap_random": [267, 334, 407], "stateful_net": [267, 334], "Such": [267, 334], "multiagentmlp": [267, 424, 425], "snet": 267, "hasattr": [267, 411], "kaiming_normal_": 267, "std_init": [268, 269], "device_typ": [268, 269], "initialize_paramet": 268, "isol": [268, 334, 415], "1706": [269, 288], "10295v3": 269, "induc": 269, "aid": 269, "scale_map": 270, "biased_softplus_1": 270, "scale_lb": [270, 281, 282], "module_norm": 270, "1803": [271, 272, 279], "10122": [271, 272], "rnn_hidden": 271, "latent": 272, "ordin": [274, 404], "parametris": [274, 276], "inres": 275, "mu": [275, 277, 278, 413], "impos": [276, 406], "proxim": [276, 336, 413, 425], "atom": 276, "tang": 276, "agraw": 276, "2020": 276, "1901": [276, 413], "10500": 276, "discretis": 276, "num_atom": 276, "num_sampl": 276, "middl": 276, "adam": [276, 286, 411, 412, 413, 414, 415, 418, 421, 424, 425, 426], "lr": [276, 411, 412, 413, 414, 421, 424, 425, 426], "optimis": [276, 424, 425], "minimis": 276, "penalis": 276, "0308": [276, 426], "1586": [276, 426], "4727": 276, "2260": 276, "1120": [276, 412], "histogram": 276, "return_typ": 276, "hist": [276, 428], "158": [276, 426], "478": [276, 426], "228": [276, 426], "112": [276, 426], "bin_edg": 276, "8000": [276, 411, 413], "6000": [276, 413], "4000": [276, 411, 412, 413], "ornstein": [277, 278, 411, 415], "uhlenbeck": [277, 278, 411, 415], "ou": [277, 278, 411], "correl": [277, 278], "noise_t": [277, 278], "noise_": [277, 278], "theta": [277, 278, 413, 426], "sigma_t": [277, 278], "sigma_": [277, 278], "anneal": [277, 278, 412, 417, 424], "ou_prev_nois": [277, 278], "ou_step": [277, 278], "x0": [277, 278], "sigma_min": [277, 278], "n_steps_ann": [277, 278], "is_init_kei": [277, 278], "_ou_prev_nois": [277, 278], "_ou_step": [277, 278], "state_shap": [279, 349], "mixing_embed_dim": [279, 349], "qmix": [279, 424, 425], "mixer": [279, 288, 349], "monoton": 279, "hyper": 279, "11485": 279, "qmixerloss": [279, 288], "qmix_vdn": [279, 288], "vdn": [279, 288], "hidden_dim": [281, 282], "posterior": [281, 328], "rssm": [281, 282, 328], "1811": [281, 282], "04551": [281, 282], "obs_embed": 281, "rnn_hidden_dim": 282, "dream": 282, "safe_tanh": 286, "tanhtransform": 286, "overflow": [286, 293, 298, 299, 302, 303, 304, 305, 306], "get_mod": 286, "decomposit": 288, "05296": 288, "hide": [289, 413, 424, 425], "satisfi": [289, 406], "vmap_dim": 289, "lam": 289, "sample_in": 289, "sample_in_td": 289, "vm": 289, "translat": [293, 302], "character": [293, 298, 302, 303, 305, 428], "td_modul": [293, 294, 295, 296, 302, 305, 306, 308, 310, 417, 430], "3635": 293, "0340": 293, "1476": 293, "3911": 293, "1664": [293, 412, 426], "5455": 293, "2247": 293, "4583": 293, "2916": 293, "2160": 293, "5337": [293, 426], "5193": 293, "addmmbackward0": 293, "actorvalueoper": [294, 318, 333, 336, 406, 417], "get_policy_oper": [294, 295, 296, 318, 333, 336, 406], "standalon": [294, 295, 296, 415, 417], "tdmodul": [294, 295, 296, 398], "get_critic_oper": 294, "common_oper": [294, 296], "policy_oper": [294, 295, 296], "value_oper": [294, 295, 296], "module_hidden": [294, 296], "td_module_hidden": [294, 296], "module_act": [294, 296], "td_module_act": [294, 295, 296], "module_valu": [294, 295, 296], "td_module_valu": [294, 295, 296], "state_action_valu": [294, 310, 317, 319, 324, 332, 339, 350, 398, 406, 411, 424, 430], "td_clone": [294, 295, 296], "tensordictmodulewrapp": [294, 393, 394, 398], "get_policy_head": [294, 295, 296], "safesequenti": [294, 295, 296, 349], "head": [294, 296, 313, 318, 333, 336], "get_value_head": [294, 295, 296], "get_value_oper": [294, 295, 296, 318, 333, 336], "action_modul": 295, "state_valu": [295, 296, 310, 318, 324, 332, 333, 336, 337, 339, 351, 352, 353, 354, 356, 358, 360, 362, 364, 365, 367, 406, 411, 413, 425], "actorcriticoper": [296, 406, 417], "actorcriticwrapp": [296, 406, 411], "inferec": 297, "set_tensor_kei": 297, "dt_inference_wrapp": 297, "baz": 297, "inference_context": 297, "obs_dim": 297, "tanhdelta": [297, 404, 411, 424], "dtactor": 297, "actor_modul": [297, 430], "dist_class": 297, "dist_kwarg": 297, "distribution_kwarg": [297, 302, 306, 413, 424, 425], "inference_actor": 297, "sequence_length": 297, "mask_context": 297, "out_act": 297, "qvaluemodul": [298, 303, 349, 414, 415, 417, 421], "distributionaldqnnet": 298, "make_log_softmax": 298, "my_action_valu": [299, 304], "chanc": 299, "thid": 299, "lmheadmodel": 300, "actor_head": [300, 318, 333, 336], "base_model": 300, "lm_head": 300, "macro": 301, "lookahead": 301, "n_action": [301, 317, 319, 321, 323, 335, 339], "reshape_cat": 301, "actor_bas": 301, "obs_cat": 301, "obs_cat_reshap": 301, "action_orig": 301, "default_interaction_typ": [302, 306, 417], "interaction_typ": [302, 306], "datacollectorbas": [302, 390, 393, 394, 398, 404], "set_interaction_typ": [302, 306], "compositedistribut": [302, 316, 336, 417], "distribution_map": 302, "name_map": 302, "cache_dist": [302, 306], "n_empirical_estim": [302, 306], "compound": [302, 417], "chose": 304, "functionalmodul": 305, "functionalmodulewithbuff": 305, "td_fmodul": 305, "td_function": 305, "td_state": 305, "params_repeat": 305, "td_vmap": [305, 308], "random_sampl": [305, 306], "suppli": 306, "fist": 306, "log_prob_kei": [306, 425], "probabilistictensordictsequenti": [307, 316, 318, 333, 336, 338, 393, 394, 430], "partial_toler": [307, 308, 423], "who": [307, 308], "AND": [307, 308, 319], "tensordictsequenci": 308, "tensordictsequ": 308, "safeprobabilisticmodul": [308, 406], "spec1": 308, "net1": 308, "module1": 308, "td_module1": 308, "spec2": 308, "module2": 308, "td_module2": 308, "clamp": [309, 328, 388, 424, 426], "boundari": [309, 413, 415, 424, 425], "resolut": 309, "9944": 309, "9991": 309, "3020": [309, 426], "2299": 309, "5418": 309, "2989": [309, 415, 426], "6849": 309, "3169": 309, "2690": 309, "9649": 309, "5686": [309, 426], "8602": 309, "0315": 309, "8455": 309, "6027": [309, 426], "4746": 309, "7843": 309, "7782": 309, "2111": 309, "5115": 309, "4687": 309, "5760": [309, 426], "custommodul": 310, "imaginari": 311, "imagin": 311, "transition_model": 311, "get_reward_oper": 311, "get_transition_model_oper": 311, "min_val": [312, 315], "_bia": 312, "surject": 315, "expln": 315, "biased_softplu": [315, 404], "beggin": 315, "biased_softplus_": 315, "syntax": [315, 411], "met": [315, 424, 426], "1602": 316, "01783v2": 316, "actor_network": [316, 317, 318, 319, 320, 322, 324, 325, 332, 333, 335, 336, 337, 338, 339, 341, 342, 407, 411, 413, 418, 424, 425], "critic_network": [316, 318, 333, 336, 338, 413, 425], "entropy_bonu": [316, 318, 333, 336, 413], "favour": [316, 318, 333, 336], "samples_mc_entropi": [316, 318, 333, 335, 336], "entropy_coef": [316, 318, 333, 336, 413, 425], "critic_coef": [316, 318, 333, 336, 413], "loss_critic_typ": [316, 318, 333, 336, 338, 413], "l1": [316, 318, 320, 321, 325, 333, 336, 337, 338, 341, 342, 345, 349, 406, 411], "l2": [316, 318, 320, 321, 322, 323, 325, 328, 329, 333, 336, 337, 338, 341, 342, 345, 349, 411, 424], "smooth_l1": [316, 317, 318, 319, 320, 321, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 345, 349, 413], "separate_loss": [316, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342], "propag": [316, 318, 319, 320, 324, 325, 332, 333, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 413, 424, 425], "advantage_kei": [316, 318, 333, 336, 338, 351, 352, 353, 354], "value_target_kei": [316, 318, 333, 336, 338, 351, 352, 353, 354], "value_target": [316, 318, 333, 336, 338, 351, 352, 353, 354, 413, 425], "ddp": [316, 318, 333, 336, 338], "fsdp": [316, 318, 333, 336, 338], "divid": [316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 332, 333, 335, 336, 337, 338, 339, 341, 342, 391, 411, 424, 425, 426], "clip_valu": [316, 318, 333, 336, 338], "loss_crit": [316, 336, 413, 425], "loss_entropi": [316, 336, 413, 425], "loss_object": [316, 336, 413, 425], "recur": [316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354, 355, 417], "next_reward": [316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354], "next_don": [316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354], "next_termin": [316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 351, 352, 353, 354], "loss_obj": 316, "next_observ": [316, 317, 319, 320, 321, 323, 324, 325, 332, 336, 337, 338, 339, 341, 342, 423], "sacloss": [316, 331, 340, 404], "fraction": 316, "make_value_estim": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 349, 407, 411, 412, 424, 425, 430], "value_typ": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 344, 349, 411], "hyperparam": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 411], "enum": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 344, 349, 411], "default_value_estim": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 411, 430], "default_value_kwarg": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 404, 411], "dqn_loss": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 343, 349], "td1": [316, 317, 319, 320, 321, 323, 325, 326, 327, 332, 334, 336, 337, 338, 339, 341, 342, 349, 411], "conserv": [317, 323], "qvalue_network": [317, 319, 324, 325, 332, 337, 339, 341, 342], "unti": [317, 319, 332, 337, 339, 341, 342], "loss_funct": [317, 319, 320, 321, 322, 323, 324, 325, 332, 337, 339, 341, 342, 345, 349, 411, 424], "alpha_init": [317, 319, 325, 335, 337, 339], "min_alpha": [317, 319, 325, 335, 337, 339], "max_alpha": [317, 319, 325, 335, 337, 339], "fixed_alpha": [317, 319, 325, 335, 337, 339], "target_entropi": [317, 319, 325, 335, 337, 339], "prod": [317, 319, 335, 339], "delay_actor": [317, 320, 339, 341, 342], "delay_qvalu": [317, 325, 337, 339, 341, 342], "min_q_weight": 317, "max_q_backup": 317, "backup": 317, "deterministic_backup": 317, "num_random": 317, "with_lagrang": 317, "lagrang": 317, "lagrange_thresh": 317, "valueclass": [317, 319, 320, 325, 337, 339, 341, 342], "qvalu": [317, 319, 324, 325, 332, 337, 339, 341, 342], "loss_actor": [317, 319, 320, 324, 325, 332, 337, 338, 339, 341, 342, 384, 411, 418, 424, 430], "loss_actor_bc": 317, "loss_alpha": [317, 319, 325, 337, 339], "loss_cql": [317, 323], "loss_qvalu": [317, 319, 323, 324, 325, 332, 337, 339, 341, 342], "loss_alpha_prim": 317, "clip_epsilon": [318, 413, 425], "normalize_advantag": [318, 333, 336, 425], "value_kei": [318, 333, 336, 351, 352, 353, 354, 411], "somemodul": [318, 333, 336], "someactor": [318, 333, 336], "value_head": [318, 333, 336], "somevalu": [318, 333, 336], "loss_modul": [318, 331, 333, 334, 336, 340, 388, 397, 398, 407, 408, 411, 412, 413, 424, 425, 428], "IN": 319, "FOR": 319, "simplic": [319, 412, 413, 419, 427, 428, 430], "openreview": [319, 337], "pczqttstix": 319, "qvalue_loss": [319, 341], "actor_loss": [319, 341], "alpha_loss": 319, "num_qvalue_net": [319, 324, 325, 332, 337, 339, 341, 342], "maybe_init_target_entropi": 319, "fault_toler": 319, "target_entropy_buff": 319, "delay_valu": [320, 321, 323, 326, 338, 339, 349, 412, 414, 415, 421, 424], "loss_valu": [320, 324, 332, 338, 339, 411, 413, 418, 424, 425, 430], "pred_valu": [320, 323, 341, 342, 411, 418, 430], "pred_value_max": [320, 411, 418, 430], "target_valu": [320, 323, 337, 341, 342, 350, 407, 411, 418, 430], "target_value_max": [320, 411, 418, 430], "qvalueactor": [321, 323, 349, 412, 414], "double_dqn": 321, "06461": [321, 331], "mult_one_hot": [321, 324, 325, 349], "loss_val": [321, 323, 407, 411, 413, 414, 415, 418, 419, 421, 424, 425, 428], "01345": 322, "distanc": [323, 333, 345, 350, 351, 425], "dcql_loss": 323, "2110": [324, 332], "06169": [324, 332], "expectil": [324, 332], "tau": [324, 332, 340, 411, 412, 424], "antmaz": [324, 332], "sticht": [324, 332], "onehotcategor": [324, 325, 404], "target_entropy_weight": 325, "skip_done_st": [325, 339], "disctount": 326, "distributionalqvalueactor": [326, 406], "input_tensordict": [326, 411], "actor_model": 327, "value_model": [327, 329], "imagination_horizon": 327, "unrol": [327, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368], "discount_loss": [327, 329], "lambda_kl": 328, "lambda_reco": 328, "lambda_reward": 328, "reco_loss": 328, "reward_loss": 328, "free_nat": 328, "nat": 328, "delayed_clamp": 328, "global_averag": 328, "value_loss": 329, "fake_data": 329, "1606": 330, "03476": 330, "discriminator_network": 330, "use_grad_penalti": 330, "gp_lambda": 330, "discrimin": 330, "ddpgloss": [331, 340, 398, 404, 411, 418, 424, 430], "td3loss": [331, 340, 404], "value_network_update_interv": 331, "qvalueclass": 332, "loss_value_diff": 332, "diff": 332, "old_polici": 333, "new_polici": 333, "apart": [333, 425], "dtarg": 333, "samples_mc_kl": 333, "analyt": 333, "decrement": 333, "loss_": [334, 384, 407, 411, 418], "equip": [334, 414, 415, 417], "gh": 334, "_acceptedkei": 334, "_forward_value_estimator_kei": 334, "alter": [334, 406], "value_estim": [334, 351, 352, 353, 354, 355, 407, 411, 425], "myloss": 334, "action2": 334, "augment": [334, 419, 421, 428], "deterministic_sampling_mod": 334, "convert_to_funct": [334, 411], "expand_dim": 334, "create_target_param": [334, 411], "compare_against": [334, 411], "_param": 334, "resampl": 334, "_target_param": 334, "network_nam": 334, "blend": 334, "add_random_modul": [334, 407], "flavor": [336, 411, 424, 425, 430], "clipppoloss": [336, 404, 413, 425], "klpenppoloss": [336, 404], "06347": 336, "gae": [336, 404, 407, 411, 413, 425], "ppo_loss": 336, "tdlambda": [336, 344, 407, 411], "base_lay": 336, "randn_lik": 336, "samplelogprob": 336, "ay8zfzm0tdd": 337, "sub_sample_len": 337, "subsampl": [337, 379, 408], "action_log_prob_actor": 337, "state_action_value_actor": [337, 341, 342], "connectionist": 338, "1992": 338, "doi": 338, "1007": 338, "bf00992696": 338, "actor_net": [338, 411, 413], "1801": [339, 426], "01290": 339, "applic": [339, 349, 416, 417, 426], "1812": 339, "05905": 339, "redqloss": [340, 404], "math": 340, "theta_t": [340, 426], "theta_": [340, 426], "polyak": 340, "minimalist": 341, "06860": 341, "policy_nois": [341, 342], "noise_clip": [341, 342], "td3_bc": 341, "bc_loss": 341, "lmbd": 341, "next_state_valu": [341, 342, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 404], "td0": [343, 411, 424], "strict_shap": 345, "view_a": 345, "qmixer": [349, 404], "local_valu": 349, "visibl": [349, 425], "dafault": 349, "acceptedkei": 349, "global_valu": 349, "penultim": 349, "local_value_network": 349, "mixer_network": 349, "value_modul": [349, 413, 430], "qnet": [349, 411], "next_val_kei": 350, "pred_next_v": 350, "usus": 350, "mse": 350, "q_valu": 350, "n_steps_to_next": 350, "value_next_st": 350, "1506": [351, 356, 364], "02438": [351, 356, 364], "exponenti": [351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 386], "average_ga": [351, 413], "skip_exist": [351, 352, 353, 354], "get_default_devic": [351, 352, 353, 354, 355], "time_dim": [351, 353, 354, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368], "gradient_mod": 351, "value_error": [351, 352, 353, 354, 355], "target_param": [351, 352, 353, 354, 355, 411, 425], "98": [351, 352, 353, 354, 411, 412, 426, 427], "94": [351, 354, 411, 412, 426, 427], "unpack": [351, 352, 353, 354], "tensor_kei": [351, 352, 353, 354, 355], "next_valu": [351, 352, 353, 354, 355], "aka": [352, 412, 424], "average_reward": [352, 353, 354], "tdestim": [352, 353, 355], "infti": 353, "valuefunctionbas": 355, "old_stat": [356, 358, 360, 362, 364, 365, 367], "new_stat": [356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "rolling_gamma": [360, 361, 362, 363, 365, 366, 367, 368], "g1": [360, 361, 362, 363, 365, 366, 367, 368], "g2": [360, 361, 362, 363, 365, 366, 367, 368], "g3": [360, 361, 362, 363, 365, 366, 367, 368], "g4": [360, 361, 362, 363, 365, 366, 367, 368], "v3": [360, 361, 362, 363, 365, 366, 367, 368], "preproc": [369, 415, 424], "as_non_tensor": [369, 424], "render_method": 369, "pass_tensordict": 369, "syntat": 369, "sugar": 369, "out_file_bas": 370, "skip_reset": 370, "center_crop": 371, "make_grid": 371, "csv": [371, 373, 375, 412, 420, 421], "wandb": [371, 375, 378, 420, 430], "tensorboard": [371, 375, 377, 420, 430], "log_dir": [371, 372, 373, 375, 377, 378, 412, 421], "cheetah_video": 371, "run_video": 371, "openxexperiencereplai": 371, "run_video_0": 371, "templat": 372, "pt": [373, 408, 427], "video_fp": 373, "dependeci": 373, "cur_dir": 373, "csv_log": 373, "add_video": 373, "video_": 373, "experiment_nam": [374, 375], "uuid": [374, 412, 431], "logger_typ": 375, "logger_nam": 375, "mlflow": [375, 376], "wandb_kwarg": 375, "mlflow_kwarg": 375, "tracking_uri": 376, "uri": 376, "datastor": 376, "tb_log": 377, "tensoarboard": 377, "td_log": 377, "save_dir": 378, "resum": 378, "uncategor": 378, "sub_traj_len": 379, "min_sub_traj_len": 379, "register_op": [379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 408, 412], "process_optim_batch": [379, 385, 386, 408], "td_out": [379, 387], "_process_optim_batch_hook": [379, 408], "batch_subsampl": 379, "clear_cuda": 380, "pre_optim_step": [380, 408], "log_pbar": [381, 382, 383, 386, 408, 412], "progress": [381, 382, 383, 388, 408, 412, 414, 431], "count_fram": 381, "pre_steps_log": [381, 382, 408], "count_frames_log": 381, "lognam": 382, "r_train": [382, 412], "log_reward": [382, 412], "record_interv": [383, 411, 412], "record_fram": [383, 391, 411, 412], "policy_explor": [383, 398, 411, 412, 415, 417, 421], "log_kei": [383, 412], "underestim": 383, "r_evalu": [383, 411], "loss_compon": 384, "appl": 384, "optimizer_hook": 384, "flatten_tensordict": [385, 412], "max_dim": 385, "rb_trainer": 385, "batch_process": [385, 386, 387, 408], "post_loss": [385, 408], "999": [386, 412], "jitter": 386, "finfo": 386, "default_dtyp": 386, "reward_norm": 386, "update_reward_stat": 386, "normalize_reward": 386, "make_train": [387, 404], "_process_batch_hook": [387, 408], "select_kei": [387, 408], "versatil": [388, 416], "optim_steps_per_batch": [388, 408, 412], "clip_grad_norm": 388, "clip_norm": 388, "progress_bar": 388, "save_trainer_interv": 388, "log_interv": [388, 412], "save_trainer_fil": [388, 408], "load_from_fil": [388, 408], "update_weights_interv": [390, 412], "update_weight": 390, "post_step": [390, 408, 412], "cfg": [391, 392, 393, 394, 395, 396, 397, 398, 399, 402], "dictconfig": [391, 392, 393, 394, 396, 397, 398, 399, 402], "unknowingli": 391, "annealing_fram": [391, 411], "init_env_step": [391, 392, 411], "proof_environ": [392, 411], "sta": 392, "ot": 392, "actor_model_explor": [393, 394, 411], "make_env_kwarg": [393, 394], "targetnetupdat": [395, 397, 398], "replayargsconfig": 396, "target_net_updat": [398, 411, 412], "constitu": 398, "egreedywrapp": 398, "env_proof": 398, "obs_spec": 398, "net_valu": 398, "dir": [398, 408, 412], "gettempdir": 398, "argpars": [399, 402], "namespac": [399, 402], "parser": [399, 402], "transformed_env_constructor": [399, 404], "num_env_per_collector": [400, 401], "video_tag": 402, "norm_obs_onli": 402, "use_env_cr": 402, "custom_env_mak": 402, "custom_env": 402, "return_transformed_env": 402, "action_dim_gsd": 402, "state_dim_gsd": 402, "obs_norm_state_dict": 402, "wheter": 402, "maker": [402, 412], "distributedsyncdatacollector": 404, "submitit_delayed_launch": 404, "raycollector": 404, "rational": 404, "footnot": 404, "binarydiscretetensorspec": 404, "boundedtensorspec": 404, "discretetensorspec": 404, "lazystackedcompositespec": 404, "lazystackedtensorspec": 404, "multidiscretetensorspec": 404, "multionehotdiscretetensorspec": 404, "onehotdiscretetensorspec": 404, "unboundedcontinuoustensorspec": 404, "unboundeddiscretetensorspec": 404, "prompttensordicttoken": 404, "rolloutfrommodel": 404, "tokenizeddatasetload": 404, "create_infinite_iter": 404, "constantklcontrol": 404, "adaptiveklcontrol": 404, "consolidate_spec": 404, "check_no_exclusive_kei": 404, "contains_lazy_spec": 404, "nested2t": 404, "h5combin": 404, "h5split": 404, "tictactoeenv": 404, "llmhashingenv": 404, "check_marl_group": 404, "get_available_librari": 404, "terminated_or_trunc": 404, "dreamerdecod": 404, "braxwrapp": 404, "dmcontrolwrapp": 404, "jumanjienv": 404, "jumanjiwrapp": 404, "meltingpotenv": 404, "meltingpotwrapp": 404, "mogymenv": 404, "mogymwrapp": 404, "multithreadedenvwrapp": 404, "openmlenv": 404, "openspielwrapp": 404, "openspielenv": 404, "pettingzooenv": [404, 424], "robohiveenv": 404, "smacv2env": 404, "smacv2wrapp": 404, "unitymlagentsenv": 404, "unitymlagentswrapp": 404, "vmaswrapp": 404, "qvaluehook": 404, "distributionalqvaluehook": 404, "reset_nois": 404, "cemplann": 404, "mpcplannerbas": 404, "mppiplann": 404, "independentnorm": 404, "normalparamwrapp": 404, "truncatednorm": 404, "maskedonehotcategor": 404, "onehotordin": 404, "inv_softplu": 404, "vmapmodul": 404, "distributionaldqnloss": [404, 412], "discretesacloss": 404, "crossqloss": 404, "iqlloss": 404, "discreteiqlloss": 404, "cqlloss": 404, "discretecqlloss": 404, "gailloss": 404, "dtloss": 404, "onlinedtloss": 404, "td3bcloss": 404, "ppoloss": 404, "a2closs": 404, "reinforceloss": 404, "dreameractorloss": 404, "dreamermodelloss": 404, "dreamervalueloss": 404, "td0estim": [404, 411], "td1estim": [404, 411], "td0_return_estim": 404, "td0_advantage_estim": 404, "td1_return_estim": 404, "vec_td1_return_estim": 404, "td1_advantage_estim": 404, "vec_td1_advantage_estim": 404, "td_lambda_return_estim": 404, "vec_td_lambda_return_estim": 404, "td_lambda_advantage_estim": 404, "vec_td_lambda_advantage_estim": 404, "generalized_advantage_estim": 404, "vec_generalized_advantage_estim": 404, "reward2go": 404, "hardupd": [404, 411, 418], "softupd": [404, 411, 412, 414, 415, 418, 421, 424], "distance_loss": [404, 411], "group_optim": 404, "hold_out_net": 404, "hold_out_param": [404, 411], "batchsubsampl": [404, 408], "clearcudacach": 404, "countframeslog": 404, "logscalar": [404, 408, 412], "optimizerhook": [404, 412], "logvalidationreward": [404, 408, 411, 412], "replaybuffertrain": [404, 408, 412], "rewardnorm": 404, "selectkei": [404, 408], "trainerhookbas": [404, 408, 412], "updateweight": [404, 408, 412], "make_collector_offpolici": 404, "make_collector_onpolici": 404, "make_dqn_loss": 404, "make_replay_buff": [404, 411], "make_target_updat": 404, "parallel_env_constructor": [404, 411], "sync_async_collector": 404, "sync_sync_collector": 404, "correct_for_frame_skip": 404, "get_stats_random_rollout": 404, "mlflowlogg": 404, "get_logg": 404, "generate_exp_nam": 404, "journei": 405, "textbook": 405, "highlight": [405, 424], "ever": [405, 425], "bump": 405, "think": [405, 413, 424, 425, 431], "benefit": [405, 416, 424, 425, 428], "pr": 405, "ground": [406, 411, 426], "recycl": [406, 428], "noisier": 406, "Their": [406, 424, 425], "sd": [406, 431], "prob_modul": 406, "uncertainti": 406, "soften": 406, "backbon": [406, 414, 417, 423, 430], "make_actor": 406, "make_valu": 406, "shared_param": 406, "make_common": 406, "reusabl": [407, 411, 428], "swappabl": [407, 411], "characterist": [407, 411, 426], "trainabl": [407, 411, 418, 427], "smth": [407, 411], "metric": [407, 411], "plenti": [407, 415], "amort": [407, 412, 413], "told": [407, 413], "pseudo": [407, 419, 426], "buri": 407, "str_valu": 407, "nutshel": [407, 411], "barto": [407, 424, 425], "chapter": [407, 420], "significantli": [407, 411, 412, 418, 425], "value_net_loss": 407, "pow": [407, 411], "room": 407, "signifi": [407, 424, 425], "underperform": 407, "thin": 407, "intric": [407, 417], "believ": 408, "scheme": [408, 431], "substenti": 408, "_pre_steps_log_hook": 408, "_pre_optim_hook": 408, "sub_batch": 408, "_post_loss_hook": 408, "_post_optim_hook": 408, "post_optim": [408, 412], "_post_optim_log": 408, "post_optim_log": 408, "_post_steps_hook": 408, "_post_steps_log_hook": 408, "post_steps_log": 408, "reserv": 408, "logginghook": 408, "logging_hook": 408, "save_dict": 408, "some_valu": 408, "torchsnapshot": 408, "ckpt_backend": 408, "filepath": 408, "save_train": 408, "472": [410, 426, 429], "galleri": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "mem": [410, 429], "mb": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431], "torchrl_env": [410, 429, 431], "56": [410, 411, 412, 426, 427, 429, 431], "625": [410, 426, 429, 431], "dqn_with_rnn": [410, 414, 429], "549": [410, 414, 426, 429], "2236": [410, 414, 429], "rb_tutori": [410, 428, 429], "655": [410, 428, 429], "514": [410, 426, 428, 429], "154": [410, 426, 429], "318": [410, 416, 417, 426, 429], "coding_dqn": [410, 412, 429], "53": [410, 412, 426, 429], "668": [410, 412, 426, 429], "torchrl_demo": [410, 429, 430], "718": [410, 429, 430], "325": [410, 426, 429], "coding_ddpg": [410, 411, 429], "329": [410, 411, 426, 429], "multiagent_ppo": [410, 425, 429], "54": [410, 411, 412, 425, 426, 429], "662": [410, 425, 429], "multiagent_competitive_ddpg": [410, 424, 429], "630": [410, 424, 429], "321": [410, 413, 418, 426, 429, 431], "coding_ppo": [410, 413, 429], "756": [410, 413, 429], "pretrained_model": [410, 427, 429], "097": [410, 427, 429], "4177": [410, 429], "4716": [410, 429], "multi_task": [410, 423, 429], "57": [410, 411, 412, 423, 424, 426, 429], "883": [410, 423, 429], "319": [410, 411, 423, 426, 429], "52": [410, 411, 412, 416, 417, 426, 427, 428, 429], "551": [410, 417, 426, 429], "342": [410, 416, 426, 429], "393": [410, 418, 426, 429], "25": [410, 411, 412, 413, 414, 421, 424, 425, 426, 427, 429], "865": [410, 421, 426, 429], "867": [410, 419, 429], "732": [410, 420, 429], "349": [410, 426, 429], "author": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 431], "vincent": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 428, 431], "moen": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 426, 428, 431], "assembl": 411, "focus": [411, 418], "straightforward": [411, 412, 416, 417, 418, 419, 428], "maxim": [411, 418, 426], "transpar": [411, 414], "illustr": [411, 412, 417, 428], "bash": 411, "is_fork": [411, 412, 413, 414, 424, 425, 427], "get_start_method": [411, 412, 413, 414, 424, 425, 427], "collector_devic": 411, "loss_dict": 411, "oblivi": [411, 413, 428], "elementari": 411, "didact": [411, 415], "dilut": 411, "pessimist": [411, 412, 413], "target_actor_network_param": 411, "actor_in_kei": 411, "actor_crit": 411, "compromis": 411, "hp": 411, "_value_estim": 411, "elif": [411, 412], "unknown": 411, "_loss_actor": 411, "td_copi": 411, "actor_network_param": [411, 424], "value_network_param": [411, 424], "_loss_valu": 411, "pred_val": 411, "target_value_network_param": 411, "glue": 411, "_forward": 411, "remaind": 411, "env_librari": 411, "env_task": 411, "env_arg": [411, 412], "friendli": 411, "torchr": 411, "rescal": 411, "presum": 411, "make_transformed_env": 411, "reward_sc": 411, "marker": 411, "env_per_collector": 411, "transform_state_dict": 411, "make_t_env": 411, "cheat": 411, "10m": 411, "cautiou": 411, "magnitud": [411, 424], "thousand": [411, 414], "get_env_stat": 411, "proof_env": 411, "5000": [411, 412, 413, 415, 421], "recal": [411, 413, 428], "ddpgmlpactor": 411, "ddpgmlpqnet": 411, "materi": 411, "ornsteinuhlenbeckprocessmodul": [411, 417], "make_ddpg_actor": 411, "q_net": 411, "tight": 411, "decoupl": [411, 418, 430], "10_000": [411, 413], "traj_len": [411, 414], "make_record": 411, "recorder_obj": 411, "pick": [411, 412, 417], "buffer_s": [411, 412], "random_crop_len": 411, "prb": 411, "buffer_scratch_dir": 411, "temporari": 411, "dataflow": 411, "ceil_div": 411, "utd": [411, 414], "update_to_data": 411, "realiz": 411, "_must_": 411, "001": [411, 426], "outdat": 411, "trick": [411, 412], "despit": 411, "optimizer_actor": 411, "weight_decai": [411, 412], "optimizer_valu": 411, "total_collection_step": 411, "pretti": [411, 416, 420, 428], "rewards_ev": 411, "collected_fram": 411, "r0": 411, "numel": [411, 413, 414, 415, 421, 424, 427, 428], "current_fram": [411, 424], "sampled_tensordict": 411, "gn1": 411, "clip_grad_norm_": [411, 413, 424, 425, 426], "gn2": 411, "gn": [411, 426], "td_record": 411, "rn": 411, "set_descript": [411, 413, 414, 424, 425, 426], "2f": 411, "800": [411, 412], "2629": 411, "65it": 411, "1600": [411, 412], "660": 411, "75it": [411, 412], "2400": [411, 412], "07": [411, 412, 425, 426], "987": 411, "80it": [411, 412], "3200": [411, 412], "1291": [411, 426], "48it": [411, 412], "1562": 411, "01it": [411, 412, 426], "48": [411, 412, 426, 427], "4800": [411, 412, 426], "1798": 411, "47it": [411, 412], "5600": 411, "1985": 411, "50it": [411, 412], "168": [411, 426], "421": [411, 426], "6400": [411, 430], "696": 411, "40it": [411, 412], "65": [411, 412, 426], "236": [411, 426], "72": [411, 412, 426], "7200": 411, "09": [411, 412, 414, 424, 426], "489": [411, 426], "08it": [411, 412, 413, 426], "47": [411, 412, 426], "412": [411, 426], "401": [411, 426], "67it": [411, 414, 426], "8800": 411, "362": [411, 413, 426], "36it": [411, 412], "91": [411, 412, 426, 427], "60": [411, 412, 413, 424, 425, 426, 430], "1118": 411, "752": 411, "58": [411, 412, 426, 427], "96": [411, 412, 426, 427], "9600": 411, "282": [411, 426], "92it": [411, 412, 426], "219": [411, 426], "388": [411, 426], "49": [411, 412, 426, 427], "10400it": 411, "265": [411, 426], "21it": [411, 412], "246": [411, 426], "61": [411, 412, 426, 427], "501": [411, 426], "mention": [411, 414, 428, 431], "matplotlib": [411, 413, 414, 415, 424, 425, 426, 428, 431], "pyplot": [411, 413, 414, 415, 424, 425, 426, 428, 431], "plt": [411, 413, 414, 415, 424, 425, 426, 428, 431], "zip": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "legend": [411, 424], "xlabel": [411, 414, 425, 426], "ylabel": [411, 425], "tight_layout": 411, "takeawai": [411, 412, 415], "distpatch": 411, "jupyt": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "ipynb": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431], "sphinx": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431], "road": 412, "aspect": [412, 418], "highest": [412, 417], "prerequisit": [412, 414], "lookup": 412, "cart": 412, "pole": 412, "un": 412, "actuat": 412, "frictionless": 412, "duelingcnndqnet": 412, "egreedymodul": [412, 414, 415, 417, 421], "is_notebook": 412, "shell": 412, "get_ipython": 412, "__class__": 412, "zmqinteractiveshel": 412, "qtconsol": 412, "terminalinteractiveshel": 412, "ipython": [412, 425, 426], "nameerror": [412, 424], "umbrella": 412, "misplac": 412, "misus": 412, "orchestr": [412, 418, 420], "five": 412, "64x64": 412, "motion": [412, 426], "obs_norm_sd": 412, "mp_context": 412, "simpler": [412, 416], "get_norm_stat": 412, "test_env": 412, "mathbb": 412, "rightarrow": 412, "make_model": 412, "dummy_env": 412, "init_bia": 412, "exploration_modul": [412, 414, 415, 417, 421], "eps_greedy_v": 412, "eps_greedy_val_env": 412, "actor_explor": 412, "get_replay_buff": 412, "n_optim": [412, 418, 419], "parametriz": 412, "get_collector": 412, "cl": 412, "bunch": 412, "ubiquit": [412, 416], "get_loss_modul": 412, "target_updat": [412, 424], "995": 412, "hopefulli": 412, "variat": 412, "2e": [412, 426], "wd": 412, "upd": 412, "harder": [412, 430], "5_000": 412, "500000": 412, "100000": 412, "005": [412, 424], "mandatori": [412, 413, 425, 426], "fairer": 412, "budget": 412, "dqn_exp_": 412, "uuid1": [412, 431], "9895": 412, "0737": 412, "registr": 412, "cumbersom": 412, "buffer_hook": 412, "weight_updat": 412, "aliv": 412, "total_reward": 412, "41it": 412, "3688": 412, "9346": 412, "97it": [412, 426], "3718": 412, "74it": [412, 426], "3475": 412, "51it": 412, "3778": 412, "3505": 412, "55": [412, 426, 428], "224": [412, 426], "03it": [412, 426], "4295": 412, "288": [412, 426], "17it": 412, "3991": 412, "35it": 412, "352": [412, 426], "384": [412, 426], "83it": [412, 426], "416": [412, 426], "73it": 412, "3474": 412, "448": [412, 426], "480": [412, 426, 427], "46it": [412, 426], "4173": 412, "544": [412, 426], "88it": [412, 413, 426], "4021": 412, "576": [412, 426], "53it": [412, 426], "3657": 412, "608": [412, 426], "61it": 412, "3566": 412, "640": 412, "81it": [412, 414, 426], "672": 412, "62it": 412, "704": 412, "90it": [412, 426], "3415": 412, "736": 412, "69it": [412, 413, 426], "768": [412, 415], "34it": 412, "42it": 412, "832": 412, "25it": 412, "3353": 412, "864": [412, 426], "86it": [412, 426], "3293": 412, "896": 412, "85": [412, 426, 427], "49it": 412, "928": 412, "24it": 412, "960": 412, "992": 412, "19it": 412, "29it": 412, "3899": [412, 426], "1056": 412, "1088": 412, "64it": 412, "45it": 412, "1152": 412, "14it": 412, "3869": 412, "1184": 412, "07it": [412, 426], "1216": 412, "09it": [412, 426], "1248": 412, "55it": [412, 413], "1280": 412, "76it": [412, 426], "1344": 412, "1376": 412, "1408": 412, "1440": 412, "27it": 412, "4082": 412, "1472": 412, "1504": 412, "1536": 412, "1568": 412, "1632": 412, "79it": 412, "1696": 412, "1728": 412, "71it": 412, "1760": 412, "1792": 412, "1824": [412, 426], "1856": 412, "12it": [412, 426], "1888": 412, "1920": 412, "00it": [412, 426], "1952": 412, "77it": [412, 426], "1984": 412, "13it": 412, "2016": 412, "68it": 412, "30it": 412, "2080": [412, 426], "2112": 412, "32it": 412, "2144": 412, "2176": 412, "2208": 412, "2240": 412, "44it": 412, "2272": 412, "2336": [412, 426], "02it": [412, 426], "2368": [412, 426], "84it": [412, 426], "2432": [412, 426], "4051": 412, "2464": 412, "2496": 412, "2528": 412, "2560": 412, "2624": 412, "93it": [412, 426], "2656": 412, "2688": 412, "2720": 412, "82it": 412, "2752": 412, "2784": 412, "2816": 412, "2848": 412, "57it": 412, "2880": 412, "22it": 412, "3808": 412, "2912": 412, "59": [412, 426], "2944": 412, "05it": [412, 426], "2976": [412, 426], "95it": [412, 426], "3040": 412, "3072": 412, "62": [412, 426], "3104": 412, "63": [412, 426, 428], "3136": [412, 415], "91it": [412, 426], "3168": 412, "3232": 412, "5556": 412, "3264": 412, "66": [412, 426, 427, 428], "3296": [412, 426], "38it": 412, "3328": 412, "98it": [412, 426], "3360": 412, "33it": [412, 426], "3392": 412, "3424": 412, "3456": 412, "3488": 412, "37it": [412, 413, 426], "3520": 412, "3552": 412, "3584": 412, "20it": 412, "3616": 412, "99it": [412, 426], "3648": 412, "3680": 412, "3712": [412, 426], "3744": 412, "3776": 412, "3840": 412, "70it": [412, 426], "3872": 412, "39it": 412, "3904": [412, 426], "3936": 412, "94it": [412, 426], "3968": 412, "4032": 412, "4064": 412, "4096": 412, "4128": 412, "16it": 412, "4160": 412, "52it": 412, "4192": 412, "4224": 412, "4256": 412, "15it": [412, 413], "4288": 412, "4320": 412, "4352": 412, "58it": 412, "4384": 412, "4416": 412, "78it": [412, 413, 426], "89": [412, 426, 427], "4448": 412, "90": [412, 413, 424, 425, 426], "4480": [412, 426], "4512": 412, "4544": 412, "59it": [412, 413], "92": [412, 426, 427], "4576": 412, "63it": 412, "4608": 412, "93": [412, 426, 427], "4640": 412, "4704": 412, "87it": [412, 414, 426], "4736": 412, "31it": [412, 426], "4768": [412, 426], "97": [412, 426], "4832": 412, "4864": 412, "4896": 412, "4928": 412, "4960": 412, "4992": 412, "5024it": 412, "print_csv_files_in_fold": 412, "folder_path": 412, "csv_file": 412, "output_str": 412, "dirpath": 412, "endswith": 412, "strip": 412, "tmp": [412, 415, 428], "tmp7w4i8fkv": 412, "dqn_exp_a0ab1f24": 412, "b8d5": 412, "11ef": [412, 431], "8583": [412, 426, 431], "0242ac110002": [412, 431], "41726210713386536": 412, "3899405896663666": 412, "39912936091423035": 412, "42945271730422974": 412, "28914839029312134": 412, "293814480304718": 412, "2283233255147934": 412, "30963069200515747": 412, "4340329170227051": 412, "45371127128601074": 412, "2726683020591736": 412, "34249112010002136": 412, "3436921238899231": 412, "grad_norm_0": 412, "125863552093506": 412, "8989310264587402": 412, "217438220977783": 412, "7614946365356445": 412, "260069847106934": 412, "426743507385254": 412, "1457600593566895": 412, "5398383140563965": 412, "05712890625": 412, "10000000894069672": 412, "55555534362793": 412, "qvaluenetwork": 412, "worst": 412, "accuraci": 412, "fanci": [412, 419], "talk": 413, "repetit": [413, 416, 419], "six": 413, "sophist": [413, 425], "invent": 413, "theta_k": 413, "pi_": 413, "exceed": 413, "discourag": [413, 426], "indispens": 413, "analyz": 413, "lingua": 413, "franca": 413, "defaultdict": [413, 426], "3e": [413, 414, 424, 425], "max_grad_norm": [413, 424, 425], "sub_batch_s": 413, "num_epoch": [413, 425], "entropy_ep": [413, 425], "charact": [413, 415], "inverteddoublependulum": 413, "transmit": 413, "stai": 413, "confid": [413, 424, 425], "ran": 413, "f_": 413, "mu_": 413, "difficulti": [413, 431], "d_ob": 413, "d_action": 413, "policy_modul": [413, 424, 425], "briefli": [413, 424, 425], "refil": [413, 425], "easiest": [413, 418, 424, 425], "mathemat": [413, 424, 425], "tradeoff": [413, 425], "advantage_modul": 413, "lr_schedul": [413, 426], "cosineannealinglr": [413, 426], "eval_str": 413, "tensordict_data": [413, 425], "data_view": [413, 425], "subdata": [413, 424, 425], "cum_reward_str": 413, "4f": [413, 414, 426], "stepcount_str": 413, "param_group": [413, 424], "lr_str": 413, "eval_rollout": 413, "nice": [413, 416, 419], "357": [413, 426], "120": [413, 426], "5335": 413, "0884": 413, "0003": [413, 414, 426], "1121": 413, "3000": 413, "360": [413, 426], "1563": 413, "0002": [413, 414, 426], "363": [413, 426], "364": [413, 426], "2238": 413, "7000": 413, "365": [413, 426], "2425": 413, "368": [413, 426], "28it": 413, "2404": 413, "9000": [413, 426], "369": [413, 426], "2479": [413, 426], "2530": 413, "cap": [413, 428], "figsiz": [413, 426], "subplot": [413, 424, 426, 431], "titl": [413, 414, 415, 425, 426], "84x84": [414, 415], "accessori": 414, "stamp": 414, "assist": 414, "n_cell": 414, "customiz": 414, "wouldn": 414, "qval": 414, "stoch_polici": 414, "opportun": [414, 424], "uniniti": 414, "again": [414, 415, 416, 417, 419, 425, 427, 428, 431], "redund": 414, "strongli": 414, "sake": [414, 427, 428], "20_000": [414, 426], "longest": 414, "npai": 414, "action_spread": 414, "124": [414, 426, 428], "43it": 414, "150": [414, 426], "rom": 415, "licens": 415, "strong": 415, "impress": 415, "arduino": 415, "raspberri": 415, "pi": [415, 424, 425, 426], "alon": 415, "examplifi": 415, "ship": 415, "stick": 415, "nearest": 415, "value_mlp": [415, 421], "100_000": [415, 421], "init_rand_step": [415, 421], "total_count": [415, 421], "total_episod": [415, 421], "t0": [415, 421], "screen": [415, 424], "color": [415, 424], "unblock": 415, "policy_transform": 415, "fake_td": 415, "exported_polici": 415, "div": 415, "graph_modul": 415, "print_read": 415, "graphmodul": 415, "p_module_1_module_0_module_0_module_0_0_weight": 415, "f32": 415, "p_module_1_module_0_module_0_module_0_0_bia": 415, "p_module_1_module_0_module_0_module_0_2_weight": 415, "p_module_1_module_0_module_0_module_0_2_bia": 415, "p_module_1_module_0_module_0_module_0_4_weight": 415, "p_module_1_module_0_module_0_module_0_4_bia": 415, "p_module_1_module_0_module_0_module_1_0_weight": 415, "p_module_1_module_0_module_0_module_1_0_bia": 415, "p_module_1_module_0_module_0_module_1_2_weight": 415, "p_module_1_module_0_module_0_module_1_2_bia": 415, "b_module_1_module_1_eps_init": 415, "b_module_1_module_1_eps_end": 415, "b_module_1_module_1_ep": 415, "kwargs_pixel": 415, "u8": 415, "308": [415, 426], "_apply_transform": [415, 426, 431], "aten": 415, "upsample_nearest2d": 415, "vec": 415, "getitem": 415, "getitem_1": 415, "getitem_2": 415, "mul": 415, "mul_1": 415, "587": [415, 426], "mul_2": 415, "to_1": 415, "unsqueeze_1": 415, "554": [415, 426], "_conv_forward": 415, "133": [415, 426], "conv2d_1": 415, "relu_1": 415, "conv2d_2": 415, "relu_2": 415, "using_int": 415, "125": [415, 426, 428], "relu_3": 415, "linear_1": 415, "616": [415, 426], "action_func_map": 415, "i64": 415, "to_2": 415, "621": [415, 426], "action_value_func": 415, "unsqueeze_2": 415, "group0": 415, "group0_agent0_ob": 415, "collid": [415, 425], "group0_agent0": 415, "agent0_ob": 415, "digress": 415, "exported_stochastic_polici": 415, "cond": 415, "action_tensordict": 415, "lt": 415, "b8": 415, "162": [415, 426], "expand_as_right": 415, "186": [415, 426], "to_3": 415, "dtype_layout": 415, "trace": 415, "batchsizetransform": 415, "recurrent_polici": 415, "fake_ob": 415, "fake_hidden0": 415, "fake_hidden1": 415, "fake_is_init": 415, "exported_recurrent_polici": 415, "p_module_1_lstm_weight_ih_l0": 415, "p_module_1_lstm_weight_hh_l0": 415, "p_module_1_lstm_bias_ih_l0": 415, "p_module_1_lstm_bias_hh_l0": 415, "p_module_1_lstm_weight_ih_l1": 415, "p_module_1_lstm_weight_hh_l1": 415, "p_module_1_lstm_bias_ih_l1": 415, "p_module_1_lstm_bias_hh_l1": 415, "p_module_2_module_0_weight": 415, "p_module_2_module_0_bia": 415, "p_module_2_module_2_weight": 415, "p_module_2_module_2_bia": 415, "p_module_2_module_4_weight": 415, "p_module_2_module_4_bia": 415, "kwargs_observ": 415, "kwargs_hidden0": 415, "kwargs_hidden1": 415, "kwargs_is_init": 415, "485": [415, 426], "tensordict_exec": 415, "_run_modul": 415, "unsqueeze_3": 415, "738": 415, "tensordict_shap": 415, "unsqueeze_4": 415, "unsqueeze_5": 415, "unsqueeze_6": 415, "unsqueeze_7": 415, "740": 415, "767": 415, "is_init_expand": 415, "unsqueeze_8": 415, "unsqueeze_9": 415, "unsqueeze_10": 415, "scalarself": 415, "769": 415, "where_1": 415, "770": 415, "_lstm": 415, "slice_1": 415, "9223372036854775807": 415, "slice_2": 415, "select_1": 415, "transpos": 415, "transpose_1": 415, "317": [415, 426], "unbind_1": 415, "getitem_3": 415, "unbind_2": 415, "getitem_4": 415, "getitem_5": 415, "getitem_6": 415, "getitem_7": 415, "getitem_8": 415, "sigmoid_1": 415, "sigmoid_2": 415, "tanh_1": 415, "linear_2": 415, "linear_3": 415, "add_2": 415, "chunk_1": 415, "getitem_9": 415, "getitem_10": 415, "getitem_11": 415, "getitem_12": 415, "sigmoid_3": 415, "sigmoid_4": 415, "tanh_2": 415, "sigmoid_5": 415, "mul_3": 415, "mul_4": 415, "add_3": 415, "tanh_3": 415, "mul_5": 415, "stack_1": 415, "transpose_2": 415, "transpose_3": 415, "stack_3": 415, "783": 415, "reshape_1": 415, "reshape_2": 415, "reshape_3": 415, "reshape_4": 415, "linear_4": 415, "392": [415, 426], "tanh_4": 415, "linear_5": 415, "tanh_5": 415, "linear_6": 415, "squeeze_1": 415, "squeeze_2": 415, "squeeze_3": 415, "squeeze_4": 415, "squeeze_5": 415, "squeeze_6": 415, "platform": [415, 430], "aoti": 415, "_inductor": 415, "aoti_compile_and_packag": 415, "aoti_load_packag": 415, "pt2": 415, "pkg_path": 415, "package_path": 415, "compiled_modul": 415, "traceback": 415, "351": [415, 426], "196": [415, 426], "load_packag": 415, "287": [415, 426], "_c": 415, "_aoti": 415, "aotimodelpackageload": 415, "dlopen": 415, "n9udli": 415, "cmgd7nbznueo6tiiaim2v7yni7dso3a5igbery63mpdlx4wrq7s3": 415, "onnxruntim": 415, "showcas": [415, 426], "web": 415, "explain": [415, 427], "tensorrt": 415, "android": 415, "ale_pi": 415, "aleinterfac": 415, "loadrom": 415, "reset_gam": 415, "screen_ob": 415, "getscreenrgb": 415, "tick_param": 415, "bottom": 415, "labelleft": 415, "labelbottom": 415, "imshow": [415, 431], "dynamo_export": 415, "onnx_policy_export": 415, "onnx_file_path": 415, "ort_sess": 415, "inferencesess": 415, "cpuexecutionprovid": 415, "onnxruntime_input": 415, "get_input": 415, "onnx_polici": 415, "lightweight": [415, 420], "onnxruntime_output": 415, "deploy": 415, "4717": 415, "topic": [416, 417, 418], "straight": 416, "backtrack": 416, "encapsul": [416, 417, 418], "reset_with_act": 416, "7928": 416, "tp": 416, "stepped_data": 416, "spatial": 416, "useless": 416, "policyless": 416, "appreci": 416, "monitor": 416, "examin": [416, 424], "tackl": 417, "delv": 417, "bypass": 417, "extractor": 417, "palliat": 417, "additivegaussianmodul": [417, 424], "exploration_polici": [417, 424], "greedili": 417, "2d": [417, 424, 425], "innov": [417, 418], "rollout_explor": 417, "sole": 418, "supervis": [418, 419, 428, 431], "n_collect": 418, "get_next_batch": 418, "ddpg_loss": 418, "total_loss": 418, "prove": 418, "reliev": 418, "concern": 418, "accustom": 419, "surprisingli": 419, "fundament": 419, "art": [419, 424, 425], "countless": 419, "yourself": [419, 424, 425], "portabl": 420, "everywher": 420, "log_scalar": 420, "elaps": 420, "my_scalar": 420, "saw": [420, 426, 428], "excess": 420, "350": [420, 426], "lesson": 421, "voluntarili": 421, "training_loop": 421, "video_record": 421, "arbitrarili": 421, "t1": 421, "conclud": [421, 427], "tutorials_python": 422, "tutorials_jupyt": 422, "env1_obs_kei": 423, "observation_stand": 423, "env2_obs_kei": 423, "observation_walk": 423, "tdreset1": 423, "tdreset2": 423, "lazy_stack": 423, "policy_common": 423, "policy_stand": 423, "policy_walk": 423, "But": 423, "env1_mak": 423, "env2_mak": 423, "_single_task": 423, "td_rollout": 423, "matteo": [424, 425], "bettini": [424, 425], "benchmarl": [424, 425], "simple_tag": 424, "maddpg": [424, 425], "multiagentparticleenviron": 424, "mpe": 424, "centralis": [424, 425], "tie": [424, 425], "iddpg": [424, 425], "typical": 424, "richard": 424, "andrew": 424, "mit": 424, "press": 424, "2018": 424, "mathbf": [424, 425], "decentralis": [424, 425], "literatur": [424, 425], "overcom": [424, 425], "stationari": [424, 425], "concurr": [424, 425], "establish": 424, "gui": [424, 425], "is_sphinx": 424, "__sphinx_build__": 424, "n_iter": [424, 425], "evad": 424, "iteration_when_stop_training_evad": 424, "memory_s": 424, "n_optimiser_step": 424, "train_batch_s": 424, "polyak_tau": 424, "chaser": 424, "red": 424, "circl": [424, 425], "touch": [424, 426], "penal": [424, 425], "acceler": [424, 425], "obstacl": 424, "drag": [424, 425], "elast": [424, 425], "collis": [424, 425], "imped": 424, "n_chaser": 424, "n_evad": 424, "n_obstacl": 424, "use_vma": 424, "simple_tag_v3": 424, "num_good": 424, "num_adversari": 424, "num_obstacl": 424, "max_cycl": 424, "num_vmas_env": [424, 425], "num_good_ag": 424, "num_landmark": 424, "adversary_1": 424, "four": [424, 425, 426], "n_agents_in_that_group": 424, "stress": [424, 425], "paramount": [424, 425], "n_rollout_step": [424, 425], "evolut": [424, 425], "group_nam": 424, "n_agents_in_group": 424, "minor": 424, "agents_exploration_polici": 424, "utilis": [424, 425], "withing": 424, "n_obs_per_ag": [424, 425], "n_actions_per_ag": [424, 425], "share_parameters_polici": [424, 425], "policy_net": [424, 425], "_agent": 424, "grant": [424, 425], "converg": [424, 425], "share_parameters_crit": [424, 425], "obs_act": 424, "cat_modul": 424, "critic_modul": 424, "fantast": [424, 425], "reset_td": 424, "interfer": 424, "subject": [424, 426], "flatten_kei": 424, "process_batch": 424, "group_shap": 424, "get_item_shap": [424, 425], "nested_done_kei": 424, "nested_terminated_kei": 424, "desc": [424, 425], "episode_reward_mean_": 424, "episode_reward_mean_map": 424, "train_group_map": 424, "group_batch": 424, "_group": 424, "loss_nam": 424, "episode_reward_mean": [424, 425], "episode_reward_mean_adversari": 424, "episode_reward_mean_ag": 424, "proce": 424, "fig": 424, "set_ylabel": 424, "axvlin": 424, "orang": 424, "set_xlabel": 424, "video_logg": 424, "vmas_log": 424, "env_with_rend": 424, "vmas_rend": 424, "print_log_dir": 424, "profici": [424, 425], "lidar": 425, "sensor": 425, "mappo": 425, "ippo": 425, "analys": 425, "visualis": 425, "vmas_devic": 425, "6_000": 425, "minibatch_s": 425, "generalis": 425, "simd": 425, "warp": 425, "todai": 425, "surround": 425, "dot": [425, 426], "scenario_nam": 425, "final_rew": 425, "agent_collis": 425, "critic_net": 425, "minibatch": 425, "episode_reward_mean_list": 425, "critic_network_param": 425, "target_critic_network_param": 425, "4579917788505554": 425, "1870676875114441": 425, "1689366102218628": 425, "4059897661209106": 425, "890636920928955": 425, "1948678493499756": 425, "1456124782562256": 425, "6171820163726807": 425, "5954275131225586": 425, "713913679122925": 425, "xvfb": 425, "pyvirtualdisplai": 425, "1400": 425, "900": 425, "pil": 425, "rendering_callback": 425, "fromarrai": 425, "gif": 425, "save_al": 425, "append_imag": 425, "freeli": 426, "broader": 426, "wider": 426, "algebra": 426, "acquaint": 426, "avenu": 426, "_apply_to_composit": 426, "default_x": 426, "default_i": 426, "upward": 426, "angular": 426, "sin": 426, "rad": 426, "sec": 426, "angl": 426, "deleg": 426, "new_th": 426, "new_thdot": 426, "g_forc": 426, "angle_norm": 426, "albeit": 426, "high_th": 426, "high_thdot": 426, "low_th": 426, "low_thdot": 426, "trivial": 426, "irrelev": 426, "_make_spec": 426, "td_param": 426, "render_fp": 426, "random_": 426, "_make_step": 426, "staticmethod": 426, "skeleton": 426, "_inv_apply_transform": [426, 431], "subset": [426, 427], "sine": 426, "cosin": 426, "sintransform": 426, "costransform": 426, "t_sin": 426, "t_co": 426, "cat_transform": 426, "simple_rollout": 426, "unexplor": 426, "init_td": 426, "traj_return": 426, "last_reward": 426, "is_ipython": 426, "inlin": 426, "get_backend": 426, "ion": 426, "gcf": 426, "clear_output": 426, "0748": 426, "519": 426, "0499": 426, "4472": 426, "073": 426, "06it": 426, "0685": 426, "0408": 426, "552": 426, "04it": 426, "5154": 426, "9086": 426, "2005": 426, "9391": 426, "096": 426, "2567": 426, "4982": 426, "8929": 426, "4488": 426, "666": 426, "3233": 426, "0661": 426, "1021": 426, "5294": 426, "017": 426, "96it": 426, "5893": 426, "1295": 426, "9961": 426, "191": 426, "2062": 426, "0492": 426, "121": [426, 431], "7643": 426, "7912": 426, "7965": 426, "9848": 426, "3419": 426, "561": 426, "9487": 426, "2108": 426, "606": 426, "8472": 426, "5276": 426, "944": 426, "2686": 426, "1685": 426, "6781": 426, "2244": 426, "835": 426, "2152": 426, "2665": 426, "2524": 426, "8321": 426, "305": 426, "7008": 426, "7546": 426, "1404": 426, "2123": 426, "0888": 426, "596": 426, "5071": 426, "7984": 426, "701": 426, "5037": 426, "7084": 426, "8564": 426, "6973": 426, "9527": 426, "0766": 426, "6055": 426, "408": 426, "2959": 426, "6861": 426, "811": 426, "1067": 426, "8443": 426, "1726": 426, "0027": 426, "967": 426, "0948": 426, "5392": 426, "861": 426, "8152": 426, "1564": 426, "782": 426, "9280": 426, "5023": 426, "891": 426, "9980": 426, "5786": 426, "952": 426, "3086": 426, "8868": 426, "074": 426, "8447": 426, "2023": 426, "082": 426, "0087": 426, "9078": 426, "299": 426, "5978": 426, "3267": 426, "5558": 426, "5253": 426, "5058": 426, "722": 426, "0025": 426, "1092": 426, "7734": 426, "2156": 426, "463": 426, "6805": 426, "4590": 426, "575": 426, "5721": 426, "1738": 426, "295": 426, "0815": 426, "0148": 426, "383": 426, "2732": 426, "628": 426, "6470": 426, "2316": 426, "264": 426, "1881": 426, "2131": 426, "1450": 426, "7913": 426, "235": 426, "7754": 426, "8503": 426, "8080": 426, "5743": 426, "347": 426, "6970": 426, "0105": 426, "4933": 426, "9152": 426, "7253": 426, "0548": 426, "759": 426, "7797": 426, "5644": 426, "6997": 426, "5771": 426, "794": 426, "0239": 426, "2611": 426, "745": 426, "9655": 426, "8486": 426, "227": [426, 428], "2975": 426, "3479": 426, "923": 426, "1072": 426, "3048": 426, "553": 426, "8192": 426, "3265": 426, "844": 426, "7095": 426, "2718": 426, "6582": 426, "6104": 426, "057": 426, "5616": 426, "3309": 426, "7010": 426, "0810": 426, "599": 426, "7005": 426, "4479": 426, "446": 426, "7252": 426, "2747": 426, "5687": 426, "6407": 426, "611": 426, "5272": 426, "4400": 426, "541": 426, "2692": 426, "2472": 426, "248": 426, "6313": 426, "1820": 426, "5356": 426, "8039": 426, "851": 426, "6538": 426, "2175": 426, "755": 426, "4839": 426, "1491": 426, "4585": 426, "3530": 426, "869": 426, "3824": 426, "5510": 426, "7082": 426, "4693": 426, "8527": 426, "1197": 426, "8324": 426, "6195": 426, "859": 426, "7599": 426, "9452": 426, "6151": 426, "0394": 426, "303": 426, "2820": 426, "0131": 426, "0293": 426, "2355": 426, "85it": 426, "5977": 426, "2640": 426, "3575": 426, "5822": 426, "5181": 426, "3198": 426, "7142": 426, "1751": 426, "491": 426, "7308": 426, "4589": 426, "226": 426, "7457": 426, "8505": 426, "852": 426, "2264": 426, "8193": 426, "1923": 426, "6213": 426, "8990": 426, "1471": 426, "509": 426, "0825": 426, "7022": 426, "902": 426, "3176": 426, "3608": 426, "2608": 426, "5798": 426, "5891": 426, "1215": 426, "324": 426, "89it": 426, "4353": 426, "3131": 426, "2516": 426, "1062": 426, "7849": 426, "9530": 426, "4233": 426, "2415": 426, "452": 426, "9839": 426, "2361": 426, "103": 426, "0224": 426, "104": 426, "4202": 426, "3715": 426, "105": 426, "5259": 426, "9645": 426, "726": 426, "1808": 426, "3654": 426, "734": 426, "107": 426, "8079": 426, "9058": 426, "108": [426, 428], "3026": 426, "4635": 426, "109": 426, "4923": 426, "8371": 426, "808": 426, "110": [426, 428], "0599": 426, "9261": 426, "111": 426, "2418": 426, "7344": 426, "3262": 426, "3315": 426, "113": 426, "3437": 426, "2985": 426, "4765": 426, "941": 426, "115": 426, "0486": 426, "8095": 426, "376": 426, "116": 426, "9979": 426, "6758": 426, "117": 426, "5682": 426, "7756": 426, "118": 426, "1720": 426, "2694": 426, "253": 426, "119": 426, "5527": 426, "5826": 426, "6803": 426, "062": 426, "1905": 426, "2759": 426, "3546": 426, "5696": 426, "123": 426, "2657": 426, "9770": 426, "1257": 426, "8625": 426, "1978": 426, "126": 426, "8572": 426, "2422": 426, "127": 426, "1868": 426, "0206": 426, "2139": 426, "5078": 426, "129": 426, "2181": 426, "8308": 426, "8731": 426, "1875": 426, "6449": 426, "1205": 426, "132": 426, "5227": 426, "6155": 426, "1688": 426, "1650": 426, "2084": 426, "3946": 426, "135": 426, "9786": 426, "5122": 426, "136": [426, 428], "3624": 426, "137": 426, "3331": 426, "8054": 426, "138": [426, 428], "4386": 426, "8720": 426, "139": 426, "2163": 426, "1470": 426, "140": 426, "1501": 426, "7817": 426, "141": 426, "0496": 426, "142": 426, "8780": 426, "1960": 426, "332": 426, "143": 426, "9957": 426, "9879": 426, "1286": 426, "5671": 426, "145": 426, "5210": 426, "5300": 426, "146": 426, "5614": 426, "7091": 426, "147": 426, "0327": 426, "1357": 426, "148": 426, "9737": 426, "0816": 426, "149": 426, "0818": 426, "5083": 426, "5125": 426, "151": 426, "6136": 426, "1611": 426, "152": 426, "4848": 426, "2063": 426, "153": 426, "1959": 426, "5538": 426, "474": 426, "8866": 426, "9093": 426, "155": 426, "0367": 426, "395": 426, "156": 426, "9288": 426, "8121": 426, "157": 426, "7396": 426, "5478": 426, "9030": 426, "8787": 426, "878": 426, "159": 426, "0559": 426, "6365": 426, "234": 426, "8509": 426, "6475": 426, "161": 426, "1059": 426, "6374": 426, "6119": 426, "9588": 426, "163": [426, 427], "7904": 426, "8894": 426, "164": 426, "7195": 426, "7729": 426, "165": 426, "8832": 426, "4929": 426, "166": 426, "5500": 426, "8138": 426, "167": 426, "1583": 426, "078": 426, "8614": 426, "6033": 426, "169": 426, "1639": 426, "6437": 426, "170": 426, "6874": 426, "0606": 426, "171": 426, "5866": 426, "4854": 426, "5886": 426, "6165": 426, "173": 426, "4975": 426, "8291": 426, "174": 426, "1464": 426, "7542": 426, "175": 426, "7704": 426, "7880": 426, "5231": 426, "177": 426, "1556": 426, "4513": 426, "777": 426, "178": 426, "3213": 426, "5605": 426, "179": 426, "2938": 426, "6965": 426, "180": 426, "3096": 426, "7995": 426, "181": 426, "5882": 426, "0745": 426, "182": 426, "7860": 426, "3272": 426, "183": 426, "1884": 426, "1293": 426, "974": 426, "184": 426, "2898": 426, "6161": 426, "185": 426, "6326": 426, "4699": 426, "4392": 426, "187": 426, "4062": 426, "0037": 426, "294": 426, "188": 426, "8002": 426, "189": 426, "9781": 426, "9826": 426, "190": 426, "7842": 426, "8660": 426, "1115": 426, "7063": 426, "2008": 426, "7206": 426, "193": 426, "1862": 426, "194": 426, "1700": 426, "4528": 426, "409": 426, "195": 426, "9351": 426, "8467": 426, "7487": 426, "0514": 426, "197": 426, "0990": 426, "6319": 426, "198": 426, "9331": 426, "5511": 426, "1259": 426, "7247": 426, "0426": 426, "201": 426, "8510": 426, "7666": 426, "202": 426, "9534": 426, "5201": 426, "203": 426, "4795": 426, "0226": 426, "204": 426, "1534": 426, "205": 426, "0509": 426, "6312": 426, "206": 426, "8025": 426, "3263": 426, "207": 426, "1073": 426, "7507": 426, "208": 426, "5354": 426, "9688": 426, "209": 426, "1264": 426, "7360": 426, "7876": 426, "211": 426, "9827": 426, "9952": 426, "212": 426, "2188": 426, "1308": 426, "5095": 426, "4779": 426, "214": 426, "4639": 426, "7086": 426, "582": 426, "215": 426, "4249": 426, "6083": 426, "216": 426, "8671": 426, "7597": 426, "280": 426, "217": 426, "4020": 426, "1744": 426, "218": 426, "4655": 426, "9712": 426, "5726": 426, "4427": 426, "5338": 426, "1233": 426, "221": 426, "7159": 426, "1610": 426, "222": 426, "9874": 426, "223": 426, "5081": 426, "2201": 426, "487": 426, "7900": 426, "5725": 426, "225": 426, "3307": 426, "2561": 426, "3435": 426, "8641": 426, "4616": 426, "3809": 426, "2724": 426, "3928": 426, "229": 426, "8212": 426, "1221": 426, "230": 426, "5956": 426, "5492": 426, "231": 426, "6002": 426, "8928": 426, "232": 426, "5195": 426, "7255": 426, "233": 426, "1546": 426, "6264": 426, "7582": 426, "8026": 426, "0768": 426, "6867": 426, "9188": 426, "3620": 426, "237": 426, "3363": 426, "1077": 426, "238": 426, "2983": 426, "2695": 426, "239": 426, "4714": 426, "4559": 426, "6587": 426, "241": 426, "3099": 426, "4760": 426, "242": 426, "7994": 426, "7083": 426, "243": 426, "7172": 426, "0088": 426, "7320": 426, "0084": 426, "245": 426, "4218": 426, "1930": 426, "6626": 426, "1374": 426, "247": 426, "5165": 426, "7019": 426, "9847": 426, "9694": 426, "249": 426, "5391": 426, "4564": 426, "250": 426, "4978": 426, "0972": 426, "251": 426, "9063": 426, "1134": 426, "252": 426, "0794": 426, "7488": 426, "9265": 426, "3999": 426, "254": 426, "5207": 426, "0040": 426, "9147": 426, "0281": 426, "8578": 426, "2173": 426, "0598": 426, "361": 426, "257": 426, "0217": 426, "258": 426, "2926": 426, "0231": 426, "259": 426, "2348": 426, "0411": 426, "260": 426, "1528": 426, "0251": 426, "526": 426, "261": 426, "5388": 426, "2671": 426, "9711": 426, "262": 426, "4079": 426, "6236": 426, "263": 426, "3291": 426, "3400": 426, "9722": 426, "7831": 426, "2091": 426, "7768": 426, "266": 426, "8402": 426, "5285": 426, "267": 426, "6497": 426, "4807": 426, "775": 426, "0460": 426, "269": 426, "2596": 426, "270": 426, "3277": 426, "0786": 426, "271": 426, "3089": 426, "272": 426, "4196": 426, "3538": 426, "273": 426, "3324": 426, "0302": 426, "423": 426, "274": 426, "3078": 426, "275": 426, "3109": 426, "4240": 426, "276": 426, "7497": 426, "4694": 426, "277": 426, "26it": 426, "7128": 426, "278": 426, "5764": 426, "5380": 426, "279": 426, "60it": 426, "7724": 426, "1200": [426, 431], "1809": 426, "281": 426, "6833": 426, "0546": 426, "418": 426, "9217": 426, "1085": 426, "283": 426, "2270": 426, "2161": 426, "284": 426, "717": 426, "285": 426, "1339": 426, "1314": 426, "286": 426, "6499": 426, "1429": 426, "0291": 426, "3813": 426, "2901": 426, "0403": 426, "731": 426, "289": 426, "2146": 426, "0042": 426, "290": 426, "2663": 426, "0031": 426, "5784": 426, "291": 426, "2177": 426, "0081": 426, "292": 426, "0803": 426, "0044": 426, "4114": 426, "293": 426, "3695": 426, "0693": 426, "3786": 426, "3244": 426, "4945": 426, "9656": 426, "296": 426, "3524": 426, "6240": 426, "654": 426, "297": 426, "4340": 426, "3976": 426, "298": 426, "4312": 426, "677": 426, "3591": 426, "0783": 426, "749": 426, "1324": 426, "0338": 426, "9744": 426, "301": 426, "3455": 426, "8268": 426, "302": 426, "9379": 426, "6808": 426, "1249": 426, "597": 426, "304": 426, "0076": 426, "3114": 426, "306": 426, "0132": 426, "842": 426, "307": 426, "0600": 426, "0204": 426, "046": 426, "3163": 426, "0049": 426, "309": 426, "3791": 426, "4987": 426, "7723": 426, "9627": 426, "311": 426, "5358": 426, "2333": 426, "312": 426, "9676": 426, "0048": [426, 431], "313": 426, "314": 426, "8688": 426, "0014": 426, "4276": 426, "315": 426, "0736": 426, "0189": 426, "316": 426, "3251": 426, "2411": 426, "4473": 426, "1006": 426, "0174": 426, "398": 426, "0024": 426, "894": 426, "4919": 426, "2387": 426, "4504": 426, "1423": 426, "0125": 426, "1924": 426, "0471": 426, "948": 426, "323": 426, "9056": 426, "1033": 426, "9948": 426, "1164": 426, "5938": 426, "326": [426, 430], "5902": 426, "2584": 426, "327": 426, "4371": 426, "083": 426, "328": 426, "2593": 426, "0115": 426, "428": 426, "0316": 426, "330": 426, "0030": 426, "0019": 426, "331": 426, "1614": 426, "3418": 426, "3339": 426, "2037": 426, "333": 426, "6586": 426, "2004": 426, "334": 426, "8127": 426, "7748": 426, "335": 426, "1300": 426, "336": 426, "3768": 426, "0152": 426, "456": 426, "337": 426, "9725": 426, "2740": 426, "338": 426, "0802": 426, "0200": 426, "7307": 426, "339": 426, "1759": 426, "0035": 426, "340": 426, "0068": 426, "405": 426, "341": 426, "4652": 426, "4551": 426, "4486": 426, "343": 426, "2917": 426, "0221": 426, "7231": 426, "344": 426, "4979": 426, "0034": 426, "9126": 426, "345": 426, "9708": 426, "0045": 426, "8408": 426, "346": 426, "2896": 426, "0170": 426, "019": 426, "1799": 426, "0028": 426, "458": 426, "348": 426, "8156": 426, "3362": 426, "0841": 426, "1301": 426, "0259": 426, "0679": 426, "0222": 426, "037": 426, "7692": 426, "0481": 426, "709": 426, "353": 426, "4399": 426, "0456": 426, "354": 426, "2330": 426, "0079": 426, "8697": 426, "355": 426, "2928": 426, "0167": 426, "442": 426, "356": 426, "2867": 426, "2410": 426, "7891": 426, "0341": 426, "358": 426, "4447": 426, "1775": 426, "588": 426, "359": 426, "9854": 426, "2241": 426, "0005": 426, "2469": 426, "9489": 426, "3717": 426, "0212": 426, "9227": 426, "0635": 426, "0101": 426, "9682": 426, "2128": 426, "0023": 426, "1361": 426, "9905": 426, "366": 426, "0838": 426, "6983": 426, "367": 426, "1260": 426, "6206": 426, "8942": 426, "6763": 426, "0663": 426, "370": 426, "371": 426, "4334": 426, "068": 426, "372": 426, "4260": 426, "1468": 426, "507": 426, "373": 426, "1213": 426, "374": 426, "5646": 426, "375": 426, "0147": 426, "1322": 426, "1789": 426, "9630": 426, "377": 426, "5916": 426, "9792": 426, "378": 426, "3128": 426, "1133": 426, "586": 426, "379": 426, "0733": 426, "0041": 426, "976": 426, "380": 426, "9612": 426, "0161": 426, "427": 426, "381": 426, "6419": 426, "0086": 426, "382": 426, "9752": 426, "0072": 426, "898": 426, "1317": 426, "3181": 426, "9203": 426, "7563": 426, "385": 426, "7653": 426, "9115": 426, "386": 426, "8711": 426, "387": 426, "0625": 426, "1393": 426, "2945": 426, "0851": 426, "462": 426, "389": 426, "2659": 426, "0150": 426, "390": 426, "8813": 426, "2021": 426, "391": 426, "1261": 426, "1592": 426, "407": 426, "3336": 426, "1540": 426, "0382": 426, "394": 426, "0385": 426, "3007": 426, "5918": 426, "5106": 426, "396": 426, "2187": 426, "6103": 426, "397": 426, "1554": 426, "9431": 426, "3854": 426, "6754": 426, "399": 426, "9838": 426, "0029": 426, "6308": 426, "8784": 426, "0047": 426, "4316": 426, "0185": 426, "025": 426, "402": 426, "2594": 426, "0473": 426, "403": 426, "2876": 426, "0769": 426, "404": 426, "2205": 426, "0866": 426, "9687": 426, "0754": 426, "579": 426, "406": 426, "1518": 426, "2802": 426, "066": 426, "9876": 426, "0154": 426, "1754": 426, "0006": 426, "5789": 426, "0631": 426, "1665": 426, "410": 426, "0806": 426, "7337": 426, "411": 426, "9260": 426, "1867": 426, "5102": 426, "413": 426, "9765": 426, "0096": 426, "6895": 426, "414": 426, "4921": 426, "415": 426, "9426": 426, "0156": 426, "8391": 426, "7848": 426, "0264": 426, "041": 426, "417": 426, "10it": 426, "3134": 426, "4647": 426, "8029": 426, "0210": 426, "419": 426, "7919": 426, "8269": 426, "420": 426, "1722": 426, "5423": 426, "7626": 426, "0145": 426, "8463": 426, "422": 426, "6211": 426, "4245": 426, "424": 426, "3789": 426, "4169": 426, "425": 426, "11it": 426, "0162": 426, "0026": 426, "6989": 426, "426": 426, "2869": 426, "0090": 426, "8332": 426, "3596": 426, "7533": 426, "9066": 426, "429": 426, "1165": 426, "0556": 426, "051": 426, "430": 426, "1103": 426, "431": 426, "0673": 426, "0684": 426, "494": 426, "432": 426, "4029": 426, "053": 426, "6366": 426, "0647": 426, "434": 426, "0435": 426, "0236": 426, "9762": 426, "435": 426, "0225": [426, 431], "904": 426, "436": 426, "2980": 426, "648": 426, "437": 426, "0996": 426, "0981": 426, "438": 426, "3720": 426, "439": 426, "5363": 426, "0421": 426, "521": 426, "440": 426, "4556": 426, "0967": 426, "441": 426, "7053": 426, "3141": 426, "0812": 426, "443": 426, "0956": 426, "444": 426, "0063": 426, "5694": 426, "445": 426, "9226": 426, "5814": 426, "4572": 426, "0531": 426, "7431": 426, "447": 426, "9262": 426, "3299": 426, "5486": 426, "2249": 426, "479": 426, "449": 426, "9423": 426, "0013": 426, "450": 426, "1323": 426, "0114": 426, "451": 426, "0177": 426, "4959": 426, "453": 426, "6289": 426, "454": 426, "8185": 426, "455": 426, "8796": 426, "0066": 426, "6139": 426, "457": 426, "0687": 426, "5084": 426, "2427": 426, "0121": 426, "7527": 426, "459": 426, "6678": 426, "2261": 426, "460": 426, "0184": 426, "791": 426, "461": 426, "9133": 426, "0194": 426, "0601": 426, "0272": 426, "735": 426, "1075": 426, "0171": 426, "464": 426, "2590": 426, "0061": 426, "465": 426, "1699": 426, "7657": 426, "466": 426, "6372": 426, "0930": 426, "826": 426, "467": 426, "2224": 426, "2641": 426, "468": 426, "3805": 426, "0508": 426, "469": 426, "2904": 426, "0223": 426, "747": 426, "470": 426, "3436": 426, "7358": 426, "471": 426, "1207": [426, 431], "9891": 426, "9178": 426, "1268": 426, "9002": 426, "473": 426, "5698": 426, "9208": 426, "1435": 426, "0091": 426, "3811": 426, "475": 426, "1020": 426, "476": 426, "4266": 426, "0039": 426, "4884": 426, "477": 426, "9333": 426, "0260": 426, "3792": 426, "1489": 426, "0097": 426, "0843": 426, "0165": 426, "0077": 426, "502": 426, "481": 426, "3184": 426, "3481": 426, "482": 426, "9857": 426, "0038": 426, "483": 426, "8097": 426, "1466": 426, "484": 426, "5880": 426, "2765": 426, "4430": 426, "486": 426, "2436": 426, "4358": 426, "488": 426, "1829": 426, "0009": 426, "2408": 426, "0532": 426, "4158": 426, "490": 426, "1026": 426, "4291": 426, "9411": 426, "3774": 426, "492": 426, "9988": 426, "3627": 426, "493": 426, "9018": 426, "4468": 426, "3357": 426, "2603": 426, "495": 426, "0993": 426, "496": 426, "6128": 426, "3699": 426, "497": 426, "9193": 426, "498": 426, "6142": 426, "2677": 426, "499": 426, "7382": 426, "8001": 426, "7112": 426, "9300": 426, "6179": 426, "2363": 426, "503": 426, "7702": 426, "504": 426, "0227": 426, "0017": 426, "4438": 426, "505": 426, "7592": 426, "0007": 426, "2394": 426, "506": 426, "7251": 426, "7489": 426, "1654": 426, "508": 426, "7825": 426, "1637": 426, "9624": 426, "1355": 426, "510": 426, "7474": 426, "565": 426, "511": 426, "0530": 426, "1099": 426, "028": 426, "513": 426, "1244": 426, "0347": 426, "515": 426, "0012": 426, "3383": 426, "516": 426, "3021": 426, "978": 426, "517": 426, "9872": 426, "8126": 426, "518": 426, "1364": 426, "4234": 426, "9339": 426, "0071": 426, "7073": 426, "520": 426, "4535": 426, "1071": 426, "574": 426, "5149": 426, "4586": 426, "522": 426, "9370": 426, "6924": 426, "523": 426, "524": 426, "2890": 426, "0864": 426, "972": 426, "525": 426, "2442": 426, "723": 426, "8409": 426, "4120": 426, "2291": 426, "528": 426, "9569": 426, "0296": 426, "099": 426, "529": 426, "3195": 426, "0168": 426, "530": 426, "6038": 426, "0180": 426, "3514": 426, "531": 426, "4230": 426, "0173": 426, "532": 426, "2853": 426, "0511": 426, "8437": 426, "533": 426, "0055": 426, "0448": 426, "534": 426, "5087": 426, "6844": 426, "535": 426, "3205": 426, "0016": 426, "7638": 426, "536": 426, "5157": 426, "0317": 426, "5441": 426, "537": 426, "3014": 426, "538": 426, "7185": 426, "0178": 426, "7612": 426, "539": 426, "2586": 426, "4857": 426, "540": 426, "0126": 426, "4823": 426, "4942": 426, "0106": 426, "3919": 426, "542": 426, "3070": 426, "0094": 426, "3497": 426, "543": 426, "4084": 426, "1340": 426, "4053": 426, "545": 426, "4678": 426, "8227": 426, "546": 426, "9356": 426, "0052": 426, "547": 426, "9544": 426, "5313": 426, "548": 426, "1490": 426, "1517": 426, "4219": 426, "4123": 426, "5550": 426, "4553": 426, "8484": 426, "4523": 426, "9674": 426, "5026": 426, "1353": 426, "2458": 426, "555": 426, "9898": 426, "0008": 426, "556": 426, "4450": 426, "724": 426, "557": 426, "0743": 426, "0110": 426, "092": 426, "558": 426, "1605": 426, "3963": 426, "559": 426, "2275": 426, "560": 426, "9532": 426, "9324": 426, "562": 426, "1651": 426, "563": 426, "4055": 426, "7256": 426, "564": 426, "4949": 426, "0455": 426, "0512": 426, "3882": 426, "566": 426, "7001": 426, "0036": 426, "7946": 426, "567": 426, "1835": 426, "0065": 426, "9168": 426, "568": 426, "9233": 426, "0572": 426, "881": 426, "569": 426, "9974": 426, "8693": 426, "570": 426, "5994": 426, "571": 426, "9843": 426, "572": 426, "2934": 426, "0050": 426, "5947": 426, "573": 426, "3015": 426, "0053": 426, "4685": 426, "2609": 426, "0032": 426, "7853": 426, "2515": 426, "3427": 426, "8608": 426, "3257": 426, "577": 426, "3416": 426, "3094": 426, "578": 426, "9729": 426, "3447": 426, "0051": 426, "6425": 426, "580": 426, "4701": 426, "079": 426, "581": 426, "1219": 426, "4072": 426, "1194": 426, "0010": 426, "2554": 426, "583": 426, "0099": 426, "1902": 426, "584": 426, "0056": 426, "1690": 426, "585": 426, "5236": 426, "8721": 426, "4886": 426, "4146": 426, "8587": 426, "4139": 426, "589": 426, "7839": 426, "0046": 426, "7993": 426, "590": 426, "1459": 426, "591": 426, "1156": 426, "592": 426, "3230": 426, "3656": 426, "593": 426, "0906": 426, "594": 426, "2576": 426, "595": 426, "0103": 426, "5794": 426, "0911": 426, "4056": 426, "7705": 426, "598": 426, "1574": 426, "804": 426, "4961": 426, "5526": 426, "2232": 426, "601": 426, "9095": 426, "2578": 426, "602": 426, "0062": 426, "603": 426, "8867": 426, "6109": 426, "604": 426, "6880": 426, "4829": 426, "605": 426, "2288": 426, "687": 426, "2691": 426, "607": 426, "1367": 426, "3314": 426, "1449": 426, "4283": 426, "609": 426, "8960": 426, "6402": [426, 430], "610": 426, "1210": 426, "3252": 426, "0108": 426, "9234": 426, "612": 426, "1858": 426, "8847": 426, "613": 426, "3220": 426, "3067": 426, "614": 426, "3154": 426, "0975": 426, "615": 426, "4389": 426, "0604": 426, "617": 426, "2709": 426, "0312": 426, "982": 426, "618": 426, "7556": 426, "5438": 426, "619": 426, "7779": 426, "620": 426, "2054": 426, "033": 426, "0230": 426, "6617": 426, "622": 426, "1977": 426, "0043": 426, "9515": 426, "623": 426, "2253": 426, "7681": 426, "624": 426, "7909": 426, "semat": 427, "r3mtransform": 427, "env_transform": [427, 431], "s3": 427, "amazonaw": 427, "r3m_50": 427, "374m": 427, "5m": 427, "2mb": 427, "0m": 427, "6mb": 427, "6m": 427, "0mb": 427, "2m": 427, "9mb": 427, "4mb": 427, "4m": 427, "123mb": 427, "109m": 427, "134mb": 427, "122m": 427, "111mb": 427, "134m": 427, "5mb": 427, "154m": 427, "126mb": 427, "168m": 427, "180m": 427, "195m": 427, "208m": 427, "219m": 427, "229m": 427, "246m": 427, "108mb": 427, "263m": 427, "279m": 427, "133mb": 427, "292m": 427, "135mb": 427, "306m": 427, "122mb": 427, "318m": 427, "329m": 427, "344m": 427, "360m": 427, "1mb": 427, "101mb": 427, "wiser": 427, "4178": 427, "batteri": 428, "buffer_list": 428, "lowest": 428, "medium": 428, "buffer_lazytensor": 428, "buffer_lazymemmap": 428, "tempdir": 428, "tmptk16hxyi": 428, "fullest": 428, "mydata": 428, "background": 428, "question": [428, 430], "_i": 428, "artifici": 428, "0893e": 428, "hamper": 428, "she": 428, "pars": 428, "proport": 428, "barcontain": 428, "artist": 428, "reappear": 428, "unfold": 428, "problemat": 428, "4th": 428, "prioritizedslicesampl": 428, "tensordictmaxvaluewrit": 428, "demo": 430, "icml": 430, "vmoen": 430, "fb": 430, "invest": 430, "media": 430, "predominantli": 430, "data2": 430, "sub_key1": 430, "scturctur": 430, "data_stack": 430, "data_sampl": 430, "_sampler": 430, "_sum_tre": 430, "28791671991348267": 430, "06984967738389969": 430, "modulenotfounderror": 430, "noopresetenv": [430, 431], "backbone_modul": 430, "tailor": 430, "params_expand": 430, "exec_sequ": 430, "tensordict_exp": 430, "base_modul": 430, "asstridedbackward0": 430, "8728": 430, "1334": 430, "9833": 430, "3494": 430, "6887": 430, "_safetanhnoepsbackward": 430, "1132": 430, "1762": 430, "3430": 430, "2668": 430, "2918": 430, "6239": 430, "tensordicts_prealloc": 430, "tensordicts_stack": 430, "tensordict_rollout": [430, 431], "automatical": 430, "particularili": [430, 431], "concatmodul": 430, "loss_td": 430, "contributor": 430, "curiou": 430, "nascent": 430, "unsupervis": 431, "unifi": 431, "_build_env": 431, "amidar": 431, "assault": 431, "deserv": 431, "__episode__": 431, "__trajectory__": 431, "void": 431, "reproduct": 431, "tensordict_tprim": 431, "axesimag": 431, "0x7f4f362e4370": 431, "wrapper1": 431, "wrapper2": 431, "obviou": 431, "truth": 431, "env_transformed_bi": 431, "stanc": 431, "transformeddistribut": 431, "base_dist": 431, "concat": 431, "mofidi": 431, "transformedenviron": 431, "moderet": 431, "computation": 431, "legitim": 431, "incom": 431, "amongst": 431, "has_cuda": 431, "wor": 431, "convention": 431, "markovian": 431, "3288080526": 431, "constain": 431, "bar_": 431, "get_someth": 431, "bar_a5856532": 431, "b8d4": 431, "aargh": 431, "is_clos": 431, "foo_list": 431, "batched_env": 431, "_dispatch_caller_parallel": 431, "0x7f4edd85d570": 431, "bar_aa821cb0": 431, "b069": 431, "bar_aa891678": 431, "9466": 431, "bar_aa86efec": 431, "ac37": 431, "evolv": 431, "steadi": 431, "approx": 431, "0277": 431, "3250": 431, "1022": 431, "0692": 431, "_extra_st": 431, "observation_ssq": 431, "observation_sum": 431, "reward_count": 431, "reward_ssq": 431, "reward_sum": 431, "3275": 431, "4033": 431, "9719": 431, "7690": 431, "1986": 431, "dispach": 431, "absor": 431}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MCTSForest"], [42, 0, 1, "", "MultiCategorical"], [43, 0, 1, "", "MultiDiscreteTensorSpec"], [44, 0, 1, "", "MultiOneHot"], [45, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [46, 0, 1, "", "MultiStep"], [47, 0, 1, "", "Nested2TED"], [48, 0, 1, "", "NonTensor"], [49, 0, 1, "", "NonTensorSpec"], [50, 0, 1, "", "OneHot"], [51, 0, 1, "", "OneHotDiscreteTensorSpec"], [52, 0, 1, "", "PairwiseDataset"], [53, 0, 1, "", "PrioritizedReplayBuffer"], [54, 0, 1, "", "PromptData"], [55, 0, 1, "", "PromptTensorDictTokenizer"], [56, 0, 1, "", "QueryModule"], [57, 0, 1, "", "RandomProjectionHash"], [58, 0, 1, "", "ReplayBuffer"], [59, 0, 1, "", "RewardData"], [60, 0, 1, "", "RolloutFromModel"], [61, 0, 1, "", "SipHash"], [62, 0, 1, "", "Stacked"], [63, 0, 1, "", "StackedComposite"], [64, 0, 1, "", "TED2Flat"], [65, 0, 1, "", "TED2Nested"], [66, 0, 1, "", "TensorDictMap"], [67, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [68, 0, 1, "", "TensorDictReplayBuffer"], [69, 0, 1, "", "TensorDictTokenizer"], [70, 0, 1, "", "TensorMap"], [71, 0, 1, "", "TensorSpec"], [72, 0, 1, "", "TokenizedDatasetLoader"], [73, 0, 1, "", "Tree"], [74, 0, 1, "", "Unbounded"], [75, 0, 1, "", "UnboundedContinuous"], [76, 0, 1, "", "UnboundedContinuousTensorSpec"], [77, 0, 1, "", "UnboundedDiscrete"], [78, 0, 1, "", "UnboundedDiscreteTensorSpec"], [79, 0, 1, "", "check_no_exclusive_keys"], [80, 0, 1, "", "consolidate_spec"], [81, 0, 1, "", "contains_lazy_spec"], [82, 0, 1, "", "create_infinite_iterator"], [92, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[41, 4, 1, "", "action_keys"], [41, 4, 1, "", "done_keys"], [41, 1, 1, "", "get_keys_from_env"], [41, 4, 1, "", "observation_keys"], [41, 4, 1, "", "reward_keys"]], "torchrl.data.MultiCategorical": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_provisional_n"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "compile"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "mtia"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_load_state_dict_pre_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_post_hook"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_submodule"], [46, 1, 1, "", "share_memory"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 3, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 4, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_categorical"], [50, 1, 1, "", "to_categorical_spec"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "to_one_hot"], [50, 1, 1, "", "to_one_hot_spec"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "update_mask"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 3, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "fields"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dump"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "load"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "register_load_hook"], [53, 1, 1, "", "register_save_hook"], [53, 1, 1, "", "sample"], [53, 4, 1, "", "sampler"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 4, 1, "", "storage"], [53, 4, 1, "", "write_count"], [53, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[54, 4, 1, "", "batch_size"], [54, 4, 1, "", "device"], [54, 1, 1, "", "fields"], [54, 1, 1, "", "from_dataset"], [54, 1, 1, "", "from_tensordict"], [54, 1, 1, "", "get"], [54, 1, 1, "", "load"], [54, 1, 1, "", "load_"], [54, 1, 1, "", "load_memmap"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "memmap"], [54, 1, 1, "", "memmap_"], [54, 1, 1, "", "memmap_like"], [54, 1, 1, "", "memmap_refresh_"], [54, 4, 1, "", "names"], [54, 1, 1, "", "save"], [54, 1, 1, "", "set"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to_tensordict"], [54, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "is_tdmodule_compatible"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset_out_keys"], [56, 1, 1, "", "reset_parameters_recursive"], [56, 1, 1, "", "select_out_keys"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "compile"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "mtia"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_load_state_dict_pre_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_post_hook"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_submodule"], [57, 1, 1, "", "share_memory"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dump"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "load"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "register_load_hook"], [58, 1, 1, "", "register_save_hook"], [58, 1, 1, "", "sample"], [58, 4, 1, "", "sampler"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 4, 1, "", "storage"], [58, 4, 1, "", "write_count"], [58, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[59, 4, 1, "", "batch_size"], [59, 4, 1, "", "device"], [59, 1, 1, "", "fields"], [59, 1, 1, "", "from_tensordict"], [59, 1, 1, "", "get"], [59, 1, 1, "", "load"], [59, 1, 1, "", "load_"], [59, 1, 1, "", "load_memmap"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "memmap"], [59, 1, 1, "", "memmap_"], [59, 1, 1, "", "memmap_like"], [59, 1, 1, "", "memmap_refresh_"], [59, 4, 1, "", "names"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to_tensordict"], [59, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[60, 1, 1, "", "create_rollout_td"], [60, 1, 1, "", "generate"], [60, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "get"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_empty"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "items"], [63, 1, 1, "", "keys"], [63, 1, 1, "", "lock_"], [63, 1, 1, "", "make_neg_dim"], [63, 4, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "pop"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "separates"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unlock_"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "values"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "from_tensordict_pair"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 4, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 4, 1, "", "storage"], [67, 4, 1, "", "write_count"], [67, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 4, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 4, 1, "", "storage"], [68, 4, 1, "", "write_count"], [68, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "cardinality"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "enumerate"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[72, 1, 1, "", "dataset_to_tensordict"], [72, 1, 1, "", "load"]], "torchrl.data.Tree": [[73, 4, 1, "", "batch_size"], [73, 4, 1, "", "branching_action"], [73, 4, 1, "", "device"], [73, 1, 1, "", "edges"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 4, 1, "", "full_action_spec"], [73, 4, 1, "", "full_done_spec"], [73, 4, 1, "", "full_observation_spec"], [73, 4, 1, "", "full_reward_spec"], [73, 4, 1, "", "full_state_spec"], [73, 1, 1, "", "fully_expanded"], [73, 1, 1, "", "get"], [73, 1, 1, "", "get_vertex_by_hash"], [73, 1, 1, "", "get_vertex_by_id"], [73, 4, 1, "", "is_terminal"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "make_node"], [73, 1, 1, "", "max_length"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 4, 1, "", "names"], [73, 4, 1, "", "node_observation"], [73, 4, 1, "", "node_observations"], [73, 4, 1, "", "num_children"], [73, 1, 1, "", "num_vertices"], [73, 4, 1, "", "parent"], [73, 1, 1, "", "plot"], [73, 4, 1, "", "prev_action"], [73, 1, 1, "", "rollout_from_path"], [73, 1, 1, "", "save"], [73, 4, 1, "", "selected_actions"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"], [73, 1, 1, "", "valid_paths"], [73, 1, 1, "", "vertices"], [73, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[83, 0, 1, "", "AtariDQNExperienceReplay"], [84, 0, 1, "", "BaseDatasetExperienceReplay"], [85, 0, 1, "", "D4RLExperienceReplay"], [86, 0, 1, "", "GenDGRLExperienceReplay"], [87, 0, 1, "", "MinariExperienceReplay"], [88, 0, 1, "", "OpenMLExperienceReplay"], [89, 0, 1, "", "OpenXExperienceReplay"], [90, 0, 1, "", "RobosetExperienceReplay"], [91, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[89, 1, 1, "", "add"], [89, 1, 1, "", "append_transform"], [89, 4, 1, "", "data_path"], [89, 4, 1, "", "data_path_root"], [89, 1, 1, "", "delete"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "dumps"], [89, 1, 1, "", "empty"], [89, 1, 1, "", "extend"], [89, 1, 1, "", "insert_transform"], [89, 1, 1, "", "load"], [89, 1, 1, "", "loads"], [89, 1, 1, "", "preprocess"], [89, 1, 1, "", "register_load_hook"], [89, 1, 1, "", "register_save_hook"], [89, 1, 1, "", "sample"], [89, 4, 1, "", "sampler"], [89, 1, 1, "", "save"], [89, 1, 1, "", "set_sampler"], [89, 1, 1, "", "set_storage"], [89, 1, 1, "", "set_writer"], [89, 4, 1, "", "storage"], [89, 4, 1, "", "write_count"], [89, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[90, 1, 1, "", "add"], [90, 1, 1, "", "append_transform"], [90, 4, 1, "", "data_path"], [90, 4, 1, "", "data_path_root"], [90, 1, 1, "", "delete"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "dumps"], [90, 1, 1, "", "empty"], [90, 1, 1, "", "extend"], [90, 1, 1, "", "insert_transform"], [90, 1, 1, "", "load"], [90, 1, 1, "", "loads"], [90, 1, 1, "", "preprocess"], [90, 1, 1, "", "register_load_hook"], [90, 1, 1, "", "register_save_hook"], [90, 1, 1, "", "sample"], [90, 4, 1, "", "sampler"], [90, 1, 1, "", "save"], [90, 1, 1, "", "set_sampler"], [90, 1, 1, "", "set_storage"], [90, 1, 1, "", "set_writer"], [90, 4, 1, "", "storage"], [90, 4, 1, "", "write_count"], [90, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[91, 1, 1, "", "add"], [91, 1, 1, "", "append_transform"], [91, 4, 1, "", "data_path"], [91, 4, 1, "", "data_path_root"], [91, 1, 1, "", "delete"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "dumps"], [91, 1, 1, "", "empty"], [91, 1, 1, "", "extend"], [91, 1, 1, "", "insert_transform"], [91, 1, 1, "", "load"], [91, 1, 1, "", "loads"], [91, 1, 1, "", "preprocess"], [91, 1, 1, "", "register_load_hook"], [91, 1, 1, "", "register_save_hook"], [91, 1, 1, "", "sample"], [91, 4, 1, "", "sampler"], [91, 1, 1, "", "save"], [91, 1, 1, "", "set_sampler"], [91, 1, 1, "", "set_storage"], [91, 1, 1, "", "set_writer"], [91, 4, 1, "", "storage"], [91, 4, 1, "", "write_count"], [91, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[93, 0, 1, "", "FlatStorageCheckpointer"], [94, 0, 1, "", "H5StorageCheckpointer"], [95, 0, 1, "", "ImmutableDatasetWriter"], [96, 0, 1, "", "LazyMemmapStorage"], [97, 0, 1, "", "LazyTensorStorage"], [98, 0, 1, "", "ListStorage"], [99, 0, 1, "", "ListStorageCheckpointer"], [100, 0, 1, "", "NestedStorageCheckpointer"], [101, 0, 1, "", "PrioritizedSampler"], [102, 0, 1, "", "PrioritizedSliceSampler"], [103, 0, 1, "", "RandomSampler"], [104, 0, 1, "", "ReplayBufferEnsemble"], [105, 0, 1, "", "RoundRobinWriter"], [106, 0, 1, "", "Sampler"], [107, 0, 1, "", "SamplerEnsemble"], [108, 0, 1, "", "SamplerWithoutReplacement"], [109, 0, 1, "", "SliceSampler"], [110, 0, 1, "", "SliceSamplerWithoutReplacement"], [111, 0, 1, "", "Storage"], [112, 0, 1, "", "StorageCheckpointerBase"], [113, 0, 1, "", "StorageEnsemble"], [114, 0, 1, "", "StorageEnsembleCheckpointer"], [115, 0, 1, "", "TensorDictMaxValueWriter"], [116, 0, 1, "", "TensorDictRoundRobinWriter"], [117, 0, 1, "", "TensorStorage"], [118, 0, 1, "", "TensorStorageCheckpointer"], [119, 0, 1, "", "Writer"], [120, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[97, 1, 1, "", "attach"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "load"], [97, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[101, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[102, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[104, 1, 1, "", "add"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "dumps"], [104, 1, 1, "", "empty"], [104, 1, 1, "", "extend"], [104, 1, 1, "", "insert_transform"], [104, 1, 1, "", "load"], [104, 1, 1, "", "loads"], [104, 1, 1, "", "register_load_hook"], [104, 1, 1, "", "register_save_hook"], [104, 1, 1, "", "sample"], [104, 4, 1, "", "sampler"], [104, 1, 1, "", "save"], [104, 1, 1, "", "set_sampler"], [104, 1, 1, "", "set_storage"], [104, 1, 1, "", "set_writer"], [104, 4, 1, "", "storage"], [104, 4, 1, "", "write_count"], [104, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[113, 1, 1, "", "attach"], [113, 1, 1, "", "dump"], [113, 1, 1, "", "load"], [113, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[115, 1, 1, "", "add"], [115, 1, 1, "", "extend"], [115, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[120, 1, 1, "", "add"], [120, 1, 1, "", "extend"]], "torchrl.envs": [[121, 2, 1, "", "BraxEnv"], [122, 2, 1, "", "BraxWrapper"], [123, 2, 1, "", "DMControlEnv"], [124, 2, 1, "", "DMControlWrapper"], [125, 0, 1, "", "EnvBase"], [126, 0, 1, "", "EnvCreator"], [127, 0, 1, "", "EnvMetaData"], [128, 2, 1, "", "GymEnv"], [129, 0, 1, "", "GymLikeEnv"], [130, 2, 1, "", "GymWrapper"], [131, 2, 1, "", "HabitatEnv"], [132, 2, 1, "", "IsaacGymEnv"], [133, 2, 1, "", "IsaacGymWrapper"], [134, 2, 1, "", "JumanjiEnv"], [135, 2, 1, "", "JumanjiWrapper"], [136, 0, 1, "", "LLMHashingEnv"], [137, 2, 1, "", "MOGymEnv"], [138, 2, 1, "", "MOGymWrapper"], [139, 2, 1, "", "MarlGroupMapType"], [140, 2, 1, "", "MeltingpotEnv"], [141, 2, 1, "", "MeltingpotWrapper"], [142, 2, 1, "", "ModelBasedEnvBase"], [143, 2, 1, "", "MultiThreadedEnv"], [144, 2, 1, "", "MultiThreadedEnvWrapper"], [145, 2, 1, "", "OpenMLEnv"], [146, 2, 1, "", "OpenSpielEnv"], [147, 2, 1, "", "OpenSpielWrapper"], [148, 0, 1, "", "ParallelEnv"], [149, 0, 1, "", "PendulumEnv"], [150, 2, 1, "", "PettingZooEnv"], [151, 2, 1, "", "PettingZooWrapper"], [152, 2, 1, "", "RoboHiveEnv"], [153, 2, 1, "", "SMACv2Env"], [154, 2, 1, "", "SMACv2Wrapper"], [155, 0, 1, "", "SerialEnv"], [156, 0, 1, "", "TicTacToeEnv"], [157, 2, 1, "", "UnityMLAgentsEnv"], [158, 2, 1, "", "UnityMLAgentsWrapper"], [159, 2, 1, "", "VmasEnv"], [160, 2, 1, "", "VmasWrapper"], [161, 2, 1, "", "check_marl_grouping"], [162, 2, 1, "", "gym_backend"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "reset"], [142, 1, 1, "", "rollout"], [165, 2, 1, "", "set_gym_backend"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[125, 4, 1, "", "action_key"], [125, 4, 1, "", "action_keys"], [125, 4, 1, "", "action_spec"], [125, 4, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_specs_"], [125, 4, 1, "", "batch_dims"], [125, 4, 1, "", "batch_locked"], [125, 4, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "cardinality"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 4, 1, "", "done_key"], [125, 4, 1, "", "done_keys"], [125, 4, 1, "", "done_keys_groups"], [125, 4, 1, "", "done_spec"], [125, 4, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 4, 1, "", "full_action_spec"], [125, 4, 1, "", "full_action_spec_unbatched"], [125, 4, 1, "", "full_done_spec"], [125, 4, 1, "", "full_done_spec_unbatched"], [125, 4, 1, "", "full_observation_spec_unbatched"], [125, 4, 1, "", "full_reward_spec"], [125, 4, 1, "", "full_reward_spec_unbatched"], [125, 4, 1, "", "full_state_spec"], [125, 4, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 4, 1, "", "input_spec"], [125, 4, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 4, 1, "", "observation_spec"], [125, 4, 1, "", "observation_spec_unbatched"], [125, 4, 1, "", "output_spec"], [125, 4, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "id0", "rand_step"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "id1", "reset"], [125, 4, 1, "", "reset_keys"], [125, 4, 1, "", "reward_key"], [125, 4, 1, "", "reward_keys"], [125, 4, 1, "", "reward_spec"], [125, 4, 1, "", "reward_spec_unbatched"], [125, 1, 1, "id2", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "id3", "set_seed"], [125, 1, 1, "", "set_submodule"], [125, 4, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 4, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 4, 1, "", "state_keys"], [125, 4, 1, "", "state_spec"], [125, 4, 1, "", "state_spec_unbatched"], [125, 1, 1, "id4", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "step_mdp"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[126, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[129, 4, 1, "", "action_key"], [129, 4, 1, "", "action_keys"], [129, 4, 1, "", "action_spec"], [129, 4, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_register_info_dict"], [129, 1, 1, "", "auto_specs_"], [129, 4, 1, "", "batch_dims"], [129, 4, 1, "", "batch_locked"], [129, 4, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "cardinality"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "close"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 4, 1, "", "done_key"], [129, 4, 1, "", "done_keys"], [129, 4, 1, "", "done_keys_groups"], [129, 4, 1, "", "done_spec"], [129, 4, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 4, 1, "", "full_action_spec"], [129, 4, 1, "", "full_action_spec_unbatched"], [129, 4, 1, "", "full_done_spec"], [129, 4, 1, "", "full_done_spec_unbatched"], [129, 4, 1, "", "full_observation_spec_unbatched"], [129, 4, 1, "", "full_reward_spec"], [129, 4, 1, "", "full_reward_spec_unbatched"], [129, 4, 1, "", "full_state_spec"], [129, 4, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 4, 1, "", "input_spec"], [129, 4, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 4, 1, "", "observation_spec"], [129, 4, 1, "", "observation_spec_unbatched"], [129, 4, 1, "", "output_spec"], [129, 4, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "read_action"], [129, 1, 1, "", "read_done"], [129, 1, 1, "", "read_obs"], [129, 1, 1, "", "read_reward"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 4, 1, "", "reset_keys"], [129, 4, 1, "", "reward_key"], [129, 4, 1, "", "reward_keys"], [129, 4, 1, "", "reward_spec"], [129, 4, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_info_dict_reader"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_submodule"], [129, 4, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 4, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 4, 1, "", "state_keys"], [129, 4, 1, "", "state_spec"], [129, 4, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "step_mdp"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[136, 4, 1, "", "action_key"], [136, 4, 1, "", "action_keys"], [136, 4, 1, "", "action_spec"], [136, 4, 1, "", "action_spec_unbatched"], [136, 1, 1, "", "add_module"], [136, 1, 1, "", "add_truncated_keys"], [136, 1, 1, "", "append_transform"], [136, 1, 1, "", "apply"], [136, 1, 1, "", "auto_specs_"], [136, 4, 1, "", "batch_dims"], [136, 4, 1, "", "batch_locked"], [136, 4, 1, "", "batch_size"], [136, 1, 1, "", "bfloat16"], [136, 1, 1, "", "buffers"], [136, 1, 1, "", "cardinality"], [136, 1, 1, "", "check_env_specs"], [136, 1, 1, "", "children"], [136, 1, 1, "", "compile"], [136, 1, 1, "", "cpu"], [136, 1, 1, "", "cuda"], [136, 4, 1, "", "done_key"], [136, 4, 1, "", "done_keys"], [136, 4, 1, "", "done_keys_groups"], [136, 4, 1, "", "done_spec"], [136, 4, 1, "", "done_spec_unbatched"], [136, 1, 1, "", "double"], [136, 1, 1, "", "empty_cache"], [136, 1, 1, "", "eval"], [136, 1, 1, "", "extra_repr"], [136, 1, 1, "", "fake_tensordict"], [136, 1, 1, "", "float"], [136, 1, 1, "", "forward"], [136, 4, 1, "", "full_action_spec"], [136, 4, 1, "", "full_action_spec_unbatched"], [136, 4, 1, "", "full_done_spec"], [136, 4, 1, "", "full_done_spec_unbatched"], [136, 4, 1, "", "full_observation_spec_unbatched"], [136, 4, 1, "", "full_reward_spec"], [136, 4, 1, "", "full_reward_spec_unbatched"], [136, 4, 1, "", "full_state_spec"], [136, 4, 1, "", "full_state_spec_unbatched"], [136, 1, 1, "", "get_buffer"], [136, 1, 1, "", "get_extra_state"], [136, 1, 1, "", "get_parameter"], [136, 1, 1, "", "get_submodule"], [136, 1, 1, "", "half"], [136, 4, 1, "", "input_spec"], [136, 4, 1, "", "input_spec_unbatched"], [136, 1, 1, "", "ipu"], [136, 1, 1, "", "load_state_dict"], [136, 1, 1, "", "make_tensordict"], [136, 1, 1, "", "maybe_reset"], [136, 1, 1, "", "modules"], [136, 1, 1, "", "mtia"], [136, 1, 1, "", "named_buffers"], [136, 1, 1, "", "named_children"], [136, 1, 1, "", "named_modules"], [136, 1, 1, "", "named_parameters"], [136, 4, 1, "", "observation_spec"], [136, 4, 1, "", "observation_spec_unbatched"], [136, 4, 1, "", "output_spec"], [136, 4, 1, "", "output_spec_unbatched"], [136, 1, 1, "", "parameters"], [136, 1, 1, "", "rand_action"], [136, 1, 1, "", "rand_step"], [136, 1, 1, "", "register_backward_hook"], [136, 1, 1, "", "register_buffer"], [136, 1, 1, "", "register_forward_hook"], [136, 1, 1, "", "register_forward_pre_hook"], [136, 1, 1, "", "register_full_backward_hook"], [136, 1, 1, "", "register_full_backward_pre_hook"], [136, 1, 1, "", "register_gym"], [136, 1, 1, "", "register_load_state_dict_post_hook"], [136, 1, 1, "", "register_load_state_dict_pre_hook"], [136, 1, 1, "", "register_module"], [136, 1, 1, "", "register_parameter"], [136, 1, 1, "", "register_state_dict_post_hook"], [136, 1, 1, "", "register_state_dict_pre_hook"], [136, 1, 1, "", "requires_grad_"], [136, 1, 1, "", "reset"], [136, 4, 1, "", "reset_keys"], [136, 4, 1, "", "reward_key"], [136, 4, 1, "", "reward_keys"], [136, 4, 1, "", "reward_spec"], [136, 4, 1, "", "reward_spec_unbatched"], [136, 1, 1, "", "rollout"], [136, 1, 1, "", "set_extra_state"], [136, 1, 1, "", "set_seed"], [136, 1, 1, "", "set_submodule"], [136, 4, 1, "", "shape"], [136, 1, 1, "", "share_memory"], [136, 4, 1, "", "specs"], [136, 1, 1, "", "state_dict"], [136, 4, 1, "", "state_keys"], [136, 4, 1, "", "state_spec"], [136, 4, 1, "", "state_spec_unbatched"], [136, 1, 1, "", "step"], [136, 1, 1, "", "step_and_maybe_reset"], [136, 1, 1, "", "step_mdp"], [136, 1, 1, "", "to"], [136, 1, 1, "", "to_empty"], [136, 1, 1, "", "train"], [136, 1, 1, "", "type"], [136, 1, 1, "", "xpu"], [136, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[148, 4, 1, "", "action_key"], [148, 4, 1, "", "action_keys"], [148, 4, 1, "", "action_spec"], [148, 4, 1, "", "action_spec_unbatched"], [148, 1, 1, "", "add_module"], [148, 1, 1, "", "add_truncated_keys"], [148, 1, 1, "", "append_transform"], [148, 1, 1, "", "apply"], [148, 1, 1, "", "auto_specs_"], [148, 4, 1, "", "batch_dims"], [148, 4, 1, "", "batch_locked"], [148, 4, 1, "", "batch_size"], [148, 1, 1, "", "bfloat16"], [148, 1, 1, "", "buffers"], [148, 1, 1, "", "cardinality"], [148, 1, 1, "", "check_env_specs"], [148, 1, 1, "", "children"], [148, 1, 1, "", "compile"], [148, 1, 1, "", "cpu"], [148, 1, 1, "", "cuda"], [148, 4, 1, "", "done_key"], [148, 4, 1, "", "done_keys"], [148, 4, 1, "", "done_keys_groups"], [148, 4, 1, "", "done_spec"], [148, 4, 1, "", "done_spec_unbatched"], [148, 1, 1, "", "double"], [148, 1, 1, "", "empty_cache"], [148, 1, 1, "", "eval"], [148, 1, 1, "", "extra_repr"], [148, 1, 1, "", "fake_tensordict"], [148, 1, 1, "", "float"], [148, 1, 1, "", "forward"], [148, 4, 1, "", "full_action_spec"], [148, 4, 1, "", "full_action_spec_unbatched"], [148, 4, 1, "", "full_done_spec"], [148, 4, 1, "", "full_done_spec_unbatched"], [148, 4, 1, "", "full_observation_spec_unbatched"], [148, 4, 1, "", "full_reward_spec"], [148, 4, 1, "", "full_reward_spec_unbatched"], [148, 4, 1, "", "full_state_spec"], [148, 4, 1, "", "full_state_spec_unbatched"], [148, 1, 1, "", "get_buffer"], [148, 1, 1, "", "get_extra_state"], [148, 1, 1, "", "get_parameter"], [148, 1, 1, "", "get_submodule"], [148, 1, 1, "", "half"], [148, 4, 1, "", "input_spec"], [148, 4, 1, "", "input_spec_unbatched"], [148, 1, 1, "", "ipu"], [148, 1, 1, "", "load_state_dict"], [148, 1, 1, "", "maybe_reset"], [148, 1, 1, "", "modules"], [148, 1, 1, "", "mtia"], [148, 1, 1, "", "named_buffers"], [148, 1, 1, "", "named_children"], [148, 1, 1, "", "named_modules"], [148, 1, 1, "", "named_parameters"], [148, 4, 1, "", "observation_spec"], [148, 4, 1, "", "observation_spec_unbatched"], [148, 4, 1, "", "output_spec"], [148, 4, 1, "", "output_spec_unbatched"], [148, 1, 1, "", "parameters"], [148, 1, 1, "", "rand_action"], [148, 1, 1, "", "rand_step"], [148, 1, 1, "", "register_backward_hook"], [148, 1, 1, "", "register_buffer"], [148, 1, 1, "", "register_forward_hook"], [148, 1, 1, "", "register_forward_pre_hook"], [148, 1, 1, "", "register_full_backward_hook"], [148, 1, 1, "", "register_full_backward_pre_hook"], [148, 1, 1, "", "register_gym"], [148, 1, 1, "", "register_load_state_dict_post_hook"], [148, 1, 1, "", "register_load_state_dict_pre_hook"], [148, 1, 1, "", "register_module"], [148, 1, 1, "", "register_parameter"], [148, 1, 1, "", "register_state_dict_post_hook"], [148, 1, 1, "", "register_state_dict_pre_hook"], [148, 1, 1, "", "requires_grad_"], [148, 1, 1, "", "reset"], [148, 4, 1, "", "reset_keys"], [148, 4, 1, "", "reward_key"], [148, 4, 1, "", "reward_keys"], [148, 4, 1, "", "reward_spec"], [148, 4, 1, "", "reward_spec_unbatched"], [148, 1, 1, "", "rollout"], [148, 1, 1, "", "set_extra_state"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "set_submodule"], [148, 4, 1, "", "shape"], [148, 1, 1, "", "share_memory"], [148, 4, 1, "", "specs"], [148, 1, 1, "", "state_dict"], [148, 4, 1, "", "state_keys"], [148, 4, 1, "", "state_spec"], [148, 4, 1, "", "state_spec_unbatched"], [148, 1, 1, "", "step"], [148, 1, 1, "", "step_and_maybe_reset"], [148, 1, 1, "", "step_mdp"], [148, 1, 1, "", "to"], [148, 1, 1, "", "to_empty"], [148, 1, 1, "", "train"], [148, 1, 1, "", "type"], [148, 1, 1, "", "update_kwargs"], [148, 1, 1, "", "xpu"], [148, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[149, 4, 1, "", "action_key"], [149, 4, 1, "", "action_keys"], [149, 4, 1, "", "action_spec"], [149, 4, 1, "", "action_spec_unbatched"], [149, 1, 1, "", "add_module"], [149, 1, 1, "", "add_truncated_keys"], [149, 1, 1, "", "append_transform"], [149, 1, 1, "", "apply"], [149, 1, 1, "", "auto_specs_"], [149, 4, 1, "", "batch_dims"], [149, 4, 1, "", "batch_size"], [149, 1, 1, "", "bfloat16"], [149, 1, 1, "", "buffers"], [149, 1, 1, "", "cardinality"], [149, 1, 1, "", "check_env_specs"], [149, 1, 1, "", "children"], [149, 1, 1, "", "compile"], [149, 1, 1, "", "cpu"], [149, 1, 1, "", "cuda"], [149, 4, 1, "", "done_key"], [149, 4, 1, "", "done_keys"], [149, 4, 1, "", "done_keys_groups"], [149, 4, 1, "", "done_spec"], [149, 4, 1, "", "done_spec_unbatched"], [149, 1, 1, "", "double"], [149, 1, 1, "", "empty_cache"], [149, 1, 1, "", "eval"], [149, 1, 1, "", "extra_repr"], [149, 1, 1, "", "fake_tensordict"], [149, 1, 1, "", "float"], [149, 1, 1, "", "forward"], [149, 4, 1, "", "full_action_spec"], [149, 4, 1, "", "full_action_spec_unbatched"], [149, 4, 1, "", "full_done_spec"], [149, 4, 1, "", "full_done_spec_unbatched"], [149, 4, 1, "", "full_observation_spec_unbatched"], [149, 4, 1, "", "full_reward_spec"], [149, 4, 1, "", "full_reward_spec_unbatched"], [149, 4, 1, "", "full_state_spec"], [149, 4, 1, "", "full_state_spec_unbatched"], [149, 1, 1, "", "gen_params"], [149, 1, 1, "", "get_buffer"], [149, 1, 1, "", "get_extra_state"], [149, 1, 1, "", "get_parameter"], [149, 1, 1, "", "get_submodule"], [149, 1, 1, "", "half"], [149, 4, 1, "", "input_spec"], [149, 4, 1, "", "input_spec_unbatched"], [149, 1, 1, "", "ipu"], [149, 1, 1, "", "load_state_dict"], [149, 1, 1, "", "maybe_reset"], [149, 1, 1, "", "modules"], [149, 1, 1, "", "mtia"], [149, 1, 1, "", "named_buffers"], [149, 1, 1, "", "named_children"], [149, 1, 1, "", "named_modules"], [149, 1, 1, "", "named_parameters"], [149, 4, 1, "", "observation_spec"], [149, 4, 1, "", "observation_spec_unbatched"], [149, 4, 1, "", "output_spec"], [149, 4, 1, "", "output_spec_unbatched"], [149, 1, 1, "", "parameters"], [149, 1, 1, "", "rand_action"], [149, 1, 1, "", "rand_step"], [149, 1, 1, "", "register_backward_hook"], [149, 1, 1, "", "register_buffer"], [149, 1, 1, "", "register_forward_hook"], [149, 1, 1, "", "register_forward_pre_hook"], [149, 1, 1, "", "register_full_backward_hook"], [149, 1, 1, "", "register_full_backward_pre_hook"], [149, 1, 1, "", "register_gym"], [149, 1, 1, "", "register_load_state_dict_post_hook"], [149, 1, 1, "", "register_load_state_dict_pre_hook"], [149, 1, 1, "", "register_module"], [149, 1, 1, "", "register_parameter"], [149, 1, 1, "", "register_state_dict_post_hook"], [149, 1, 1, "", "register_state_dict_pre_hook"], [149, 1, 1, "", "requires_grad_"], [149, 1, 1, "", "reset"], [149, 4, 1, "", "reset_keys"], [149, 4, 1, "", "reward_key"], [149, 4, 1, "", "reward_keys"], [149, 4, 1, "", "reward_spec"], [149, 4, 1, "", "reward_spec_unbatched"], [149, 1, 1, "", "rollout"], [149, 1, 1, "", "set_extra_state"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "set_submodule"], [149, 4, 1, "", "shape"], [149, 1, 1, "", "share_memory"], [149, 4, 1, "", "specs"], [149, 1, 1, "", "state_dict"], [149, 4, 1, "", "state_keys"], [149, 4, 1, "", "state_spec"], [149, 4, 1, "", "state_spec_unbatched"], [149, 1, 1, "", "step"], [149, 1, 1, "", "step_and_maybe_reset"], [149, 1, 1, "", "step_mdp"], [149, 1, 1, "", "to"], [149, 1, 1, "", "to_empty"], [149, 1, 1, "", "train"], [149, 1, 1, "", "type"], [149, 1, 1, "", "xpu"], [149, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[155, 4, 1, "", "action_key"], [155, 4, 1, "", "action_keys"], [155, 4, 1, "", "action_spec"], [155, 4, 1, "", "action_spec_unbatched"], [155, 1, 1, "", "add_module"], [155, 1, 1, "", "add_truncated_keys"], [155, 1, 1, "", "append_transform"], [155, 1, 1, "", "apply"], [155, 1, 1, "", "auto_specs_"], [155, 4, 1, "", "batch_dims"], [155, 4, 1, "", "batch_locked"], [155, 4, 1, "", "batch_size"], [155, 1, 1, "", "bfloat16"], [155, 1, 1, "", "buffers"], [155, 1, 1, "", "cardinality"], [155, 1, 1, "", "check_env_specs"], [155, 1, 1, "", "children"], [155, 1, 1, "", "compile"], [155, 1, 1, "", "cpu"], [155, 1, 1, "", "cuda"], [155, 4, 1, "", "done_key"], [155, 4, 1, "", "done_keys"], [155, 4, 1, "", "done_keys_groups"], [155, 4, 1, "", "done_spec"], [155, 4, 1, "", "done_spec_unbatched"], [155, 1, 1, "", "double"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 1, 1, "", "extra_repr"], [155, 1, 1, "", "fake_tensordict"], [155, 1, 1, "", "float"], [155, 1, 1, "", "forward"], [155, 4, 1, "", "full_action_spec"], [155, 4, 1, "", "full_action_spec_unbatched"], [155, 4, 1, "", "full_done_spec"], [155, 4, 1, "", "full_done_spec_unbatched"], [155, 4, 1, "", "full_observation_spec_unbatched"], [155, 4, 1, "", "full_reward_spec"], [155, 4, 1, "", "full_reward_spec_unbatched"], [155, 4, 1, "", "full_state_spec"], [155, 4, 1, "", "full_state_spec_unbatched"], [155, 1, 1, "", "get_buffer"], [155, 1, 1, "", "get_extra_state"], [155, 1, 1, "", "get_parameter"], [155, 1, 1, "", "get_submodule"], [155, 1, 1, "", "half"], [155, 4, 1, "", "input_spec"], [155, 4, 1, "", "input_spec_unbatched"], [155, 1, 1, "", "ipu"], [155, 1, 1, "", "load_state_dict"], [155, 1, 1, "", "maybe_reset"], [155, 1, 1, "", "modules"], [155, 1, 1, "", "mtia"], [155, 1, 1, "", "named_buffers"], [155, 1, 1, "", "named_children"], [155, 1, 1, "", "named_modules"], [155, 1, 1, "", "named_parameters"], [155, 4, 1, "", "observation_spec"], [155, 4, 1, "", "observation_spec_unbatched"], [155, 4, 1, "", "output_spec"], [155, 4, 1, "", "output_spec_unbatched"], [155, 1, 1, "", "parameters"], [155, 1, 1, "", "rand_action"], [155, 1, 1, "", "rand_step"], [155, 1, 1, "", "register_backward_hook"], [155, 1, 1, "", "register_buffer"], [155, 1, 1, "", "register_forward_hook"], [155, 1, 1, "", "register_forward_pre_hook"], [155, 1, 1, "", "register_full_backward_hook"], [155, 1, 1, "", "register_full_backward_pre_hook"], [155, 1, 1, "", "register_gym"], [155, 1, 1, "", "register_load_state_dict_post_hook"], [155, 1, 1, "", "register_load_state_dict_pre_hook"], [155, 1, 1, "", "register_module"], [155, 1, 1, "", "register_parameter"], [155, 1, 1, "", "register_state_dict_post_hook"], [155, 1, 1, "", "register_state_dict_pre_hook"], [155, 1, 1, "", "requires_grad_"], [155, 1, 1, "", "reset"], [155, 4, 1, "", "reset_keys"], [155, 4, 1, "", "reward_key"], [155, 4, 1, "", "reward_keys"], [155, 4, 1, "", "reward_spec"], [155, 4, 1, "", "reward_spec_unbatched"], [155, 1, 1, "", "rollout"], [155, 1, 1, "", "set_extra_state"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "set_submodule"], [155, 4, 1, "", "shape"], [155, 1, 1, "", "share_memory"], [155, 4, 1, "", "specs"], [155, 1, 1, "", "state_dict"], [155, 4, 1, "", "state_keys"], [155, 4, 1, "", "state_spec"], [155, 4, 1, "", "state_spec_unbatched"], [155, 1, 1, "", "step"], [155, 1, 1, "", "step_and_maybe_reset"], [155, 1, 1, "", "step_mdp"], [155, 1, 1, "", "to"], [155, 1, 1, "", "to_empty"], [155, 1, 1, "", "train"], [155, 1, 1, "", "type"], [155, 1, 1, "", "update_kwargs"], [155, 1, 1, "", "xpu"], [155, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[156, 4, 1, "", "action_key"], [156, 4, 1, "", "action_keys"], [156, 4, 1, "", "action_spec"], [156, 4, 1, "", "action_spec_unbatched"], [156, 1, 1, "", "add_module"], [156, 1, 1, "", "add_truncated_keys"], [156, 1, 1, "", "append_transform"], [156, 1, 1, "", "apply"], [156, 1, 1, "", "auto_specs_"], [156, 4, 1, "", "batch_dims"], [156, 4, 1, "", "batch_size"], [156, 1, 1, "", "bfloat16"], [156, 1, 1, "", "buffers"], [156, 1, 1, "", "cardinality"], [156, 1, 1, "", "check_env_specs"], [156, 1, 1, "", "children"], [156, 1, 1, "", "compile"], [156, 1, 1, "", "cpu"], [156, 1, 1, "", "cuda"], [156, 4, 1, "", "done_key"], [156, 4, 1, "", "done_keys"], [156, 4, 1, "", "done_keys_groups"], [156, 4, 1, "", "done_spec"], [156, 4, 1, "", "done_spec_unbatched"], [156, 1, 1, "", "double"], [156, 1, 1, "", "empty_cache"], [156, 1, 1, "", "eval"], [156, 1, 1, "", "extra_repr"], [156, 1, 1, "", "fake_tensordict"], [156, 1, 1, "", "float"], [156, 1, 1, "", "forward"], [156, 4, 1, "", "full_action_spec"], [156, 4, 1, "", "full_action_spec_unbatched"], [156, 4, 1, "", "full_done_spec"], [156, 4, 1, "", "full_done_spec_unbatched"], [156, 4, 1, "", "full_observation_spec_unbatched"], [156, 4, 1, "", "full_reward_spec"], [156, 4, 1, "", "full_reward_spec_unbatched"], [156, 4, 1, "", "full_state_spec"], [156, 4, 1, "", "full_state_spec_unbatched"], [156, 1, 1, "", "get_buffer"], [156, 1, 1, "", "get_extra_state"], [156, 1, 1, "", "get_parameter"], [156, 1, 1, "", "get_submodule"], [156, 1, 1, "", "half"], [156, 4, 1, "", "input_spec"], [156, 4, 1, "", "input_spec_unbatched"], [156, 1, 1, "", "ipu"], [156, 1, 1, "", "load_state_dict"], [156, 1, 1, "", "maybe_reset"], [156, 1, 1, "", "modules"], [156, 1, 1, "", "mtia"], [156, 1, 1, "", "named_buffers"], [156, 1, 1, "", "named_children"], [156, 1, 1, "", "named_modules"], [156, 1, 1, "", "named_parameters"], [156, 4, 1, "", "observation_spec"], [156, 4, 1, "", "observation_spec_unbatched"], [156, 4, 1, "", "output_spec"], [156, 4, 1, "", "output_spec_unbatched"], [156, 1, 1, "", "parameters"], [156, 1, 1, "", "rand_action"], [156, 1, 1, "", "rand_step"], [156, 1, 1, "", "register_backward_hook"], [156, 1, 1, "", "register_buffer"], [156, 1, 1, "", "register_forward_hook"], [156, 1, 1, "", "register_forward_pre_hook"], [156, 1, 1, "", "register_full_backward_hook"], [156, 1, 1, "", "register_full_backward_pre_hook"], [156, 1, 1, "", "register_gym"], [156, 1, 1, "", "register_load_state_dict_post_hook"], [156, 1, 1, "", "register_load_state_dict_pre_hook"], [156, 1, 1, "", "register_module"], [156, 1, 1, "", "register_parameter"], [156, 1, 1, "", "register_state_dict_post_hook"], [156, 1, 1, "", "register_state_dict_pre_hook"], [156, 1, 1, "", "requires_grad_"], [156, 1, 1, "", "reset"], [156, 4, 1, "", "reset_keys"], [156, 4, 1, "", "reward_key"], [156, 4, 1, "", "reward_keys"], [156, 4, 1, "", "reward_spec"], [156, 4, 1, "", "reward_spec_unbatched"], [156, 1, 1, "", "rollout"], [156, 1, 1, "", "set_extra_state"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "set_submodule"], [156, 4, 1, "", "shape"], [156, 1, 1, "", "share_memory"], [156, 4, 1, "", "specs"], [156, 1, 1, "", "state_dict"], [156, 4, 1, "", "state_keys"], [156, 4, 1, "", "state_spec"], [156, 4, 1, "", "state_spec_unbatched"], [156, 1, 1, "", "step"], [156, 1, 1, "", "step_and_maybe_reset"], [156, 1, 1, "", "step_mdp"], [156, 1, 1, "", "to"], [156, 1, 1, "", "to_empty"], [156, 1, 1, "", "train"], [156, 1, 1, "", "type"], [156, 1, 1, "", "xpu"], [156, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[163, 2, 1, "", "DreamerDecoder"], [164, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[166, 0, 1, "", "ActionDiscretizer"], [167, 0, 1, "", "ActionMask"], [168, 0, 1, "", "AutoResetEnv"], [169, 0, 1, "", "AutoResetTransform"], [170, 0, 1, "", "BatchSizeTransform"], [171, 0, 1, "", "BinarizeReward"], [172, 0, 1, "", "BurnInTransform"], [173, 0, 1, "", "CatFrames"], [174, 0, 1, "", "CatTensors"], [175, 0, 1, "", "CenterCrop"], [176, 0, 1, "", "ClipTransform"], [177, 0, 1, "", "Compose"], [178, 0, 1, "", "Crop"], [179, 0, 1, "", "DTypeCastTransform"], [180, 0, 1, "", "DeviceCastTransform"], [181, 0, 1, "", "DiscreteActionProjection"], [182, 0, 1, "", "DoubleToFloat"], [183, 0, 1, "", "EndOfLifeTransform"], [184, 0, 1, "", "ExcludeTransform"], [185, 0, 1, "", "FiniteTensorDictCheck"], [186, 0, 1, "", "FlattenObservation"], [187, 0, 1, "", "FrameSkipTransform"], [188, 0, 1, "", "GrayScale"], [189, 0, 1, "", "InitTracker"], [190, 0, 1, "", "KLRewardTransform"], [191, 0, 1, "", "NoopResetEnv"], [192, 0, 1, "", "ObservationNorm"], [193, 0, 1, "", "ObservationTransform"], [194, 0, 1, "", "PermuteTransform"], [195, 0, 1, "", "PinMemoryTransform"], [196, 0, 1, "", "R3MTransform"], [197, 0, 1, "", "RandomCropTensorDict"], [198, 0, 1, "", "RemoveEmptySpecs"], [199, 0, 1, "", "RenameTransform"], [200, 0, 1, "", "Resize"], [201, 0, 1, "", "Reward2GoTransform"], [202, 0, 1, "", "RewardClipping"], [203, 0, 1, "", "RewardScaling"], [204, 0, 1, "", "RewardSum"], [205, 0, 1, "", "SelectTransform"], [206, 0, 1, "", "SignTransform"], [207, 0, 1, "", "SqueezeTransform"], [208, 0, 1, "", "StepCounter"], [209, 0, 1, "", "TargetReturn"], [210, 0, 1, "", "TensorDictPrimer"], [211, 0, 1, "", "TimeMaxPool"], [212, 0, 1, "", "ToTensorImage"], [213, 0, 1, "", "TrajCounter"], [214, 0, 1, "", "Transform"], [215, 0, 1, "", "TransformedEnv"], [216, 0, 1, "", "UnsqueezeTransform"], [217, 0, 1, "", "VC1Transform"], [218, 0, 1, "", "VIPRewardTransform"], [219, 0, 1, "", "VIPTransform"], [220, 0, 1, "", "VecGymEnvTransform"], [221, 0, 1, "", "VecNorm"], [222, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[166, 0, 1, "", "SamplingStrategy"], [166, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[167, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[168, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[169, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_env_batch_size"], [170, 1, 1, "", "transform_input_spec"], [170, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[171, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[172, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[177, 1, 1, "", "append"], [177, 1, 1, "", "forward"], [177, 1, 1, "", "insert"], [177, 1, 1, "", "to"], [177, 1, 1, "", "transform_env_batch_size"], [177, 1, 1, "", "transform_env_device"], [177, 1, 1, "", "transform_input_spec"], [177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_output_spec"], [177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[178, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_done_spec"], [180, 1, 1, "", "transform_env_device"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"], [180, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[181, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "register_keys"], [183, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[185, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[187, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[192, 1, 1, "", "init_stats"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[194, 1, 1, "", "transform_input_spec"], [194, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[195, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[196, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[197, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[200, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[201, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"], [208, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "to"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TrajCounter": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "load_state_dict"], [213, 1, 1, "", "state_dict"], [213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[214, 4, 1, "", "container"], [214, 1, 1, "", "forward"], [214, 4, 1, "", "parent"], [214, 1, 1, "", "to"], [214, 1, 1, "", "transform_done_spec"], [214, 1, 1, "", "transform_env_batch_size"], [214, 1, 1, "", "transform_env_device"], [214, 1, 1, "", "transform_input_spec"], [214, 1, 1, "", "transform_observation_spec"], [214, 1, 1, "", "transform_output_spec"], [214, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[215, 1, 1, "", "add_truncated_keys"], [215, 1, 1, "", "append_transform"], [215, 4, 1, "", "batch_locked"], [215, 4, 1, "", "batch_size"], [215, 1, 1, "", "empty_cache"], [215, 1, 1, "", "eval"], [215, 4, 1, "", "input_spec"], [215, 1, 1, "", "insert_transform"], [215, 1, 1, "", "load_state_dict"], [215, 4, 1, "", "output_spec"], [215, 1, 1, "", "set_missing_tolerance"], [215, 1, 1, "", "set_seed"], [215, 1, 1, "", "state_dict"], [215, 1, 1, "", "to"], [215, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[216, 1, 1, "", "transform_input_spec"], [216, 1, 1, "", "transform_observation_spec"], [216, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_noload_model"], [217, 1, 1, "", "to"], [217, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[219, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[221, 1, 1, "", "build_td_for_shared_vecnorm"], [221, 1, 1, "", "forward"], [221, 1, 1, "", "freeze"], [221, 1, 1, "", "frozen_copy"], [221, 1, 1, "", "get_extra_state"], [221, 4, 1, "", "loc"], [221, 4, 1, "", "scale"], [221, 1, 1, "", "set_extra_state"], [221, 4, 1, "", "standard_normal"], [221, 1, 1, "", "to_observation_norm"], [221, 1, 1, "", "transform_observation_spec"], [221, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[223, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[223, 1, 1, "", "add_module"], [223, 1, 1, "", "apply"], [223, 1, 1, "", "bfloat16"], [223, 1, 1, "", "buffers"], [223, 1, 1, "", "children"], [223, 1, 1, "", "compile"], [223, 4, 1, "", "container"], [223, 1, 1, "", "cpu"], [223, 1, 1, "", "cuda"], [223, 1, 1, "", "double"], [223, 1, 1, "", "eval"], [223, 1, 1, "", "extra_repr"], [223, 1, 1, "", "float"], [223, 1, 1, "", "forward"], [223, 1, 1, "", "get_buffer"], [223, 1, 1, "", "get_extra_state"], [223, 1, 1, "", "get_parameter"], [223, 1, 1, "", "get_submodule"], [223, 1, 1, "", "half"], [223, 1, 1, "", "ipu"], [223, 1, 1, "", "load_state_dict"], [223, 1, 1, "", "modules"], [223, 1, 1, "", "mtia"], [223, 4, 1, "", "n_steps"], [223, 1, 1, "", "named_buffers"], [223, 1, 1, "", "named_children"], [223, 1, 1, "", "named_modules"], [223, 1, 1, "", "named_parameters"], [223, 1, 1, "", "parameters"], [223, 4, 1, "", "parent"], [223, 1, 1, "", "register_backward_hook"], [223, 1, 1, "", "register_buffer"], [223, 1, 1, "", "register_forward_hook"], [223, 1, 1, "", "register_forward_pre_hook"], [223, 1, 1, "", "register_full_backward_hook"], [223, 1, 1, "", "register_full_backward_pre_hook"], [223, 1, 1, "", "register_load_state_dict_post_hook"], [223, 1, 1, "", "register_load_state_dict_pre_hook"], [223, 1, 1, "", "register_module"], [223, 1, 1, "", "register_parameter"], [223, 1, 1, "", "register_state_dict_post_hook"], [223, 1, 1, "", "register_state_dict_pre_hook"], [223, 1, 1, "", "requires_grad_"], [223, 1, 1, "", "set_extra_state"], [223, 1, 1, "", "set_submodule"], [223, 1, 1, "", "share_memory"], [223, 1, 1, "", "state_dict"], [223, 1, 1, "", "to"], [223, 1, 1, "", "to_empty"], [223, 1, 1, "", "train"], [223, 1, 1, "", "transform_done_spec"], [223, 1, 1, "", "transform_env_batch_size"], [223, 1, 1, "", "transform_env_device"], [223, 1, 1, "", "transform_input_spec"], [223, 1, 1, "", "transform_observation_spec"], [223, 1, 1, "", "transform_output_spec"], [223, 1, 1, "", "transform_reward_spec"], [223, 1, 1, "", "type"], [223, 1, 1, "", "xpu"], [223, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[224, 2, 1, "", "RandomPolicy"], [225, 2, 1, "", "check_env_specs"], [226, 2, 1, "", "exploration_type"], [227, 2, 1, "", "get_available_libraries"], [228, 2, 1, "", "make_composite_from_td"], [229, 2, 1, "", "set_exploration_type"], [230, 2, 1, "", "step_mdp"], [231, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[232, 0, 1, "", "AdditiveGaussianModule"], [233, 0, 1, "", "AdditiveGaussianWrapper"], [234, 0, 1, "", "BatchRenorm1d"], [235, 0, 1, "", "CEMPlanner"], [236, 0, 1, "", "ConsistentDropout"], [237, 0, 1, "", "ConsistentDropoutModule"], [238, 0, 1, "", "Conv3dNet"], [239, 0, 1, "", "ConvNet"], [240, 0, 1, "", "DTActor"], [241, 0, 1, "", "DdpgCnnActor"], [242, 0, 1, "", "DdpgCnnQNet"], [243, 0, 1, "", "DdpgMlpActor"], [244, 0, 1, "", "DdpgMlpQNet"], [245, 0, 1, "", "DecisionTransformer"], [246, 0, 1, "", "Delta"], [247, 0, 1, "", "DistributionalDQNnet"], [248, 0, 1, "", "DistributionalQValueHook"], [249, 0, 1, "", "DreamerActor"], [250, 0, 1, "", "DuelingCnnDQNet"], [251, 0, 1, "", "EGreedyModule"], [252, 0, 1, "", "EGreedyWrapper"], [253, 0, 1, "", "GRU"], [254, 0, 1, "", "GRUCell"], [255, 0, 1, "", "GRUModule"], [256, 0, 1, "", "IndependentNormal"], [257, 0, 1, "", "LSTM"], [258, 0, 1, "", "LSTMCell"], [259, 0, 1, "", "LSTMModule"], [260, 0, 1, "", "MLP"], [261, 0, 1, "", "MPCPlannerBase"], [262, 0, 1, "", "MPPIPlanner"], [263, 0, 1, "", "MaskedCategorical"], [264, 0, 1, "", "MaskedOneHotCategorical"], [265, 0, 1, "", "MultiAgentConvNet"], [266, 0, 1, "", "MultiAgentMLP"], [267, 0, 1, "", "MultiAgentNetBase"], [268, 0, 1, "", "NoisyLazyLinear"], [269, 0, 1, "", "NoisyLinear"], [270, 0, 1, "", "NormalParamWrapper"], [271, 0, 1, "", "ObsDecoder"], [272, 0, 1, "", "ObsEncoder"], [273, 0, 1, "", "OneHotCategorical"], [274, 0, 1, "", "OneHotOrdinal"], [275, 0, 1, "", "OnlineDTActor"], [276, 0, 1, "", "Ordinal"], [277, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [278, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [279, 0, 1, "", "QMixer"], [280, 0, 1, "", "QValueHook"], [281, 0, 1, "", "RSSMPosterior"], [282, 0, 1, "", "RSSMPrior"], [283, 0, 1, "", "Squeeze2dLayer"], [284, 0, 1, "", "SqueezeLayer"], [285, 0, 1, "", "TanhDelta"], [286, 0, 1, "", "TanhNormal"], [287, 0, 1, "", "TruncatedNormal"], [288, 0, 1, "", "VDNMixer"], [289, 0, 1, "", "VmapModule"], [290, 0, 1, "", "recurrent_mode"], [291, 0, 1, "", "reset_noise"], [292, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[234, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[235, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[236, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[238, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[239, 1, 1, "", "default_atari_dqn"], [239, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[240, 1, 1, "", "default_config"], [240, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[241, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[242, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[243, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[244, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[245, 0, 1, "", "DTConfig"], [245, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[246, 1, 1, "", "expand"], [246, 1, 1, "", "log_prob"], [246, 4, 1, "", "mean"], [246, 4, 1, "", "mode"], [246, 1, 1, "", "rsample"], [246, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[247, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[249, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[250, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "step"]], "torchrl.modules.GRU": [[253, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[254, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_cudnn_based"], [255, 1, 1, "", "make_python_based"], [255, 1, 1, "id0", "make_tensordict_primer"], [255, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[256, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[257, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[258, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_cudnn_based"], [259, 1, 1, "", "make_python_based"], [259, 1, 1, "id0", "make_tensordict_primer"], [259, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[260, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[262, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[263, 1, 1, "", "log_prob"], [263, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[264, 1, 1, "", "log_prob"], [264, 4, 1, "", "mode"], [264, 1, 1, "", "rsample"], [264, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "from_stateful_net"], [267, 1, 1, "", "get_stateful_net"], [267, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[268, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[270, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[271, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[272, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[273, 1, 1, "", "entropy"], [273, 1, 1, "", "log_prob"], [273, 4, 1, "", "mode"], [273, 1, 1, "", "rsample"], [273, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[275, 1, 1, "", "default_config"], [275, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[279, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[281, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[282, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[284, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[285, 4, 1, "", "mean"], [285, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[286, 1, 1, "", "get_mode"], [286, 4, 1, "", "mean"], [286, 4, 1, "", "mode"], [286, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[287, 1, 1, "", "log_prob"], [287, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[288, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[289, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[293, 0, 1, "", "Actor"], [294, 0, 1, "", "ActorCriticOperator"], [295, 0, 1, "", "ActorCriticWrapper"], [296, 0, 1, "", "ActorValueOperator"], [297, 0, 1, "", "DecisionTransformerInferenceWrapper"], [298, 0, 1, "", "DistributionalQValueActor"], [299, 0, 1, "", "DistributionalQValueModule"], [300, 0, 1, "", "LMHeadActorValueOperator"], [301, 0, 1, "", "MultiStepActorWrapper"], [302, 0, 1, "", "ProbabilisticActor"], [303, 0, 1, "", "QValueActor"], [304, 0, 1, "", "QValueModule"], [305, 0, 1, "", "SafeModule"], [306, 0, 1, "", "SafeProbabilisticModule"], [307, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [308, 0, 1, "", "SafeSequential"], [309, 0, 1, "", "TanhModule"], [310, 0, 1, "", "ValueOperator"], [311, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[294, 1, 1, "", "get_critic_operator"], [294, 1, 1, "", "get_policy_head"], [294, 1, 1, "", "get_value_head"], [294, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[295, 1, 1, "", "get_policy_head"], [295, 1, 1, "", "get_policy_operator"], [295, 1, 1, "", "get_value_head"], [295, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[296, 1, 1, "", "get_policy_head"], [296, 1, 1, "", "get_policy_operator"], [296, 1, 1, "", "get_value_head"], [296, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[297, 1, 1, "", "forward"], [297, 1, 1, "", "mask_context"], [297, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[299, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[301, 1, 1, "", "forward"], [301, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[304, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[305, 1, 1, "", "random"], [305, 1, 1, "", "random_sample"], [305, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[306, 1, 1, "", "random"], [306, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[309, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[311, 1, 1, "", "get_reward_operator"], [311, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[312, 0, 1, "", "biased_softplus"], [313, 0, 1, "", "get_primers_from_module"], [314, 0, 1, "", "inv_softplus"], [315, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[312, 1, 1, "", "forward"]], "torchrl.objectives": [[316, 0, 1, "", "A2CLoss"], [317, 0, 1, "", "CQLLoss"], [318, 0, 1, "", "ClipPPOLoss"], [319, 0, 1, "", "CrossQLoss"], [320, 0, 1, "", "DDPGLoss"], [321, 0, 1, "", "DQNLoss"], [322, 0, 1, "", "DTLoss"], [323, 0, 1, "", "DiscreteCQLLoss"], [324, 0, 1, "", "DiscreteIQLLoss"], [325, 0, 1, "", "DiscreteSACLoss"], [326, 0, 1, "", "DistributionalDQNLoss"], [327, 0, 1, "", "DreamerActorLoss"], [328, 0, 1, "", "DreamerModelLoss"], [329, 0, 1, "", "DreamerValueLoss"], [330, 0, 1, "", "GAILLoss"], [331, 0, 1, "", "HardUpdate"], [332, 0, 1, "", "IQLLoss"], [333, 0, 1, "", "KLPENPPOLoss"], [334, 0, 1, "", "LossModule"], [335, 0, 1, "", "OnlineDTLoss"], [336, 0, 1, "", "PPOLoss"], [337, 0, 1, "", "REDQLoss"], [338, 0, 1, "", "ReinforceLoss"], [339, 0, 1, "", "SACLoss"], [340, 0, 1, "", "SoftUpdate"], [341, 0, 1, "", "TD3BCLoss"], [342, 0, 1, "", "TD3Loss"], [343, 0, 1, "", "ValueEstimators"], [344, 0, 1, "", "default_value_kwargs"], [345, 0, 1, "", "distance_loss"], [346, 0, 1, "", "group_optimizers"], [347, 0, 1, "", "hold_out_net"], [348, 0, 1, "", "hold_out_params"], [350, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[316, 1, 1, "", "forward"], [316, 4, 1, "", "functional"], [316, 1, 1, "", "loss_critic"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[318, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[319, 1, 1, "", "actor_loss"], [319, 1, 1, "", "alpha_loss"], [319, 1, 1, "", "forward"], [319, 1, 1, "", "load_state_dict"], [319, 1, 1, "", "make_value_estimator"], [319, 1, 1, "", "maybe_init_target_entropy"], [319, 1, 1, "", "qvalue_loss"], [319, 1, 1, "", "set_keys"], [319, 1, 1, "", "state_dict"], [319, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[322, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[323, 1, 1, "", "forward"], [323, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[324, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[328, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[329, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[330, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "loss_value_diff"], [332, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[333, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[334, 1, 1, "", "convert_to_functional"], [334, 1, 1, "", "forward"], [334, 1, 1, "", "from_stateful_net"], [334, 4, 1, "", "functional"], [334, 1, 1, "", "get_stateful_net"], [334, 1, 1, "", "make_value_estimator"], [334, 1, 1, "", "named_parameters"], [334, 1, 1, "", "parameters"], [334, 1, 1, "", "reset_parameters_recursive"], [334, 1, 1, "", "set_keys"], [334, 4, 1, "", "value_estimator"], [334, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[335, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[336, 1, 1, "", "forward"], [336, 4, 1, "", "functional"], [336, 1, 1, "", "loss_critic"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[337, 1, 1, "", "forward"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[338, 1, 1, "", "forward"], [338, 4, 1, "", "functional"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[339, 1, 1, "", "forward"], [339, 1, 1, "", "load_state_dict"], [339, 1, 1, "", "make_value_estimator"], [339, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[341, 1, 1, "", "actor_loss"], [341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"], [341, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[349, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[349, 1, 1, "", "forward"], [349, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[351, 0, 1, "", "GAE"], [352, 0, 1, "", "TD0Estimator"], [353, 0, 1, "", "TD1Estimator"], [354, 0, 1, "", "TDLambdaEstimator"], [355, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[351, 1, 1, "", "forward"], [351, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[352, 1, 1, "", "forward"], [352, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[353, 1, 1, "", "forward"], [353, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[354, 1, 1, "", "forward"], [354, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[355, 1, 1, "", "forward"], [355, 1, 1, "", "set_keys"], [355, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[356, 0, 1, "", "generalized_advantage_estimate"], [357, 0, 1, "", "reward2go"], [358, 0, 1, "", "td0_advantage_estimate"], [359, 0, 1, "", "td0_return_estimate"], [360, 0, 1, "", "td1_advantage_estimate"], [361, 0, 1, "", "td1_return_estimate"], [362, 0, 1, "", "td_lambda_advantage_estimate"], [363, 0, 1, "", "td_lambda_return_estimate"], [364, 0, 1, "", "vec_generalized_advantage_estimate"], [365, 0, 1, "", "vec_td1_advantage_estimate"], [366, 0, 1, "", "vec_td1_return_estimate"], [367, 0, 1, "", "vec_td_lambda_advantage_estimate"], [368, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[369, 2, 1, "", "PixelRenderTransform"], [370, 2, 1, "", "TensorDictRecorder"], [371, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[372, 2, 1, "", "Logger"], [374, 2, 1, "", "generate_exp_name"], [375, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[373, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[376, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[377, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[378, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[379, 0, 1, "", "BatchSubSampler"], [380, 0, 1, "", "ClearCudaCache"], [381, 0, 1, "", "CountFramesLog"], [382, 0, 1, "", "LogScalar"], [383, 0, 1, "", "LogValidationReward"], [384, 0, 1, "", "OptimizerHook"], [385, 0, 1, "", "ReplayBufferTrainer"], [386, 0, 1, "", "RewardNormalizer"], [387, 0, 1, "", "SelectKeys"], [388, 0, 1, "", "Trainer"], [389, 0, 1, "", "TrainerHookBase"], [390, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[379, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[380, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[381, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[382, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[383, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[384, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[385, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[386, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[387, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[388, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[389, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[390, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[391, 2, 1, "", "correct_for_frame_skip"], [392, 2, 1, "", "get_stats_random_rollout"], [393, 2, 1, "", "make_collector_offpolicy"], [394, 2, 1, "", "make_collector_onpolicy"], [395, 2, 1, "", "make_dqn_loss"], [396, 2, 1, "", "make_replay_buffer"], [397, 2, 1, "", "make_target_updater"], [398, 2, 1, "", "make_trainer"], [399, 2, 1, "", "parallel_env_constructor"], [400, 2, 1, "", "sync_async_collector"], [401, 2, 1, "", "sync_sync_collector"], [402, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 406, 407, 408, 409, 411, 412, 413, 415, 417, 424, 425, 426, 430, 431], "instal": [0, 6, 7, 430], "get": [0, 416, 417, 418, 419, 420, 421], "start": [0, 416, 417, 418, 419, 420, 421], "tutori": [0, 413, 424, 425], "basic": [0, 428], "intermedi": [0, 8], "advanc": 0, "refer": [0, 404], "knowledg": [0, 405], "base": [0, 2, 7, 405, 415], "indic": 0, "tabl": 0, "collector": [1, 411, 412, 413, 414, 419, 421, 424, 425, 430], "packag": [1, 2, 3, 406, 407, 408, 409], "batch": [1, 411, 426, 428], "size": [1, 411, 428], "polici": [1, 2, 4, 411, 413, 414, 415, 417, 421, 423, 424, 425, 426], "copi": 1, "replai": [1, 2, 411, 412, 413, 414, 419, 421, 424, 425, 428, 430], "buffer": [1, 2, 411, 412, 413, 414, 419, 421, 424, 425, 428, 430], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 411, 412, 413, 419, 421, 424, 425, 430], "distribut": [1, 406], "helper": [1, 3], "function": [1, 4, 407, 412, 413, 418, 424, 425, 430], "compos": [2, 177], "support": 2, "type": 2, "choos": 2, "storag": [2, 111, 411, 419, 428], "sampl": [2, 428], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 412, 428], "trajectori": [2, 428], "checkpoint": [2, 408], "episod": [2, 4], "format": 2, "ted": [2, 416], "The": [2, 411], "rational": 2, "behind": 2, "structur": [2, 428], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 406, 428, 430], "special": [2, 417, 430], "case": 2, "footnot": 2, "multi": [2, 3, 406, 407, 423, 424, 425], "agent": [2, 3, 4, 406, 407, 424, 425], "present": 2, "rnn": 2, "transform": [2, 3, 214, 411, 413, 416, 424, 425, 426, 428, 430, 431], "step": [2, 411, 413, 416, 419, 424, 425, 428, 431], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 71], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": [2, 73], "forest": 2, "tensordictmap": [2, 66], "mctsforest": [2, 41], "reinforc": [2, 407, 413, 424, 425], "learn": [2, 4, 406, 413, 424, 425], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 406, 407, 408, 424], "env": [3, 426, 430, 431], "vector": [3, 430], "custom": [3, 11, 426, 428], "nativ": 3, "environ": [3, 4, 6, 7, 411, 412, 413, 414, 416, 421, 423, 424, 425, 426, 430, 431], "auto": 3, "reset": [3, 426, 431], "dynam": [3, 4, 428], "spec": [3, 426, 431], "forward": [3, 4, 411], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 414, 426], "record": [3, 408, 411, 420], "video": [3, 11, 420], "domain": [3, 406], "specif": [3, 406, 423], "librari": [3, 430], "thing": [4, 411, 426], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 416, 418, 430], "gener": [4, 11, 406], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 411, 415, 421, 426], "algorithm": [4, 406], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 411, 412, 418, 421], "return": [4, 407], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 430], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 423], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 411, 412, 413], "standard": 4, "explor": [4, 406, 411, 412, 417], "valu": [4, 406, 407, 411, 413, 414, 417], "loss": [4, 411, 412, 413, 414, 421, 424, 425], "earli": 4, "train": [4, 8, 407, 411, 413, 414, 415, 418, 421, 424, 425, 426], "roughli": 4, "uniformli": 4, "random": [4, 407, 424, 425], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 412], "increas": 4, "an": [4, 413, 414, 416, 426], "can": 4, "low": 4, "model": [4, 406, 411, 412, 414, 415, 418, 427, 430], "also": 4, "us": [4, 6, 9, 414, 427, 428, 430], "offlin": 4, "observ": [4, 411], "space": 4, "effect": [4, 426], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 415], "gym": [5, 430, 431], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 411], "render": [7, 11, 421, 424, 425, 431], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 411], "pytorch": [8, 9, 10, 415], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 426], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 412, 428], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 415], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 42, "multidiscretetensorspec": 43, "multionehot": 44, "multionehotdiscretetensorspec": 45, "multistep": 46, "nested2t": 47, "nontensor": 48, "nontensorspec": 49, "onehot": 50, "onehotdiscretetensorspec": 51, "pairwisedataset": 52, "prioritizedreplaybuff": 53, "promptdata": 54, "prompttensordicttoken": 55, "querymodul": 56, "randomprojectionhash": 57, "replaybuff": 58, "rewarddata": 59, "rolloutfrommodel": 60, "siphash": 61, "stack": 62, "stackedcomposit": 63, "ted2flat": 64, "ted2nest": 65, "tensordictprioritizedreplaybuff": 67, "tensordictreplaybuff": 68, "tensordicttoken": 69, "tensormap": 70, "tokenizeddatasetload": 72, "unbound": 74, "unboundedcontinu": 75, "unboundedcontinuoustensorspec": 76, "unboundeddiscret": 77, "unboundeddiscretetensorspec": 78, "check_no_exclusive_kei": 79, "consolidate_spec": 80, "contains_lazy_spec": 81, "create_infinite_iter": 82, "ataridqnexperiencereplai": 83, "basedatasetexperiencereplai": 84, "d4rlexperiencereplai": 85, "gendgrlexperiencereplai": 86, "minariexperiencereplai": 87, "openmlexperiencereplai": 88, "openxexperiencereplai": 89, "robosetexperiencereplai": 90, "vd4rlexperiencereplai": 91, "get_dataload": 92, "flatstoragecheckpoint": 93, "h5storagecheckpoint": 94, "immutabledatasetwrit": 95, "lazymemmapstorag": 96, "lazytensorstorag": 97, "liststorag": 98, "liststoragecheckpoint": 99, "nestedstoragecheckpoint": 100, "prioritizedsampl": 101, "prioritizedslicesampl": 102, "randomsampl": 103, "replaybufferensembl": 104, "roundrobinwrit": 105, "sampler": 106, "samplerensembl": 107, "samplerwithoutreplac": 108, "slicesampl": 109, "slicesamplerwithoutreplac": 110, "storagecheckpointerbas": 112, "storageensembl": 113, "storageensemblecheckpoint": 114, "tensordictmaxvaluewrit": 115, "tensordictroundrobinwrit": 116, "tensorstorag": 117, "tensorstoragecheckpoint": 118, "writer": 119, "writerensembl": 120, "braxenv": 121, "braxwrapp": 122, "dmcontrolenv": 123, "dmcontrolwrapp": 124, "envbas": [125, 426], "envcreat": 126, "envmetadata": 127, "gymenv": 128, "gymlikeenv": 129, "gymwrapp": 130, "habitatenv": 131, "isaacgymenv": 132, "isaacgymwrapp": 133, "jumanjienv": 134, "jumanjiwrapp": 135, "llmhashingenv": 136, "mogymenv": 137, "mogymwrapp": 138, "marlgroupmaptyp": 139, "meltingpotenv": 140, "meltingpotwrapp": 141, "modelbasedenvbas": 142, "multithreadedenv": 143, "multithreadedenvwrapp": 144, "openmlenv": 145, "openspielenv": 146, "openspielwrapp": 147, "parallelenv": 148, "pendulumenv": 149, "pettingzooenv": 150, "pettingzoowrapp": 151, "robohiveenv": 152, "smacv2env": 153, "smacv2wrapp": 154, "serialenv": 155, "tictactoeenv": 156, "unitymlagentsenv": 157, "unitymlagentswrapp": 158, "vmasenv": 159, "vmaswrapp": 160, "check_marl_group": 161, "gym_backend": 162, "dreamerdecod": 163, "dreamerenv": 164, "set_gym_backend": 165, "actiondiscret": 166, "actionmask": 167, "autoresetenv": 168, "autoresettransform": 169, "batchsizetransform": 170, "binarizereward": 171, "burnintransform": 172, "catfram": [173, 428], "cattensor": 174, "centercrop": 175, "cliptransform": 176, "crop": 178, "dtypecasttransform": 179, "devicecasttransform": 180, "discreteactionproject": 181, "doubletofloat": 182, "endoflifetransform": 183, "excludetransform": 184, "finitetensordictcheck": 185, "flattenobserv": 186, "frameskiptransform": 187, "grayscal": 188, "inittrack": 189, "klrewardtransform": 190, "noopresetenv": 191, "observationnorm": 192, "observationtransform": 193, "permutetransform": 194, "pinmemorytransform": 195, "r3mtransform": 196, "randomcroptensordict": 197, "removeemptyspec": 198, "renametransform": 199, "resiz": 200, "reward2gotransform": 201, "rewardclip": 202, "rewardsc": 203, "rewardsum": 204, "selecttransform": 205, "signtransform": 206, "squeezetransform": 207, "stepcount": 208, "targetreturn": 209, "tensordictprim": 210, "timemaxpool": 211, "totensorimag": 212, "trajcount": 213, "transformedenv": 215, "unsqueezetransform": 216, "vc1transform": 217, "viprewardtransform": 218, "viptransform": 219, "vecgymenvtransform": 220, "vecnorm": [221, 431], "gsdenois": 222, "multisteptransform": 223, "randompolici": 224, "check_env_spec": 225, "exploration_typ": 226, "get_available_librari": 227, "make_composite_from_td": 228, "set_exploration_typ": 229, "step_mdp": 230, "terminated_or_trunc": 231, "additivegaussianmodul": 232, "additivegaussianwrapp": 233, "batchrenorm1d": 234, "cemplann": 235, "consistentdropout": 236, "consistentdropoutmodul": 237, "conv3dnet": 238, "convnet": 239, "dtactor": 240, "ddpgcnnactor": 241, "ddpgcnnqnet": 242, "ddpgmlpactor": 243, "ddpgmlpqnet": 244, "decisiontransform": 245, "delta": 246, "distributionaldqnnet": 247, "distributionalqvaluehook": 248, "dreameractor": 249, "duelingcnndqnet": 250, "egreedymodul": 251, "egreedywrapp": 252, "gru": 253, "grucel": 254, "grumodul": 255, "independentnorm": 256, "lstm": [257, 414], "lstmcell": 258, "lstmmodul": 259, "mlp": [260, 414], "mpcplannerbas": 261, "mppiplann": 262, "maskedcategor": 263, "maskedonehotcategor": 264, "multiagentconvnet": 265, "multiagentmlp": 266, "multiagentnetbas": 267, "noisylazylinear": 268, "noisylinear": 269, "normalparamwrapp": 270, "obsdecod": 271, "obsencod": 272, "onehotcategor": 273, "onehotordin": 274, "onlinedtactor": 275, "ordin": 276, "ornsteinuhlenbeckprocessmodul": 277, "ornsteinuhlenbeckprocesswrapp": 278, "qmixer": [279, 407], "qvaluehook": 280, "rssmposterior": 281, "rssmprior": 282, "squeeze2dlay": 283, "squeezelay": 284, "tanhdelta": 285, "tanhnorm": 286, "truncatednorm": 287, "vdnmixer": 288, "vmapmodul": 289, "recurrent_mod": 290, "reset_nois": 291, "set_recurrent_mod": 292, "actor": [293, 406, 411, 417], "actorcriticoper": 294, "actorcriticwrapp": 295, "actorvalueoper": 296, "decisiontransformerinferencewrapp": 297, "distributionalqvalueactor": 298, "distributionalqvaluemodul": 299, "lmheadactorvalueoper": 300, "multistepactorwrapp": 301, "probabilisticactor": 302, "qvalueactor": [303, 406], "qvaluemodul": 304, "safemodul": [305, 406], "safeprobabilisticmodul": 306, "safeprobabilistictensordictsequenti": 307, "safesequenti": 308, "tanhmodul": 309, "valueoper": 310, "worldmodelwrapp": 311, "biased_softplu": 312, "get_primers_from_modul": 313, "inv_softplu": 314, "map": [315, 424], "a2closs": 316, "cqlloss": 317, "clipppoloss": 318, "crossqloss": 319, "ddpgloss": 320, "dqnloss": 321, "dtloss": 322, "discretecqlloss": 323, "discreteiqlloss": 324, "discretesacloss": 325, "distributionaldqnloss": 326, "dreameractorloss": 327, "dreamermodelloss": 328, "dreamervalueloss": 329, "gailloss": 330, "hardupd": 331, "iqlloss": 332, "klpenppoloss": 333, "lossmodul": [334, 411, 418], "onlinedtloss": 335, "ppoloss": 336, "redqloss": 337, "reinforceloss": 338, "sacloss": 339, "softupd": 340, "td3bcloss": 341, "td3loss": 342, "valueestim": 343, "default_value_kwarg": 344, "distance_loss": 345, "group_optim": 346, "hold_out_net": 347, "hold_out_param": 348, "qmixerloss": 349, "next_state_valu": 350, "gae": 351, "td0estim": 352, "td1estim": 353, "tdlambdaestim": 354, "valueestimatorbas": 355, "generalized_advantage_estim": 356, "reward2go": 357, "td0_advantage_estim": 358, "td0_return_estim": 359, "td1_advantage_estim": 360, "td1_return_estim": 361, "td_lambda_advantage_estim": 362, "td_lambda_return_estim": 363, "vec_generalized_advantage_estim": 364, "vec_td1_advantage_estim": 365, "vec_td1_return_estim": 366, "vec_td_lambda_advantage_estim": 367, "vec_td_lambda_return_estim": 368, "pixelrendertransform": 369, "tensordictrecord": 370, "videorecord": 371, "logger": [372, 408, 420, 421], "csvlogger": 373, "generate_exp_nam": 374, "get_logg": 375, "mlflowlogg": 376, "tensorboardlogg": 377, "wandblogg": 378, "batchsubsampl": 379, "clearcudacach": 380, "countframeslog": 381, "logscalar": 382, "logvalidationreward": 383, "optimizerhook": 384, "replaybuffertrain": 385, "rewardnorm": 386, "selectkei": 387, "trainer": [388, 408, 412], "trainerhookbas": 389, "updateweight": 390, "correct_for_frame_skip": 391, "get_stats_random_rollout": 392, "make_collector_offpolici": 393, "make_collector_onpolici": 394, "make_dqn_loss": 395, "make_replay_buff": 396, "make_target_updat": 397, "make_train": 398, "parallel_env_constructor": 399, "sync_async_collector": 400, "sync_sync_collector": 401, "transformed_env_constructor": 402, "readm": [403, 422], "tuto": [403, 422], "api": 404, "contribut": [405, 430], "content": 405, "modul": [406, 411, 414, 415, 417, 421, 430], "tensordictmodul": [406, 415, 417, 430], "wrapper": [406, 417], "probabilist": [406, 417], "q": [406, 412, 414, 417], "oper": 406, "join": 406, "hook": [406, 408, 412], "regular": 406, "planner": 406, "object": [407, 411, 418, 430], "torch": 407, "vmap": [407, 430], "dqn": [407, 412, 414], "ddpg": [407, 411, 424], "sac": 407, "redq": 407, "crossq": 407, "iql": 407, "cql": 407, "gail": 407, "dt": 407, "td3": 407, "bc": 407, "ppo": [407, 413, 425], "a2c": 407, "dreamer": 407, "builder": 408, "_util": 409, "comput": [410, 412, 426, 429], "time": [410, 411, 429], "code": [411, 426], "overview": [411, 414], "setup": [411, 414], "__init__": 411, "method": 411, "estim": 411, "put": 411, "togeth": [411, 426], "call": 411, "parallel": [411, 423, 431], "execut": [411, 423, 426], "stat": 411, "build": [411, 412, 421, 428], "evalu": 411, "construct": 411, "target": [411, 412, 418], "network": [411, 412, 413, 414, 417, 424, 425], "updat": 411, "experi": [411, 426], "result": [411, 413, 424, 425], "conclus": [411, 412, 413, 414, 415, 424, 425, 426, 428], "next": [411, 413, 416, 419, 424, 425, 428], "A": [412, 428], "deep": 412, "collect": [412, 413, 419], "paramet": [412, 413, 418], "hyperparamet": [412, 413, 424, 425], "regist": 412, "possibl": 412, "improv": 412, "defin": [413, 424, 425], "loop": [413, 414, 415, 421, 424, 425, 426], "recurr": [414, 415], "convolut": 414, "select": 414, "further": [414, 418], "read": 414, "export": 415, "introduct": [415, 430], "fast": 415, "recap": 415, "simpl": [415, 426], "stochast": 415, "aotinductor": 415, "free": 415, "c": 415, "onnx": 415, "run": [415, 416, 431], "rollout": [415, 416, 423, 424, 425, 426, 431], "creat": 416, "s": [417, 418], "output": 418, "consider": 418, "log": 420, "own": 421, "first": 421, "design": 421, "divers": 423, "competit": 424, "group": 424, "critic": [424, 425], "pendulum": 426, "write": 426, "_step": 426, "simul": 426, "_reset": 426, "metadata": 426, "_spec": 426, "shape": 426, "seed": [426, 431], "wrap": 426, "class": [426, 430], "test": 426, "our": 426, "pretrain": 427, "vanilla": 428, "integr": 428, "tensorclass": 428, "other": 428, "tensor": 428, "pytre": 428, "iter": 428, "over": 428, "fix": 428, "priorit": 428, "save": 428, "raw": 428, "imag": 428, "more": 428, "complex": 428, "config": 430, "sequenc": 430, "program": 430, "ensembl": 430, "meta": 430, "sync": 430, "multiprocess": 430, "async": 430, "frame_skip": 431, "deepmind": 431, "control": 431, "devic": 431, "close": 431, "access": 431, "attribut": 431, "kwarg": 431}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})