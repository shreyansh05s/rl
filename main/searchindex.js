Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "TrajCounter", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 102, 104, 105, 107, 109, 111, 113, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 143, 144, 146, 149, 150, 151, 152, 153, 156, 157, 158, 162, 167, 168, 170, 171, 173, 174, 176, 180, 182, 183, 186, 192, 193, 197, 198, 199, 200, 202, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 224, 226, 234, 235, 239, 240, 242, 243, 244, 245, 247, 252, 254, 256, 258, 260, 261, 262, 266, 267, 269, 278, 279, 284, 285, 287, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 312, 316, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 370, 372, 375, 379, 384, 385, 389, 390, 393, 400, 401, 402, 403, 406, 407, 408, 412, 413, 416, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 431, 432], "open": [0, 5, 7, 12, 52, 54, 59, 73, 89, 96, 413, 425, 426, 431], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "reinforc": [0, 3, 9, 86, 141, 142, 174, 237, 242, 243, 244, 245, 249, 278, 279, 300, 317, 318, 320, 323, 324, 325, 327, 332, 333, 339, 340, 341, 342, 405, 411, 413, 417, 418, 423, 427, 430, 431], "learn": [0, 3, 7, 8, 9, 18, 46, 86, 87, 88, 90, 91, 126, 141, 142, 146, 149, 156, 174, 237, 242, 243, 244, 245, 249, 263, 270, 277, 278, 279, 300, 317, 318, 320, 323, 324, 325, 327, 331, 332, 333, 338, 339, 340, 341, 342, 405, 408, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429, 430, 431, 432], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 83, 143, 174, 210, 270, 294, 303, 311, 317, 319, 334, 335, 337, 339, 380, 404, 406, 407, 408, 409, 412, 413, 414, 416, 420, 423, 425, 426, 427, 428, 429, 432], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 55, 69, 123, 124, 125, 134, 144, 228, 405, 406, 407, 410, 412, 413, 414, 416, 417, 418, 420, 425, 426, 427, 432], "pytorch": [0, 1, 2, 3, 23, 87, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 174, 213, 226, 237, 254, 258, 269, 270, 389, 404, 406, 407, 409, 412, 414, 415, 419, 423, 425, 426, 427, 428, 429, 431, 432], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 46, 56, 57, 61, 66, 69, 86, 123, 126, 130, 134, 137, 140, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 166, 174, 222, 224, 237, 258, 277, 379, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 108, 109, 110, 115, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 166, 167, 168, 170, 171, 173, 174, 177, 178, 180, 182, 183, 184, 192, 193, 197, 198, 202, 205, 209, 210, 211, 214, 215, 216, 218, 220, 222, 224, 226, 232, 234, 236, 238, 239, 240, 242, 252, 254, 256, 257, 258, 260, 262, 263, 266, 267, 268, 270, 271, 278, 288, 290, 294, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 372, 379, 384, 401, 402, 403, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "directli": [0, 3, 4, 8, 23, 83, 104, 121, 122, 123, 126, 129, 130, 137, 143, 149, 150, 156, 157, 174, 193, 202, 221, 335, 342, 403, 413, 414, 416, 417, 425, 426, 427, 429], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 170, 171, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 229, 231, 232, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 345, 350, 351, 352, 353, 354, 355, 358, 370, 371, 372, 380, 386, 389, 392, 393, 397, 399, 400, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "pypi": [0, 2, 431], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 123, 126, 130, 133, 136, 137, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 174, 178, 197, 211, 213, 214, 215, 216, 218, 220, 222, 223, 224, 237, 238, 239, 240, 254, 256, 257, 258, 260, 261, 267, 268, 269, 277, 280, 288, 289, 293, 295, 297, 303, 306, 307, 320, 331, 335, 342, 372, 379, 386, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 431, 432], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 115, 123, 126, 129, 130, 131, 133, 134, 136, 137, 141, 142, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 174, 213, 218, 223, 224, 233, 234, 235, 238, 249, 258, 261, 269, 271, 294, 299, 300, 306, 311, 317, 327, 335, 337, 352, 357, 365, 379, 385, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 431, 432], "about": [0, 3, 5, 7, 9, 18, 19, 20, 44, 69, 87, 90, 91, 126, 149, 156, 407, 408, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432], "instruct": [0, 6, 7, 10, 22, 85, 182, 184, 412, 413, 414, 415, 425, 426, 429], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 41, 58, 67, 68, 104, 149, 156, 295, 296, 297, 407, 412, 417, 419, 420, 422, 424, 426], "section": [0, 2, 3, 4, 24, 254, 258, 413, 416, 417, 422, 425, 426], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 92, 110, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 214, 215, 216, 218, 220, 224, 239, 240, 254, 257, 258, 261, 267, 288, 303, 306, 386, 412, 413, 414, 415, 416, 417, 425, 427], "pip": [0, 10, 88, 416, 417, 418, 419, 420, 421, 422, 426, 431, 432], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 41, 42, 44, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 72, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 102, 103, 104, 107, 109, 110, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 167, 171, 173, 174, 175, 176, 177, 179, 180, 183, 187, 192, 193, 195, 197, 198, 201, 202, 205, 206, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 224, 231, 232, 234, 239, 240, 246, 247, 249, 252, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 279, 290, 294, 298, 300, 302, 303, 304, 305, 310, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 380, 386, 393, 399, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 61, 66, 73, 145, 158, 159, 166, 254, 255, 256, 258, 259, 260, 264, 265, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 123, 126, 129, 130, 131, 136, 137, 149, 150, 156, 157, 170, 171, 174, 175, 187, 193, 197, 198, 213, 216, 218, 240, 247, 254, 256, 258, 260, 261, 265, 267, 269, 273, 294, 298, 299, 300, 303, 304, 306, 307, 319, 329, 334, 335, 337, 371, 372, 388, 407, 411, 412, 413, 414, 415, 416, 417, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "low": [0, 3, 28, 31, 57, 66, 71, 74, 102, 123, 126, 130, 137, 149, 150, 156, 157, 167, 177, 182, 211, 229, 286, 287, 288, 298, 300, 303, 310, 412, 413, 414, 415, 416, 425, 426, 427, 431, 432], "high": [0, 3, 9, 28, 31, 52, 54, 59, 67, 73, 74, 102, 123, 126, 130, 137, 149, 150, 156, 157, 167, 177, 182, 192, 211, 229, 286, 287, 288, 298, 300, 303, 310, 352, 357, 365, 412, 413, 414, 415, 425, 426, 427, 429, 431, 432], "level": [0, 2, 3, 4, 22, 31, 32, 39, 53, 58, 63, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 129, 131, 174, 209, 334, 412, 413, 416, 420, 431], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 62, 63, 70, 71, 74, 75, 76, 77, 78, 83, 84, 88, 119, 126, 194, 262, 356, 381, 390, 409, 414, 416, 427, 431], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 104, 107, 108, 109, 110, 111, 113, 115, 117, 123, 126, 127, 129, 130, 131, 136, 137, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 169, 170, 171, 173, 174, 177, 178, 180, 181, 182, 183, 184, 186, 187, 191, 192, 195, 197, 202, 205, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 229, 231, 232, 233, 236, 237, 245, 247, 252, 254, 255, 256, 258, 259, 260, 262, 264, 265, 266, 267, 268, 270, 274, 279, 280, 283, 293, 298, 299, 302, 303, 304, 306, 307, 308, 309, 310, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 347, 350, 351, 352, 353, 354, 355, 356, 370, 379, 386, 389, 399, 403, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 173, 182, 290, 335, 407, 431], "effici": [0, 1, 2, 4, 8, 123, 126, 130, 137, 149, 150, 156, 157, 254, 270, 320, 407, 412, 413, 414, 415, 416, 419, 420, 422, 424, 425, 426, 428, 429, 431], "modular": [0, 83, 309, 416, 429, 431], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 46, 56, 57, 61, 66, 89, 123, 126, 130, 137, 147, 148, 149, 150, 156, 157, 158, 159, 216, 224, 404, 413, 415, 416, 417, 420, 423, 431], "properli": [0, 1, 74, 123, 126, 130, 137, 149, 150, 156, 157, 231, 256, 260, 414, 421, 425, 426, 427, 431], "test": [0, 3, 5, 121, 122, 123, 126, 130, 135, 136, 137, 141, 142, 149, 150, 156, 157, 214, 218, 226, 256, 260, 384, 399, 414, 415, 416, 431], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 101, 102, 104, 107, 109, 110, 111, 115, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 167, 170, 171, 173, 174, 178, 180, 183, 184, 185, 193, 195, 197, 202, 204, 205, 206, 209, 210, 211, 214, 215, 216, 218, 220, 221, 222, 224, 226, 231, 232, 233, 235, 236, 237, 242, 243, 244, 245, 246, 249, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 270, 271, 275, 277, 278, 279, 281, 282, 283, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 370, 372, 374, 377, 378, 379, 380, 385, 399, 401, 402, 405, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "code": [0, 3, 5, 7, 8, 14, 15, 57, 61, 89, 123, 126, 130, 136, 137, 149, 150, 156, 157, 197, 216, 218, 235, 254, 255, 256, 258, 259, 260, 303, 309, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432], "aim": [0, 2, 3, 7, 41, 62, 63, 197, 218, 220, 261, 392, 406, 407, 408, 412, 413, 431], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 56, 59, 66, 73, 88, 91, 92, 96, 97, 111, 113, 117, 118, 120, 121, 122, 129, 131, 135, 144, 146, 149, 151, 153, 171, 174, 184, 193, 211, 212, 215, 228, 249, 275, 277, 287, 290, 299, 300, 303, 306, 309, 327, 335, 352, 353, 354, 355, 377, 405, 407, 409, 414, 415, 417, 418, 426, 427, 429, 431], "research": [0, 7, 9, 141, 142, 235, 431], "most": [0, 1, 2, 3, 7, 8, 14, 15, 46, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 182, 221, 226, 412, 414, 416, 417, 418, 419, 420, 421, 422, 427, 431, 432], "written": [0, 1, 2, 3, 12, 35, 52, 53, 54, 56, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 102, 104, 109, 110, 123, 124, 125, 126, 129, 130, 131, 132, 137, 149, 150, 153, 156, 157, 167, 174, 184, 191, 205, 209, 212, 221, 224, 231, 232, 238, 278, 279, 294, 303, 306, 307, 311, 317, 319, 334, 337, 339, 351, 370, 371, 372, 407, 408, 409, 412, 415, 416, 418, 424, 427, 431], "highli": [0, 2, 417, 431, 432], "wai": [0, 1, 2, 3, 4, 83, 87, 104, 115, 134, 174, 197, 200, 214, 220, 221, 256, 258, 260, 337, 352, 353, 354, 355, 407, 412, 413, 414, 416, 417, 419, 420, 424, 425, 426, 427, 428, 429, 431, 432], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 408, 412, 413, 414, 417, 418, 419, 422, 425, 426, 431, 432], "swap": [0, 1, 3, 129, 221, 414, 416, 428, 431], "compon": [0, 1, 2, 3, 53, 57, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 249, 281, 299, 300, 305, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 385, 389, 412, 413, 414, 415, 416, 418, 419, 422, 424, 425, 426, 427, 428, 431], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 53, 55, 58, 60, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 113, 118, 123, 126, 127, 130, 137, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 238, 241, 242, 246, 249, 250, 256, 260, 276, 280, 281, 287, 289, 298, 301, 302, 310, 313, 314, 316, 323, 336, 370, 372, 386, 403, 405, 411, 413, 415, 416, 418, 420, 421, 422, 423, 428, 430], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 120, 123, 126, 127, 130, 134, 137, 140, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 180, 183, 211, 216, 222, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 289, 290, 298, 300, 302, 305, 310, 313, 334, 372, 412, 413, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "write": [0, 2, 3, 8, 23, 41, 46, 52, 53, 54, 55, 58, 59, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 113, 120, 126, 130, 177, 195, 196, 205, 207, 209, 213, 217, 232, 294, 306, 307, 309, 311, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 351, 356, 372, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 123, 126, 130, 137, 144, 149, 150, 154, 155, 156, 157, 171, 205, 215, 222, 224, 231, 232, 247, 254, 256, 260, 278, 279, 306, 307, 312, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 379, 408, 412, 414, 417, 419, 425, 426, 427, 431, 432], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 109, 110, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 175, 178, 180, 181, 183, 193, 197, 202, 211, 215, 216, 218, 220, 224, 225, 237, 264, 265, 277, 290, 306, 317, 318, 320, 321, 333, 337, 338, 340, 342, 343, 358, 412, 414, 416, 425, 426, 427, 429, 431, 432], "littl": [0, 1, 3, 69, 123, 126, 130, 137, 149, 150, 156, 157, 216, 237, 317, 319, 334, 337, 339, 414, 415, 416, 420, 429, 431, 432], "effort": [0, 3, 427, 429, 431], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 166, 167, 168, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 193, 197, 198, 199, 200, 202, 205, 206, 207, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 285, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 370, 371, 379, 380, 382, 384, 386, 389, 391, 392, 393, 399, 403, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "repo": [0, 6, 85, 174, 212, 218, 406, 426, 431], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 109, 110, 123, 124, 125, 126, 129, 130, 131, 132, 137, 149, 150, 153, 156, 157, 231, 234, 237, 279, 322, 325, 333, 350, 419, 431], "align": [0, 254, 258, 431], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 96, 123, 126, 130, 137, 149, 150, 156, 157, 175, 181, 214, 216, 224, 247, 320, 340, 393, 403, 425, 426, 431, 432], "ecosystem": [0, 416, 420, 431], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 89, 96, 97, 104, 107, 109, 115, 117, 123, 126, 127, 130, 134, 137, 141, 142, 149, 150, 156, 157, 160, 161, 171, 174, 209, 210, 211, 212, 214, 216, 224, 233, 234, 254, 256, 258, 260, 266, 268, 279, 287, 300, 302, 307, 317, 320, 334, 335, 337, 339, 372, 412, 413, 414, 415, 416, 417, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "dataset": [0, 37, 41, 52, 53, 54, 55, 58, 59, 60, 65, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 107, 109, 110, 146, 222, 372, 405, 412, 413, 417, 428, 429, 431, 432], "pillar": [0, 431], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 61, 62, 63, 71, 73, 74, 75, 76, 77, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 170, 171, 173, 174, 175, 180, 181, 182, 183, 188, 192, 193, 197, 198, 199, 202, 205, 209, 210, 211, 212, 214, 215, 216, 218, 221, 222, 226, 234, 236, 238, 256, 260, 262, 263, 279, 302, 324, 328, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 382, 384, 392, 393, 394, 395, 399, 400, 401, 402, 403, 405, 406, 407, 411, 416, 418, 419, 420, 421, 423, 428, 429, 430], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 123, 126, 130, 137, 143, 149, 150, 156, 157, 174, 180, 197, 211, 218, 220, 223, 224, 239, 240, 241, 246, 248, 256, 260, 261, 262, 263, 267, 268, 276, 280, 289, 295, 296, 297, 301, 306, 312, 314, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 350, 389, 394, 395, 396, 405, 406, 408, 409, 411, 414, 417, 420, 423, 425, 426, 427, 429, 430, 432], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 168, 171, 173, 174, 180, 181, 183, 185, 191, 193, 199, 202, 209, 216, 221, 224, 225, 226, 229, 232, 236, 237, 249, 252, 256, 260, 263, 266, 267, 278, 279, 281, 290, 293, 294, 299, 302, 303, 304, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 379, 380, 386, 389, 391, 394, 399, 401, 402, 403, 405, 407, 408, 409, 411, 415, 416, 417, 418, 419, 423, 427, 428, 429, 430, 432], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 46, 56, 57, 58, 60, 61, 66, 109, 110, 121, 122, 123, 126, 130, 135, 136, 137, 142, 149, 150, 151, 152, 156, 157, 162, 174, 197, 202, 211, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 238, 239, 240, 246, 254, 256, 258, 260, 313, 314, 315, 316, 335, 399, 405, 410, 412, 414, 416, 418, 419, 420, 426, 427, 429, 431, 432], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 101, 102, 115, 117, 123, 126, 127, 130, 137, 149, 150, 156, 157, 160, 171, 173, 175, 178, 179, 187, 193, 197, 205, 211, 214, 215, 216, 218, 220, 224, 226, 254, 256, 257, 258, 260, 263, 267, 271, 281, 287, 288, 293, 298, 300, 302, 303, 305, 306, 307, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 370, 380, 392, 402, 407, 413, 414, 416, 418, 419, 421, 425, 426, 428, 429, 431, 432], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 50, 52, 54, 56, 57, 59, 61, 66, 73, 115, 123, 126, 127, 130, 137, 149, 150, 156, 157, 160, 171, 173, 175, 178, 187, 193, 197, 205, 211, 214, 215, 216, 218, 220, 224, 226, 254, 256, 257, 258, 259, 260, 263, 267, 287, 288, 298, 303, 306, 307, 320, 340, 351, 361, 362, 363, 364, 366, 367, 368, 369, 370, 402, 407, 413, 414, 416, 418, 421, 425, 426, 427, 428, 429, 431, 432], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 46, 60, 64, 83, 89, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 171, 174, 202, 209, 224, 225, 237, 256, 260, 278, 279, 386, 389, 391, 394, 395, 399, 401, 402, 405, 408, 409, 416, 429, 432], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 102, 104, 105, 107, 109, 110, 111, 116, 119, 120, 123, 126, 130, 137, 143, 149, 150, 156, 157, 167, 174, 178, 180, 183, 197, 211, 214, 215, 216, 218, 220, 221, 222, 224, 231, 232, 236, 239, 240, 254, 255, 258, 259, 261, 263, 266, 267, 294, 299, 300, 303, 305, 306, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 376, 380, 392, 399, 400, 401, 402, 403, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 41, 46, 56, 57, 61, 66, 71, 89, 123, 126, 130, 137, 149, 150, 156, 157, 191, 216, 224, 261, 267, 287, 413, 414, 420, 429, 431, 432], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 111, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 167, 170, 174, 180, 183, 184, 191, 192, 193, 209, 214, 215, 216, 222, 224, 226, 232, 233, 234, 237, 239, 240, 261, 266, 267, 268, 278, 279, 290, 302, 308, 309, 317, 319, 334, 337, 339, 342, 346, 347, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 380, 389, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "few": [0, 2, 8, 110, 130, 372, 380, 414, 415, 418, 425, 426, 429, 431, 432], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 52, 54, 74, 123, 126, 129, 130, 131, 132, 137, 149, 150, 153, 156, 157, 160, 161, 180, 183, 311, 337, 407, 412, 414, 415, 425, 426, 427, 431, 432], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 86, 89, 91, 102, 109, 115, 123, 126, 130, 137, 149, 150, 156, 157, 167, 178, 197, 211, 214, 215, 216, 218, 220, 224, 239, 240, 254, 255, 258, 259, 306, 370, 384, 389, 407, 412, 414, 415, 416, 418, 420, 421, 425, 426, 427, 429, 431, 432], "standard": [0, 3, 193, 204, 222, 233, 234, 235, 236, 250, 263, 269, 270, 276, 298, 342, 343, 352, 353, 354, 355, 412, 413, 417, 418, 426, 429, 431], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 131, 137, 149, 150, 156, 157, 213, 389, 416, 427, 429, 431, 432], "common": [0, 2, 3, 4, 21, 71, 130, 135, 168, 295, 296, 297, 301, 317, 318, 319, 320, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 399, 406, 407, 409, 412, 414, 418, 421, 424, 425, 426, 427, 428, 431, 432], "openai": [0, 7, 24, 129, 131, 137, 153, 414, 427, 431, 432], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 123, 126, 127, 129, 130, 131, 132, 134, 137, 141, 142, 144, 145, 149, 150, 153, 156, 157, 160, 161, 163, 166, 170, 174, 177, 184, 190, 191, 193, 195, 200, 202, 205, 211, 215, 221, 222, 224, 399, 406, 412, 413, 414, 415, 417, 421, 422, 427, 428, 429], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 104, 109, 110, 117, 123, 124, 125, 126, 129, 130, 131, 132, 134, 136, 137, 144, 145, 149, 150, 151, 152, 153, 156, 157, 167, 170, 174, 175, 177, 178, 180, 182, 183, 187, 193, 197, 198, 202, 209, 210, 211, 212, 214, 215, 216, 218, 220, 222, 224, 237, 258, 260, 266, 267, 294, 298, 299, 303, 304, 306, 307, 308, 309, 317, 319, 320, 321, 325, 326, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 352, 353, 354, 355, 356, 372, 379, 393, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 281, 282, 283, 286, 287, 288, 290, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 377, 379, 380, 382, 383, 384, 385, 386, 387, 389, 393, 394, 395, 396, 398, 399, 401, 402, 403, 407, 415, 417, 420, 425, 426, 427, 429, 431], "On": [0, 3, 7, 18, 19, 20, 21, 31, 86, 255, 259, 407, 413, 425, 426], "end": [0, 2, 3, 14, 15, 17, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 108, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 184, 195, 209, 210, 214, 216, 224, 239, 240, 254, 255, 258, 259, 262, 302, 320, 340, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "come": [0, 1, 2, 3, 8, 41, 46, 115, 123, 126, 130, 136, 137, 140, 149, 150, 156, 157, 180, 183, 293, 294, 295, 296, 297, 303, 311, 317, 319, 334, 337, 339, 372, 412, 413, 414, 415, 419, 420, 421, 422, 425, 426, 429, 431, 432], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 108, 111, 117, 123, 126, 128, 130, 131, 136, 137, 141, 142, 143, 149, 150, 151, 152, 156, 157, 160, 161, 166, 168, 170, 171, 174, 175, 178, 180, 183, 190, 191, 197, 202, 209, 210, 211, 212, 214, 215, 216, 218, 220, 222, 224, 226, 230, 232, 234, 254, 256, 258, 260, 262, 266, 267, 275, 277, 278, 287, 293, 298, 306, 319, 320, 326, 331, 335, 337, 340, 356, 380, 384, 386, 395, 403, 406, 407, 408, 410, 412, 413, 414, 415, 416, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431, 432], "re": [0, 2, 3, 8, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 123, 126, 130, 137, 149, 150, 156, 157, 224, 260, 264, 265, 268, 303, 307, 379, 409, 412, 414, 415, 417, 419, 424, 425, 427, 431, 432], "usabl": [0, 409, 415, 431], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 123, 126, 127, 130, 131, 137, 149, 150, 156, 157, 166, 170, 171, 180, 183, 214, 216, 222, 224, 226, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 271, 272, 273, 274, 276, 278, 279, 282, 283, 285, 288, 290, 295, 296, 297, 298, 300, 302, 303, 305, 306, 307, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 389, 399, 405, 407, 412, 415, 416, 417, 418, 421, 424, 427, 429, 432], "cost": [0, 2, 30, 89, 317, 319, 334, 337, 339, 408, 412, 413, 416, 425, 426, 427, 429], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 105, 107, 109, 110, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 156, 157, 160, 161, 163, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 231, 232, 236, 237, 240, 241, 242, 243, 244, 245, 247, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 274, 276, 280, 282, 283, 286, 287, 288, 289, 291, 294, 295, 296, 297, 298, 302, 303, 305, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 376, 389, 392, 394, 399, 400, 401, 402, 403, 405, 407, 409, 412, 413, 414, 416, 418, 419, 421, 424, 425, 426, 427, 428, 429, 431, 432], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 86, 90, 91, 97, 101, 102, 105, 109, 117, 123, 126, 127, 130, 134, 137, 140, 144, 149, 150, 151, 152, 156, 157, 173, 174, 180, 183, 211, 213, 214, 222, 224, 256, 260, 266, 267, 278, 279, 300, 305, 405, 409, 412, 413, 415, 416, 417, 425, 426, 427, 428, 429, 431, 432], "good": [0, 1, 4, 9, 149, 412, 414, 415, 416, 418, 426, 431, 432], "runtim": [0, 2, 3, 23, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 427], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 149, 150, 153, 156, 157, 162, 180, 183, 192, 214, 216, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 268, 271, 272, 273, 276, 277, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 319, 320, 329, 337, 340, 384, 389, 408, 412, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 427, 432], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 109, 110, 113, 120, 121, 122, 123, 126, 129, 130, 131, 135, 136, 137, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 174, 209, 211, 222, 224, 238, 256, 260, 278, 279, 295, 296, 297, 320, 326, 331, 335, 342, 372, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 53, 55, 58, 60, 63, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 104, 111, 113, 117, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 168, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 195, 196, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 221, 222, 224, 232, 238, 274, 294, 295, 296, 297, 299, 302, 303, 306, 307, 309, 311, 312, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 372, 384, 389, 407, 412, 413, 414, 416, 417, 418, 424, 425, 426, 427, 428, 431, 432], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 409, 412, 417, 420, 424, 428, 432], "beyond": [0, 123, 126, 130, 137, 149, 150, 156, 157, 416], "api": [0, 2, 3, 5, 23, 41, 56, 66, 71, 123, 151, 152, 153, 197, 220, 222, 237, 407, 408, 409, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 431, 432], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 93, 94, 100, 109, 123, 126, 127, 129, 130, 131, 137, 143, 149, 150, 156, 157, 162, 174, 175, 186, 191, 198, 211, 213, 216, 224, 226, 247, 256, 260, 294, 299, 300, 303, 304, 305, 306, 307, 320, 331, 342, 372, 404, 407, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "paper": [0, 86, 89, 121, 122, 124, 125, 132, 135, 136, 141, 142, 144, 145, 153, 160, 161, 197, 218, 220, 240, 254, 280, 289, 324, 332, 342, 412, 414, 425, 426], "releas": [0, 4, 7, 10, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 391, 399, 409, 412], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 211, 214, 222, 224, 237, 308, 309, 412, 414, 415, 416, 419, 422, 425, 426, 427, 432], "make": [0, 2, 3, 4, 7, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 111, 113, 120, 123, 126, 130, 131, 134, 136, 137, 139, 145, 149, 150, 156, 157, 167, 185, 193, 197, 198, 202, 206, 209, 218, 224, 226, 231, 235, 238, 254, 255, 256, 258, 259, 260, 266, 267, 269, 299, 307, 317, 319, 334, 337, 339, 352, 353, 354, 355, 370, 386, 395, 403, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "sure": [0, 3, 4, 7, 88, 111, 130, 134, 202, 299, 403, 407, 412, 414, 415, 416, 419, 425, 426, 427, 429, 431, 432], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 71, 74, 83, 92, 93, 94, 100, 123, 126, 130, 137, 149, 150, 156, 157, 191, 192, 222, 224, 327, 335, 407, 408, 413, 414, 415, 416, 425, 426, 427, 429], "enjoi": [0, 2, 3, 89, 420], "latest": [0, 2, 3, 10, 144, 147, 148, 151, 152, 386, 414, 425, 426, 427, 431], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 50, 56, 66, 71, 72, 87, 102, 109, 110, 123, 126, 130, 137, 140, 149, 150, 151, 152, 154, 155, 156, 157, 171, 174, 187, 191, 195, 211, 212, 217, 222, 226, 235, 239, 240, 250, 251, 254, 255, 256, 258, 259, 260, 261, 266, 269, 270, 307, 314, 317, 319, 334, 337, 339, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 403, 407, 412, 413, 414, 415, 416, 418, 419, 420, 422, 427, 429, 431, 432], "recent": [0, 7, 12, 221, 416, 427, 432], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 54, 56, 57, 60, 61, 66, 75, 76, 77, 78, 86, 91, 109, 123, 126, 129, 130, 131, 132, 137, 144, 145, 149, 150, 151, 153, 156, 157, 160, 161, 174, 221, 222, 224, 231, 235, 256, 260, 268, 275, 297, 317, 319, 334, 335, 337, 339, 340, 352, 355, 406, 407, 408, 412, 414, 415, 416, 417, 419, 422, 425, 426, 427, 428, 432], "although": [0, 1, 3, 8, 27, 38, 56, 57, 61, 66, 74, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 409, 412, 413, 420, 429], "core": [0, 2, 3, 8, 409, 415, 418, 431], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 123, 126, 130, 137, 149, 150, 156, 157, 214, 222, 224, 420], "backward": [0, 8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224, 254, 255, 258, 259, 277, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 412, 414, 415, 416, 419, 420, 422, 425, 426, 427], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 61, 66, 85, 104, 107, 109, 110, 111, 115, 123, 126, 130, 132, 137, 146, 149, 150, 156, 157, 174, 209, 218, 222, 224, 254, 255, 256, 258, 259, 260, 304, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 346, 412, 415, 429], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 126, 127, 130, 135, 136, 137, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 170, 171, 173, 175, 178, 180, 181, 182, 183, 191, 193, 195, 197, 199, 202, 205, 209, 210, 211, 214, 215, 216, 218, 220, 222, 224, 229, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 271, 276, 277, 278, 279, 287, 290, 298, 299, 300, 302, 306, 310, 311, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 380, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 432], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 117, 121, 122, 123, 126, 129, 130, 132, 133, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 167, 168, 170, 172, 174, 175, 177, 178, 179, 181, 182, 191, 192, 193, 197, 202, 205, 207, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 269, 270, 271, 274, 277, 278, 279, 282, 283, 286, 287, 288, 290, 294, 298, 300, 305, 306, 309, 310, 313, 314, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 358, 359, 360, 380, 387, 399, 403, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 53, 56, 58, 66, 67, 68, 85, 87, 88, 89, 90, 91, 130, 149, 156, 197, 200, 215, 220, 320, 323, 335, 408, 409, 412, 413, 414, 415, 418, 420, 429, 431, 432], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 237, 238, 248, 249, 252, 256, 260, 262, 263, 266, 267, 278, 279, 280, 281, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 371, 380, 384, 385, 386, 388, 389, 405, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 432], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 191, 199, 214, 295, 296, 297, 306, 325, 333, 342, 405, 412, 425, 427, 431], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 104, 112, 118, 123, 126, 130, 137, 149, 150, 156, 157, 158, 166, 197, 220, 224, 263, 374, 379, 389, 409, 413, 416, 422, 425], "root": [0, 2, 3, 31, 32, 39, 41, 53, 58, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 123, 126, 130, 137, 149, 150, 156, 157, 174, 212, 231, 256, 257, 260, 287, 288, 415, 417, 425, 426, 427, 428, 429, 432], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 53, 69, 83, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 124, 125, 132, 134, 135, 136, 141, 142, 144, 145, 146, 147, 148, 151, 152, 153, 158, 159, 160, 161, 174, 197, 218, 235, 241, 242, 243, 244, 245, 246, 249, 250, 251, 258, 263, 264, 265, 270, 272, 273, 277, 278, 279, 280, 282, 283, 289, 300, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 352, 357, 365, 404, 423, 428, 431], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 89, 121, 122, 124, 125, 129, 132, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 153, 158, 159, 160, 161, 171, 174, 218, 235, 418, 422, 425, 426, 431], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 86, 89, 90, 121, 122, 124, 125, 132, 134, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 153, 158, 159, 160, 161, 174, 235, 428, 431], "setup": [0, 7, 121, 122, 134, 135, 136, 158], "py": [0, 3, 24, 129, 131, 166, 174, 247, 280, 289, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "develop": [0, 3, 4, 7, 41, 134, 412, 431], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 111, 115, 116, 117, 118, 119, 123, 126, 128, 130, 132, 133, 137, 149, 150, 153, 156, 157, 164, 167, 169, 170, 171, 173, 174, 177, 182, 188, 191, 197, 198, 200, 207, 211, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 231, 233, 234, 236, 238, 239, 240, 249, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 267, 268, 270, 271, 277, 290, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 350, 352, 353, 354, 355, 356, 358, 370, 373, 374, 377, 379, 382, 389, 391, 399, 408, 411, 412, 414, 416, 418, 419, 420, 423, 427, 430, 432], "seri": [0, 2, 3, 7, 8, 50, 95, 105, 115, 116, 119, 120, 156, 192, 215, 372, 407, 408, 412, 413, 414, 421, 422, 425, 426, 429, 432], "quick": [0, 83, 416], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 60, 85, 91, 123, 126, 130, 137, 149, 150, 156, 157, 170, 173, 212, 215, 224, 235, 337, 406, 407, 408, 412, 413, 414, 415, 418, 422, 425, 426, 427, 429, 431, 432], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 105, 107, 108, 109, 110, 115, 117, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 167, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 187, 191, 192, 193, 197, 198, 201, 202, 205, 206, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 231, 232, 234, 238, 239, 240, 252, 254, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 268, 278, 279, 290, 294, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 366, 367, 368, 369, 370, 376, 379, 385, 386, 389, 391, 393, 399, 403, 406, 408, 412, 413, 414, 415, 416, 417, 419, 421, 422, 424, 425, 426, 427, 429, 431, 432], "hurri": [0, 417], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 62, 63, 71, 73, 74, 75, 76, 77, 78, 85, 108, 109, 110, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 167, 170, 173, 187, 193, 198, 210, 212, 213, 233, 234, 239, 240, 252, 254, 256, 258, 260, 261, 264, 265, 272, 284, 287, 290, 298, 302, 307, 320, 352, 354, 355, 413, 414, 415, 416, 417, 418, 425, 426, 427, 428, 429, 431, 432], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 108, 115, 167, 186, 264, 265, 321, 322, 324, 380, 408, 409, 412, 414, 415, 419, 420, 425, 426, 427, 429], "navig": [0, 426], "previou": [0, 3, 4, 10, 46, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 211, 224, 232, 254, 258, 283, 298, 414, 415, 416, 417, 418, 422, 427, 432], "whenev": [0, 1, 2, 3, 23, 46, 53, 56, 58, 66, 67, 68, 73, 83, 89, 101, 102, 109, 110, 124, 125, 129, 131, 132, 141, 142, 153, 160, 161, 166, 190, 216, 221, 335, 352, 353, 354, 355, 370, 391, 407, 421, 429], "want": [0, 2, 3, 6, 7, 8, 56, 66, 110, 174, 193, 277, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 407, 412, 413, 414, 415, 416, 417, 419, 420, 421, 425, 426, 427, 428, 429, 431, 432], "ted": [0, 35, 47, 64, 65, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 405, 411, 423, 430], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 110, 115, 121, 122, 123, 126, 130, 134, 135, 136, 137, 141, 142, 144, 149, 150, 151, 152, 156, 157, 160, 161, 174, 178, 197, 209, 211, 213, 214, 215, 216, 218, 220, 222, 224, 226, 233, 234, 237, 239, 240, 247, 252, 256, 260, 265, 266, 267, 270, 277, 280, 287, 289, 295, 297, 300, 302, 303, 306, 307, 310, 318, 320, 325, 331, 333, 335, 340, 342, 352, 353, 354, 355, 356, 370, 407, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 115, 121, 122, 123, 126, 130, 137, 140, 143, 146, 149, 150, 156, 157, 166, 173, 178, 182, 184, 191, 197, 198, 210, 211, 214, 215, 216, 218, 220, 222, 223, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 356, 370, 389, 396, 399, 405, 408, 409, 411, 413, 414, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430], "optim": [0, 1, 2, 8, 27, 38, 46, 56, 57, 60, 61, 66, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 236, 263, 269, 270, 277, 287, 318, 320, 335, 336, 337, 340, 347, 384, 385, 389, 399, 408, 409, 411, 414, 415, 416, 417, 418, 420, 423, 425, 426, 427, 430], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 123, 126, 130, 137, 149, 150, 153, 156, 157, 171, 174, 193, 197, 220, 226, 278, 279, 302, 318, 321, 324, 326, 338, 340, 342, 343, 372, 380, 386, 389, 391, 392, 393, 399, 409, 411, 412, 415, 416, 417, 418, 419, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432], "storag": [0, 1, 8, 27, 35, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 112, 113, 114, 115, 117, 118, 123, 126, 128, 130, 137, 149, 150, 156, 157, 173, 174, 180, 183, 202, 224, 405, 409, 411, 413, 414, 415, 416, 417, 419, 422, 423, 425, 426, 428, 430], "log": [0, 3, 4, 8, 11, 60, 247, 248, 249, 264, 265, 274, 287, 288, 299, 300, 303, 307, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 343, 350, 379, 382, 383, 384, 389, 399, 407, 408, 409, 411, 412, 413, 414, 417, 418, 422, 423, 425, 426, 427, 430, 431], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 134, 137, 140, 149, 150, 151, 152, 156, 157, 222, 224, 403, 406, 407, 408, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 425, 426, 429, 430, 431], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 224, 372, 411, 413, 414, 417, 423, 425, 426, 427, 430], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 83, 86, 92, 123, 126, 130, 137, 141, 142, 149, 150, 151, 152, 156, 157, 180, 188, 197, 210, 216, 218, 220, 224, 226, 233, 234, 235, 237, 242, 244, 252, 256, 260, 278, 279, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 389, 391, 399, 405, 407, 409, 411, 413, 417, 420, 421, 423, 428, 429, 430, 431, 432], "loop": [0, 8, 52, 54, 59, 73, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 252, 277, 278, 279, 337, 389, 408, 409, 411, 412, 413, 417, 419, 420, 421, 423, 424, 429, 430, 431], "ppo": [0, 4, 8, 303, 307, 319, 334, 337, 405, 407, 411, 412, 413, 416, 418, 419, 423, 425, 430], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 115, 123, 124, 125, 126, 127, 129, 130, 131, 137, 144, 149, 150, 156, 157, 174, 177, 178, 185, 190, 191, 193, 200, 202, 206, 207, 209, 211, 212, 214, 215, 216, 222, 224, 238, 256, 260, 399, 407, 411, 413, 414, 417, 418, 419, 423, 430, 431, 432], "introduct": [0, 408, 411, 417, 423, 425, 426, 430, 432], "multi": [0, 1, 7, 9, 27, 38, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 93, 94, 100, 123, 126, 130, 137, 141, 142, 149, 150, 154, 155, 156, 157, 216, 224, 254, 256, 258, 260, 261, 266, 267, 268, 302, 350, 352, 353, 354, 355, 405, 411, 412, 413, 414, 415, 417, 418, 423, 427, 430, 431], "agent": [0, 9, 62, 63, 140, 141, 142, 147, 148, 151, 152, 154, 155, 158, 159, 160, 161, 162, 209, 210, 264, 265, 266, 267, 268, 270, 280, 289, 350, 405, 411, 417, 423, 427, 430], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 41, 46, 56, 57, 60, 61, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 238, 256, 260, 262, 263, 302, 306, 335, 370, 371, 372, 393, 394, 395, 399, 401, 402, 403, 405, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 123, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 193, 197, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 226, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 274, 276, 277, 278, 279, 280, 281, 287, 288, 289, 290, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 365, 370, 372, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 399, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432], "pretrain": [0, 411, 423, 430], "recurr": [0, 2, 173, 254, 255, 256, 258, 260, 283, 293, 411, 413, 418, 423, 429, 430], "dqn": [0, 2, 83, 167, 184, 240, 249, 299, 300, 317, 318, 320, 321, 322, 324, 326, 327, 328, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 350, 396, 405, 407, 411, 416, 418, 419, 422, 423, 430], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 46, 64, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 182, 191, 210, 225, 230, 233, 234, 237, 238, 249, 252, 256, 260, 266, 267, 270, 278, 279, 281, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 317, 318, 319, 320, 321, 325, 326, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 384, 391, 394, 395, 399, 401, 402, 405, 407, 408, 409, 411, 413, 417, 419, 420, 423, 428, 429, 430, 431, 432], "replai": [0, 8, 16, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 115, 116, 120, 173, 174, 182, 198, 202, 211, 224, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 386, 389, 397, 399, 405, 409, 411, 416, 423, 427, 428, 430], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 120, 123, 126, 130, 137, 143, 149, 150, 156, 157, 173, 174, 178, 182, 197, 198, 202, 211, 214, 215, 216, 218, 220, 224, 233, 234, 278, 279, 298, 306, 309, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 352, 353, 354, 355, 356, 386, 389, 397, 399, 405, 409, 411, 416, 421, 423, 427, 428, 430, 432], "export": [0, 6, 7, 411, 423, 430], "competit": [0, 3, 141, 142, 411, 423, 426, 430], "ddpg": [0, 242, 243, 244, 245, 321, 332, 341, 405, 407, 411, 413, 419, 423, 426, 430], "task": [0, 2, 3, 9, 60, 62, 63, 72, 86, 89, 123, 124, 125, 126, 130, 133, 137, 141, 142, 149, 150, 151, 152, 153, 156, 157, 160, 161, 197, 209, 216, 218, 220, 325, 333, 411, 412, 413, 414, 415, 417, 418, 423, 425, 426, 427, 430, 432], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 147, 148, 149, 150, 156, 157, 160, 211, 246, 256, 260, 298, 317, 335, 337, 339, 372, 389, 405, 408, 409, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 46, 48, 52, 54, 56, 57, 59, 61, 66, 71, 72, 73, 96, 97, 98, 104, 107, 111, 113, 117, 120, 123, 126, 130, 135, 137, 149, 150, 156, 157, 167, 180, 183, 184, 193, 197, 214, 215, 216, 218, 222, 224, 225, 256, 260, 263, 266, 267, 280, 287, 289, 294, 295, 303, 306, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 393, 394, 395, 398, 399, 403, 405, 407, 409, 411, 413, 414, 415, 416, 420, 422, 423, 425, 426, 427, 429, 430, 432], "loss": [0, 3, 8, 54, 184, 277, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 350, 351, 352, 385, 389, 396, 399, 408, 409, 411, 416, 417, 419, 420, 421, 423, 427, 429, 430], "trainer": [0, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 411, 412, 423, 430], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 190, 191, 193, 195, 197, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 274, 276, 277, 278, 279, 280, 281, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 350, 352, 353, 354, 355, 358, 370, 372, 380, 381, 382, 383, 385, 386, 387, 388, 391, 399, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432], "packag": [0, 6, 7, 10, 166, 405, 406, 416, 432], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 46, 50, 52, 53, 54, 55, 58, 59, 60, 67, 68, 69, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 143, 144, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 171, 174, 178, 187, 193, 195, 198, 202, 211, 215, 216, 217, 221, 222, 224, 232, 235, 247, 254, 255, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 274, 278, 279, 280, 286, 290, 293, 302, 306, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 383, 386, 387, 388, 389, 391, 401, 402, 403, 405, 407, 408, 409, 413, 414, 415, 416, 417, 420, 422, 424, 425, 426, 428, 431, 432], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 108, 109, 110, 111, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 171, 173, 174, 175, 178, 179, 180, 183, 184, 185, 187, 195, 197, 199, 200, 202, 206, 208, 209, 211, 213, 215, 216, 217, 220, 222, 224, 229, 231, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 372, 380, 386, 405, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 96, 123, 126, 130, 137, 149, 150, 156, 157, 170, 174, 200, 210, 214, 216, 222, 224, 231, 256, 260, 268, 298, 320, 335, 340, 370, 405, 408, 412, 413, 415, 417, 425, 429, 431], "interoper": [0, 14, 15, 405], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 41, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 123, 126, 129, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 167, 174, 175, 197, 202, 214, 216, 220, 224, 239, 240, 254, 255, 256, 258, 259, 260, 261, 267, 305, 309, 318, 319, 320, 322, 324, 326, 327, 333, 334, 337, 338, 340, 342, 343, 347, 352, 353, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 403, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 41, 52, 54, 59, 63, 73, 91, 137, 214, 405, 420, 431], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 58, 67, 68, 104, 151, 152, 191, 193, 233, 234, 236, 247, 248, 249, 250, 257, 263, 264, 265, 271, 274, 275, 276, 277, 282, 283, 286, 287, 288, 298, 299, 300, 303, 307, 308, 317, 318, 319, 320, 325, 326, 327, 333, 334, 337, 338, 339, 340, 342, 343, 405, 409, 413, 414, 416, 418, 420, 425, 426, 427, 431, 432], "helper": [0, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 412, 413, 415, 425, 427], "compos": [0, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 104, 105, 106, 115, 116, 123, 126, 130, 137, 149, 150, 156, 157, 174, 201, 214, 215, 216, 222, 224, 301, 302, 320, 329, 340, 372, 405, 412, 413, 414, 415, 416, 420, 424, 426, 429, 431, 432], "episod": [0, 3, 41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 170, 202, 205, 210, 231, 236, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 405, 413, 417, 422, 425, 426, 429], "format": [0, 3, 27, 35, 38, 44, 45, 46, 47, 50, 51, 56, 57, 61, 64, 65, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 107, 115, 123, 126, 130, 137, 149, 150, 151, 156, 157, 174, 178, 197, 211, 215, 216, 218, 220, 224, 306, 372, 405, 412, 413, 416, 417, 419, 421, 431, 432], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 123, 126, 130, 137, 143, 149, 150, 156, 157, 160, 161, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 232, 233, 234, 252, 278, 279, 283, 294, 298, 299, 300, 303, 304, 305, 306, 307, 308, 310, 318, 320, 322, 325, 326, 338, 340, 342, 343, 350, 405, 427], "tree": [0, 1, 41, 52, 54, 59, 123, 126, 130, 137, 149, 150, 156, 157, 174, 405, 425, 429], "forest": [0, 41, 405], "human": [0, 24, 87, 405, 427], "feedback": [0, 405, 422, 431], "rlhf": [0, 60, 72, 92, 191, 405, 407], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 73, 123, 127, 130, 137, 149, 150, 156, 157, 168, 171, 180, 183, 192, 199, 200, 215, 216, 222, 224, 226, 231, 236, 256, 260, 262, 263, 384, 393, 394, 395, 399, 401, 402, 403, 405, 417], "gymlikeenv": [0, 129, 131, 405], "envmetadata": [0, 405], "vector": [0, 1, 8, 25, 50, 121, 122, 131, 135, 136, 140, 151, 152, 153, 160, 161, 182, 221, 242, 244, 254, 255, 258, 259, 261, 352, 355, 365, 366, 367, 368, 369, 405, 407, 408, 412, 413, 415, 424, 425, 426, 427, 428, 432], "custom": [0, 2, 5, 27, 38, 46, 56, 57, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 218, 224, 266, 267, 310, 327, 337, 344, 403, 405, 407, 412, 413, 414, 415, 418, 419, 421, 425, 426], "nativ": [0, 1, 7, 9, 87, 123, 126, 130, 137, 149, 150, 156, 157, 174, 372, 405, 415, 429], "auto": [0, 97, 117, 169, 170, 221, 278, 279, 318, 320, 326, 336, 338, 340, 342, 343, 405, 408, 425, 426], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 169, 170, 171, 174, 184, 187, 190, 192, 197, 205, 209, 210, 211, 212, 214, 215, 216, 218, 221, 222, 224, 226, 232, 238, 254, 256, 260, 268, 278, 279, 292, 302, 335, 371, 405, 408, 412, 413, 414, 415, 417, 420, 424, 425, 426, 431], "dynam": [0, 2, 7, 14, 15, 16, 86, 89, 91, 123, 126, 130, 137, 149, 150, 156, 157, 224, 325, 333, 405, 414, 417, 427], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 121, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 229, 231, 232, 233, 234, 249, 252, 256, 260, 278, 279, 281, 283, 294, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 405, 407, 412, 413, 414, 415, 416, 417, 418, 422, 424, 425, 426, 431], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 168, 198, 224, 237, 238, 249, 252, 264, 265, 281, 298, 299, 300, 304, 305, 326, 340, 386, 405, 413, 415, 416, 432], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 41, 50, 60, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 167, 168, 171, 177, 180, 182, 183, 184, 185, 188, 191, 192, 195, 199, 200, 202, 206, 209, 211, 216, 221, 225, 229, 231, 233, 234, 236, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 256, 260, 261, 262, 263, 264, 265, 266, 276, 278, 279, 280, 281, 283, 286, 287, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 399, 403, 405, 407, 408, 409, 412, 413, 414, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 429, 431, 432], "record": [0, 2, 11, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 164, 167, 191, 224, 337, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 384, 399, 405, 413, 414, 418, 422, 425], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 182, 211, 229, 294, 299, 300, 303, 304, 305, 306, 307, 308, 309, 314, 405, 414, 415, 418, 419, 425, 426, 427, 431, 432], "actor": [0, 3, 4, 21, 191, 225, 236, 241, 242, 244, 249, 250, 252, 263, 276, 278, 279, 281, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 350, 405, 408, 413, 415, 416, 417, 419, 422, 425, 428, 431], "explor": [0, 1, 223, 233, 234, 237, 252, 270, 278, 279, 294, 299, 300, 303, 304, 305, 306, 307, 317, 335, 384, 394, 395, 399, 405, 414, 415, 416, 417, 419, 420, 422, 425, 426, 427], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 123, 126, 130, 137, 140, 149, 150, 156, 157, 166, 167, 170, 172, 174, 175, 177, 180, 181, 182, 183, 184, 192, 193, 197, 198, 201, 202, 203, 205, 207, 211, 212, 215, 216, 220, 222, 224, 229, 231, 232, 233, 234, 235, 238, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 256, 257, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 274, 278, 279, 280, 281, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 380, 382, 383, 384, 385, 386, 389, 399, 405, 409, 413, 416, 419, 420, 421, 424, 425, 426, 427, 429, 431, 432], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 56, 58, 60, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 106, 108, 123, 126, 127, 130, 137, 141, 142, 143, 146, 149, 150, 151, 152, 154, 155, 156, 157, 171, 178, 180, 181, 185, 191, 193, 199, 200, 205, 206, 209, 211, 215, 221, 224, 232, 237, 238, 247, 256, 260, 264, 265, 274, 294, 303, 307, 311, 312, 331, 338, 345, 352, 357, 365, 375, 389, 405, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "hook": [0, 2, 27, 35, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 118, 123, 126, 130, 137, 149, 150, 156, 157, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 281, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 405], "planner": [0, 236, 263, 405], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 105, 108, 109, 110, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 172, 173, 175, 178, 180, 181, 182, 183, 184, 185, 191, 193, 195, 197, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 218, 220, 222, 224, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 315, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 358, 362, 364, 365, 367, 369, 370, 374, 380, 387, 388, 399, 405, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "vmap": [0, 254, 255, 258, 259, 268, 290, 306, 309, 335, 405, 407], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 60, 62, 63, 71, 74, 75, 76, 77, 78, 89, 91, 103, 115, 123, 126, 130, 137, 143, 149, 150, 156, 157, 167, 182, 192, 193, 211, 225, 226, 238, 252, 254, 256, 258, 260, 303, 306, 307, 314, 318, 335, 338, 384, 393, 405, 407, 412, 413, 414, 415, 416, 417, 418, 420, 427, 428, 429, 431, 432], "sac": [0, 326, 338, 340, 405], "redq": [0, 338, 405], "crossq": [0, 320, 405], "iql": [0, 325, 333, 405, 412, 425, 426], "cql": [0, 318, 324, 405], "gail": [0, 331, 405], "dt": [0, 150, 278, 279, 405, 427], "td3": [0, 342, 343, 405], "bc": [0, 5, 342, 405], "a2c": [0, 317, 405], "dreamer": [0, 164, 165, 250, 328, 329, 330, 405, 407], "checkpoint": [0, 58, 94, 96, 99, 111, 112, 114, 118, 405, 428, 429], "builder": [0, 405, 413, 432], "logger": [0, 3, 11, 370, 372, 374, 375, 376, 377, 378, 379, 383, 389, 399, 403, 405, 413, 425], "_util": [0, 3, 12, 405, 416, 422], "implement_for": [0, 3, 405], "thing": [0, 3, 7, 8, 123, 126, 130, 137, 149, 150, 156, 157, 266, 267, 326, 340, 406, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 429, 432], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 96, 97, 109, 117, 123, 126, 130, 137, 149, 150, 156, 157, 174, 182, 222, 224, 247, 266, 267, 286, 318, 320, 333, 338, 340, 342, 343, 352, 354, 355, 406, 412, 417, 418, 419, 427, 429], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 117, 123, 126, 127, 129, 130, 131, 136, 137, 140, 141, 142, 144, 146, 149, 150, 151, 152, 156, 157, 160, 161, 168, 170, 173, 174, 178, 180, 182, 183, 191, 192, 193, 197, 198, 205, 211, 214, 215, 216, 218, 220, 221, 222, 224, 230, 231, 235, 236, 247, 249, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 277, 281, 287, 302, 303, 306, 307, 309, 313, 318, 319, 320, 322, 326, 327, 333, 334, 335, 337, 338, 340, 342, 343, 344, 350, 351, 352, 353, 354, 355, 370, 371, 372, 374, 386, 403, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 420, 421, 425, 426, 427, 428, 429, 431, 432], "debug": [0, 6, 8, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 406, 432], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 46, 56, 57, 58, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 102, 107, 109, 110, 113, 120, 123, 126, 129, 130, 131, 134, 137, 149, 150, 153, 156, 157, 174, 175, 191, 197, 214, 218, 221, 222, 224, 231, 239, 240, 261, 300, 305, 310, 319, 334, 337, 389, 406, 407, 412, 413, 414, 415, 417, 420, 424, 425, 426, 427, 428, 429, 431, 432], "habitat": [0, 3, 132, 406, 428], "lab": [0, 3, 124, 125, 132, 406], "mujoco": [0, 6, 8, 153, 406, 412, 414, 415], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 73, 96, 123, 126, 130, 137, 149, 150, 156, 157, 158, 162, 198, 214, 224, 226, 335, 406, 408, 412, 414, 416, 425, 426, 432], "solut": [0, 2, 3, 6, 7, 9, 21, 109, 406, 407, 409, 416, 431], "resourc": [0, 1, 21, 132, 406, 412, 414, 416, 425, 426], "issu": [0, 3, 4, 5, 8, 83, 87, 94, 96, 97, 109, 117, 123, 126, 129, 130, 134, 137, 149, 150, 156, 157, 174, 198, 212, 231, 294, 299, 300, 303, 304, 305, 306, 307, 406, 431], "customis": [0, 406, 413, 421], "video": [0, 4, 9, 372, 374, 384, 403, 405, 406, 422, 425, 426], "render": [0, 3, 8, 136, 160, 370, 372, 384, 406, 412, 413, 414, 416, 417, 421], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 101, 102, 104, 105, 107, 109, 113, 115, 116, 117, 119, 120, 123, 126, 130, 137, 141, 142, 147, 148, 149, 150, 156, 157, 160, 161, 169, 174, 178, 182, 216, 231, 264, 265, 405, 417, 424, 425, 426, 429, 431], "search": [0, 2, 31, 32, 39, 63, 73, 137, 146, 232, 413], "page": [0, 7, 24, 379, 419], "somewhat": [1, 2, 408, 418, 432], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 121, 122, 123, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 171, 181, 184, 216, 224, 249, 258, 261, 281, 299, 300, 304, 305, 337, 386, 420, 431, 432], "dataload": [1, 92, 108, 110, 413, 420, 429], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 123, 126, 130, 137, 149, 150, 156, 157, 174, 186, 202, 210, 211, 212, 214, 216, 224, 233, 234, 252, 254, 256, 258, 260, 274, 278, 279, 317, 320, 335, 337, 340, 372, 407, 413, 417, 425, 429, 431, 432], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 188, 191, 193, 195, 197, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 225, 229, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 366, 367, 369, 370, 372, 380, 384, 386, 387, 399, 403, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 123, 126, 129, 130, 131, 137, 140, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 170, 173, 186, 191, 197, 206, 215, 216, 220, 224, 260, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 386, 389, 407, 408, 409, 412, 413, 414, 415, 416, 419, 424, 425, 426, 427, 428, 429, 431, 432], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 89, 102, 104, 108, 109, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 167, 182, 193, 205, 212, 224, 231, 274, 277, 287, 290, 309, 327, 329, 335, 358, 370, 392, 407, 409, 412, 413, 414, 416, 417, 418, 419, 420, 425, 426, 427, 432], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 46, 48, 49, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 89, 98, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 171, 172, 174, 178, 187, 197, 211, 215, 216, 217, 218, 220, 224, 231, 238, 254, 256, 258, 260, 266, 306, 307, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 407, 412, 415, 416, 425, 426, 427, 429, 432], "static": [1, 12, 56, 60, 66, 72, 102, 109, 110, 132, 150, 222, 333, 417, 427, 429], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 41, 46, 48, 53, 56, 57, 58, 61, 63, 66, 67, 68, 72, 98, 104, 110, 123, 126, 127, 130, 132, 137, 140, 149, 150, 151, 152, 156, 157, 174, 184, 211, 213, 224, 226, 254, 258, 267, 301, 317, 319, 334, 337, 338, 339, 407, 408, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 62, 66, 92, 115, 118, 123, 126, 129, 130, 131, 132, 136, 137, 149, 150, 153, 156, 157, 173, 180, 182, 183, 192, 200, 211, 214, 216, 224, 230, 252, 256, 260, 278, 279, 319, 320, 334, 335, 337, 340, 372, 386, 391, 401, 402, 403, 407, 412, 413, 414, 415, 420, 425, 426, 427, 429], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 74, 86, 87, 90, 91, 92, 123, 126, 130, 137, 143, 149, 150, 156, 157, 169, 174, 178, 187, 197, 205, 211, 214, 215, 216, 217, 218, 220, 224, 261, 290, 306, 307, 308, 320, 340, 372, 409, 414, 416, 417, 421, 429, 431, 432], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 89, 104, 108, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 171, 193, 197, 214, 220, 224, 245, 254, 256, 258, 260, 266, 267, 284, 287, 307, 334, 342, 346, 384, 389, 408, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 429, 431, 432], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 91, 127, 174, 307, 389, 407, 408, 412, 413, 424, 431, 432], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 108, 109, 110, 113, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 170, 171, 174, 175, 177, 178, 181, 197, 205, 206, 209, 211, 213, 214, 215, 216, 217, 218, 220, 224, 231, 233, 234, 235, 238, 239, 240, 252, 254, 256, 258, 260, 261, 264, 265, 266, 267, 269, 278, 279, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 350, 352, 353, 354, 355, 356, 360, 370, 371, 372, 379, 382, 389, 392, 399, 400, 403, 412, 413, 414, 415, 416, 417, 418, 420, 425, 426, 427, 429, 431, 432], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 107, 108, 109, 110, 111, 113, 123, 124, 125, 126, 129, 130, 131, 132, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 172, 173, 177, 180, 181, 183, 191, 193, 195, 197, 205, 207, 213, 214, 216, 217, 218, 220, 222, 224, 231, 238, 239, 240, 242, 248, 251, 256, 260, 261, 264, 265, 272, 281, 300, 302, 304, 305, 307, 309, 310, 311, 318, 320, 333, 335, 338, 340, 342, 343, 349, 352, 355, 370, 371, 384, 386, 401, 402, 408, 412, 414, 417, 418, 419, 420, 424, 425, 427, 428, 429, 431, 432], "constructor": [1, 2, 16, 18, 19, 20, 21, 58, 72, 89, 101, 115, 123, 126, 130, 137, 144, 149, 150, 156, 157, 160, 170, 174, 214, 215, 239, 240, 261, 293, 303, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 400, 403, 407, 412, 413, 414, 417, 420, 425, 426, 429, 431], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 108, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 185, 193, 206, 224, 235, 237, 238, 239, 240, 261, 266, 267, 285, 294, 299, 303, 304, 306, 308, 309, 311, 335, 349, 384, 388, 389, 408, 409, 412, 414, 415, 420, 422, 425, 426, 427], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 121, 122, 123, 126, 127, 130, 131, 132, 134, 135, 136, 137, 143, 144, 149, 150, 153, 156, 157, 158, 168, 216, 224, 252, 254, 256, 258, 260, 268, 293, 302, 308, 309, 335, 342, 393, 403, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 429, 430, 431, 432], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 60, 73, 83, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 168, 173, 187, 190, 193, 209, 210, 211, 212, 214, 216, 221, 224, 231, 232, 233, 234, 235, 236, 250, 252, 254, 256, 258, 260, 262, 263, 277, 278, 279, 302, 303, 307, 317, 328, 337, 351, 352, 353, 354, 355, 358, 359, 360, 371, 374, 380, 384, 389, 409, 413, 415, 416, 418, 419, 421, 422, 424, 427, 428, 431], "queri": [1, 2, 3, 14, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 197, 215, 218, 222, 224, 309, 408, 412, 419, 427, 431], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 123, 126, 130, 137, 149, 150, 156, 157, 198, 210, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 268, 271, 272, 273, 276, 277, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 314, 322, 324, 335, 352, 353, 354, 355, 356, 371, 400, 407, 412, 413, 415, 419, 422, 427, 429, 432], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 109, 110, 117, 121, 122, 123, 126, 129, 130, 131, 135, 136, 137, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 160, 161, 167, 173, 174, 182, 188, 192, 193, 204, 209, 212, 214, 216, 222, 224, 233, 234, 235, 236, 239, 240, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 271, 272, 273, 278, 279, 280, 282, 283, 286, 287, 288, 289, 294, 298, 302, 303, 306, 307, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 380, 382, 384, 389, 391, 392, 393, 401, 402, 403, 407, 408, 412, 413, 414, 415, 417, 418, 420, 422, 425, 426, 427, 428, 429, 432], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 34, 38, 42, 43, 46, 56, 57, 61, 66, 72, 73, 88, 108, 110, 115, 123, 126, 130, 131, 137, 149, 150, 156, 157, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226, 237, 254, 256, 260, 261, 269, 270, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 353, 354, 355, 386, 412, 414, 415, 416, 420, 421, 425, 426, 427, 429, 432], "deliv": [1, 2, 3, 16, 89, 412, 413, 417, 420, 431], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 123, 126, 129, 130, 131, 137, 140, 149, 150, 151, 152, 156, 157, 174, 222, 254, 256, 258, 259, 260, 302, 308, 309, 318, 320, 333, 338, 340, 342, 343, 371, 380, 405, 413, 416, 417, 424, 425, 427, 431], "user": [1, 2, 3, 5, 8, 23, 27, 38, 46, 56, 57, 61, 66, 83, 85, 89, 91, 102, 110, 123, 126, 130, 137, 149, 150, 156, 157, 158, 175, 210, 214, 216, 224, 226, 246, 320, 337, 340, 342, 372, 400, 408, 409, 412, 413, 417, 419, 420, 427, 431, 432], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 108, 123, 126, 130, 136, 137, 141, 142, 149, 150, 156, 157, 160, 161, 209, 233, 234, 252, 278, 279, 412, 414, 422, 425, 426, 431, 432], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 63, 64, 66, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 109, 110, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 174, 180, 181, 183, 184, 185, 192, 193, 195, 199, 200, 202, 204, 206, 209, 211, 212, 214, 215, 216, 222, 224, 231, 232, 236, 254, 256, 260, 263, 287, 302, 317, 318, 319, 320, 321, 322, 324, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 407, 408, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 41, 46, 53, 56, 57, 58, 60, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 170, 173, 174, 175, 177, 184, 193, 200, 209, 210, 214, 215, 216, 222, 224, 226, 231, 232, 236, 241, 246, 250, 254, 255, 256, 258, 259, 260, 261, 263, 268, 272, 276, 280, 282, 283, 289, 293, 295, 302, 306, 312, 317, 319, 320, 324, 326, 334, 335, 337, 338, 339, 340, 350, 351, 352, 353, 354, 355, 356, 389, 403, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 432], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 83, 97, 104, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 231, 233, 234, 235, 252, 254, 256, 260, 269, 299, 304, 320, 329, 340, 342, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 428, 429, 432], "predefin": [1, 413, 415, 420, 429, 431], "becaus": [1, 2, 3, 4, 7, 52, 54, 59, 60, 73, 83, 123, 126, 130, 137, 149, 150, 156, 157, 184, 191, 209, 215, 221, 224, 245, 267, 294, 299, 300, 302, 303, 304, 305, 306, 307, 317, 337, 407, 412, 413, 415, 416, 418, 419, 420, 424, 425, 426, 427, 429, 432], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 427, 429], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 46, 56, 57, 60, 61, 66, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 193, 207, 216, 219, 224, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 271, 272, 273, 274, 276, 278, 279, 282, 283, 285, 287, 288, 290, 295, 298, 300, 302, 303, 305, 307, 310, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 393, 408, 412, 414, 415, 416, 417, 418, 424, 425, 426, 428, 429], "heavi": [1, 8, 83, 429], "crucial": [1, 2, 3, 233, 234, 252, 278, 279, 325, 333, 335, 412, 413, 414, 415, 417, 419, 421, 425, 426, 427, 431, 432], "configur": [1, 8, 21, 22, 60, 191, 241, 246, 276, 335, 337, 407, 412, 413, 414, 419, 425, 426, 427], "hyperparamet": [1, 107, 224, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 412, 421, 427, 429], "appropri": [1, 3, 4, 7, 95, 105, 115, 116, 119, 120, 137, 149, 156, 184, 400, 403, 412, 421, 429], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 111, 113, 115, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 407, 408, 412, 415, 416, 418, 422, 425, 426, 427, 428, 431], "take": [1, 2, 3, 8, 23, 27, 38, 41, 56, 57, 60, 61, 66, 86, 112, 118, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 177, 209, 212, 215, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 301, 302, 303, 305, 310, 313, 316, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 380, 391, 407, 409, 412, 413, 414, 416, 417, 418, 419, 425, 426, 427, 429, 432], "consider": [1, 2, 3, 8, 129, 131, 413, 425, 426, 429], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 105, 117, 123, 126, 130, 136, 137, 141, 142, 143, 149, 150, 151, 152, 156, 157, 160, 161, 170, 180, 183, 210, 214, 216, 222, 224, 232, 239, 240, 256, 260, 261, 311, 317, 318, 319, 320, 321, 322, 324, 326, 327, 331, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 355, 412, 413, 414, 416, 417, 425, 426, 427, 431, 432], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 102, 104, 109, 110, 111, 115, 118, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 140, 143, 149, 150, 151, 152, 156, 157, 160, 161, 167, 170, 171, 174, 177, 178, 180, 181, 184, 185, 187, 191, 193, 198, 199, 200, 202, 205, 206, 209, 210, 212, 215, 216, 221, 222, 224, 226, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 267, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 303, 305, 306, 307, 310, 313, 317, 319, 320, 326, 332, 334, 335, 337, 338, 339, 340, 341, 342, 351, 352, 353, 354, 355, 356, 372, 374, 384, 385, 386, 389, 399, 401, 402, 403, 407, 409, 412, 413, 414, 415, 416, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "occur": [1, 8, 15, 56, 62, 63, 66, 73, 83, 123, 126, 130, 132, 137, 149, 150, 156, 157, 175, 185, 193, 198, 221, 232, 235, 294, 299, 300, 303, 304, 305, 306, 307, 329, 416, 429, 432], "serial": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 214, 222, 224], "parallel": [1, 3, 8, 123, 126, 129, 130, 131, 137, 149, 150, 151, 152, 156, 157, 216, 221, 226, 256, 260, 317, 400, 401, 402, 403, 413, 414, 425, 426, 431], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 46, 64, 171, 174, 202, 237, 256, 260, 399, 402, 405, 412, 413, 414, 415, 416, 420, 422, 425, 426, 429], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 136, 137, 140, 143, 146, 149, 150, 151, 152, 153, 156, 157, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 401, 402, 403, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 429, 432], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 52, 54, 59, 71, 72, 73, 86, 91, 92, 127, 144, 149, 156, 214, 222, 401, 402, 403, 412, 413, 414, 431, 432], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 237, 402, 405, 414, 420, 431], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 39, 52, 54, 63, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 109, 110, 140, 151, 152, 254, 258, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 407, 409, 414, 418, 429, 431], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 57, 58, 61, 67, 68, 102, 109, 110, 121, 122, 124, 125, 129, 131, 132, 134, 135, 136, 144, 145, 149, 153, 157, 214, 222, 224, 256, 260, 266, 277, 278, 279, 335, 391, 405, 407, 408, 412, 417, 421, 425, 426, 427], "aggreg": [1, 3, 27, 56, 83, 102, 115, 151, 152, 232, 239, 240, 242, 243, 309], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 110, 123, 126, 127, 130, 137, 149, 150, 156, 157, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 231, 232, 233, 237, 252, 254, 256, 258, 260, 261, 266, 281, 287, 298, 300, 305, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 391, 408, 413, 415, 417, 418, 421, 422, 427, 428, 431, 432], "final": [1, 2, 3, 4, 21, 41, 52, 54, 59, 60, 73, 211, 221, 233, 234, 252, 254, 256, 258, 260, 266, 278, 279, 301, 308, 352, 384, 407, 412, 413, 414, 416, 421, 422, 425, 426, 427, 432], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 237, 401, 405, 412, 413, 414, 420, 431], "sever": [1, 2, 3, 8, 27, 38, 42, 46, 56, 57, 61, 66, 72, 86, 123, 126, 130, 137, 149, 150, 156, 157, 175, 177, 216, 224, 337, 412, 414, 416, 421, 422, 429, 432], "gather": [1, 3, 18, 20, 21, 41, 72, 92, 96, 97, 102, 109, 117, 198, 265, 268, 274, 335, 351, 393, 406, 413, 414, 415, 416, 420, 425, 426, 427, 429, 431, 432], "continu": [1, 2, 9, 28, 31, 74, 75, 76, 110, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 160, 161, 167, 211, 229, 242, 243, 244, 245, 277, 278, 279, 309, 314, 318, 341, 352, 357, 365, 407, 412, 414, 415, 418, 425, 426, 427, 429, 431, 432], "concomitantli": [1, 123, 126, 130, 137, 149, 150, 156, 157], "network": [1, 4, 8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 224, 239, 240, 242, 243, 244, 245, 248, 250, 251, 258, 261, 266, 267, 268, 270, 272, 273, 275, 277, 280, 282, 283, 284, 289, 295, 296, 297, 298, 306, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 348, 350, 352, 353, 354, 355, 356, 398, 399, 407, 408, 409, 416, 419, 422, 424, 427, 432], "impli": [1, 73, 432], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 60, 61, 66, 102, 104, 107, 121, 122, 123, 126, 130, 137, 149, 150, 154, 155, 156, 157, 178, 197, 211, 214, 215, 216, 218, 220, 224, 254, 255, 256, 258, 259, 260, 266, 268, 270, 306, 317, 318, 319, 320, 326, 329, 340, 342, 391, 398, 407, 409, 412, 413, 414, 416, 424, 427, 429, 431], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 85, 91, 94, 102, 109, 123, 126, 129, 130, 131, 132, 137, 149, 150, 153, 156, 157, 191, 193, 206, 214, 216, 217, 222, 224, 226, 235, 256, 260, 261, 266, 326, 340, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 432], "slightli": [1, 23, 83, 408, 415, 416, 425, 427, 428, 429, 432], "lag": [1, 412, 413, 414], "therefor": [1, 2, 3, 7, 53, 58, 67, 68, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 202, 337, 350, 416, 419, 425, 432], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 174], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 41, 47, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 102, 104, 109, 110, 115, 117, 118, 123, 126, 130, 137, 140, 143, 146, 149, 150, 151, 152, 156, 157, 167, 168, 171, 174, 184, 191, 197, 202, 205, 209, 210, 211, 212, 215, 217, 220, 221, 231, 232, 233, 234, 252, 254, 255, 256, 258, 259, 260, 264, 265, 266, 275, 277, 278, 279, 298, 303, 306, 307, 316, 317, 318, 319, 320, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 408, 409, 412, 413, 414, 416, 417, 424, 425, 426, 427, 429, 432], "asynchron": [1, 9, 15, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 317, 401, 412, 413, 414], "off": [1, 2, 4, 257, 288, 299, 340, 370, 384, 394, 407, 409, 412, 413, 414, 418, 419, 425, 426, 428, 431, 432], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 117, 123, 126, 129, 130, 131, 136, 137, 149, 150, 151, 152, 156, 157, 158, 160, 174, 180, 183, 187, 193, 210, 216, 221, 224, 226, 249, 254, 256, 258, 260, 267, 269, 295, 297, 298, 300, 304, 317, 325, 327, 333, 337, 384, 407, 409, 412, 413, 414, 415, 417, 418, 420, 421, 425, 426, 427, 428, 429, 432], "remot": [1, 2, 18, 19, 20, 21, 149, 156, 432], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 41, 60, 66, 73, 115, 121, 122, 123, 126, 130, 132, 133, 135, 136, 137, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 167, 168, 170, 171, 174, 177, 180, 183, 184, 185, 191, 195, 199, 200, 205, 206, 207, 209, 210, 212, 214, 222, 224, 226, 236, 237, 238, 256, 260, 263, 278, 279, 302, 317, 370, 372, 393, 407, 412, 414, 415, 418, 419, 420, 421, 422, 428, 429, 431], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 206, 338, 352, 353, 354, 355, 356, 408, 412, 414, 418, 419, 420], "synchronis": [1, 127, 425, 426], "either": [1, 2, 5, 22, 25, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 123, 126, 130, 137, 149, 150, 156, 157, 209, 210, 224, 312, 335, 342, 343, 376, 409, 412, 413, 415, 425, 428, 429, 431, 432], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 412, 426, 431], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 173, 174, 175, 178, 182, 185, 187, 190, 191, 192, 193, 197, 198, 200, 201, 204, 205, 206, 209, 211, 213, 214, 215, 216, 217, 218, 220, 222, 224, 226, 229, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 251, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 277, 278, 279, 286, 287, 288, 293, 294, 295, 296, 297, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 379, 382, 383, 384, 386, 389, 403, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 45, 83, 86, 115, 171, 254, 256, 258, 260, 300, 319, 334, 337, 340, 374, 388, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 171, 178, 180, 181, 183, 184, 185, 191, 195, 196, 197, 199, 200, 202, 206, 209, 211, 213, 215, 216, 218, 220, 222, 224, 229, 231, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 267, 269, 270, 276, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 386, 391, 397, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 171, 187, 191, 215, 224, 248, 249, 255, 259, 271, 295, 296, 297, 299, 300, 301, 306, 312, 317, 319, 321, 322, 327, 334, 337, 339, 350, 351, 352, 353, 354, 355, 389, 405, 408, 409, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 427, 432], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 102, 104, 109, 110, 117, 123, 125, 126, 127, 129, 130, 131, 137, 143, 149, 150, 156, 157, 193, 211, 215, 216, 222, 224, 226, 229, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 266, 267, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 313, 318, 320, 322, 325, 326, 333, 335, 338, 340, 342, 343, 350, 352, 353, 354, 355, 370, 372, 376, 384, 393, 394, 395, 399, 401, 402, 407, 408, 409, 412, 414, 415, 416, 417, 418, 427, 429, 432], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 167, 171, 178, 180, 181, 183, 184, 185, 195, 197, 199, 200, 202, 206, 209, 211, 215, 216, 218, 220, 224, 229, 231, 236, 238, 248, 254, 255, 256, 258, 259, 260, 263, 269, 270, 278, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 370, 386, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "slower": [1, 425], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 56, 73, 83, 85, 89, 102, 109, 110, 113, 115, 123, 126, 130, 134, 137, 147, 148, 149, 150, 153, 156, 157, 200, 233, 234, 245, 256, 258, 260, 261, 271, 290, 294, 299, 306, 311, 335, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 406, 407, 408, 412, 413, 414, 416, 417, 419, 425, 426, 427, 429, 431, 432], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 110, 111, 113, 115, 116, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 168, 171, 174, 177, 180, 181, 182, 183, 192, 193, 197, 202, 205, 208, 210, 211, 212, 215, 216, 217, 220, 222, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 313, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 347, 350, 352, 353, 354, 355, 359, 360, 374, 382, 384, 385, 389, 393, 403, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 432], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 121, 122, 123, 126, 130, 132, 133, 134, 137, 149, 150, 156, 157, 178, 191, 196, 197, 211, 215, 216, 218, 220, 224, 254, 255, 258, 259, 306, 381, 412, 413, 414, 415, 425, 426, 428, 432], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 56, 58, 67, 68, 69, 73, 97, 104, 105, 117, 121, 122, 135, 136, 149, 156, 157, 175, 177, 182, 190, 192, 202, 205, 209, 214, 215, 222, 254, 258, 260, 266, 269, 270, 294, 299, 303, 304, 306, 307, 310, 319, 326, 334, 337, 347, 358, 403, 407, 408, 409, 412, 413, 414, 417, 419, 420, 425, 426, 427, 429, 431], "infer": [1, 123, 126, 130, 137, 149, 150, 156, 157, 174, 222, 256, 260, 269, 298, 303, 324, 370, 412, 414, 416, 420, 422, 429, 431], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 46, 56, 57, 61, 66, 83, 86, 102, 109, 110, 121, 122, 123, 124, 125, 126, 129, 130, 135, 136, 137, 143, 144, 145, 149, 150, 156, 157, 192, 193, 214, 216, 222, 224, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 308, 309, 310, 313, 320, 326, 340, 372, 379, 384, 401, 402, 403, 406, 407, 409, 412, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431], "dispatch": [1, 18, 19, 20, 21, 56, 66, 290, 302, 372, 412], "avail": [1, 2, 3, 4, 6, 21, 53, 58, 67, 68, 83, 86, 91, 102, 108, 109, 110, 124, 125, 134, 141, 142, 147, 148, 149, 151, 152, 153, 158, 159, 160, 161, 167, 170, 173, 191, 249, 281, 303, 307, 335, 372, 401, 402, 412, 413, 414, 415, 416, 417, 418, 425, 426, 427, 429, 432], "speed": [1, 2, 4, 8, 30, 123, 126, 130, 137, 149, 150, 156, 157, 408, 412, 413, 414, 415, 425, 426, 427, 429, 431], "avoid": [1, 2, 3, 27, 38, 46, 56, 57, 61, 66, 96, 97, 109, 117, 123, 126, 130, 137, 149, 150, 156, 157, 166, 174, 214, 216, 222, 224, 235, 287, 294, 306, 311, 319, 320, 334, 337, 340, 392, 414, 416, 426], "oom": [1, 3, 52, 54, 59, 73, 96, 97, 117], "choic": [1, 2, 85, 91, 149, 271, 407, 408, 412, 413, 419, 425, 426], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 60, 61, 63, 66, 67, 68, 71, 72, 83, 86, 87, 89, 90, 91, 94, 96, 97, 102, 104, 109, 110, 115, 117, 123, 126, 127, 128, 130, 131, 137, 140, 144, 149, 150, 151, 152, 156, 157, 160, 170, 171, 174, 180, 183, 200, 214, 215, 217, 222, 224, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 267, 268, 269, 271, 272, 273, 276, 278, 279, 280, 282, 283, 285, 289, 290, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 318, 319, 320, 333, 334, 335, 337, 338, 340, 342, 343, 352, 353, 354, 355, 356, 370, 386, 389, 401, 402, 403, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 429, 431, 432], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 78, 89, 101, 110, 123, 126, 130, 134, 137, 146, 149, 150, 156, 157, 167, 174, 187, 217, 222, 232, 256, 260, 298, 407, 408, 413, 426], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 41, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 104, 109, 115, 117, 123, 126, 130, 137, 149, 150, 156, 157, 174, 221, 222, 224, 233, 234, 236, 237, 263, 278, 279, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 379, 405, 409, 412, 414, 415, 418, 420, 422, 425, 426, 428, 432], "while": [1, 2, 3, 7, 8, 23, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 202, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 325, 333, 334, 337, 407, 408, 412, 414, 415, 418, 420, 421, 425, 426, 427, 428, 429, 431], "wait": [1, 20, 21, 22, 158, 415, 427], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 71, 73, 83, 86, 87, 89, 90, 91, 92, 96, 97, 102, 104, 109, 110, 115, 117, 123, 126, 130, 136, 137, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 166, 170, 171, 173, 174, 182, 193, 200, 202, 205, 206, 209, 211, 214, 216, 224, 231, 239, 240, 254, 258, 283, 302, 303, 308, 309, 310, 317, 318, 320, 321, 322, 324, 325, 326, 331, 333, 337, 340, 342, 352, 359, 360, 370, 372, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 429, 431, 432], "impact": [1, 2, 3, 89, 136, 180, 183, 235, 317, 319, 334, 337, 339, 413, 415, 425, 426], "memori": [1, 3, 8, 21, 27, 30, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 94, 96, 100, 123, 126, 127, 130, 134, 137, 149, 150, 156, 157, 174, 178, 197, 211, 215, 216, 218, 220, 222, 224, 247, 258, 259, 306, 403, 405, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "manag": [1, 8, 123, 126, 130, 137, 149, 150, 156, 157, 237, 256, 260, 293, 348, 349, 352, 353, 354, 355, 384, 407, 415, 416, 419, 431], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 93, 101, 102, 104, 107, 109, 110, 115, 123, 126, 130, 135, 136, 137, 149, 150, 151, 152, 156, 157, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 196, 197, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 231, 232, 233, 234, 236, 238, 248, 249, 252, 256, 260, 262, 263, 278, 279, 281, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 370, 372, 383, 384, 385, 387, 388, 389, 393, 408, 409, 412, 414, 415, 416, 417, 419, 424, 425, 426, 427, 429, 431, 432], "control": [1, 3, 5, 8, 16, 23, 24, 33, 58, 67, 68, 102, 104, 109, 123, 124, 125, 126, 130, 136, 137, 140, 149, 150, 151, 152, 156, 157, 182, 231, 242, 243, 244, 245, 256, 260, 262, 263, 278, 279, 283, 290, 306, 307, 308, 317, 319, 320, 334, 335, 337, 341, 352, 357, 365, 370, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 425, 426, 427, 429, 431], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 104, 107, 108, 115, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 174, 175, 180, 183, 188, 191, 192, 193, 197, 198, 200, 209, 211, 212, 215, 216, 218, 222, 224, 226, 248, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 275, 277, 288, 295, 296, 297, 298, 302, 303, 306, 307, 309, 317, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 370, 372, 380, 385, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 432], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 413, 426], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58, 60, 61, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 102, 104, 107, 109, 123, 126, 127, 130, 136, 137, 149, 150, 151, 152, 156, 157, 170, 171, 174, 177, 180, 183, 185, 188, 195, 207, 211, 214, 216, 217, 222, 224, 235, 237, 238, 256, 260, 267, 352, 354, 355, 384, 389, 408, 412, 413, 414, 415, 418, 419, 420, 422, 425, 426, 427, 429, 432], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 233, 279, 302, 412, 416, 420, 432], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 85, 107, 115, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 214, 270, 337, 342, 352, 353, 354, 355, 356, 371, 406, 407, 409, 412, 413, 414, 415, 418, 420, 421, 426, 429, 432], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 85, 89, 108, 109, 110, 113, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 144, 145, 149, 150, 151, 152, 153, 156, 157, 167, 174, 180, 182, 183, 188, 192, 193, 214, 215, 216, 222, 224, 239, 240, 255, 256, 259, 260, 261, 264, 265, 266, 267, 278, 279, 287, 298, 310, 318, 320, 333, 335, 338, 340, 342, 343, 347, 408, 412, 413, 414, 417, 418, 420, 424, 425, 426, 428, 429, 432], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 187, 191, 192, 193, 195, 197, 198, 202, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 281, 282, 283, 285, 286, 287, 288, 293, 294, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 403, 408, 409, 412, 413, 414, 415, 416, 418, 425, 428, 429, 431, 432], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 89, 123, 126, 130, 137, 149, 150, 156, 157, 175, 180, 183, 193, 198, 210, 216, 224, 231, 235, 256, 257, 260, 288, 325, 333, 342, 370, 384, 407, 413, 415, 425, 426, 427, 429], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 174, 180, 183, 193, 211, 212, 260, 277, 303, 307, 308, 309, 391, 401, 402, 407, 412, 413, 417, 418, 426, 427, 432], "choos": [1, 11, 140, 256, 260, 337, 405, 408, 412, 413, 414, 416, 425, 426, 429, 431], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 86, 87, 88, 89, 90, 91, 102, 121, 122, 123, 126, 129, 130, 131, 135, 136, 137, 143, 146, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 170, 191, 197, 218, 222, 224, 239, 240, 254, 256, 258, 260, 261, 300, 303, 304, 305, 316, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 372, 389, 407, 408, 409, 412, 413, 414, 415, 416, 419, 420, 424, 425, 426, 427, 429, 431, 432], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 392, 412, 414, 431], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 46, 83, 174, 188, 224, 233, 234, 252, 278, 279, 302, 371, 372, 374, 382, 384, 389, 392, 393, 412, 413, 414, 415, 418, 425, 426, 429, 431, 432], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 111, 113, 117, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 170, 171, 174, 177, 178, 182, 185, 187, 190, 191, 193, 195, 196, 197, 205, 207, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 267, 268, 269, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 306, 307, 309, 310, 313, 319, 320, 334, 335, 337, 340, 342, 351, 352, 353, 354, 355, 370, 371, 374, 384, 408, 409, 413, 414, 415, 416, 417, 418, 420, 421, 425, 426, 427, 429, 431, 432], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 171, 174, 202, 256, 260, 392, 412, 413, 414, 415, 416, 420, 422, 425, 426, 429, 431], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 39, 42, 44, 46, 47, 56, 57, 58, 60, 61, 63, 65, 66, 67, 73, 83, 85, 86, 89, 102, 104, 107, 109, 110, 112, 115, 123, 126, 127, 130, 137, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 167, 190, 197, 202, 205, 209, 210, 211, 212, 214, 220, 222, 224, 233, 234, 249, 252, 254, 255, 256, 258, 260, 266, 267, 272, 280, 281, 289, 293, 299, 300, 305, 309, 358, 361, 362, 363, 364, 366, 367, 368, 369, 372, 384, 386, 401, 402, 408, 412, 413, 414, 415, 418, 419, 420, 422, 425, 426, 427, 428, 429, 431, 432], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 392, 412, 413, 416, 422], "rand_step": [1, 2, 3, 35, 64, 123, 124, 125, 126, 127, 129, 130, 131, 137, 138, 139, 143, 144, 145, 149, 150, 156, 157, 190, 211, 222, 427, 431, 432], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 412], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 85, 87, 89, 90, 91, 412, 413, 414], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 46, 47, 65, 67, 73, 83, 85, 86, 87, 89, 90, 91, 101, 102, 109, 110, 115, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 174, 198, 209, 214, 215, 224, 236, 260, 263, 278, 279, 337, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 380, 405, 408, 412, 413, 414, 415, 417, 420, 422, 427, 431, 432], "pad": [1, 2, 3, 23, 55, 69, 85, 87, 89, 90, 91, 174, 239, 240, 242, 243, 260, 264, 265, 266, 386], "along": [1, 2, 3, 14, 15, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 97, 102, 104, 109, 110, 115, 117, 129, 131, 173, 174, 175, 193, 195, 198, 205, 213, 260, 261, 264, 265, 270, 299, 303, 306, 307, 320, 335, 342, 412, 413, 415, 417, 419, 425, 426, 427, 429, 431], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 88, 95, 101, 102, 105, 115, 116, 119, 120, 123, 126, 127, 130, 137, 149, 150, 156, 157, 167, 170, 173, 174, 178, 197, 210, 211, 213, 214, 215, 216, 218, 220, 224, 262, 306, 316, 327, 389, 406, 413, 414, 424, 425, 426, 427, 429, 431, 432], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 110, 130, 170, 198, 209, 232, 234, 264, 265, 278, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 409, 415], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 41, 63, 64, 66, 67, 73, 87, 123, 124, 125, 126, 129, 130, 131, 137, 149, 150, 156, 157, 160, 161, 188, 198, 222, 224, 249, 264, 265, 281, 287, 299, 300, 304, 305, 307, 346, 352, 386, 407, 412, 414, 415, 416, 417, 418, 419, 425, 426], "valid": [1, 2, 3, 23, 52, 54, 55, 72, 73, 92, 115, 123, 126, 130, 137, 149, 150, 156, 157, 162, 170, 198, 214, 216, 224, 233, 234, 239, 240, 261, 264, 265, 278, 279, 326, 334, 340, 352, 353, 354, 355, 386, 409, 416, 432], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 384, 405, 407, 412, 413], "strategi": [1, 2, 16, 89, 107, 140, 167, 252, 265, 274, 407, 409, 412, 413, 416, 418, 425, 426, 429, 431], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 80, 97, 104, 123, 126, 130, 136, 137, 143, 149, 150, 151, 152, 156, 157, 160, 162, 171, 173, 174, 184, 191, 209, 210, 211, 214, 215, 216, 221, 222, 224, 233, 234, 239, 240, 256, 260, 264, 265, 266, 267, 277, 299, 303, 304, 307, 310, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 343, 350, 372, 389, 399, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "organ": [1, 2, 427, 429], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 110, 123, 126, 129, 130, 131, 137, 149, 150, 153, 156, 157, 171, 174, 180, 183, 184, 202, 209, 214, 221, 222, 224, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 293, 298, 300, 302, 305, 310, 313, 314, 322, 327, 342, 350, 370, 372, 407, 408, 413, 416, 417, 418, 419, 420, 421, 422, 425, 427, 431], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 89, 104, 107, 121, 122, 123, 126, 127, 130, 135, 136, 137, 140, 149, 150, 151, 152, 156, 157, 170, 174, 181, 182, 193, 200, 214, 216, 217, 224, 249, 254, 255, 256, 258, 259, 260, 261, 263, 266, 267, 268, 281, 333, 335, 337, 346, 352, 353, 354, 358, 359, 360, 384, 389, 391, 401, 402, 407, 408, 409, 412, 413, 414, 416, 417, 419, 421, 424, 425, 426, 427, 428, 429, 431, 432], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 46, 53, 56, 57, 61, 66, 67, 89, 101, 102, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 224, 268, 303, 317, 319, 332, 334, 335, 337, 372, 374, 389, 406, 407, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "tabl": [1, 27, 407, 413, 418], "summar": [1, 3, 427], "what": [1, 3, 8, 11, 33, 53, 71, 83, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 184, 211, 214, 226, 231, 304, 320, 331, 335, 342, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 431, 432], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 41, 46, 56, 57, 58, 61, 66, 71, 72, 102, 108, 109, 123, 126, 130, 137, 143, 146, 149, 150, 156, 157, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 254, 255, 256, 258, 259, 260, 266, 267, 278, 279, 300, 306, 309, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 347, 350, 393, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 425, 426, 427, 429, 432], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 60, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 174, 182, 187, 217, 224, 254, 255, 258, 263, 275, 277, 278, 279, 302, 307, 317, 318, 326, 335, 351, 386, 409, 413, 415, 416, 418, 425, 426, 429, 431, 432], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 52, 54, 56, 58, 59, 60, 61, 63, 66, 67, 68, 73, 96, 115, 123, 254, 255, 258, 259, 266, 267, 269, 270, 280, 289, 310, 352, 353, 354, 355, 356, 358, 372, 413, 428, 429], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 108, 109, 110, 115, 123, 126, 127, 129, 130, 137, 144, 145, 149, 150, 156, 157, 167, 170, 174, 180, 183, 184, 197, 201, 202, 210, 212, 214, 220, 222, 224, 226, 231, 254, 256, 258, 260, 278, 279, 299, 306, 317, 341, 352, 353, 354, 355, 356, 358, 372, 379, 389, 391, 403, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "p": [1, 2, 4, 104, 107, 127, 154, 155, 237, 238], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 46, 56, 57, 61, 66, 83, 85, 87, 89, 90, 91, 110, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 151, 152, 156, 157, 178, 180, 181, 183, 190, 197, 202, 206, 210, 211, 213, 214, 215, 216, 218, 220, 221, 224, 254, 257, 258, 261, 266, 283, 287, 288, 306, 309, 316, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 391, 401, 402, 403, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 432], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 101, 102, 104, 115, 123, 126, 129, 130, 137, 149, 150, 156, 157, 180, 181, 183, 190, 193, 211, 213, 216, 226, 260, 261, 267, 268, 303, 306, 307, 309, 310, 316, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 372, 380, 391, 401, 402, 403, 405, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 421, 425, 426, 427, 429, 431, 432], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 123, 124, 125, 126, 129, 130, 131, 132, 137, 149, 150, 156, 157, 160, 161, 167, 173, 174, 175, 187, 193, 195, 198, 205, 208, 211, 213, 217, 222, 239, 240, 241, 246, 247, 256, 258, 260, 261, 264, 265, 266, 269, 270, 276, 280, 284, 285, 286, 287, 290, 299, 302, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 403, 412, 413, 414, 415, 417, 425, 426, 427, 429], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 104, 115, 121, 122, 123, 126, 127, 130, 135, 136, 137, 140, 146, 149, 150, 151, 152, 153, 156, 157, 166, 173, 174, 175, 198, 205, 211, 212, 214, 216, 222, 224, 231, 238, 250, 254, 258, 260, 278, 279, 293, 302, 318, 319, 320, 326, 329, 333, 334, 335, 337, 338, 340, 342, 343, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "adapt": [1, 24, 123, 168, 209, 235, 334, 412, 416, 427], "equal": [1, 14, 15, 17, 27, 73, 83, 102, 109, 110, 144, 147, 148, 149, 156, 192, 193, 239, 240, 254, 256, 258, 260, 261, 265, 267, 341, 346, 380, 401, 402, 412, 414, 428], "introduc": [1, 2, 149, 156, 254, 256, 258, 260, 278, 279, 412, 425], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 85, 91, 96, 97, 104, 115, 117, 121, 122, 123, 126, 129, 130, 131, 135, 136, 137, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 170, 197, 211, 216, 218, 224, 226, 242, 256, 260, 285, 307, 308, 309, 372, 380, 392, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 431, 432], "confus": [1, 25, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 89, 90, 91, 96, 97, 98, 104, 107, 108, 109, 110, 111, 113, 117, 123, 126, 129, 130, 131, 137, 143, 149, 150, 156, 157, 177, 181, 182, 199, 206, 213, 218, 222, 224, 237, 252, 254, 256, 260, 270, 271, 293, 298, 300, 305, 307, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 370, 386, 401, 402, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 431, 432], "better": [1, 3, 8, 9, 14, 15, 23, 136, 256, 260, 408, 414, 417, 427, 431], "consist": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 86, 89, 123, 126, 130, 137, 149, 150, 156, 157, 191, 221, 224, 237, 240, 261, 412, 413, 414, 427, 428, 432], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 89, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 216, 303, 307, 412, 414, 416, 417, 418, 420, 425, 426, 427, 432], "keep": [1, 2, 3, 4, 7, 8, 15, 53, 58, 67, 68, 104, 108, 115, 123, 149, 156, 193, 197, 220, 222, 224, 231, 278, 279, 382, 389, 412, 413, 414, 415, 420, 421, 422, 426, 427, 429, 432], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 39, 63, 83, 86, 174, 197, 220, 318, 321, 324, 326, 338, 340, 342, 343, 408, 412, 413, 418, 419, 425, 426, 429, 432], "interchang": [1, 266, 267, 414, 417, 421, 428, 429], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 104, 105, 108, 109, 110, 117, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 182, 192, 203, 214, 216, 222, 224, 226, 239, 240, 248, 254, 256, 260, 261, 266, 267, 300, 303, 307, 317, 319, 320, 321, 324, 325, 326, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 346, 352, 384, 389, 408, 412, 413, 415, 416, 420, 425, 426, 427, 429, 432], "wherea": [1, 2, 22, 27, 38, 46, 56, 57, 61, 66, 89, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 182, 214, 216, 224, 320, 335, 340, 409, 421], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 86, 89, 91, 101, 102, 123, 126, 130, 137, 143, 149, 150, 156, 157, 174, 197, 211, 214, 216, 220, 222, 224, 237, 252, 256, 258, 260, 264, 265, 278, 279, 303, 307, 320, 322, 325, 326, 340, 350, 352, 353, 354, 355, 356, 407, 412, 413, 414, 416, 417, 419, 420, 421, 425, 426, 427, 428], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 83, 89, 102, 109, 115, 149, 156, 198, 214, 308, 309, 380, 389, 407, 412, 413, 414, 420, 424, 431, 432], "doesn": [1, 4, 12, 115, 144, 180, 183, 416, 417], "understood": [1, 3, 412], "serv": [1, 18, 20, 21, 132, 429, 431, 432], "basi": [1, 115, 266, 429, 431], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 41, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 85, 89, 91, 96, 108, 110, 115, 121, 122, 123, 126, 127, 130, 134, 135, 136, 137, 149, 150, 156, 157, 174, 191, 197, 200, 206, 214, 218, 221, 222, 224, 226, 236, 260, 266, 267, 268, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 372, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "anoth": [1, 2, 3, 8, 41, 66, 71, 89, 102, 109, 123, 126, 129, 130, 131, 134, 137, 149, 150, 156, 157, 171, 180, 181, 183, 211, 215, 261, 303, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 408, 412, 414, 415, 416, 418, 419, 424, 425, 426, 427, 432], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 85, 87, 89, 101, 102, 109, 110, 123, 126, 130, 134, 137, 144, 149, 150, 153, 156, 157, 171, 174, 178, 197, 211, 214, 215, 216, 218, 220, 224, 237, 256, 260, 261, 268, 290, 306, 308, 309, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 370, 372, 374, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 421, 425, 426, 427, 429, 431, 432], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 109, 110, 111, 112, 113, 115, 117, 123, 126, 129, 130, 131, 132, 136, 137, 149, 150, 153, 156, 157, 170, 171, 174, 178, 180, 181, 184, 185, 187, 191, 193, 197, 199, 200, 201, 202, 206, 209, 211, 215, 216, 218, 220, 224, 225, 233, 236, 237, 238, 247, 252, 256, 260, 266, 267, 268, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 331, 333, 335, 337, 338, 339, 340, 342, 343, 350, 356, 370, 371, 400, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 427, 429, 432], "op": [1, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 192, 221, 233, 234, 237, 252, 372, 391, 416], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 91, 101, 102, 110, 115, 123, 126, 130, 137, 149, 150, 151, 152, 153, 156, 157, 224, 226, 231, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 299, 300, 302, 304, 305, 310, 313, 370, 372, 408, 412, 413, 414, 415, 417, 418, 419, 425, 427, 428, 429, 431, 432], "goal": [1, 3, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 137, 210, 412, 413, 414, 415, 426, 427], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 413], "explicitli": [1, 2, 3, 4, 30, 93, 94, 100, 170, 277, 303, 408, 413, 415, 420, 425, 426, 429], "do": [1, 2, 3, 4, 7, 91, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 167, 198, 211, 214, 221, 222, 231, 256, 260, 267, 269, 296, 335, 352, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432], "deepcopi": [1, 268, 335, 425], "structur": [1, 3, 7, 41, 52, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 115, 123, 126, 130, 137, 149, 150, 156, 157, 180, 183, 232, 266, 278, 279, 317, 326, 337, 340, 352, 353, 354, 355, 356, 405, 408, 412, 414, 415, 417, 420, 425, 426, 427, 428], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 104, 107, 109, 117, 123, 126, 127, 130, 137, 149, 150, 156, 157, 160, 161, 170, 178, 184, 197, 211, 215, 216, 218, 220, 221, 222, 224, 232, 268, 298, 302, 306, 386, 391, 392, 408, 413, 414, 418, 421, 425, 426, 427, 429], "instanti": [1, 2, 3, 14, 15, 21, 52, 53, 54, 58, 59, 67, 68, 71, 73, 101, 102, 134, 136, 170, 211, 215, 267, 352, 353, 354, 355, 356, 370, 412, 413, 418, 419, 421, 425, 426, 427, 429, 432], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 126, 127, 129, 130, 131, 132, 136, 137, 141, 142, 143, 147, 148, 149, 150, 151, 152, 156, 157, 160, 161, 162, 167, 173, 174, 177, 178, 180, 181, 183, 186, 191, 192, 193, 197, 205, 207, 211, 212, 215, 216, 218, 220, 222, 224, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 267, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 293, 298, 300, 302, 305, 306, 307, 309, 310, 313, 314, 317, 318, 320, 329, 333, 335, 337, 338, 339, 340, 342, 343, 347, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 385, 389, 392, 401, 402, 403, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 431, 432], "graph": [1, 3, 4, 8, 56, 66, 121, 122, 135, 136, 348, 349, 412, 416, 427], "reli": [1, 2, 3, 11, 23, 57, 61, 211, 254, 255, 256, 258, 259, 260, 317, 337, 408, 412, 414, 416, 418, 420, 427, 432], "third": [1, 193, 300, 425, 426], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 52, 54, 59, 63, 73, 413, 414, 415, 416, 419, 420, 425, 426, 427, 431, 432], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 143, 149, 150, 156, 157, 174, 191, 317, 319, 334, 335, 337, 339, 408, 412, 413, 415, 425, 426, 427], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 267, 372, 412, 414, 415, 416, 425, 426, 427, 429, 431], "decis": [1, 2, 3, 241, 276, 298, 323, 336, 407, 415, 417, 418, 425, 426, 429, 432], "simplest": [1, 56, 66, 115, 310, 412, 414, 415, 418, 425, 426, 429, 432], "scenario": [1, 2, 141, 142, 149, 160, 161, 214, 370, 412, 418, 425, 426, 427], "transit": [1, 27, 38, 46, 56, 57, 61, 66, 85, 89, 102, 110, 115, 123, 126, 130, 137, 149, 150, 156, 157, 224, 235, 237, 312, 412, 415, 417, 418, 420, 425, 427, 429], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 113, 115, 117, 123, 126, 130, 137, 143, 146, 149, 150, 156, 157, 167, 173, 174, 198, 202, 227, 230, 233, 234, 236, 247, 252, 257, 263, 264, 265, 274, 276, 277, 278, 279, 282, 287, 288, 291, 294, 299, 300, 301, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 324, 334, 336, 337, 342, 343, 380, 386, 389, 392, 405, 407, 412, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 428, 431, 432], "attent": [1, 2, 8, 174, 412, 415, 432], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 123, 126, 130, 137, 143, 147, 148, 149, 150, 156, 157, 158, 159, 178, 182, 193, 197, 211, 215, 216, 218, 220, 222, 224, 231, 233, 236, 238, 249, 250, 252, 254, 256, 258, 260, 263, 268, 279, 281, 285, 294, 299, 300, 302, 305, 306, 307, 308, 309, 311, 316, 321, 322, 324, 335, 351, 352, 353, 354, 355, 356, 358, 381, 384, 399, 407, 409, 412, 413, 414, 417, 418, 419, 420, 421, 426, 427, 432], "built": [1, 2, 3, 5, 7, 104, 121, 122, 129, 135, 136, 146, 147, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 397, 399, 400, 403, 412, 413, 414, 415, 416, 419, 421, 427, 429, 432], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 171, 187, 386, 405, 415, 416, 426], "suffici": [1, 3, 4, 412], "preprocess": [1, 2, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 413, 416], "popul": [1, 2, 3, 14, 15, 16, 53, 58, 65, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 190, 211, 247, 268, 335, 412, 414, 415, 418, 420, 427, 429], "replaybuff": [1, 2, 14, 15, 16, 35, 53, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 109, 110, 119, 174, 198, 202, 224, 322, 327, 350, 397, 399, 405, 414, 416, 420, 422, 425, 426, 428, 429, 431], "lazytensorstorag": [1, 2, 53, 58, 66, 67, 68, 101, 109, 110, 115, 202, 224, 414, 416, 422, 425, 426, 429], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 56, 58, 66, 115, 123, 126, 127, 130, 137, 149, 150, 156, 157, 166, 171, 191, 211, 224, 238, 290, 299, 302, 303, 304, 328, 330, 331, 342, 352, 355, 363, 364, 368, 369, 370, 399, 408, 412, 416, 425, 426, 429, 431, 432], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 89, 109, 115, 171, 256, 260, 261, 277, 370, 414, 416, 425, 426], "extend": [1, 2, 8, 35, 41, 53, 56, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 101, 102, 104, 105, 109, 110, 113, 115, 116, 119, 120, 173, 202, 224, 235, 335, 386, 408, 409, 412, 413, 414, 415, 416, 420, 422, 425, 426, 428, 429, 431], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 167, 173, 174, 416, 429], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 53, 54, 58, 59, 67, 68, 73, 109, 115, 134, 174, 268, 420, 425, 426], "achiev": [1, 2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 134, 137, 149, 150, 156, 157, 210, 224, 232, 238, 303, 386, 409, 412, 413, 414, 415, 416, 425, 426, 427, 429, 431, 432], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 115, 123, 126, 127, 130, 134, 137, 149, 150, 151, 156, 157, 160, 161, 171, 174, 197, 214, 215, 216, 218, 221, 222, 224, 229, 231, 239, 240, 242, 243, 244, 245, 246, 247, 251, 256, 260, 261, 262, 266, 267, 298, 307, 314, 320, 322, 327, 338, 340, 350, 372, 386, 393, 394, 395, 399, 401, 402, 407, 412, 413, 414, 415, 416, 418, 421, 425, 426, 427, 428, 429, 431, 432], "multidimension": [1, 2, 67, 101, 102, 429], "slicesampl": [1, 2, 83, 102, 110, 174, 429], "sampler": [1, 2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 174, 198, 277, 322, 327, 350, 412, 414, 425, 426, 429], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 39, 44, 45, 50, 51, 63, 72, 115, 121, 122, 149, 156, 174, 202, 218, 233, 234, 274, 306, 310, 341, 346, 376, 412, 413, 429, 432], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 109, 110, 111, 112, 113, 115, 117, 121, 123, 126, 127, 130, 135, 137, 147, 149, 150, 151, 152, 153, 156, 157, 158, 160, 167, 170, 171, 174, 177, 184, 188, 191, 193, 195, 206, 210, 211, 212, 214, 216, 217, 222, 224, 239, 240, 249, 256, 260, 261, 264, 265, 266, 267, 281, 294, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 408, 412, 413, 414, 415, 418, 424, 427, 429], "ensur": [1, 2, 3, 27, 38, 46, 53, 56, 57, 61, 66, 67, 73, 101, 102, 108, 123, 126, 130, 137, 149, 150, 156, 157, 167, 174, 197, 209, 216, 218, 222, 224, 256, 260, 299, 407, 413, 414, 427, 429], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 104, 109, 115, 117, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 171, 173, 175, 180, 183, 184, 185, 191, 193, 195, 199, 200, 202, 206, 209, 211, 213, 222, 223, 224, 226, 229, 231, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 271, 274, 275, 276, 277, 278, 280, 281, 286, 287, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 386, 389, 399, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 431, 432], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 83, 137, 257, 287, 288, 316, 406, 412, 413, 414, 415, 416, 419, 425, 426, 428, 432], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 61, 66, 71, 111, 115, 123, 126, 130, 134, 137, 140, 149, 150, 151, 152, 156, 157, 174, 177, 187, 197, 200, 212, 214, 216, 220, 222, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 269, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 303, 304, 305, 306, 310, 313, 316, 326, 339, 340, 351, 356, 372, 389, 403, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432], "dimension": [1, 53, 57, 58, 66, 67, 68, 182, 256, 260, 352, 357, 365, 426], "num_slic": [1, 2, 83, 89, 102, 109, 110, 429], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 44, 45, 46, 50, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 117, 121, 122, 123, 124, 125, 126, 130, 135, 136, 137, 138, 139, 140, 143, 145, 149, 150, 154, 155, 156, 157, 167, 168, 170, 171, 174, 184, 202, 209, 210, 214, 222, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 254, 255, 258, 259, 261, 263, 265, 266, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 370, 371, 407, 411, 412, 413, 414, 415, 416, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432], "trajectory_kei": [1, 23, 109, 110], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 64, 171, 202, 415, 420, 429, 431], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 171, 174, 202, 389, 392, 399, 409, 412, 413, 414, 415, 416, 420, 422, 425, 426, 429, 431], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 174, 175, 195, 208, 211, 217, 222, 259, 285, 290, 302, 403, 413, 414, 416, 425, 427, 429], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 96, 97, 101, 102, 115, 117, 123, 126, 130, 137, 149, 150, 156, 157, 224, 302], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 115, 123, 126, 130, 137, 144, 150, 151, 152, 153, 156, 157, 214, 370, 400, 405, 412, 413, 414, 417, 424, 431, 432], "make_env": [1, 3, 149, 156, 161, 214, 222, 370, 394, 395, 412, 413, 431, 432], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 101, 107, 123, 126, 130, 137, 149, 150, 156, 157, 216, 235, 237, 248, 281, 300, 304, 305, 306, 307, 327, 337, 391, 405, 409, 412, 413, 416, 417, 418, 422, 429, 432], "behav": [1, 3, 132, 143, 254, 258, 274, 325, 333, 335, 416, 428], "iif": 1, "accordingli": [1, 2, 102, 209, 210, 258, 304, 415], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 115, 117, 123, 124, 125, 126, 129, 130, 131, 132, 133, 137, 140, 141, 142, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 170, 171, 174, 178, 182, 184, 185, 191, 193, 195, 197, 199, 200, 202, 205, 206, 209, 210, 211, 213, 214, 215, 216, 218, 220, 224, 225, 229, 235, 236, 238, 239, 240, 242, 243, 244, 246, 249, 251, 254, 255, 256, 258, 259, 260, 261, 263, 266, 267, 268, 271, 274, 277, 280, 290, 294, 295, 296, 297, 299, 300, 303, 305, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 388, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 432], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 89, 101, 115, 123, 126, 130, 137, 149, 150, 156, 157, 170, 184, 226, 299, 306, 418, 419, 421, 425, 426], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 102, 104, 110, 123, 126, 130, 132, 137, 144, 147, 148, 149, 150, 156, 157, 170, 171, 174, 198, 210, 211, 212, 214, 215, 216, 224, 227, 231, 250, 278, 279, 283, 287, 291, 302, 317, 319, 320, 327, 334, 337, 339, 340, 375, 409, 412, 413, 414, 415, 419, 425, 426, 427, 429, 432], "fulli": [1, 8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 255, 259, 413, 416, 419, 427, 429], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 104, 105, 108, 110, 111, 113, 115, 116, 117, 119, 120, 123, 126, 127, 130, 137, 144, 149, 150, 151, 152, 156, 157, 158, 160, 161, 168, 170, 187, 197, 198, 202, 214, 216, 218, 222, 224, 226, 232, 238, 239, 240, 246, 247, 261, 270, 277, 298, 302, 306, 307, 308, 309, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 354, 355, 370, 377, 389, 406, 408, 412, 413, 414, 415, 416, 418, 419, 425, 426, 427, 429, 431, 432], "consecut": [1, 3, 83, 108, 134, 260, 278, 279, 372, 415, 417, 420, 426, 429, 432], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 123, 126, 127, 129, 130, 137, 144, 145, 149, 150, 156, 157, 197, 220, 224, 317, 389, 403, 413, 414, 417, 418], "therebi": [1, 24, 370, 408, 412, 413], "interrupt": [1, 2, 130, 302, 358], "These": [1, 2, 7, 41, 60, 86, 91, 118, 160, 197, 220, 407, 408, 412, 414, 425, 426, 427, 429, 432], "tool": [1, 2, 3, 5, 407, 415, 417, 425, 427, 429, 432], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 73, 123, 126, 129, 130, 137, 149, 150, 156, 157, 163, 166, 409, 412, 414, 415, 416, 417, 420, 421, 427], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 405], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 405], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 58, 67, 68, 83, 91, 104, 127, 128, 149, 156, 222, 412, 413, 414, 415, 420, 425, 426, 427, 428, 432], "synchron": [1, 14, 19, 21, 52, 54, 59, 73, 144, 401, 402, 413, 414, 425], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 144, 149, 150, 156, 157, 180, 183, 210, 216, 222, 224, 237, 247, 256, 257, 260, 265, 274, 286, 287, 288, 293, 303, 307, 335, 370, 384, 407, 408, 412, 413, 425, 426, 431, 432], "find": [1, 4, 6, 7, 18, 19, 20, 53, 55, 69, 109, 110, 233, 234, 258, 278, 279, 383, 387, 412, 413, 416, 418, 419, 425, 426], "folder": [1, 2, 52, 54, 59, 73, 160, 174, 413], "variou": [1, 2, 3, 256, 260, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 344, 350, 372, 401, 402, 412, 413, 414, 416, 417, 418, 419, 421, 425, 426, 429, 432], "machin": [1, 2, 7, 18, 19, 20, 46, 88, 134, 425, 426, 431], "wonder": 1, "why": [1, 2, 3, 231, 425, 427, 432], "instead": [1, 2, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 46, 56, 57, 61, 66, 70, 73, 89, 123, 126, 130, 136, 137, 149, 150, 156, 157, 174, 187, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 317, 319, 320, 322, 325, 326, 327, 333, 334, 337, 338, 339, 340, 350, 352, 356, 360, 403, 408, 416, 417, 418, 422, 427, 429, 432], "lower": [1, 2, 3, 21, 27, 28, 177, 222, 282, 283, 310, 414, 425, 427], "io": [1, 11, 83, 89, 135, 136, 144, 147, 148, 158, 159, 258, 259, 416], "footprint": [1, 2, 429], "commun": [1, 2, 3, 137, 149, 156, 406, 414, 432], "yet": [1, 121, 122, 135, 428], "plai": [1, 3, 151, 152, 157, 174, 413, 414, 419, 429, 432], "role": [1, 3, 142, 413, 419, 432], "opposit": [1, 425], "direct": [1, 2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 254, 258, 335, 413, 419], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 90, 91, 144, 352, 353, 354, 355, 415, 416, 425, 426], "share": [1, 3, 6, 8, 23, 52, 54, 58, 59, 67, 68, 71, 73, 94, 96, 97, 98, 102, 104, 105, 109, 111, 113, 117, 127, 149, 156, 214, 222, 256, 260, 266, 267, 295, 296, 297, 317, 318, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 403, 405, 407, 414, 416, 422, 424, 425, 426, 431, 432], "among": [1, 3, 151, 152, 214, 326, 340, 425, 426], "prohibit": [1, 3, 115], "slow": [1, 3, 4, 11, 52, 54, 59, 73], "compar": [1, 3, 89, 115, 318, 320, 333, 338, 340, 342, 343, 384, 408, 412, 414, 416, 418, 419, 425, 426, 429, 432], "gpu": [1, 7, 8, 27, 38, 46, 56, 57, 61, 66, 96, 97, 117, 123, 126, 130, 131, 134, 137, 149, 150, 156, 157, 224, 412, 414, 415, 425, 426, 432], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 67, 71, 73, 83, 101, 102, 109, 110, 115, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 170, 193, 214, 222, 233, 234, 235, 236, 247, 250, 254, 256, 258, 260, 263, 276, 277, 286, 287, 303, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 407, 408, 412, 413, 414, 416, 418, 425, 426, 427, 429, 432], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 170, 171, 174, 175, 177, 178, 181, 197, 205, 206, 211, 213, 214, 215, 216, 217, 218, 220, 224, 233, 234, 235, 238, 252, 256, 260, 264, 265, 266, 267, 278, 279, 294, 298, 299, 302, 303, 304, 306, 307, 310, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 350, 352, 353, 354, 355, 356, 360, 370, 379, 389, 400, 412, 413, 414, 416, 418, 421, 425, 426, 429, 431, 432], "build": [1, 2, 3, 7, 23, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 123, 126, 130, 131, 132, 135, 136, 137, 141, 142, 144, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 202, 222, 224, 236, 256, 260, 263, 301, 303, 307, 389, 396, 397, 398, 407, 409, 414, 415, 416, 418, 419, 420, 421, 425, 426, 427, 428, 431, 432], "mani": [1, 2, 3, 4, 58, 121, 122, 124, 125, 126, 129, 131, 132, 135, 136, 144, 145, 153, 317, 319, 326, 334, 337, 407, 412, 413, 414, 416, 417, 418, 420, 422, 425, 426, 427, 429, 431, 432], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 123, 124, 125, 126, 129, 130, 131, 132, 134, 137, 149, 150, 153, 156, 157, 182, 209, 216, 266, 298, 372], "gymnasium": [1, 2, 3, 5, 12, 66, 123, 126, 129, 130, 131, 137, 138, 139, 149, 150, 156, 157, 163, 166, 185, 206, 209, 221, 413, 414, 416, 427, 431], "warn": [1, 3, 57, 61, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 252, 278, 279, 413], "quickli": [1, 3, 413, 425, 426, 432], "becom": [1, 2, 3, 4, 21, 254, 258, 425, 426, 432], "quit": [1, 3, 11, 83, 123, 126, 130, 137, 149, 150, 156, 157, 412, 413, 414, 416, 418, 425, 426, 432], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 50, 63, 123, 124, 125, 126, 129, 130, 131, 132, 137, 141, 142, 149, 150, 151, 152, 153, 156, 157, 160, 161, 290, 307, 335, 384, 403, 408, 412, 415, 425, 428, 429, 432], "filter": [1, 2, 3, 4, 72, 102, 109, 110, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 417], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 89, 94, 102, 109, 110, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 211, 224, 226, 233, 254, 255, 258, 264, 265, 268, 269, 270, 279, 294, 298, 299, 300, 303, 304, 305, 306, 307, 335, 348, 349, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 425, 426, 427, 429, 431, 432], "still": [1, 2, 3, 9, 56, 66, 73, 74, 89, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 214, 234, 278, 334, 335, 412, 413, 415, 424, 427, 429, 432], "wish": [1, 3, 11, 14, 15, 17, 89, 166, 419, 429], "displai": [1, 3, 7, 123, 126, 130, 137, 149, 150, 156, 157, 389, 409, 412, 413, 426, 427], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 174, 175, 178, 180, 183, 184, 185, 187, 190, 191, 192, 193, 195, 197, 198, 199, 200, 202, 204, 205, 206, 209, 211, 213, 214, 215, 216, 217, 218, 220, 222, 224, 226, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 248, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 278, 279, 280, 281, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 379, 382, 383, 384, 386, 387, 389, 403, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "central": [2, 266, 267, 268, 412, 413, 417, 425, 426, 429], "part": [2, 3, 4, 8, 27, 38, 46, 56, 57, 60, 61, 66, 73, 83, 86, 87, 89, 90, 91, 121, 123, 126, 130, 135, 137, 147, 149, 150, 156, 157, 173, 193, 202, 205, 224, 231, 256, 260, 311, 380, 403, 412, 414, 415, 416, 422, 425, 427, 432], "algorithm": [2, 3, 8, 9, 143, 167, 317, 337, 338, 340, 405, 408, 409, 412, 413, 414, 415, 416, 418, 419, 420, 421, 425, 426, 428, 429, 431], "implement": [2, 3, 9, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 99, 111, 112, 123, 126, 130, 137, 143, 144, 149, 150, 156, 157, 171, 178, 180, 181, 185, 188, 191, 199, 200, 206, 209, 215, 216, 222, 224, 237, 239, 254, 255, 256, 257, 258, 259, 260, 286, 287, 288, 317, 318, 320, 323, 324, 325, 331, 333, 335, 336, 337, 339, 340, 342, 370, 380, 394, 407, 409, 412, 413, 414, 415, 416, 425, 426, 427, 431], "wide": [2, 3, 5, 431], "give": [2, 3, 7, 67, 86, 123, 126, 130, 137, 143, 149, 150, 156, 157, 174, 406, 408, 412, 413, 416, 425, 426, 427, 428, 431], "abil": [2, 335, 427, 429], "panel": [2, 414], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 85, 91, 94, 115, 171, 174, 184, 237, 256, 260, 320, 325, 333, 340, 344, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 111, 113, 117, 123, 126, 130, 137, 143, 147, 148, 149, 150, 156, 157, 210, 214, 216, 222, 224, 256, 260, 317, 320, 335, 340, 392, 407, 409, 412, 413, 414, 415, 416, 425, 426, 427, 429, 432], "almost": [2, 265, 415], "physic": [2, 6, 7, 94, 149, 150, 153, 409, 412, 425, 426, 427], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 111, 113, 117, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 211, 224, 268, 278, 279, 322, 335, 350, 412, 413, 415, 425, 426, 428, 429, 431], "liststorag": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 429], "veri": [2, 3, 135, 136, 413, 417, 420, 425, 427, 429, 431, 432], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 89, 102, 104, 107, 109, 110, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 170, 171, 200, 224, 231, 261, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 346, 350, 407, 409, 412, 414, 415, 416, 417, 418, 419, 425, 426, 427, 429, 431, 432], "complex": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 412, 413, 417, 418], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 109, 110, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 168, 170, 171, 173, 174, 175, 178, 180, 182, 183, 184, 185, 187, 190, 193, 195, 197, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 224, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 317, 318, 320, 321, 322, 324, 325, 326, 329, 330, 333, 335, 337, 338, 339, 340, 342, 343, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 431, 432], "contigu": [2, 3, 8, 28, 31, 38, 74, 86, 89, 90, 123, 126, 130, 137, 149, 150, 156, 157, 211, 229, 414, 415, 425, 426, 427, 429, 431, 432], "tensorstorag": [2, 58, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 115, 118, 420, 429], "lazymemmapstorag": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 173, 174, 412, 413, 415, 420, 425, 428, 429], "citizen": 2, "pytre": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 118], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 102, 104, 109, 113, 115, 123, 124, 125, 126, 129, 130, 131, 137, 149, 150, 156, 157, 174, 191, 193, 224, 238, 242, 248, 249, 256, 259, 260, 261, 268, 271, 276, 280, 281, 299, 300, 304, 305, 310, 317, 318, 320, 321, 325, 326, 328, 333, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 383, 384, 387, 396, 429, 431], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 102, 107, 109, 110, 123, 126, 129, 130, 131, 137, 141, 142, 149, 150, 156, 157, 160, 161, 211, 214, 216, 224, 303, 307, 320, 340, 342, 384, 401, 402, 403, 409, 413, 414, 417, 419, 425, 427, 432], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 46, 47, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 73, 79, 96, 97, 100, 104, 117, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 174, 209, 212, 214, 224, 232, 302, 352, 353, 354, 355, 356, 370, 409, 413, 414, 416, 426, 427, 429, 431], "construct": [2, 3, 5, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 104, 123, 126, 127, 129, 130, 137, 149, 150, 151, 156, 157, 180, 183, 224, 226, 256, 260, 283, 307, 389, 407, 413, 414, 415, 418, 425, 427, 429, 432], "ram": [2, 129, 131, 421, 429, 432], "prealloc": [2, 3, 149, 156, 427], "ve": [2, 60, 412, 415, 422], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 104, 108, 123, 126, 130, 134, 137, 141, 142, 149, 150, 156, 157, 191, 209, 210, 215, 234, 254, 256, 258, 260, 268, 279, 302, 317, 335, 337, 339, 412, 413, 414, 415, 424, 425, 426, 427, 429, 431, 432], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 90, 91, 115, 123, 124, 125, 126, 130, 134, 137, 149, 150, 151, 152, 156, 157, 174, 214, 268, 379, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 429, 431, 432], "start": [2, 3, 4, 5, 14, 21, 24, 41, 71, 72, 73, 83, 91, 102, 109, 110, 123, 126, 127, 130, 137, 140, 149, 150, 156, 157, 179, 231, 385, 411, 412, 413, 416, 423, 426, 427, 429, 430, 432], "replay_buff": [2, 8, 14, 15, 16, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 174, 386, 399, 412, 413, 414, 420, 425, 426, 429], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 41, 46, 50, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 167, 168, 170, 171, 173, 174, 177, 184, 185, 190, 191, 193, 195, 197, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 220, 222, 224, 225, 229, 231, 232, 236, 238, 242, 243, 244, 245, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 267, 268, 271, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 370, 372, 382, 384, 399, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "rb": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 174, 202, 224, 413, 415, 416, 420, 422, 426, 428, 429, 431], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 42, 46, 53, 58, 60, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 104, 109, 110, 115, 117, 121, 122, 123, 126, 127, 130, 135, 136, 137, 143, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 167, 168, 171, 173, 174, 210, 212, 213, 224, 236, 238, 241, 242, 244, 246, 248, 252, 254, 255, 256, 258, 259, 260, 263, 265, 276, 278, 279, 290, 303, 310, 314, 318, 322, 324, 331, 337, 338, 339, 343, 350, 352, 353, 354, 355, 358, 372, 380, 409, 412, 413, 414, 415, 416, 417, 418, 422, 425, 426, 427, 429, 431, 432], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 104, 105, 115, 116, 119, 120, 123, 126, 130, 137, 149, 150, 156, 157, 174, 191, 216, 224, 256, 260, 269, 301, 317, 385, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431], "string": [2, 18, 19, 20, 27, 38, 41, 46, 55, 56, 57, 61, 66, 72, 73, 92, 123, 126, 130, 137, 141, 147, 149, 150, 156, 157, 166, 197, 209, 220, 224, 256, 260, 299, 302, 303, 304, 316, 371, 388, 408, 412, 414, 415, 429], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 42, 44, 50, 52, 53, 54, 58, 59, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 104, 109, 110, 115, 117, 146, 149, 156, 167, 174, 198, 207, 210, 211, 233, 234, 239, 240, 254, 255, 258, 293, 294, 299, 302, 306, 307, 311, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 380, 408, 412, 414, 418, 420, 429, 432], "30": [2, 3, 58, 66, 87, 109, 110, 170, 192, 282, 283, 370, 374, 412, 413, 414, 420, 425, 426, 427, 428, 429], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 111, 113, 115, 117, 123, 126, 127, 129, 130, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 187, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 399, 401, 402, 403, 407, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 427, 429, 431, 432], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 156, 157, 160, 161, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 182, 187, 188, 192, 193, 195, 197, 198, 201, 208, 209, 212, 216, 217, 218, 220, 224, 226, 229, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 298, 299, 300, 302, 303, 305, 306, 307, 317, 318, 319, 326, 328, 329, 334, 335, 336, 337, 338, 342, 343, 352, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 380, 381, 382, 384, 386, 389, 391, 397, 401, 402, 403, 416, 427, 429], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 41, 46, 52, 54, 55, 56, 57, 59, 61, 63, 64, 66, 72, 73, 80, 85, 86, 87, 88, 90, 91, 109, 110, 123, 124, 125, 126, 129, 130, 131, 132, 137, 141, 142, 149, 150, 153, 156, 157, 160, 161, 170, 174, 176, 177, 179, 180, 181, 183, 184, 187, 190, 193, 195, 197, 200, 202, 205, 207, 209, 210, 211, 214, 217, 220, 222, 224, 231, 232, 256, 264, 265, 298, 299, 302, 304, 305, 318, 320, 340, 352, 353, 354, 355, 407, 412, 414, 415, 417, 418, 419, 421, 425, 426, 427, 428, 429, 431, 432], "onto": [2, 8, 50, 52, 54, 59, 73, 181, 229, 233, 234, 278, 279, 294, 299, 300, 303, 304, 305, 306, 307, 415, 427], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 101, 102, 104, 105, 107, 108, 109, 110, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 160, 161, 167, 174, 175, 209, 210, 211, 212, 216, 224, 232, 239, 240, 261, 264, 265, 267, 278, 279, 302, 304, 305, 313, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 393, 403, 406, 409, 414, 415, 416, 420, 421, 422, 427, 429, 432], "without": [2, 3, 7, 9, 14, 15, 16, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 89, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 168, 170, 180, 183, 213, 224, 254, 255, 258, 259, 296, 297, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 356, 399, 406, 407, 412, 413, 414, 416, 417, 418, 419, 420, 425, 426, 427, 429, 432], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 53, 54, 56, 57, 59, 60, 61, 66, 67, 73, 101, 102, 123, 126, 130, 137, 143, 149, 150, 151, 152, 156, 157, 158, 159, 168, 170, 171, 180, 182, 183, 199, 209, 210, 214, 216, 219, 222, 224, 232, 233, 234, 236, 237, 252, 254, 256, 260, 263, 268, 278, 279, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 384, 389, 391, 394, 395, 398, 399, 409, 413, 414, 415, 416, 419, 422, 425, 426, 427, 429, 432], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 92, 102, 109, 110, 113, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 167, 174, 198, 222, 236, 239, 240, 242, 244, 246, 254, 258, 261, 263, 266, 267, 294, 306, 311, 380, 386, 412, 414, 415, 420, 422, 427, 429, 432], "cursor": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "afterward": [2, 27, 38, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 425, 432], "tell": [2, 3, 4, 7, 151, 152, 214, 412, 415, 420, 425, 426], "our": [2, 3, 7, 8, 11, 18, 41, 58, 174, 372, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 431], "far": [2, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 257, 287, 288, 422, 427, 432], "restrict": [2, 3, 413, 428, 429, 432], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 123, 126, 130, 136, 137, 146, 149, 150, 156, 157, 180, 183, 197, 199, 212, 216, 218, 220, 224, 229, 376, 412, 427], "64": [2, 3, 52, 54, 59, 73, 83, 89, 104, 174, 201, 242, 243, 251, 256, 260, 267, 268, 280, 350, 412, 413, 414, 415, 416, 418, 422, 424, 427, 428, 429, 431, 432], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 109, 110, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 168, 171, 172, 178, 180, 181, 182, 183, 184, 185, 191, 193, 195, 197, 199, 200, 202, 206, 209, 211, 213, 215, 216, 218, 220, 224, 226, 229, 231, 232, 236, 238, 248, 249, 254, 255, 256, 258, 259, 260, 263, 269, 270, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 407, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "unit8": 2, "img": 2, "randint": [2, 72, 104, 213, 416, 429], "255": [2, 104, 213, 416, 429], "uint8": [2, 3, 31, 52, 54, 59, 73, 83, 89, 124, 125, 141, 142, 184, 195, 213, 413, 421, 428, 429, 432], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 41, 46, 53, 58, 60, 63, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 141, 142, 143, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 161, 167, 170, 171, 173, 174, 180, 183, 184, 185, 190, 191, 195, 199, 200, 202, 205, 206, 209, 211, 214, 221, 222, 224, 229, 231, 236, 255, 256, 259, 260, 263, 283, 302, 312, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 333, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 372, 383, 384, 387, 413, 415, 416, 418, 421, 422, 424, 427, 428, 431, 432], "ask": [2, 8, 83, 89, 102, 109, 110, 372, 414, 415, 417, 418, 425, 426, 428, 432], "automat": [2, 3, 5, 28, 41, 71, 74, 91, 96, 97, 104, 110, 117, 123, 126, 129, 130, 131, 137, 149, 150, 151, 152, 156, 157, 170, 180, 183, 193, 211, 221, 239, 256, 260, 294, 302, 303, 370, 407, 412, 414, 417, 418, 425, 426, 427, 429, 431], "hand": [2, 3, 7, 21, 31, 425, 426, 427], "look": [2, 3, 5, 7, 8, 27, 38, 46, 56, 57, 61, 66, 102, 123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 197, 198, 218, 224, 237, 303, 307, 308, 309, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 432], "assum": [2, 3, 6, 14, 15, 16, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 61, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 93, 94, 100, 109, 123, 126, 130, 137, 149, 150, 156, 157, 173, 176, 179, 187, 197, 198, 205, 211, 216, 218, 220, 229, 238, 256, 260, 290, 293, 310, 322, 326, 327, 340, 350, 361, 362, 363, 364, 366, 367, 368, 369, 372, 412, 414, 424, 427], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 46, 53, 58, 63, 67, 68, 73, 85, 108, 124, 125, 126, 129, 131, 132, 211, 257, 280, 287, 288, 293, 412, 415, 416, 425, 426, 427, 429, 431], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 206, 226, 232, 412, 420, 429], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 104, 113, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 149, 150, 156, 157, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 239, 240, 247, 256, 260, 261, 266, 267, 286, 294, 298, 299, 303, 304, 306, 307, 310, 311, 318, 320, 326, 334, 336, 338, 340, 386, 391, 407, 412, 414, 416, 424, 426, 427, 429, 432], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 174, 413, 414, 416, 420, 429, 431, 432], "throw": [2, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 224, 432], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 171, 173, 174, 178, 180, 183, 184, 185, 195, 199, 200, 202, 206, 209, 211, 215, 216, 224, 231, 232, 236, 238, 246, 247, 248, 249, 252, 256, 260, 263, 278, 279, 280, 281, 289, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 372, 380, 386, 407, 412, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "max": [2, 23, 50, 54, 67, 72, 92, 101, 102, 115, 136, 182, 212, 278, 279, 318, 319, 320, 326, 336, 338, 340, 412, 414, 415, 416, 422], "label": [2, 54, 55, 60, 72, 73, 412, 425, 429], "100": [2, 14, 15, 16, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 177, 184, 193, 202, 207, 209, 224, 265, 266, 300, 302, 372, 381, 399, 413, 414, 415, 416, 417, 419, 422, 424, 425, 426, 427, 428, 429, 431, 432], "rb_pytre": 2, "randn": [2, 53, 56, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 117, 173, 193, 229, 238, 241, 242, 246, 248, 249, 254, 255, 258, 259, 264, 265, 266, 271, 274, 276, 281, 294, 295, 296, 297, 298, 299, 303, 304, 306, 309, 310, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 388, 407, 416, 429, 431, 432], "c": [2, 3, 6, 7, 31, 52, 54, 56, 58, 59, 66, 67, 68, 73, 88, 193, 213, 258, 259, 413, 429], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 117, 123, 126, 130, 137, 149, 150, 156, 157, 171, 173, 175, 180, 182, 183, 193, 199, 202, 224, 229, 231, 235, 236, 243, 244, 245, 251, 252, 254, 255, 256, 258, 259, 260, 264, 265, 267, 268, 278, 279, 280, 289, 305, 313, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 358, 415, 416, 429, 431, 432], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 123, 126, 130, 133, 137, 149, 150, 156, 157, 166, 167, 171, 174, 177, 180, 183, 191, 200, 207, 222, 226, 229, 238, 267, 271, 290, 352, 353, 354, 355, 380, 388, 420, 424, 429, 432], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 117, 195, 239, 240, 261, 267, 412, 416, 420, 422, 425, 427, 428, 429, 431], "ambigu": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 113, 123, 126, 130, 137, 149, 150, 156, 157, 171, 178, 197, 211, 215, 216, 218, 220, 224, 306, 408, 412, 416, 417, 427], "deal": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 335, 408, 412, 414, 426, 429], "interpret": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 413], "put": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 130, 141, 142, 157, 160, 161, 222, 379, 403, 407, 413, 414, 415, 417, 425, 427], "solv": [2, 4, 9, 10, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 406, 412, 413, 414, 420, 422, 425, 426, 427, 429], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 134, 137, 149, 150, 156, 157, 224, 381, 417, 420], "cut": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "distinct": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 171, 174, 419, 424], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 168, 224, 249, 254, 258, 261, 417, 427, 429, 431, 432], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 53, 57, 58, 61, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 123, 126, 129, 130, 131, 134, 135, 136, 137, 140, 149, 150, 151, 152, 156, 157, 170, 180, 183, 198, 238, 261, 280, 302, 303, 307, 308, 309, 313, 335, 352, 353, 354, 355, 407, 408, 412, 413, 414, 417, 419, 424, 425, 426, 427, 428, 429, 432], "collate_fn": [2, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 429, 431], "__init__": [2, 3, 7, 126, 143, 158, 166, 168, 171, 180, 183, 199, 236, 247, 249, 254, 258, 263, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 409, 416, 427, 432], "major": 2, "worri": [2, 69], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 97, 98, 102, 109, 111, 113, 117, 123, 126, 127, 130, 134, 137, 149, 150, 156, 157, 170, 232, 412, 414, 417, 425, 426, 427, 432], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 261, 414, 425, 426], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 60, 62, 63, 66, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 192, 211, 257, 287, 288, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 413, 418, 421, 427, 429, 432], "latter": [2, 18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 85, 123, 126, 130, 137, 149, 150, 156, 157, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 337, 401, 402], "inv": [2, 3, 177, 182, 185, 195, 202, 207, 217, 427], "obvious": [2, 416], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 78, 94, 123, 126, 130, 137, 149, 150, 156, 157, 182, 185, 206, 213, 224, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 264, 265, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 352, 416, 429], "multithread": [2, 3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 144, 145, 420, 429], "thread": [2, 14, 15, 17, 52, 54, 59, 73, 121, 122, 135, 136, 149, 156], "prefetch": [2, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 412, 413, 415, 429], "advis": [2, 11, 86, 421, 432], "benchmark": [2, 3, 9, 121, 122, 135, 136], "techniqu": [2, 8, 149, 156, 413, 416, 420, 429], "real": [2, 5, 89, 307, 408, 415, 416, 427], "life": [2, 184], "adopt": [2, 3, 5, 412, 432], "throughput": [2, 9, 136, 412], "constant": [2, 11, 33, 174, 193, 210, 409, 412, 414, 415, 432], "throughout": [2, 3, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 414, 425, 432], "further": [2, 3, 5, 24, 412, 414, 416, 417], "refin": [2, 89, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350], "coupl": [2, 415, 418, 419, 427, 429], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 41, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 73, 83, 85, 89, 96, 97, 102, 109, 110, 111, 113, 115, 117, 123, 126, 127, 130, 137, 149, 150, 156, 157, 168, 173, 175, 180, 182, 183, 191, 193, 198, 210, 211, 213, 216, 222, 252, 294, 303, 304, 307, 314, 352, 353, 354, 355, 356, 372, 376, 407, 411, 412, 413, 414, 415, 416, 423, 425, 426, 427, 429, 430, 431, 432], "first_elt": 2, "128": [2, 83, 85, 89, 110, 121, 122, 135, 136, 243, 246, 413, 415, 416, 422, 425, 428, 429], "wa": [2, 3, 5, 7, 31, 32, 39, 53, 56, 58, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 123, 126, 130, 137, 149, 150, 156, 157, 174, 216, 226, 232, 258, 317, 319, 332, 334, 337, 339, 341, 358, 408, 413, 414, 417, 418, 424, 425, 429, 431], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 41, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 163, 166, 167, 170, 171, 174, 175, 180, 181, 182, 183, 190, 193, 199, 200, 202, 205, 209, 211, 212, 213, 222, 224, 229, 231, 232, 239, 240, 242, 243, 244, 245, 246, 249, 251, 252, 256, 260, 261, 264, 265, 266, 267, 271, 274, 277, 278, 279, 281, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 309, 311, 314, 335, 370, 399, 407, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 175], "larger": [2, 4, 66, 256, 260, 325, 333, 431], "volum": 2, "due": [2, 3, 5, 23, 419, 428, 429, 432], "memorymappedtensor": [2, 35, 52, 54, 64, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 374, 420, 428], "well": [2, 3, 8, 12, 21, 23, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 102, 107, 111, 118, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 237, 242, 258, 282, 283, 335, 342, 356, 407, 412, 413, 415, 416, 417, 418, 419, 421, 428, 429, 431, 432], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 141, 142, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 179, 180, 181, 183, 205, 208, 210, 217, 224, 236, 258, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 379, 407, 412, 414, 415, 416, 420, 425], "file": [2, 6, 7, 8, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 94, 160, 371, 372, 374, 389, 409, 411, 413, 416, 425, 427, 429, 430], "locat": [2, 7, 52, 54, 59, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 179, 184, 193, 204, 257, 271, 287, 288, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 412, 413, 414, 421, 425, 426, 429], "improv": [2, 4, 11, 188, 317, 408, 416, 425, 426, 429], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 149, 156, 414, 425, 429], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 109, 110, 123, 124, 125, 126, 129, 130, 131, 134, 137, 149, 150, 156, 157, 168, 174, 202, 205, 212, 222, 224, 232, 252, 266, 267, 303, 307, 334, 335, 337, 412, 413, 415, 416, 417, 419, 421, 427, 429, 431], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 62, 63, 71, 74, 75, 76, 77, 78, 96, 102, 147, 148, 182, 214, 235, 258, 259, 325, 415, 416, 420, 429], "sharabl": [2, 149, 156], "collabor": [2, 89], "rather": [2, 4, 113, 147, 148, 200, 407, 412, 413, 414, 417, 419, 425, 426, 429], "incur": [2, 121, 122, 135, 136], "transmiss": 2, "overhead": [2, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 231], "content": [2, 8, 16, 31, 32, 39, 52, 53, 54, 58, 59, 63, 67, 68, 73, 108, 123, 126, 129, 130, 131, 137, 144, 149, 150, 156, 157, 199, 239, 240, 261, 266, 267, 303, 335, 414, 427, 431], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 123, 126, 130, 137, 140, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 229, 249, 271, 294, 295, 296, 297, 299, 303, 304, 306, 307, 309, 310, 311, 312, 320, 340, 350, 384, 405, 407, 408, 412, 413, 414, 415, 418, 419, 428], "writer": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 102, 104, 105, 109, 115, 116, 117, 120, 414, 429], "tensordictroundrobinwrit": [2, 104], "goe": [2, 4, 73, 151, 152, 412, 414, 425, 426, 432], "prioritizedsampl": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 322, 327, 350, 412, 429], "access": [2, 3, 7, 8, 11, 27, 38, 46, 53, 56, 57, 61, 66, 86, 88, 123, 126, 130, 137, 149, 150, 156, 157, 174, 197, 218, 224, 403, 406, 412, 417, 425, 426, 427, 429, 431], "tensordictreplaybuff": [2, 53, 58, 67, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 173, 174, 386, 399, 405, 412, 413, 415, 429], "mp": [2, 18, 19, 20, 83, 84, 85, 86, 87, 88, 89, 90, 91, 127, 222], "def": [2, 3, 12, 22, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 127, 130, 137, 143, 149, 150, 156, 157, 166, 168, 170, 171, 180, 183, 199, 214, 216, 224, 236, 249, 254, 255, 258, 259, 263, 268, 302, 303, 311, 318, 320, 321, 326, 333, 335, 338, 340, 342, 343, 370, 409, 412, 413, 416, 424, 425, 426, 427, 429, 431, 432], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 52, 53, 54, 56, 58, 59, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 115, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 138, 139, 147, 148, 149, 150, 156, 157, 158, 159, 168, 171, 173, 175, 180, 181, 182, 183, 190, 191, 193, 202, 205, 211, 213, 216, 222, 225, 231, 236, 238, 248, 249, 252, 256, 260, 262, 263, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 303, 304, 306, 309, 311, 350, 353, 354, 355, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 371, 380, 388, 407, 408, 412, 415, 426, 427, 431], "__name__": [2, 3, 14, 15, 22, 127, 370, 413, 431], "__main__": [2, 3, 14, 15, 22, 127, 370, 431], "21": [2, 89, 90, 109, 110, 149, 151, 152, 156, 412, 413, 424], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 46, 56, 57, 61, 66, 123, 126, 127, 130, 137, 149, 150, 156, 157, 210, 215, 224, 277, 306, 307, 317, 318, 319, 320, 321, 322, 324, 326, 327, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 351, 352, 353, 354, 355, 356, 392, 398, 399, 408, 409, 415, 416, 422, 425, 427], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 104, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 169, 178, 197, 199, 208, 211, 214, 215, 216, 217, 219, 220, 224, 233, 234, 236, 238, 239, 240, 247, 248, 252, 253, 256, 260, 261, 262, 263, 278, 279, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 379, 382, 386, 389, 403, 413, 416], "join": [2, 127, 405, 413, 414, 416, 425], "now": [2, 3, 7, 53, 58, 67, 68, 104, 147, 148, 149, 174, 206, 267, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 428, 429, 432], "20": [2, 66, 72, 90, 109, 110, 115, 123, 126, 130, 134, 137, 147, 148, 149, 150, 156, 157, 210, 224, 251, 254, 255, 258, 259, 277, 298, 380, 411, 412, 413, 414, 415, 416, 425, 426, 427, 428, 429, 430, 431, 432], "_data": [2, 427], "It": [2, 3, 4, 7, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 85, 91, 104, 107, 115, 120, 123, 126, 130, 132, 137, 143, 144, 149, 150, 151, 152, 156, 157, 160, 161, 171, 173, 174, 184, 191, 193, 198, 210, 214, 216, 221, 224, 226, 231, 233, 242, 244, 250, 252, 266, 267, 277, 278, 279, 280, 282, 283, 289, 290, 300, 302, 305, 307, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 341, 343, 350, 351, 352, 370, 379, 384, 406, 407, 408, 412, 413, 415, 416, 417, 425, 426, 427, 428, 429, 431, 432], "difficult": [2, 4, 149, 421], "pai": [2, 8, 174, 412, 415], "word": [2, 3, 11, 60, 83, 85, 87, 89, 90, 91, 335, 412, 420, 427, 432], "1m": [2, 83, 89, 392, 412, 414, 415, 428], "doe": [2, 3, 18, 52, 53, 54, 59, 67, 72, 73, 83, 85, 89, 93, 94, 100, 101, 102, 109, 111, 113, 120, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 222, 237, 246, 247, 254, 255, 256, 258, 259, 260, 269, 277, 290, 298, 308, 309, 317, 319, 327, 334, 335, 337, 351, 389, 409, 412, 413, 414, 415, 417, 420, 425, 427, 429, 432], "howev": [2, 3, 5, 7, 27, 38, 46, 56, 57, 61, 66, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 174, 205, 210, 214, 216, 224, 317, 319, 320, 334, 337, 339, 340, 407, 412, 413, 415, 416, 419, 427, 429, 432], "capac": [2, 53, 58, 67, 68, 96, 97, 101, 109, 117, 414, 420], "There": [2, 10, 104, 237, 256, 260, 317, 337, 407, 409, 414, 415, 416, 418, 420, 425, 426, 427, 429, 431, 432], "circumv": 2, "account": [2, 96, 97, 117, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 170, 264, 265, 407, 413, 415, 429, 432], "save": [2, 3, 8, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 104, 111, 112, 113, 117, 118, 123, 126, 130, 137, 149, 150, 156, 157, 221, 224, 371, 372, 374, 379, 389, 409, 416, 420, 421, 422, 425, 426], "convent": [2, 3, 83, 85, 86, 87, 88, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 408, 412, 415, 425, 426, 427], "overridden": [2, 3, 27, 38, 56, 57, 61, 66, 83, 86, 87, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 352, 354, 355, 415, 425], "dim_extend": [2, 53, 58, 67, 68], "obtain": [2, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 83, 123, 126, 130, 137, 149, 150, 156, 157, 173, 197, 210, 220, 236, 238, 277, 280, 386, 412, 414, 417, 418, 419, 425, 426], "counterpart": [2, 174], "desir": [2, 3, 11, 27, 30, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 169, 171, 178, 193, 195, 197, 198, 211, 215, 216, 218, 220, 224, 230, 239, 240, 247, 261, 267, 294, 299, 300, 303, 304, 305, 306, 307, 407, 412, 416, 425, 426, 427, 429], "diversifi": 2, "offer": [2, 3, 7, 121, 122, 123, 126, 130, 135, 136, 137, 141, 142, 149, 150, 156, 157, 214, 370, 407, 412, 413, 416, 417, 419, 420, 425, 427, 429, 432], "accomplish": [2, 123, 126, 130, 137, 149, 150, 156, 157, 226, 417], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 84, 86, 123, 126, 130, 137, 149, 150, 156, 157, 174, 226, 318, 324, 325, 333, 342, 379, 409, 417, 428, 429], "docstr": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 417, 418], "extens": [2, 53, 58, 67, 68, 110, 237, 409, 429], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 213, 216, 224, 237, 249, 254, 258, 268, 277, 300, 317, 327, 335, 337, 406, 409, 413, 416, 420, 424, 429], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 123, 126, 130, 137, 149, 150, 156, 157, 180, 183, 214, 222, 224, 232, 237, 254, 256, 258, 260, 278, 279, 303, 307, 327, 413, 416, 418, 424, 425, 426, 432], "happi": [2, 416], "concaten": [2, 8, 14, 15, 21, 41, 42, 44, 73, 89, 174, 175, 193, 215, 258, 261, 309, 412, 413, 418, 425, 426, 427, 429, 432], "schedul": [2, 4, 7, 60, 384, 414, 427], "transformedenv": [2, 3, 11, 46, 123, 126, 127, 130, 137, 149, 150, 156, 157, 167, 168, 171, 174, 177, 178, 180, 183, 184, 185, 187, 190, 191, 192, 193, 195, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 222, 224, 256, 260, 302, 372, 412, 413, 414, 415, 416, 417, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "stepcount": [2, 41, 46, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 214, 215, 224, 238, 412, 413, 414, 415, 416, 417, 422, 425, 426, 431], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 41, 46, 64, 66, 115, 123, 126, 127, 130, 132, 137, 149, 150, 156, 157, 167, 170, 171, 174, 177, 178, 184, 190, 191, 193, 195, 200, 201, 202, 205, 207, 210, 211, 212, 214, 215, 216, 222, 224, 238, 256, 260, 302, 370, 372, 399, 405, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 428, 429, 431, 432], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 174, 202, 405, 420, 429], "cartpol": [2, 3, 11, 35, 46, 64, 66, 123, 124, 125, 126, 127, 130, 137, 149, 150, 156, 157, 170, 171, 174, 205, 210, 222, 224, 302, 370, 413, 415, 418, 420, 421, 422, 429, 432], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 46, 64, 66, 85, 87, 115, 123, 126, 127, 129, 130, 131, 135, 136, 137, 144, 149, 150, 156, 157, 170, 171, 174, 177, 185, 190, 191, 193, 200, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 222, 224, 238, 256, 260, 302, 346, 361, 362, 363, 364, 366, 367, 368, 369, 370, 407, 413, 415, 417, 418, 419, 420, 421, 422, 427, 429, 431, 432], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 46, 121, 122, 123, 126, 130, 135, 136, 137, 143, 149, 150, 151, 152, 156, 157, 167, 168, 171, 174, 180, 183, 191, 199, 202, 225, 236, 249, 263, 281, 283, 294, 299, 303, 304, 318, 320, 322, 324, 338, 340, 342, 343, 399, 407, 412, 413, 414, 415, 416, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432], "8": [2, 3, 6, 7, 46, 52, 54, 58, 59, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 109, 110, 121, 122, 123, 124, 125, 126, 130, 137, 147, 148, 149, 150, 156, 157, 158, 167, 170, 210, 239, 240, 242, 243, 251, 261, 295, 296, 297, 303, 306, 309, 333, 411, 412, 413, 416, 420, 425, 426, 427, 428, 429, 430, 431], "traj_kei": [2, 102, 109, 110, 429], "truncated_kei": [2, 102, 109, 110, 202, 209], "strict_length": [2, 83, 89, 102, 109, 110, 372], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 46, 53, 56, 57, 58, 61, 63, 64, 66, 68, 69, 73, 96, 97, 101, 102, 109, 110, 117, 123, 126, 130, 137, 149, 150, 156, 157, 179, 197, 202, 205, 214, 216, 220, 224, 255, 259, 271, 281, 293, 300, 302, 303, 305, 306, 307, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 380, 392, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 74, 75, 76, 77, 78, 110, 123, 126, 130, 137, 149, 150, 156, 157, 224, 344, 408, 412, 413, 414, 415, 422, 425, 429, 431], "break": [2, 5, 14, 15, 16, 21, 27, 38, 46, 56, 57, 58, 61, 66, 68, 83, 86, 87, 89, 90, 91, 92, 102, 109, 110, 115, 123, 126, 130, 137, 149, 150, 156, 157, 171, 174, 202, 222, 224, 256, 260, 287, 372, 413, 416, 420, 422, 429, 431], "step_count": [2, 14, 15, 16, 46, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 209, 224, 414, 415, 416, 417, 422], "32": [2, 22, 31, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 136, 154, 155, 160, 161, 174, 239, 240, 241, 242, 243, 245, 246, 251, 261, 266, 267, 272, 273, 276, 280, 289, 350, 370, 412, 413, 415, 416, 418, 419, 427, 428, 429, 431, 432], "33": [2, 27, 31, 38, 46, 56, 57, 61, 66, 104, 123, 126, 130, 137, 149, 150, 156, 157, 224, 239, 240, 261, 411, 413, 425, 430, 431], "34": [2, 239, 240, 261, 413, 414, 415, 425], "35": [2, 239, 240, 261, 412, 413, 426, 428], "36": [2, 411, 413, 414, 425, 430], "37": [2, 173, 413], "38": [2, 7, 413], "39": [2, 87, 135, 136, 412, 413, 428], "40": [2, 66, 135, 136, 412, 413, 414, 415, 425, 426, 429], "41": [2, 109, 412, 413, 426, 428], "11": [2, 10, 23, 50, 66, 72, 96, 97, 101, 110, 117, 127, 167, 213, 224, 236, 263, 412, 413, 414, 429], "12": [2, 10, 41, 66, 90, 96, 97, 110, 117, 135, 136, 149, 154, 155, 156, 224, 412, 413, 425, 426, 429], "13": [2, 5, 12, 66, 109, 110, 153, 221, 224, 412, 413, 415, 425, 426, 428, 429], "14": [2, 6, 12, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 193, 224, 412, 413, 414, 425, 426, 428, 429], "15": [2, 23, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 123, 126, 130, 137, 149, 150, 156, 157, 224, 278, 279, 298, 328, 411, 413, 414, 421, 426, 428, 429, 430], "16": [2, 3, 27, 38, 46, 56, 57, 61, 66, 90, 102, 110, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 174, 224, 412, 413, 415, 425, 429], "17": [2, 11, 90, 109, 110, 130, 149, 167, 224, 411, 413, 414, 415, 426, 430], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 413, 414, 421, 425, 426, 428, 432], "sai": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 266, 425, 428, 432], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 44, 50, 58, 63, 67, 68, 97, 98, 102, 105, 109, 110, 117, 123, 126, 129, 130, 131, 134, 137, 149, 150, 156, 157, 180, 183, 198, 205, 214, 266, 267, 304, 317, 320, 337, 413, 414, 415, 416, 425, 426, 427], "handl": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 221, 222, 224, 260, 261, 317, 335, 337, 389, 401, 402, 412, 413, 414, 415, 417, 419, 426, 429], "suggest": [2, 350, 412, 426], "serialenv": [2, 3, 123, 126, 130, 137, 149, 150, 157, 211, 224, 238, 302, 405, 431, 432], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 170, 171, 174, 208, 210, 239, 240, 284, 285, 412, 416, 427, 429], "6": [2, 3, 7, 14, 15, 16, 17, 23, 41, 46, 58, 61, 66, 83, 90, 91, 102, 110, 124, 125, 130, 149, 154, 155, 167, 170, 193, 195, 210, 214, 238, 239, 240, 242, 243, 244, 247, 251, 255, 261, 266, 267, 268, 272, 286, 302, 303, 311, 411, 412, 413, 415, 416, 420, 425, 426, 429, 430, 431, 432], "5": [2, 3, 14, 15, 23, 30, 31, 32, 39, 42, 43, 44, 45, 46, 50, 53, 58, 61, 63, 66, 67, 68, 83, 104, 109, 110, 115, 123, 126, 127, 130, 135, 136, 137, 141, 142, 144, 149, 150, 154, 155, 156, 157, 160, 161, 167, 170, 171, 173, 202, 209, 210, 214, 224, 235, 236, 237, 238, 239, 240, 242, 243, 248, 249, 250, 251, 254, 257, 258, 261, 263, 266, 267, 272, 277, 281, 287, 288, 298, 299, 302, 304, 310, 334, 337, 339, 342, 343, 370, 407, 411, 412, 413, 416, 418, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432], "7": [2, 3, 6, 10, 46, 50, 53, 58, 66, 67, 102, 110, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 167, 170, 210, 236, 238, 239, 240, 243, 261, 263, 266, 358, 411, 412, 413, 415, 416, 420, 425, 426, 429, 430, 431, 432], "9": [2, 3, 7, 23, 27, 41, 46, 53, 58, 66, 67, 90, 91, 102, 110, 115, 124, 125, 140, 151, 152, 157, 167, 170, 210, 222, 224, 265, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 408, 411, 412, 413, 414, 416, 420, 425, 426, 428, 429, 430], "18": [2, 41, 90, 109, 110, 154, 155, 160, 161, 214, 224, 267, 412, 413, 426, 428, 432], "19": [2, 90, 109, 110, 115, 224, 411, 412, 413, 414, 425, 430], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 86, 149, 156, 211, 215, 217, 237, 267, 293, 317, 337, 408, 409, 412, 413, 426, 429, 431], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 86, 88, 91, 92, 121, 123, 124, 126, 130, 135, 137, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 156, 157, 160, 161, 162, 181, 182, 185, 200, 205, 206, 209, 214, 216, 218, 221, 224, 232, 256, 260, 299, 304, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 352, 354, 355, 356, 370, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 409, 412, 413, 414, 415, 416, 419, 421, 425, 426, 427, 432], "randomcroptensordict": [2, 412], "unlik": [2, 25, 108, 130, 141, 142, 160, 161, 235, 237, 302, 327, 337, 372, 407, 413, 416, 418, 420, 431], "stop": [2, 3, 16, 21, 60, 91, 102, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 414, 420, 425, 426, 431, 432], "signal": [2, 3, 14, 15, 16, 17, 23, 41, 83, 85, 87, 89, 90, 91, 102, 109, 110, 115, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 174, 184, 209, 212, 232, 408, 412, 414, 425, 426, 429, 432], "disk": [2, 3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 389, 409, 412, 413, 415, 416, 420, 421, 425, 429], "dump": [2, 3, 11, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 113, 117, 370, 371, 372, 421, 422, 425], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 112, 113, 117, 118, 123, 125, 126, 130, 137, 149, 150, 156, 157, 158, 166, 222, 224, 389, 403, 409, 412, 414, 416, 429], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 85, 123, 126, 127, 130, 137, 149, 150, 156, 157, 320, 342, 414, 417, 419, 420, 425, 426, 432], "anticip": [2, 180, 183], "compli": [2, 89, 237, 407], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 71, 74, 75, 76, 77, 78, 85, 123, 126, 130, 137, 149, 150, 156, 157, 221, 226, 268, 294, 299, 300, 303, 304, 305, 306, 307, 414, 416, 425, 426, 427, 429], "exact": [2, 3, 23, 149, 258], "statu": [2, 3, 126], "prioriti": [2, 4, 53, 67, 68, 96, 97, 98, 101, 102, 111, 113, 117, 320, 321, 322, 324, 325, 326, 327, 333, 338, 340, 342, 343, 350, 409, 412, 413, 429], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 41, 46, 56, 57, 60, 61, 66, 83, 85, 86, 87, 89, 90, 91, 123, 124, 125, 126, 129, 130, 131, 132, 137, 149, 150, 153, 156, 157, 224, 237, 294, 299, 300, 303, 304, 305, 306, 307, 335, 352, 353, 354, 355, 356, 372, 408, 412, 413, 418, 425, 427, 432], "hood": [2, 21, 83, 123, 126, 130, 137, 149, 150, 156, 157, 237, 427], "naiv": [2, 218, 417], "just": [2, 3, 4, 12, 73, 113, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 170, 177, 232, 267, 380, 409, 412, 413, 414, 415, 416, 417, 418, 420, 425, 426, 427, 429, 431, 432], "public": [2, 88, 112, 197, 220], "serializ": 2, "consum": [2, 108, 110, 302, 413, 414, 420, 426, 429], "much": [2, 8, 14, 15, 17, 53, 67, 89, 101, 102, 149, 156, 334, 337, 414, 416, 417, 421, 425, 426, 427, 429, 432], "duplic": [2, 27, 38, 46, 56, 57, 61, 66, 108, 123, 126, 130, 137, 149, 150, 156, 157, 224, 318, 320, 322, 327, 333, 335, 338, 340, 342, 343, 350], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 41, 46, 64, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 164, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 189, 190, 191, 193, 194, 195, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 231, 238, 241, 242, 243, 244, 245, 246, 249, 252, 256, 260, 266, 272, 273, 276, 277, 278, 279, 281, 282, 294, 295, 296, 297, 298, 299, 302, 303, 304, 311, 312, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 333, 334, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 399, 407, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 431, 432], "plu": [2, 14, 15, 17, 60, 149, 156, 427], "enabl": [2, 7, 8, 85, 96, 97, 108, 117, 171, 256, 260, 278, 279, 302, 370, 372, 384, 414, 417, 425, 426, 427, 429], "three": [2, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 56, 92, 320, 407, 409, 414, 416, 417, 418, 425, 426, 427, 429, 432], "flatstoragecheckpoint": 2, "discard": [2, 3, 72, 85, 87, 130, 218, 231, 371, 429, 432], "compress": 2, "At": [2, 252, 262, 413, 414, 415, 420, 424, 427, 428], "correct": [2, 4, 52, 54, 59, 73, 123, 126, 130, 137, 149, 150, 156, 157, 174, 191, 392, 414, 415], "addit": [2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 73, 85, 123, 126, 127, 130, 137, 149, 150, 156, 157, 160, 174, 178, 197, 211, 215, 216, 218, 220, 224, 233, 234, 254, 298, 302, 306, 316, 335, 352, 370, 408, 412, 413, 416, 417, 425, 426, 429], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 46, 56, 57, 61, 62, 63, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 197, 218, 220, 224, 317, 337, 412, 427, 428, 432], "appar": [2, 3, 382], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 93, 94, 100, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 167, 177, 182, 211, 229, 233, 234, 240, 246, 249, 266, 273, 278, 279, 281, 294, 299, 300, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 322, 324, 325, 326, 337, 342, 343, 350, 407, 413, 414, 415, 416, 417, 418, 419, 425, 426, 427, 431, 432], "assumpt": [2, 3, 71, 427, 429], "accur": [2, 7, 85, 91, 413, 427, 429], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 41, 46, 47, 55, 64, 66, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 109, 110, 123, 124, 125, 126, 129, 130, 131, 137, 141, 142, 149, 150, 151, 152, 156, 157, 158, 160, 161, 167, 184, 185, 192, 199, 202, 206, 209, 211, 216, 224, 232, 256, 260, 288, 302, 358, 412, 414, 415, 417, 418, 420, 421, 424, 425, 428, 429, 431, 432], "marl": [2, 140, 162, 174, 212, 266, 267, 268, 326, 340, 417, 425, 426], "extra": [2, 10, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 174, 222, 224, 231, 379, 407, 414, 415, 429], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 168, 226, 427], "concret": [2, 412, 414], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 41, 46, 64, 66, 121, 122, 123, 126, 130, 135, 136, 137, 143, 149, 150, 156, 157, 170, 193, 200, 205, 210, 212, 216, 224, 416, 420, 422, 427, 431, 432], "manual_se": [2, 3, 25, 35, 42, 43, 53, 58, 64, 66, 67, 68, 86, 90, 91, 109, 110, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 168, 170, 182, 193, 202, 205, 210, 212, 224, 252, 264, 265, 274, 277, 278, 279, 294, 300, 310, 317, 318, 320, 321, 325, 333, 340, 416, 420, 422, 425, 426, 427, 431, 432], "200": [2, 14, 15, 16, 21, 27, 35, 38, 46, 56, 57, 61, 64, 66, 83, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 160, 161, 202, 224, 242, 243, 250, 282, 283, 370, 372, 412, 415, 416, 420, 422, 429], "22": [2, 89, 109, 110, 221, 412, 413, 414, 425, 428], "rb_test": 2, "_storag": [2, 428, 429], "max_siz": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 109, 110, 111, 115, 117, 414, 420], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 52, 54, 59, 73, 144, 214, 246, 264, 265, 266, 316, 320, 370, 412, 414, 416, 425, 426], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 222, 224, 266, 267, 320, 340, 403, 409, 412, 413, 432], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 222, 224, 320, 340, 409, 412], "drawback": 2, "struggl": 2, "big": [2, 414, 420, 429, 432], "sequenti": [2, 9, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 173, 191, 224, 293, 295, 296, 297, 303, 308, 309, 314, 317, 318, 320, 326, 333, 337, 338, 339, 340, 342, 407, 414, 415, 418, 426, 427, 428, 431, 432], "known": [2, 3, 5, 7, 8, 66, 130, 211, 359, 360, 412, 413, 417], "seamless": [2, 261], "integr": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 245, 256, 260, 263, 306, 407, 417, 418, 420, 425, 426, 427, 428], "indiffer": 2, "particularli": [2, 416, 431], "heavili": [2, 11], "smooth": [2, 235, 412, 413, 419], "essenti": [2, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 413, 417, 425, 427, 429], "understand": [2, 3, 8, 412, 413, 416, 417, 418, 425, 426], "purpos": [2, 3, 7, 11, 123, 126, 130, 137, 149, 150, 156, 157, 174, 254, 317, 319, 331, 334, 337, 339, 399, 412, 414, 415, 416, 419, 421, 425, 426, 428, 432], "guid": [2, 11, 151, 152, 154, 155, 210, 406, 412, 426, 431], "explan": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 237], "effect": [2, 3, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 89, 102, 104, 107, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 170, 174, 216, 224, 237, 389, 407, 412, 418, 425, 429, 432], "realm": [2, 418], "As": [2, 3, 4, 46, 58, 67, 68, 71, 83, 104, 123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 202, 247, 307, 352, 407, 412, 413, 414, 415, 416, 417, 419, 420, 425, 426, 427, 428, 429, 431, 432], "practition": 2, "often": [2, 3, 8, 268, 332, 335, 389, 412, 413, 417, 419, 427, 429, 432], "encount": [2, 4, 89, 302, 406, 413, 418, 427], "situat": [2, 141, 142], "sometim": [2, 3, 71, 415, 432], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 83, 86, 87, 90, 91, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 254, 255, 256, 258, 259, 260, 263, 295, 296, 297, 335, 338, 409, 413], "immedi": [2, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 351, 425, 426], "199": 2, "info": [2, 3, 14, 15, 53, 58, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 107, 109, 110, 123, 124, 125, 126, 129, 130, 131, 132, 137, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 218, 221, 223, 379, 417, 422, 425, 426, 429, 431], "glanc": [2, 417], "seem": [2, 412, 415, 417], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 60, 62, 63, 123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 174, 198, 254, 256, 258, 260, 289, 295, 296, 297, 312, 407, 413, 415, 417, 425], "less": [2, 144, 290, 401, 402, 408, 414, 415, 429, 431], "omit": [2, 137, 385, 414, 419, 427, 429], "proper": [2, 3, 4, 6, 7, 352, 353, 354, 355, 413, 414, 425, 426, 429], "imposs": [2, 3, 115, 123, 126, 130, 137, 149, 150, 156, 157, 226, 317, 319, 334, 337, 339], "determin": [2, 41, 53, 67, 73, 85, 101, 102, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 197, 220, 266, 278, 279, 320, 413, 418, 425, 426], "complic": [2, 56, 66, 427, 429, 432], "matter": [2, 33, 420], "inconsist": [2, 432], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 41, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 231, 308, 309, 317, 320, 340, 406, 412, 415], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 137, 420], "elimin": [2, 3, 417], "upon": [2, 3, 8, 425, 427], "canon": 2, "definit": [2, 50, 111, 266], "markov": [2, 3, 417, 432], "mdp": [2, 231, 417, 427], "context": [2, 3, 5, 8, 27, 38, 46, 56, 57, 61, 66, 110, 123, 126, 127, 130, 137, 146, 149, 150, 156, 157, 211, 217, 224, 237, 256, 260, 267, 269, 293, 298, 348, 349, 352, 353, 354, 355, 357, 365, 372, 384, 407, 408, 412, 413, 414, 415, 416, 425, 426, 427, 428, 429, 431], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 210, 222, 299, 300, 302, 304, 305, 316, 412, 425, 427, 429], "complet": [2, 7, 9, 108, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 174, 209, 406, 408, 412, 414, 417, 424], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 41, 46, 47, 60, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 109, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 141, 142, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 170, 171, 184, 199, 211, 224, 232, 236, 256, 260, 263, 302, 308, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 412, 413, 414, 415, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 41, 46, 47, 52, 59, 60, 64, 66, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 115, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 167, 168, 171, 172, 177, 178, 180, 181, 183, 184, 185, 191, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 219, 220, 222, 224, 229, 231, 236, 256, 263, 298, 302, 312, 317, 318, 320, 321, 322, 324, 325, 326, 329, 333, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 382, 383, 384, 387, 403, 408, 409, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "imit": [2, 3, 331], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 89, 123, 126, 127, 130, 133, 136, 137, 149, 150, 156, 157, 224, 238, 239, 240, 261, 267, 407, 408, 409, 412, 413, 414, 415, 416, 417, 425, 426, 427, 429, 431], "stateless": [2, 3, 41, 123, 126, 130, 137, 149, 150, 156, 157, 171, 215, 335, 370, 412, 417, 427, 432], "simul": [2, 3, 5, 7, 8, 71, 121, 122, 132, 135, 136, 153, 160, 161, 165, 236, 263, 407, 412, 414, 416, 417, 421, 425, 426], "furthermor": [2, 425, 426], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 123, 126, 130, 137, 149, 150, 156, 157, 166, 188, 209, 216, 224, 252, 255, 259, 334, 412, 413, 414, 416, 422, 425, 426, 432], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 80, 107, 113, 120, 123, 126, 128, 130, 137, 143, 149, 150, 156, 157, 168, 171, 180, 181, 182, 183, 185, 191, 199, 200, 206, 209, 211, 214, 215, 224, 229, 232, 233, 234, 236, 263, 294, 303, 309, 310, 314, 317, 337, 405, 412, 414, 415, 418, 425, 426, 427, 432], "accommod": [2, 3, 417, 418], "uniform": [2, 53, 67, 101, 102, 425], "unambigu": 2, "distinguish": [2, 141, 142, 160, 161], "happen": [2, 3, 12, 123, 126, 130, 137, 149, 150, 156, 157, 234, 278, 413, 416, 419, 420, 421, 428, 432], "everyth": [2, 413, 414, 415, 421, 422], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 89, 221, 222, 412, 420, 426], "rule": [2, 66, 149, 180, 183, 307, 407, 414], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 46, 52, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 171, 180, 183, 184, 185, 195, 199, 200, 202, 206, 209, 211, 214, 216, 224, 231, 236, 238, 248, 249, 256, 260, 263, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 393, 406, 407, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "taken": [2, 3, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 123, 126, 130, 137, 149, 150, 156, 157, 167, 201, 264, 265, 408, 412, 414, 415, 418, 425, 426, 427], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 52, 54, 55, 56, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 167, 171, 180, 183, 184, 185, 195, 199, 200, 202, 206, 209, 211, 222, 231, 236, 238, 248, 249, 256, 260, 263, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 407, 414, 415, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "brought": [2, 414, 415, 418], "step_mdp": [2, 3, 123, 126, 130, 137, 149, 150, 156, 157, 256, 260, 405, 415, 417, 427, 431, 432], "count": [2, 3, 46, 73, 126, 127, 209, 214, 278, 279, 384, 389, 392, 412, 413, 414, 415, 429, 432], "trigger": [2, 7, 56, 66], "partial": [2, 3, 123, 126, 130, 137, 149, 150, 156, 157, 173, 174, 210, 211, 212, 303, 389, 415], "turn": [2, 18, 19, 20, 21, 52, 54, 57, 59, 61, 73, 123, 136, 157, 189, 217, 221, 299, 370, 384, 408, 412, 413, 415, 418, 427, 428], "retain": [2, 123, 126, 130, 137, 149, 150, 156, 157], "regard": [2, 85, 91, 249, 300, 317, 327, 337, 412, 414, 427], "twice": [2, 8, 110], "feasibl": 2, "mostli": [2, 3, 17, 277, 372, 408, 421, 429, 432], "eas": [2, 3, 425, 426], "flat": [2, 115], "manner": [2, 130, 197, 218, 407, 412, 413, 414, 420, 424, 427, 429], "ted2flat": [2, 35, 405], "flat2t": [2, 405], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 171, 302], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 126, 130, 137, 149, 150, 156, 157, 187, 188, 208, 209, 212, 214, 216, 217, 224, 271, 320, 340, 408, 414, 425, 426, 427, 429], "both": [2, 3, 7, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 89, 123, 126, 127, 129, 130, 137, 141, 142, 149, 150, 151, 152, 156, 157, 158, 167, 174, 200, 214, 216, 224, 232, 239, 240, 256, 259, 260, 261, 266, 267, 295, 296, 297, 300, 305, 317, 319, 320, 321, 325, 326, 333, 334, 335, 337, 338, 339, 340, 342, 343, 384, 407, 412, 414, 416, 417, 419, 425, 426, 427, 428, 429, 432], "mark": [2, 3, 16, 91, 123, 126, 130, 137, 149, 150, 156, 157, 256, 260, 352, 354, 355, 420, 429], "identifi": [2, 55, 123, 126, 130, 137, 149, 150, 156, 157], "abov": [2, 3, 7, 27, 38, 46, 56, 57, 61, 66, 74, 123, 126, 130, 137, 149, 150, 156, 157, 224, 257, 287, 288, 316, 408, 409, 412, 414, 416, 417, 418, 425, 426, 427, 432], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 171, 172, 174, 177, 178, 179, 180, 181, 183, 185, 191, 193, 197, 199, 200, 205, 206, 209, 212, 215, 216, 218, 220, 221, 224, 226, 232, 233, 234, 239, 240, 241, 242, 243, 246, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 266, 267, 271, 275, 277, 278, 279, 281, 290, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 370, 372, 380, 407, 408, 412, 413, 414, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 431, 432], "typic": [2, 3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 184, 210, 224, 275, 277, 303, 318, 320, 335, 337, 340, 407, 408, 409, 414, 416, 417, 419, 420, 425, 426, 427], "adjust": [2, 11, 211, 412, 425, 426, 427], "grumodul": [2, 173, 211, 293, 314, 415], "lstmmodul": [2, 256, 293, 415, 416], "skip": [2, 3, 27, 38, 46, 56, 57, 61, 66, 83, 123, 126, 130, 137, 149, 150, 156, 157, 188, 214, 216, 224, 226, 303, 307, 320, 335, 340, 352, 353, 354, 355, 371, 372, 382, 384, 412, 413, 427], "accumul": [2, 8, 224], "upcom": [2, 335, 361, 362, 363, 364, 366, 367, 368, 369, 412], "popular": [2, 3, 407, 415, 419, 426], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 224, 405, 413], "shift": [2, 35, 37, 46, 47, 64, 93, 94, 100, 313, 352, 353, 354, 355, 414], "approxim": [2, 426, 432], "would": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 254, 256, 258, 260, 261, 266, 409, 413, 414, 415, 417, 419, 420, 427, 429, 431, 432], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 174, 246, 276, 317, 323, 336, 337, 380, 403, 414, 415, 426, 429], "2x": 2, "small": [2, 110, 218, 235, 412, 414, 416, 425, 426, 432], "clearer": [2, 416, 418], "lazi": [2, 62, 63, 80, 81, 123, 126, 130, 137, 149, 150, 156, 157, 160, 161, 197, 218, 239, 266, 269, 308, 309, 412, 413, 418, 420, 424, 429, 432], "certainli": 2, "benefici": 2, "welcom": [2, 417], "wrapper": [2, 3, 12, 17, 52, 54, 59, 60, 67, 68, 73, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 221, 225, 234, 237, 238, 253, 271, 279, 290, 298, 302, 307, 312, 352, 377, 378, 379, 403, 405, 414, 415, 417, 425, 426, 428, 431, 432], "around": [2, 5, 7, 17, 67, 68, 123, 126, 130, 137, 143, 149, 150, 156, 157, 225, 237, 277, 302, 307, 352, 412, 413, 426, 432], "selecttransform": [2, 123, 126, 130, 137, 149, 150, 156, 157], "excludetransform": [2, 90, 206, 429], "promptli": 2, "virtual": [2, 3, 129], "instal": [2, 3, 5, 10, 18, 19, 20, 57, 66, 85, 88, 123, 126, 130, 137, 149, 150, 151, 152, 154, 155, 156, 157, 374, 389, 406, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 432], "respons": [2, 3, 8, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 389, 419, 420, 432], "d4rl": [2, 85, 91], "repositori": [2, 7, 86, 87, 88, 91, 161, 425, 426], "wheel": [2, 414], "publish": 2, "openml": [2, 88, 146], "scikit": [2, 88, 146], "panda": [2, 88], "raw": [2, 3, 4, 60, 257, 287, 288, 413, 416, 420, 427], "go": [2, 3, 7, 48, 140, 149, 198, 202, 298, 358, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "natur": [2, 3, 412, 418, 419, 420, 429], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 123, 126, 130, 137, 149, 150, 156, 157, 171, 174, 178, 187, 191, 197, 211, 215, 216, 218, 220, 224, 268, 278, 279, 298, 306, 392, 408, 412, 413, 414, 416, 417, 425, 426, 427], "fly": [2, 174, 222, 334, 408, 414, 427, 429, 432], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 177, 421, 432], "pre": [2, 7, 22, 27, 38, 46, 56, 57, 61, 66, 72, 89, 97, 123, 126, 130, 137, 149, 150, 156, 157, 197, 218, 220, 224, 432], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 168, 170, 171, 173, 174, 175, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 221, 222, 224, 237, 254, 258, 268, 287, 299, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 352, 370, 385, 409, 412, 413, 414, 420, 425, 427, 431, 432], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 86, 102, 109, 115, 134, 135, 136, 149, 151, 152, 177, 205, 239, 240, 250, 252, 266, 267, 302, 374, 389, 401, 402, 412, 413, 414, 415, 416, 418, 419, 422, 425, 426, 429, 431], "pipelin": [2, 3, 7, 407, 414], "replac": [2, 3, 6, 7, 31, 32, 39, 46, 63, 83, 89, 102, 109, 110, 170, 182, 184, 190, 231, 252, 407, 425, 429, 431], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 104, 123, 126, 130, 137, 149, 150, 156, 157, 170, 202, 216, 224, 233, 234, 278, 279, 302, 387, 407, 409, 413, 414, 415, 418, 421, 427, 429, 432], "produc": [2, 41, 109, 167, 170, 171, 239, 240, 261, 267, 274, 295, 297, 298, 372, 414, 415, 416, 417, 418, 420, 429, 432], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 89, 93, 108, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 214, 216, 224, 237, 317, 318, 320, 333, 335, 337, 338, 339, 340, 342, 343, 414], "download": [2, 7, 10, 83, 85, 86, 87, 89, 90, 91, 134, 197, 220, 372, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 150, 413, 425, 426, 427], "robosetexperiencereplai": [2, 109, 110], "fk1": [2, 90], "v4": [2, 90, 130, 149, 167, 201, 361, 362, 363, 364, 366, 367, 368, 369, 412, 414, 428, 431], "expert": [2, 90], "fk1_microopenrandom_v2d": [2, 90], "func": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 223], "obs_norm": 2, "norm": [2, 4, 8, 121, 122, 235, 389, 412, 413, 414, 425, 426, 427], "num_work": [2, 52, 54, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 144, 149, 156, 412, 413], "os": [2, 54, 72, 92, 413], "cpu_count": [2, 54, 72, 92], "num_chunk": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91], "1000": [2, 4, 41, 58, 66, 96, 101, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 174, 222, 233, 252, 277, 278, 279, 303, 307, 332, 412, 413, 414, 415, 416, 418, 420, 422, 428, 429], "mp_start_method": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 149, 156, 214, 413, 431], "fork": [2, 5, 83, 84, 85, 86, 87, 88, 89, 90, 91, 412, 413, 414, 415, 425, 426, 428, 431], "recreat": [2, 427], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 58, 67, 68, 102, 104, 109, 123, 126, 130, 137, 149, 150, 156, 157, 171, 191, 416, 420, 428], "grain": [2, 3, 58, 67, 68, 102, 104, 109, 123, 126, 130, 137, 149, 150, 156, 157, 171], "nomenclatur": 2, "compact": [2, 41, 64, 93, 94, 100], "propos": [2, 174, 184, 237, 262, 332, 341, 407, 415, 429], "replaybufferensembl": [2, 83, 107, 113, 120], "primit": [2, 3, 4, 89, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 102, 104, 115, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 224, 412, 426], "dummi": [2, 3, 157, 370, 412, 416, 420, 432], "semant": [2, 62, 63, 129, 131], "ident": [2, 3, 14, 15, 16, 46, 52, 54, 58, 59, 66, 67, 68, 73, 96, 104, 109, 123, 126, 129, 130, 131, 137, 144, 149, 150, 156, 157, 184, 235, 266, 267, 318, 320, 333, 338, 340, 342, 343, 352, 353, 354, 355, 401, 402, 413, 417, 425, 426], "another_kei": [2, 104], "renam": [2, 3, 52, 54, 59, 73, 104, 200, 202, 231, 412], "resiz": [2, 3, 91, 104, 174, 413, 415, 416, 417, 429, 432], "imag": [2, 3, 4, 7, 11, 89, 174, 176, 179, 197, 213, 220, 261, 370, 372, 412, 413, 416, 417, 421, 426, 428, 432], "comops": 2, "totensorimag": [2, 3, 91, 104, 174, 201, 413, 415, 416, 429, 431, 432], "renametransform": [2, 3, 104, 123, 126, 130, 137, 149, 150, 156, 157, 174], "rb0": [2, 104], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 164, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 236, 238, 248, 256, 260, 263, 280, 289, 290, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 371, 372, 399, 407, 412, 413, 414, 415, 416, 418, 419, 422, 424, 425, 426, 427, 428, 429, 431, 432], "pixel": [2, 3, 7, 31, 91, 104, 124, 125, 129, 131, 132, 153, 174, 176, 179, 184, 187, 189, 193, 195, 197, 201, 213, 218, 220, 242, 272, 273, 370, 372, 412, 413, 415, 416, 421, 425, 428, 429, 431, 432], "rb1": [2, 104], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 164, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 187, 189, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 236, 238, 248, 249, 256, 260, 263, 280, 281, 289, 290, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 317, 318, 319, 320, 325, 326, 331, 333, 334, 337, 338, 339, 340, 342, 350, 352, 353, 354, 355, 370, 372, 384, 399, 407, 412, 413, 414, 415, 416, 418, 422, 424, 425, 426, 427, 428, 429, 431, 432], "pixels33": [2, 104], "data0": [2, 104], "244": [2, 104, 197, 220], "data1": [2, 104, 431], "_": [2, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 127, 134, 160, 161, 175, 180, 182, 183, 191, 193, 200, 213, 222, 224, 277, 294, 306, 311, 316, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 342, 343, 352, 353, 354, 355, 374, 412, 413, 414, 415, 416, 422, 425, 426, 427, 429, 431], "rang": [2, 3, 4, 8, 12, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 115, 123, 126, 127, 130, 137, 141, 142, 149, 150, 156, 157, 202, 213, 222, 224, 255, 259, 277, 334, 342, 343, 408, 409, 412, 414, 415, 416, 419, 420, 422, 425, 426, 427, 429, 431], "parent": [2, 3, 21, 31, 32, 37, 39, 63, 71, 73, 84, 104, 113, 120, 123, 126, 130, 137, 149, 150, 156, 157, 167, 171, 174, 175, 178, 181, 184, 187, 188, 193, 197, 205, 209, 210, 211, 212, 214, 215, 217, 218, 224, 256, 260, 295, 314, 335, 337, 356, 370, 372, 412, 420, 427, 431, 432], "basic": [2, 143, 407, 414, 419, 420, 422, 425, 431, 432], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 143, 149, 150, 156, 157, 170, 214, 215, 216, 222, 224, 247, 257, 265, 269, 274, 286, 287, 288, 302, 317, 320, 335, 337, 339, 340, 418, 420, 427, 429], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 112, 118, 123, 126, 130, 137, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 231, 232, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 249, 252, 254, 255, 256, 258, 259, 260, 261, 266, 267, 268, 269, 270, 278, 279, 281, 282, 283, 284, 285, 287, 290, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 383, 387, 392, 399, 407, 408, 409, 412, 413, 414, 415, 416, 417, 425, 426, 427, 431, 432], "send": [2, 3, 8, 379, 431], "receiv": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 215, 216, 224, 261, 358, 408, 412, 414, 419, 424, 427], "spawn": [2, 3, 4, 18, 22, 134, 144, 149, 156, 214, 413, 425, 426], "check_env_spec": [2, 3, 123, 126, 130, 137, 149, 150, 156, 157, 167, 199, 370, 405, 414, 425, 426, 427], "saniti": [2, 3, 7, 123, 126, 130, 137, 149, 150, 156, 157, 226, 414], "automati": 2, "make_composite_from_td": [2, 71, 405, 427], "fall": [2, 4, 85], "categori": [2, 31, 86, 407, 409], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 46, 56, 57, 61, 66, 74, 123, 126, 130, 137, 149, 150, 156, 157, 177, 192, 222, 224, 225, 233, 252, 278, 279, 282, 283, 294, 299, 300, 303, 304, 305, 306, 307, 310, 317, 318, 320, 321, 333, 337, 338, 340, 342, 343, 405, 407, 412, 413, 414, 416, 425, 427, 431, 432], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 171, 180, 183, 199, 211, 229, 236, 263, 294, 306, 309, 311, 339, 405, 427, 429], "boundeddiscret": [2, 28, 31, 414], "boundedcontinu": [2, 22, 28, 31, 123, 126, 130, 137, 149, 150, 156, 157, 414, 425, 426, 427, 431, 432], "unboundeddiscret": [2, 74, 150, 405, 427, 432], "unboundedcontinu": [2, 74, 123, 126, 130, 137, 149, 150, 156, 157, 199, 211, 229, 309, 314, 405, 414, 415, 425, 426, 427, 432], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 44, 45, 51, 121, 122, 129, 131, 132, 135, 136, 144, 145, 147, 148, 153, 158, 159, 249, 281, 299, 304, 322, 324, 325, 326, 350, 405, 407, 418], "multionehot": [2, 42, 43, 45, 322, 325, 326, 350, 405], "multicategor": [2, 43, 44, 45, 405], "binari": [2, 3, 7, 26, 27, 50, 158, 168, 172, 249, 281, 299, 300, 304, 305, 322, 325, 326, 350, 405], "concept": [2, 123, 126, 130, 137, 149, 150, 156, 157, 277, 413, 429], "arbitrari": [2, 3, 25, 50, 58, 123, 126, 130, 136, 137, 149, 150, 156, 157, 170, 412, 413, 427, 429], "combin": [2, 4, 36, 57, 215, 342, 413, 416, 421, 429, 431], "relat": [2, 3, 4, 10, 53, 149, 187, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 413, 422, 427], "nevertheless": [2, 3, 414, 417, 429], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 109, 110, 171, 211, 247, 306, 309, 318, 320, 333, 335, 338, 340, 342, 343, 416, 425, 426, 427, 429, 431], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 121, 122, 123, 126, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 174, 175, 182, 193, 210, 211, 212, 214, 216, 222, 224, 235, 237, 254, 257, 258, 266, 267, 287, 288, 293, 299, 304, 310, 318, 320, 329, 335, 336, 340, 352, 354, 355, 384, 386, 409, 412, 413, 414, 415, 427, 432], "similarli": [2, 21, 27, 38, 46, 56, 57, 61, 66, 108, 113, 123, 126, 130, 137, 149, 150, 156, 157, 224, 266, 308, 309, 325, 333, 432], "possess": [2, 71, 85], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 102, 168, 171, 174, 175, 213, 217, 229, 412, 415, 416, 425, 426, 427], "move": [2, 4, 27, 38, 46, 56, 57, 61, 66, 71, 91, 123, 126, 130, 131, 137, 149, 150, 156, 157, 167, 178, 181, 197, 211, 215, 216, 218, 220, 222, 224, 231, 261, 306, 387, 412, 413, 415, 417, 432], "unbind": [2, 52, 53, 54, 58, 59, 67, 68, 73, 256, 260, 416], "said": [2, 414], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 56, 67, 71, 101, 102, 174, 187, 198, 217, 328, 352, 354, 355, 408, 414, 425, 426, 427], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 63, 123, 126, 130, 137, 149, 150, 156, 157, 181, 408, 412, 413, 415, 419, 425, 426, 429], "predict": [2, 3, 46, 60, 248, 250, 262, 263, 298, 312, 317, 319, 324, 327, 329, 330, 334, 337, 339, 351, 412, 413, 419], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 56, 57, 61, 66, 76, 78, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 253, 256, 260, 317, 319, 320, 322, 325, 326, 327, 333, 334, 337, 338, 339, 340, 350, 352, 353, 354, 355, 360, 432], "mont": [2, 317, 319, 334, 337, 412], "carlo": [2, 317, 319, 334, 337, 412], "mct": [2, 41], "act": [2, 3, 4, 109, 110, 151, 152, 216, 248, 267, 318, 320, 321, 333, 338, 340, 342, 343, 415, 416, 425, 426, 429, 431], "tradit": [2, 419, 425], "integ": [2, 14, 15, 16, 17, 23, 38, 42, 44, 46, 50, 56, 57, 60, 61, 73, 102, 109, 110, 111, 123, 126, 130, 137, 149, 150, 156, 157, 167, 170, 184, 188, 193, 209, 239, 240, 261, 266, 267, 320, 325, 333, 340, 416, 429], "advanc": [2, 3, 21, 53, 58, 67, 68, 123, 126, 130, 137, 149, 150, 156, 157, 417, 420, 429], "rebuild": [2, 41], "initi": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 123, 126, 130, 137, 147, 148, 149, 150, 156, 157, 158, 173, 193, 197, 211, 215, 216, 218, 223, 224, 233, 234, 235, 236, 252, 254, 255, 258, 259, 263, 266, 267, 268, 269, 270, 278, 279, 302, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 403, 407, 408, 412, 413, 415, 417, 418, 420, 425, 427, 432], "pair": [2, 3, 46, 52, 54, 56, 59, 66, 73, 85, 123, 124, 125, 126, 130, 137, 149, 150, 156, 157, 202, 211, 214, 256, 295, 303, 307, 335, 352, 353, 354, 355, 356, 407, 408, 412, 413, 414, 418, 419, 424, 427, 432], "term": [2, 60, 191, 258, 259, 269, 270, 316, 317, 326, 391, 413, 414, 417, 418, 426], "pseudocod": 2, "next_stat": [2, 408], "associ": [2, 3, 27, 31, 32, 38, 39, 41, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 224, 282, 403, 412, 429], "sens": [2, 4, 52, 54, 59, 73, 174, 420, 427], "hard": [2, 3, 7, 115, 124, 125, 149, 332, 413, 432], "let": [2, 3, 6, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 174, 224, 256, 260, 266, 267, 299, 384, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "know": [2, 3, 4, 9, 53, 58, 67, 68, 129, 131, 233, 234, 335, 338, 384, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 429], "next_td": 2, "Of": [2, 3, 7, 406, 427, 432], "cours": [2, 3, 4, 406, 427, 432], "handi": [2, 3, 123, 126, 130, 137, 149, 150, 156, 157, 421], "undertaken": [2, 73, 427], "link": [2, 6, 7, 126, 413, 422], "hash": [2, 38, 56, 57, 61, 66, 73, 123, 137], "past": [2, 4, 174, 302, 413, 429], "node_map": [2, 41], "_index": [2, 56, 66], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 221, 414, 424], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 68, 101, 102, 108, 123, 205, 222, 224, 278, 279, 302, 377, 382, 413, 415, 417, 420, 426, 427, 429], "next_data": [2, 123, 126, 130, 137, 149, 150, 156, 157], "data_map": [2, 41], "obtrain": 2, "form": [2, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224, 254, 256, 258, 260, 316, 317, 319, 334, 337, 389, 407, 418, 426], "figur": [2, 3, 73, 137, 412, 414, 415, 426, 427, 432], "flowchart": 2, "o": [2, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 259], "get_tre": [2, 41], "vertex": [2, 73], "longer": [2, 12, 73, 413, 422, 425, 426, 429], "vertic": [2, 73], "branch": [2, 41, 73], "repeat": [2, 73, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 236, 247, 414, 425, 426, 427], "depth": [2, 58, 71, 123, 126, 130, 137, 143, 149, 150, 153, 156, 157, 236, 239, 240, 242, 243, 244, 245, 250, 251, 261, 263, 266, 267, 268, 272, 273, 299, 407, 413, 417, 419, 420, 424, 425, 426, 429], "until": [2, 3, 7, 21, 136, 212, 215, 224, 414, 415, 422, 425, 426], "anymor": [2, 52, 54, 59, 73, 216, 306], "utmost": 2, "commonli": [2, 102, 109, 110, 432], "emploi": [2, 270], "languag": [2, 24, 60], "scarc": 2, "address": [2, 429], "subdomain": 2, "facilit": [2, 3, 7, 196, 197, 211, 218, 220, 295, 296, 297, 407, 412, 415, 418, 427], "extern": [2, 3, 180, 183, 425, 432], "token": [2, 54, 55, 60, 69, 72, 92, 137], "dm": [3, 412, 432], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 61, 62, 63, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 89, 106, 112, 115, 116, 118, 119, 121, 122, 123, 126, 130, 134, 135, 136, 137, 143, 144, 145, 149, 150, 156, 157, 160, 181, 202, 218, 219, 231, 256, 260, 266, 268, 295, 301, 317, 318, 320, 321, 322, 324, 325, 326, 328, 333, 337, 338, 339, 340, 342, 343, 353, 354, 379, 389, 407, 408, 409, 412, 413, 415, 417, 418, 419, 421, 425, 426, 427, 429, 432], "abl": [3, 41, 140, 151, 152, 256, 260, 412, 414, 415, 418, 424, 425, 426, 427, 429], "experi": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 101, 102, 123, 126, 130, 137, 149, 150, 156, 157, 226, 374, 375, 376, 377, 378, 379, 406, 413, 414, 416, 420, 421, 425, 426, 429], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 129, 131, 268, 335], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 123, 126, 127, 130, 137, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 174, 177, 184, 190, 191, 193, 195, 200, 202, 205, 211, 215, 221, 222, 224, 370, 399, 412, 413, 414, 415, 416, 424, 426, 428, 429, 431, 432], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 178, 182, 184, 191, 197, 211, 215, 216, 218, 220, 224, 227, 236, 238, 239, 240, 242, 243, 244, 245, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 308, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 399, 407, 408, 412, 413, 414, 415, 416, 418, 419, 422, 424, 425, 426, 427, 428, 431], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 56, 57, 61, 66, 74, 104, 123, 126, 130, 137, 149, 150, 156, 157, 169, 170, 215, 221, 226, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 306, 307, 308, 310, 313, 335, 337, 413, 415, 420, 427, 429], "organis": [3, 90, 123, 126, 130, 137, 149, 150, 156, 157, 216, 413], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 123, 126, 129, 130, 131, 136, 137, 149, 150, 156, 157, 167, 184, 197, 218, 222, 224, 256, 260, 307, 317, 318, 320, 321, 322, 324, 326, 327, 328, 331, 333, 335, 337, 338, 339, 340, 342, 343, 350, 412, 415, 427], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 143, 149, 150, 156, 157, 184, 224], "actual": [3, 4, 7, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 221, 392, 408, 412, 414, 416, 425, 426, 427], "retriev": [3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 175, 181, 184, 193, 231, 236, 239, 263, 302, 303, 307, 310, 314, 317, 318, 319, 320, 322, 334, 337, 338, 340, 342, 343, 350, 352, 353, 354, 355, 403, 409, 413, 414, 418, 427, 432], "care": [3, 8, 27, 38, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 215, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 372, 412, 414, 416, 425, 426, 427, 429], "parametr": [3, 270, 307, 318, 320, 325, 333, 340, 412, 414], "hardwar": [3, 416], "observation_spec": [3, 41, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 187, 189, 190, 191, 193, 195, 197, 199, 201, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 224, 236, 256, 260, 263, 393, 399, 412, 414, 419, 424, 425, 426, 427, 432], "state_spec": [3, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 236, 263, 427, 432], "reward_spec": [3, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 171, 172, 177, 178, 180, 181, 183, 199, 203, 204, 205, 207, 215, 217, 224, 236, 263, 414, 425, 426, 427, 432], "done_spec": [3, 123, 126, 130, 137, 149, 150, 156, 157, 180, 181, 183, 184, 199, 215, 224, 232, 425, 426, 427, 432], "flag": [3, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161, 190, 278, 279, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 407, 425, 426, 427, 428], "input_spec": [3, 73, 123, 126, 130, 137, 143, 149, 150, 156, 157, 167, 171, 178, 180, 181, 182, 193, 195, 199, 200, 205, 206, 209, 210, 211, 215, 216, 217, 219, 224, 414, 427], "full_action_spec": [3, 73, 123, 126, 130, 137, 147, 148, 149, 150, 156, 157, 158, 159, 167, 236, 263, 414, 425, 426], "full_state_spec": [3, 41, 73, 123, 126, 130, 137, 149, 150, 156, 157, 167, 236, 263, 414], "lock": [3, 31, 32, 39, 52, 54, 59, 63, 73, 123, 126, 130, 136, 137, 149, 150, 156, 157, 171, 211, 222, 427], "output_spec": [3, 73, 123, 126, 130, 137, 149, 150, 156, 157, 171, 178, 180, 181, 185, 191, 199, 200, 206, 209, 215, 216, 224, 427], "full_observation_spec": [3, 73, 123, 126, 130, 137, 149, 150, 156, 157, 236, 263], "full_reward_spec": [3, 73, 123, 126, 130, 137, 149, 150, 156, 157, 171, 181, 199, 425, 426], "full_done_spec": [3, 73, 123, 126, 130, 137, 149, 150, 156, 157, 171, 181, 199, 232, 425, 426], "carri": [3, 21, 44, 72, 123, 126, 130, 137, 149, 150, 156, 157, 211, 335, 413, 415, 425, 426, 427, 429], "nontensorspec": [3, 405], "importantli": [3, 303, 307], "action_s": 3, "help": [3, 4, 27, 38, 46, 56, 57, 61, 66, 71, 123, 126, 130, 137, 149, 150, 156, 157, 174, 184, 224, 317, 319, 334, 337, 339, 406, 408, 412, 413, 414, 415, 425, 426], "With": [3, 135, 136, 140, 210, 409, 413, 424, 425, 426, 429, 432], "necessarili": [3, 123, 126, 130, 137, 149, 150, 156, 157, 432], "present": [3, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 123, 126, 129, 130, 137, 149, 150, 156, 157, 185, 202, 206, 211, 214, 216, 224, 231, 232, 240, 241, 242, 243, 244, 245, 251, 256, 258, 260, 270, 276, 278, 279, 302, 306, 307, 308, 309, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 403, 409, 412, 422, 424, 425, 426, 429, 431], "0s": [3, 83, 89, 211, 415], "step_and_maybe_reset": [3, 123, 126, 130, 137, 149, 150, 156, 157, 417], "done_kei": [3, 23, 35, 37, 41, 47, 64, 93, 94, 100, 109, 123, 126, 130, 137, 149, 150, 156, 157, 170, 174, 184, 202, 209, 224, 231, 425, 426], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 74, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 321, 322, 324, 340, 414, 418, 425, 426, 429], "_reset": [3, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 170, 171, 174, 180, 183, 190, 199, 232, 236, 263, 425], "data_": [3, 123, 126, 130, 137, 149, 150, 156, 157], "append": [3, 8, 11, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 127, 130, 137, 149, 150, 156, 157, 170, 177, 178, 202, 211, 216, 221, 255, 256, 259, 260, 299, 304, 412, 413, 414, 415, 416, 425, 426, 427, 428, 429, 431], "seed": [3, 14, 15, 16, 17, 21, 58, 67, 68, 90, 104, 123, 126, 130, 137, 143, 149, 150, 151, 152, 156, 157, 160, 161, 168, 171, 180, 183, 199, 216, 226, 370, 389, 425], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 230, 241, 250, 272, 283, 294, 303, 306, 307, 310, 318, 335, 384, 407, 412, 413, 414, 415, 416, 418, 419, 422, 425, 427, 431, 432], "preced": [3, 46, 174, 415], "risk": [3, 198], "overlap": [3, 67, 115], "reproduc": [3, 57, 61, 123, 126, 130, 137, 149, 150, 156, 157, 174, 226, 412, 414, 416, 426], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 46, 52, 54, 55, 60, 66, 69, 72, 73, 74, 92, 96, 97, 98, 101, 102, 117, 123, 126, 130, 137, 149, 150, 156, 157, 182, 203, 209, 210, 212, 235, 286, 287, 288, 310, 318, 320, 325, 326, 333, 335, 336, 340, 372, 386, 407, 412, 413, 414, 415, 418, 425, 426, 429], "max_step": [3, 11, 115, 123, 126, 130, 137, 141, 142, 143, 149, 150, 156, 157, 160, 161, 209, 214, 224, 370, 417, 418, 419, 421, 422, 425, 426, 431, 432], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 56, 60, 66, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 173, 191, 234, 238, 249, 256, 260, 263, 279, 280, 281, 289, 290, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 318, 320, 321, 325, 326, 328, 329, 330, 331, 333, 335, 338, 340, 342, 343, 350, 351, 352, 353, 354, 355, 384, 399, 405, 412, 414, 415, 419, 422, 424, 425, 426, 427, 428, 432], "trail": [3, 222], "treat": [3, 46, 408, 418, 419], "brief": [3, 414, 417, 419, 429], "deliveri": 3, "design": [3, 27, 38, 46, 50, 56, 57, 61, 66, 107, 113, 120, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 167, 174, 198, 214, 216, 224, 298, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 412, 413, 414, 415, 417, 418, 419, 424, 425, 426, 427, 429, 431, 432], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 46, 50, 53, 56, 57, 58, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 111, 123, 126, 130, 137, 149, 150, 156, 157, 209, 210, 222, 224, 229, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 266, 267, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 335, 389, 409, 412, 413, 414, 415, 417, 418, 425, 426, 427], "flank": [3, 415], "dual": 3, "strictli": [3, 8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340, 412, 414], "refer": [3, 7, 8, 9, 11, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 174, 214, 216, 222, 224, 236, 249, 250, 263, 264, 265, 266, 267, 268, 272, 273, 282, 283, 297, 300, 317, 320, 327, 328, 329, 330, 337, 340, 352, 357, 365, 411, 412, 414, 416, 418, 419, 420, 421, 425, 426, 427, 429], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 101, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 178, 193, 197, 202, 204, 211, 216, 218, 220, 222, 224, 231, 239, 240, 241, 242, 243, 244, 245, 247, 251, 261, 264, 265, 266, 267, 269, 270, 274, 276, 280, 286, 287, 288, 289, 293, 306, 324, 326, 332, 338, 341, 365, 383, 384, 386, 389, 394, 395, 397, 399, 400, 401, 402, 403], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 63, 141, 142, 162, 412], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 83, 89, 102, 109, 110, 405], "adjac": [3, 23, 187, 302], "junction": 3, "inittrack": [3, 256, 260, 302, 412, 415], "tutori": [3, 137, 150, 404, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 432], "scratch": [3, 8, 413, 427], "gym3": 3, "envpool": [3, 144, 145], "interfac": [3, 133, 146, 261, 269, 407, 408, 412, 414, 416, 421, 427, 429], "simultan": [3, 20, 136, 144, 145, 149, 156, 427], "advantag": [3, 8, 251, 317, 319, 334, 337, 339, 352, 353, 354, 355, 356, 357, 359, 361, 363, 365, 366, 368, 408, 409, 412, 413, 414, 415, 426, 427, 432], "scale": [3, 4, 24, 85, 123, 126, 130, 137, 149, 150, 156, 157, 174, 191, 193, 204, 210, 213, 222, 235, 250, 257, 271, 282, 283, 287, 288, 295, 296, 297, 303, 307, 309, 317, 318, 320, 333, 337, 338, 339, 340, 387, 393, 403, 407, 412, 413, 414, 415, 418, 426, 431], "varieti": [3, 11], "inherit": [3, 123, 126, 130, 137, 149, 150, 156, 157, 262, 266, 267, 335, 409, 414, 425, 426], "from_pixel": [3, 11, 121, 122, 124, 125, 129, 131, 132, 135, 136, 153, 174, 201, 370, 372, 412, 413, 415, 417, 421, 422, 428, 429, 431, 432], "81": [3, 109, 412, 413, 428], "simpli": [3, 6, 52, 54, 59, 72, 73, 113, 115, 120, 185, 206, 221, 335, 352, 407, 408, 412, 414, 419, 425, 426, 432], "d": [3, 53, 56, 58, 66, 67, 68, 86, 88, 90, 91, 92, 101, 102, 235, 254, 258, 303, 307, 431], "privat": [3, 123, 126, 130, 137, 149, 150, 156, 157, 221, 427, 432], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 42, 44, 50, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 319, 334, 337, 380, 382, 384, 389, 392, 393, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 60, 73, 104, 107, 123, 126, 130, 137, 149, 150, 156, 157, 158, 159, 193, 204, 257, 269, 282, 287, 288, 350, 407, 418, 419, 425, 427, 429], "inner": [3, 123, 126, 130, 137, 149, 150, 156, 157, 182, 409, 413, 414, 426, 432], "logic": [3, 425], "kept": [3, 23, 108, 110, 123, 126, 130, 137, 149, 150, 156, 157, 182, 206, 215, 226, 231, 257, 287, 288, 419, 425], "mind": [3, 83, 89, 102, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 425, 426], "desig": 3, "wherev": 3, "expos": [3, 153, 180, 183, 308, 413], "modif": [3, 5, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 123, 126, 130, 137, 149, 150, 156, 157, 187, 224, 232, 335, 408, 414, 427], "lost": [3, 8, 221], "eras": [3, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 216], "intern": [3, 41, 70, 123, 126, 130, 137, 149, 150, 156, 157, 410], "face": [3, 5, 8, 9, 417, 432], "NOT": [3, 93, 94, 100, 110, 198], "outsid": [3, 16, 181, 214, 408, 421, 425, 426, 427], "right": [3, 6, 7, 23, 60, 102, 109, 413, 414, 416, 426, 427, 432], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 215, 216, 224, 226, 352, 353, 354, 355, 425], "preclud": 3, "presenc": [3, 56, 66, 419], "annihil": 3, "reason": [3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 89, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 197, 218, 224, 260, 408, 412, 413, 414, 419, 420, 425, 427, 429], "superse": 3, "pettingzoowrapp": [3, 405], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 83, 123, 126, 130, 137, 140, 141, 142, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 347, 407, 413, 418, 420, 426, 429], "environemtn": 3, "__not__": [3, 303, 318, 320, 333, 338, 340, 342, 343], "constrain": [3, 191, 256, 260, 337], "li": 3, "fact": [3, 7, 8, 412, 414, 417, 425, 426, 427, 428, 429, 432], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "perfectli": [3, 409, 412, 416, 427], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 416, 419, 431], "agent0": [3, 416], "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 58, 62, 63, 71, 74, 75, 76, 77, 78, 83, 123, 126, 130, 137, 149, 150, 156, 157, 170, 247, 403, 407], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 174, 175, 180, 182, 183, 184, 185, 187, 191, 192, 193, 195, 197, 199, 200, 202, 204, 205, 206, 209, 211, 213, 214, 216, 217, 218, 220, 222, 224, 226, 229, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 279, 286, 287, 288, 293, 294, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 352, 353, 354, 355, 358, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 379, 382, 383, 384, 386, 387, 389, 403, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "500": [3, 412, 413, 432], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 83, 86, 149, 156], "bottleneck": [3, 8, 102, 109, 110], "great": [3, 7, 8, 416, 425, 431], "speedup": [3, 8, 425, 432], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 180, 183, 231, 255, 259, 412, 414], "misspecifi": 3, "caus": [3, 7, 8, 96, 97, 117, 123, 126, 130, 134, 137, 149, 150, 156, 157, 198, 432], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 96, 123, 126, 130, 137, 149, 150, 156, 157, 158, 162, 174, 186, 192, 202, 210, 211, 212, 214, 216, 224, 226, 233, 234, 252, 278, 279, 320, 335, 340, 412, 414, 425, 426, 427, 429], "mismatch": [3, 56, 413], "subprocess": [3, 14, 15, 17, 127, 149, 156], "multithreadedenv": [3, 405], "underneath": 3, "higher": [3, 4, 102, 177, 310, 412, 413, 414, 425, 429, 432], "flexibl": [3, 9, 144, 344, 408, 409, 412, 416, 429, 432], "cover": [3, 129, 131, 406, 414, 417, 420, 421, 427, 431], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 71, 72, 73, 74, 91, 92, 104, 123, 126, 130, 137, 140, 143, 146, 149, 150, 151, 152, 156, 157, 171, 174, 178, 180, 181, 184, 185, 191, 197, 199, 200, 206, 209, 211, 214, 215, 216, 218, 220, 222, 224, 227, 230, 231, 233, 234, 239, 240, 261, 266, 267, 270, 280, 289, 291, 299, 303, 306, 307, 314, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 347, 350, 358, 370, 401, 405, 407, 412, 413, 414, 416, 420, 425, 426, 427, 429, 432], "atari": [3, 4, 83, 174, 240, 372, 416, 421, 432], "classic": [3, 143, 152, 413], "benchmark_batched_env": 3, "seamlessli": [3, 427], "infrastructur": [3, 425, 426], "world": [3, 5, 143, 312, 329, 416, 421, 425, 426, 427, 432], "paradigm": [3, 17, 426], "decpodp": 3, "game": [3, 4, 5, 83, 141, 142, 147, 148, 240, 372, 416, 421], "thank": [3, 412, 416, 417, 431], "carrier": [3, 414, 415, 417, 429], "particular": [3, 27, 38, 46, 56, 57, 61, 66, 72, 73, 85, 86, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 408, 409, 413, 415, 417, 424, 426, 429], "thu": [3, 334, 426], "vma": [3, 160, 161, 370, 425, 426], "robot": [3, 5, 7, 89, 197, 218, 220, 416, 426], "vmasenv": [3, 370, 405, 425, 426], "balanc": [3, 124, 125, 412, 413, 432], "num_env": [3, 21, 129, 133, 145, 160, 161, 370, 425, 426], "n_agent": [3, 160, 161, 266, 267, 268, 280, 289, 350, 370, 425, 426], "ground_rew": 3, "pos_rew": [3, 426], "style": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91], "vari": [3, 129, 131, 132, 151, 152, 153, 160, 198, 416, 426], "creation": [3, 149, 156, 432], "info_spec": [3, 149], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 42, 43, 44, 45, 50, 51, 121, 122, 123, 126, 129, 130, 131, 132, 135, 136, 137, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 167, 168, 184, 199, 232, 249, 274, 277, 281, 299, 300, 303, 304, 305, 322, 325, 326, 350, 405, 415, 425, 426, 432], "simpl": [3, 9, 27, 38, 46, 50, 56, 57, 61, 66, 71, 123, 126, 130, 137, 149, 150, 156, 157, 224, 242, 302, 307, 322, 324, 335, 339, 408, 412, 413, 414, 417, 418, 419, 425, 426, 429, 432], "prefix": [3, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 303, 320, 335, 340, 371, 415, 419, 432], "exactli": [3, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 132, 137, 149, 150, 156, 157, 214, 216, 224, 254, 258, 274, 320, 340, 412, 415, 420, 425, 426], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 123, 126, 130, 137, 149, 150, 156, 157, 167, 168, 182, 225, 231, 233, 234, 236, 252, 262, 263, 278, 279, 302, 425, 426], "reward_kei": [3, 35, 37, 41, 47, 64, 93, 94, 100, 123, 126, 130, 137, 149, 150, 156, 157, 224, 231, 236, 263, 383, 387, 425, 426], "set_kei": [3, 184, 317, 319, 320, 322, 325, 326, 327, 333, 334, 335, 337, 338, 339, 340, 350, 356, 412, 425, 426], "awai": [3, 414, 417, 425, 426, 431], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 42, 43, 44, 45, 48, 49, 50, 51, 63, 71, 73, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 190, 209, 307], "full": [3, 123, 126, 130, 137, 149, 150, 156, 157, 237, 256, 260, 300, 380, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "autoresettransform": 3, "invalid": [3, 27, 38, 46, 56, 57, 61, 66, 115, 123, 126, 130, 137, 149, 150, 156, 157, 162, 224, 264, 265], "nan": [3, 170, 221], "auto_reset": [3, 41, 123, 126, 130, 136, 137, 149, 150, 156, 157, 170, 224, 427], "auto_reset_replac": [3, 170], "placehold": [3, 132, 184, 216], "set_gym_backend": [3, 123, 126, 129, 130, 137, 149, 150, 156, 157, 163, 170, 405, 417, 431], "autoresettinggymenv": [3, 170], "_step": [3, 123, 126, 130, 137, 149, 150, 156, 157, 168, 170, 171, 180, 183, 187, 199, 200], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 123, 126, 130, 137, 143, 149, 150, 156, 157, 168, 170, 171, 178, 180, 183, 197, 199, 211, 215, 216, 218, 220, 224, 233, 234, 236, 249, 252, 256, 260, 263, 266, 267, 280, 289, 303, 306, 311, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 409, 412, 416, 427, 431], "super": [3, 143, 168, 170, 171, 180, 183, 199, 236, 249, 263, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 412, 427, 431], "td_reset": [3, 170], "exclud": [3, 8, 41, 66, 85, 90, 123, 126, 130, 137, 149, 150, 156, 157, 170, 174, 185, 231, 280, 319, 337, 425, 426, 429], "r": [3, 4, 41, 46, 123, 167, 168, 170, 177, 193, 207, 214, 222, 235, 238, 255, 307, 316, 351, 370, 413, 416, 427, 432], "break_when_any_don": [3, 123, 126, 130, 137, 149, 150, 156, 157, 170, 214, 224, 238, 302, 426], "3633e": [3, 170], "02": [3, 123, 126, 130, 137, 149, 150, 156, 157, 170, 411, 412, 413, 414, 415, 422, 425, 428, 430], "4877e": [3, 170], "01": [3, 170, 193, 235, 278, 279, 313, 317, 319, 334, 337, 411, 412, 413, 415, 428, 430], "2849e": [3, 170], "7584e": [3, 170], "6609e": [3, 170], "6166e": [3, 170], "8366e": [3, 170], "2761e": [3, 170], "5685e": [3, 170], "4102e": [3, 170], "8111e": [3, 170], "9959e": [3, 170], "0865e": [3, 170], "5644e": [3, 170], "2119e": [3, 170], "2542e": [3, 170], "03": [3, 123, 126, 130, 137, 149, 150, 156, 157, 170, 193, 411, 412, 413, 425, 428, 430], "9952e": [3, 170], "4059e": [3, 170], "2094e": [3, 170], "9009e": [3, 170], "5140e": [3, 170], "3554e": [3, 170], "2920e": [3, 170], "7893e": [3, 170], "6429e": [3, 170], "3057e": [3, 170], "2867e": [3, 170], "6963e": [3, 170], "3818e": [3, 170], "2576e": [3, 170], "2679e": [3, 170], "1640e": [3, 170], "00": [3, 121, 122, 170, 411, 412, 413, 414, 415, 425, 426, 428, 430], "6972e": [3, 170], "0212e": [3, 170], "5959e": [3, 170], "4637e": [3, 170], "3121e": [3, 170], "2168e": [3, 170], "5232e": [3, 170], "7704e": [3, 170], "7457e": [3, 170], "4127e": [3, 170], "1064e": [3, 170], "0854e": [3, 170], "5712e": [3, 170], "2189e": [3, 170], "5235e": [3, 170], "8289e": [3, 170], "0009e": [3, 170], "0257e": [3, 170], "8893e": [3, 170], "5872e": [3, 170], "9405e": [3, 170], "7766e": [3, 170], "0403e": [3, 170], "0626e": [3, 170], "2959e": [3, 170], "7263e": [3, 170], "2775e": [3, 170], "9564e": [3, 170], "0411e": [3, 170], "6769e": [3, 170], "6354e": [3, 170], "8698e": [3, 170], "1765e": [3, 170], "6292e": [3, 170], "5375e": [3, 170], "1820e": [3, 170], "7023e": [3, 170], "5836e": [3, 170], "9016e": [3, 170], "4826e": [3, 170], "6191e": [3, 170], "6387e": [3, 170], "8667e": [3, 170], "2056e": [3, 170], "1147e": [3, 170], "5991e": [3, 170], "0278e": [3, 170], "5219e": [3, 170], "3067e": [3, 170], "6617e": [3, 170], "3322e": [3, 170], "2629e": [3, 170], "4599e": [3, 170], "7298e": [3, 170], "5848e": [3, 170], "0148e": [3, 170], "5745e": [3, 170], "6982e": [3, 170], "7877e": [3, 170], "3527e": [3, 170], "7285e": [3, 170], "6668e": [3, 170], "0583e": [3, 170], "6956e": [3, 170], "3962e": [3, 170], "9845e": [3, 170], "5015e": [3, 170], "5903e": [3, 170], "9993e": [3, 170], "9418e": [3, 170], "0196e": [3, 170], "6557e": [3, 170], "2109e": [3, 170], "8997e": [3, 170], "1507e": [3, 170], "7363e": [3, 170], "0310e": [3, 170], "9574e": [3, 170], "8980e": [3, 170], "0090e": [3, 170], "forecast": 3, "awar": [3, 7, 96, 97, 98, 111, 113, 117, 256, 260, 413, 415], "detect": [3, 91, 335, 408], "return_contigu": [3, 123, 126, 130, 137, 149, 150, 156, 157, 226, 424], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 123, 126, 128, 130, 137, 149, 150, 156, 157, 168, 170, 171, 173, 174, 175, 178, 180, 181, 184, 185, 186, 187, 190, 191, 196, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 214, 215, 216, 221, 222, 224, 226, 231, 232, 233, 234, 236, 252, 256, 260, 262, 263, 278, 279, 298, 300, 302, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 351, 352, 353, 354, 355, 356, 389, 412, 425, 427], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 46, 50, 53, 56, 57, 60, 61, 66, 67, 74, 89, 101, 102, 104, 123, 126, 130, 137, 149, 150, 156, 157, 167, 170, 174, 178, 180, 183, 191, 193, 197, 202, 203, 204, 210, 211, 213, 215, 216, 218, 220, 222, 224, 233, 234, 235, 237, 238, 247, 250, 254, 257, 258, 261, 264, 265, 269, 270, 277, 282, 283, 286, 288, 306, 310, 313, 315, 316, 317, 318, 319, 320, 324, 325, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 351, 357, 358, 359, 360, 361, 362, 363, 364, 365, 387, 412, 413, 429, 432], "_set_se": [3, 168, 171, 180, 183, 199, 427], "lazystackedtensordict": [3, 41, 63, 83, 123, 126, 130, 137, 143, 149, 150, 156, 157, 424], "float32": [3, 14, 15, 16, 28, 31, 35, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 109, 117, 121, 122, 123, 126, 129, 130, 131, 135, 136, 137, 143, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 161, 167, 171, 180, 183, 184, 185, 193, 195, 199, 200, 202, 206, 209, 211, 213, 229, 231, 236, 238, 248, 249, 256, 260, 263, 278, 279, 280, 281, 289, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 309, 311, 314, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 350, 407, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432], "exclusive_field": [3, 83, 424], "stack_dim": [3, 83, 424], "dramat": 3, "carefulli": [3, 425, 426, 432], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 224, 226, 294, 299, 300, 303, 304, 305, 306, 307, 318, 320, 333, 338, 340, 342, 343, 414, 425, 426], "plain": [3, 8, 417], "larg": [3, 4, 30, 52, 54, 59, 73, 110, 180, 183, 218, 317, 319, 334, 337, 339, 413, 414, 425, 426, 429], "expens": [3, 102, 109, 110, 370, 429], "absent": [3, 31, 32, 39, 63, 66, 85, 123, 126, 130, 137, 149, 150, 156, 157, 206, 216], "torchvis": [3, 11, 197, 220, 374, 425, 431, 432], "base_env": [3, 122, 123, 126, 130, 131, 136, 137, 148, 149, 150, 156, 157, 159, 167, 168, 171, 177, 180, 182, 183, 191, 195, 199, 201, 207, 209, 211, 212, 214, 216, 224, 372, 412, 413, 414, 416, 425, 428, 431, 432], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 127, 130, 137, 143, 149, 150, 156, 157, 166, 169, 171, 178, 184, 211, 216, 224, 239, 240, 261, 268, 316, 335, 370, 394, 395, 401, 402, 403, 413, 429], "bring": [3, 414, 417, 432], "signific": [3, 5, 8, 414, 431, 432], "kind": [3, 58, 71, 419, 425, 429], "consult": 3, "interest": [3, 303, 307, 407, 413, 414, 417, 426, 427, 432], "resize_par": 3, "easi": [3, 5, 11, 83, 88, 123, 124, 125, 126, 130, 135, 136, 137, 149, 150, 156, 157, 233, 234, 252, 278, 279, 407, 408, 412, 413, 414, 426, 428, 429, 431, 432], "revers": [3, 258], "order": [3, 11, 16, 27, 38, 46, 50, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 110, 123, 126, 130, 137, 149, 150, 156, 157, 175, 180, 183, 195, 214, 216, 224, 277, 294, 299, 306, 308, 309, 311, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 413, 425, 426], "chain": [3, 52, 53, 54, 58, 59, 67, 68, 73, 83, 85, 86, 87, 88, 89, 90, 91, 137, 178, 182, 239, 240, 309, 432], "in_keys_inv": [3, 164, 177, 180, 181, 183, 193, 194, 195, 199, 200, 202, 207, 215, 217, 412, 424, 427, 432], "append_transform": [3, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 164, 167, 173, 197, 211, 214, 216, 218, 222, 238, 256, 260, 370, 412, 415, 425, 427, 429, 431, 432], "doubletofloat": [3, 412, 414, 424], "float64": [3, 27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 124, 125, 126, 130, 137, 141, 142, 149, 150, 156, 157, 167, 178, 180, 183, 197, 211, 215, 216, 218, 220, 224, 306, 424, 432], "constrast": 3, "out_keys_inv": [3, 164, 177, 180, 181, 183, 193, 194, 195, 199, 200, 207, 215, 217, 427], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 102, 108, 109, 111, 113, 117, 123, 126, 130, 137, 149, 150, 156, 157, 171, 178, 180, 181, 183, 185, 191, 199, 200, 206, 209, 215, 216, 222, 224, 258, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 408, 412, 415, 425, 426, 427, 428, 429, 432], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 129, 130, 131, 137, 149, 150, 156, 157, 158, 159, 180, 183, 184, 205, 214, 216, 224, 231, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 370, 372, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 409, 412, 414, 417, 429], "manipul": [3, 4, 8, 124, 125, 197, 218, 432], "third_transform": 3, "unexpect": [3, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 432], "behviour": 3, "fortun": [3, 415, 416, 417, 418, 421], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 83, 96, 123, 126, 130, 137, 149, 150, 156, 157, 211, 224, 232, 307, 352, 353, 354, 355, 412, 414, 421, 425, 426], "catfram": [3, 302, 413], "hold": [3, 348, 349, 427, 429], "notic": [3, 115, 174, 414, 422, 427], "parenthood": 3, "henc": [3, 53, 198, 232, 266, 412, 414, 425, 426, 427], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 149, 156, 370, 427], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 129, 130, 131, 137, 141, 142, 149, 150, 151, 152, 156, 157, 160, 161, 167, 182, 274, 277, 281, 324, 325, 326, 327, 407, 413, 414, 418, 425, 426, 427, 432], "might": [3, 52, 54, 55, 59, 73, 376, 406, 412, 417, 432], "action_mask": [3, 135, 136, 151, 152, 154, 155, 168], "unavail": [3, 151, 152], "probabl": [3, 4, 8, 60, 104, 107, 237, 238, 247, 249, 252, 254, 256, 258, 260, 261, 264, 265, 274, 287, 288, 303, 307, 320, 407, 413, 416, 418, 431], "probabilistictensordictmodul": [3, 191, 307, 308, 431], "tensordictsequenti": [3, 56, 66, 238, 252, 256, 260, 278, 299, 302, 308, 314, 407, 412, 413, 415, 416, 418, 422, 424, 425, 428, 431], "maskedcategor": [3, 265, 405], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 121, 122, 123, 126, 130, 137, 143, 149, 150, 156, 157, 178, 191, 197, 211, 215, 216, 218, 220, 224, 236, 238, 239, 240, 242, 243, 244, 245, 249, 251, 252, 261, 263, 266, 267, 269, 270, 271, 278, 279, 281, 282, 283, 294, 295, 296, 297, 301, 302, 303, 304, 306, 309, 311, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 399, 407, 413, 416, 424, 428, 431], "in_feat": 3, "out_feat": 3, "logit": [3, 54, 60, 248, 264, 265, 274, 277, 300, 303, 325, 326, 407], "dist": [3, 10, 264, 265, 274, 418], "distribution_class": [3, 191, 295, 296, 297, 298, 303, 307, 309, 317, 318, 320, 325, 326, 333, 337, 338, 339, 340, 407, 412, 414, 418, 425, 426, 431], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 87, 121, 122, 123, 126, 130, 131, 135, 136, 137, 142, 145, 147, 148, 149, 150, 151, 152, 156, 157, 159, 161, 214, 224, 226, 234, 256, 260, 279, 290, 295, 296, 297, 302, 304, 312, 335, 350, 407, 412, 413, 414, 415, 419, 422, 425, 426, 432], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 168, 198, 224], "enviorn": [3, 141, 151, 152, 160, 161], "itself": [3, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 163, 170, 224, 335, 342, 414, 417], "ey": 3, "report": [3, 121, 122, 135, 136, 421], "foremost": 3, "callback": [3, 123, 126, 130, 137, 149, 150, 156, 157, 426], "ad": [3, 4, 16, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 123, 126, 130, 137, 149, 150, 156, 157, 174, 205, 214, 216, 224, 235, 269, 270, 278, 279, 317, 319, 320, 322, 327, 334, 337, 340, 350, 413, 415, 416, 418, 425, 429, 431, 432], "tensordictrecord": [3, 405], "videorecord": [3, 11, 370, 405, 414, 421, 422, 425], "csvlogger": [3, 11, 370, 372, 405, 413, 421, 422, 425], "wandblogg": [3, 405, 421], "tensorboardlogg": [3, 399, 405, 421], "tag": [3, 7, 11, 370, 372, 374, 377, 403, 421, 422, 425], "mp4": [3, 370, 372, 374, 422, 425], "video_format": [3, 370, 372, 374, 422, 425], "whc": 3, "cwh": 3, "exp": [3, 271, 316], "al": [3, 24, 129, 131, 184, 195, 236, 416, 432], "pong": [3, 83, 145, 195, 416, 432], "v5": [3, 129, 131, 145, 184, 195, 416, 432], "cach": [3, 52, 54, 72, 83, 85, 86, 87, 89, 90, 91, 92, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 170, 180, 183, 197, 216, 220, 231, 237, 381, 428], "grow": 3, "dumpi": 3, "tediou": [3, 417], "workspac": [3, 73, 123, 126, 130, 137, 149, 150, 156, 157], "pixelrendertransform": [3, 405, 425], "stream": [3, 89], "alik": [3, 370], "envcreat": [3, 16, 22, 149, 156, 214, 370, 399, 400, 403, 405, 412, 413, 431, 432], "render_mod": [3, 370, 427], "rgb_arrai": [3, 370, 425, 426, 427], "uncom": [3, 421], "line": [3, 7, 27, 38, 46, 56, 57, 61, 66, 83, 123, 126, 130, 137, 149, 150, 156, 157, 224, 413, 416, 421, 425, 426, 427], "comment": [3, 409, 413, 431], "pixels_record": [3, 370], "close": [3, 16, 130, 144, 191, 317, 319, 334, 337, 370, 412, 413, 417, 424, 425, 427, 431], "mission": 3, "irrespect": [3, 306, 307], "dmcontrol": [3, 123, 126, 130, 137, 149, 150, 156, 157], "jumanji": [3, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157], "special": [3, 75, 77, 405, 412, 415, 416, 432], "framework": [3, 4, 9, 22, 121, 122, 123, 126, 130, 135, 136, 137, 143, 149, 150, 156, 157, 254, 431, 432], "Its": [3, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 222, 224, 306, 356], "success": [3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 174, 215, 252, 320, 342, 413, 420, 422, 427, 429, 431], "foundat": [3, 5, 151, 152, 414, 426], "inspir": [3, 416, 427], "gone": [3, 4, 5, 302], "prefer": [3, 14, 15, 17, 20, 23, 24, 53, 58, 67, 68, 198, 206, 337, 342, 386, 407, 414, 425, 426, 429, 431], "maintain": [3, 5, 9, 33, 174, 427], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 413, 414, 415, 420, 425, 426, 427, 429, 432], "decor": [3, 8, 12, 166, 256, 260, 293, 335, 352, 353, 354, 355, 415, 431], "relev": [3, 60, 123, 126, 130, 137, 149, 150, 156, 157, 352, 353, 354, 355, 356, 379, 416, 427], "gym_backend": [3, 166, 405], "env1": [3, 238, 424], "venv": 3, "python3": [3, 6, 7, 10, 416], "site": [3, 6, 7, 90, 166, 416], "env2": [3, 424], "_env": [3, 6, 129, 432], "classic_control": 3, "pendulumenv": [3, 41, 405, 427], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 139, 163], "side": [3, 4, 432], "v0": [3, 14, 15, 52, 54, 59, 73, 123, 126, 130, 132, 135, 136, 137, 138, 139, 149, 150, 156, 157, 178, 216, 222, 399], "26": [3, 110, 123, 126, 130, 137, 149, 150, 156, 157, 412, 413, 415, 425, 428], "fun": [3, 12, 166, 414, 425, 426], "reveal": 4, "bug": 4, "curv": 4, "exploit": [4, 418], "cv": 4, "flip": [4, 136], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 174, 180, 183, 185, 193, 200, 202, 224, 315, 325, 333, 405, 427], "prescript": 4, "tune": [4, 24, 191, 425, 426, 428], "coeffici": [4, 24, 33, 60, 191, 426], "bonu": [4, 317, 319, 334, 337], "beta": [4, 53, 67, 101, 102, 325, 333, 334, 412, 413, 429, 431], "reduc": [4, 6, 30, 115, 123, 126, 130, 137, 149, 150, 156, 157, 174, 210, 231, 235, 237, 287, 405, 413, 425], "downstream": [4, 408, 412], "formul": [4, 425, 426], "ob": [4, 8, 23, 31, 32, 39, 53, 58, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 109, 110, 115, 123, 126, 130, 137, 149, 150, 156, 157, 168, 170, 180, 181, 183, 193, 207, 213, 229, 231, 242, 243, 244, 245, 266, 267, 268, 304, 311, 318, 320, 321, 326, 333, 338, 340, 342, 343, 352, 353, 354, 355, 413, 416, 424, 425, 427, 429, 431, 432], "rate": [4, 11, 83, 222, 351, 413, 414, 425, 426], "gradient": [4, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 237, 257, 265, 270, 274, 287, 288, 317, 319, 320, 321, 325, 326, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 351, 352, 353, 354, 355, 389, 412, 414, 425, 426, 427], "easier": [4, 57, 407, 412, 431], "local": [4, 7, 10, 16, 21, 27, 38, 46, 56, 57, 61, 66, 102, 109, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 266, 267, 280, 289, 350, 377, 379, 416, 421, 422, 425, 426], "optima": 4, "product": [4, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 254, 255, 258, 259, 401, 402], "sum": [4, 21, 27, 44, 50, 66, 115, 121, 122, 124, 125, 129, 131, 132, 135, 136, 144, 145, 153, 173, 205, 264, 265, 287, 289, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 351, 358, 408, 412, 413, 414, 415, 416, 419, 422, 425, 426, 427, 432], "stat": [4, 193, 222, 393, 403, 413, 414], "w": [4, 104, 123, 147, 148, 174, 176, 179, 201, 213, 254, 278, 279, 372, 413, 415, 429], "yield": [4, 14, 15, 16, 21, 27, 38, 46, 56, 57, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335, 412, 419], "insight": [4, 416], "auxiliari": [4, 419], "credit": 4, "futur": [4, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 93, 94, 100, 123, 126, 130, 137, 149, 150, 156, 157, 197, 214, 216, 220, 224, 261, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 406], "spars": [4, 415], "intermedi": [4, 14, 15, 41, 56, 66, 173, 238, 256, 260, 300, 412, 416, 428], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 412], "discov": 4, "score": [4, 60, 275, 277], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 53, 56, 58, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 141, 142, 151, 152, 160, 161, 168, 170, 171, 173, 174, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 214, 215, 218, 219, 221, 222, 224, 225, 236, 256, 260, 299, 304, 388, 407, 412, 416, 417, 425, 429], "explicit": [4, 12, 72, 104, 429], "mechan": [4, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 413, 419, 427], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 123, 126, 130, 137, 149, 150, 156, 157, 258, 325, 333, 414, 426], "addition": [4, 247], "timestep": [4, 60, 85, 202, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 425, 426], "realli": 4, "huge": [4, 267, 415], "std": [4, 193, 222, 233, 234, 271, 276, 412, 432], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 415, 417, 419, 420, 421, 422, 423, 424, 428, 429, 430], "estim": [4, 83, 102, 109, 110, 184, 191, 242, 287, 295, 296, 297, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "unseen": 4, "extrins": 4, "wrong": [4, 102, 109], "bonus": 4, "denser": 4, "prior": [4, 61, 283, 329, 426], "freshli": 4, "drop": [4, 108, 110, 231], "meant": [4, 46, 143], "encourag": [4, 149, 277, 412, 413, 429], "measur": [4, 96, 97, 117, 121, 122, 135, 136, 414, 420], "novelti": 4, "revisit": 4, "previous": [4, 414, 432], "diminish": 4, "decreas": [4, 24, 418], "ideal": [4, 193, 427], "down": [4, 14, 15, 16, 17, 408, 415, 417], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 223, 270, 278, 279, 292, 338, 342, 343, 384, 403, 412, 425], "exploratori": [4, 317, 319, 334, 337], "misalign": 4, "trade": [4, 418], "unavoid": 4, "divers": [4, 149, 156], "bootstrap": [4, 327, 353, 359, 360, 412, 415], "noisi": [4, 269, 270, 292, 407], "unstabl": [4, 257, 287, 288], "inher": [4, 317, 337], "stochast": [4, 191, 250, 270, 272, 283, 318, 320, 323, 325, 326, 331, 333, 336, 338, 340, 407, 414, 418, 426], "enemi": 4, "pomdp": [4, 429], "loos": [4, 407, 413, 414], "nonexist": 4, "architectur": [4, 246, 419, 425, 426, 431], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 42, 44, 53, 55, 56, 58, 60, 63, 66, 69, 72, 73, 89, 92, 95, 104, 105, 107, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 164, 172, 173, 174, 175, 176, 179, 180, 182, 183, 187, 189, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 213, 215, 222, 239, 240, 247, 249, 254, 258, 261, 264, 265, 266, 267, 274, 281, 285, 298, 308, 309, 323, 371, 372, 384, 385, 386, 388, 389, 407, 412, 414, 415, 416, 424, 425, 426, 432], "lstm": [4, 211, 259, 260, 271, 416], "rel": [4, 104, 211, 247, 286, 412, 413, 425, 426, 429], "tend": 4, "stabl": [4, 9, 10, 146], "compens": 4, "descent": [4, 270], "minimum": [4, 74, 149, 156, 203, 250, 271, 286, 287, 288, 310, 313, 316, 318, 320, 326, 335, 336, 340, 380, 412, 414, 422, 425, 426], "manual": [4, 11, 18, 20, 21, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 130, 131, 412, 415, 429], "deviat": [4, 193, 222, 233, 234, 236, 250, 263, 269, 270, 276, 277, 337, 342, 343, 412, 418, 426], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 102, 109, 170, 254, 255, 258, 259, 416, 417, 418, 419, 420, 421, 422], "stabil": [4, 188, 237, 317, 319, 334, 337, 339], "stage": [4, 412, 427], "never": [4, 14, 15, 17, 28, 74, 102, 420, 431], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 42, 43, 44, 45, 50, 51, 63, 94, 222, 257, 287, 288, 317, 319, 334, 337, 339, 387, 421, 429], "entir": [4, 89, 123, 126, 130, 137, 149, 150, 156, 157, 174, 266, 414, 417, 427, 429], "submit": [4, 129, 171, 406, 431], "system": [4, 5, 94, 414, 425, 426, 427], "adequ": [4, 123, 126, 130, 137, 149, 150, 156, 157, 226, 414, 425, 426], "infeas": 4, "allevi": [4, 407], "prune": [4, 137], "fire": [4, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "illeg": 4, "chess": [4, 123, 147, 148], "grasp": 4, "top": [4, 115, 121, 122, 135, 136, 179, 236, 263, 418], "wherein": 4, "cumul": [4, 205, 210, 236, 358, 414], "q": [4, 9, 123, 126, 130, 137, 149, 150, 156, 157, 242, 243, 244, 245, 248, 249, 251, 280, 281, 289, 297, 300, 304, 305, 318, 320, 321, 322, 324, 325, 326, 327, 332, 333, 338, 340, 342, 343, 350, 405, 412, 419], "flow": [4, 412, 414, 425, 426, 427, 429], "reparameter": [4, 247, 265, 274], "soft": [4, 332, 340, 341, 425], "critic": [4, 8, 295, 301, 317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 412, 419], "clip": [4, 60, 177, 203, 317, 319, 334, 337, 339, 342, 343, 389, 414, 426, 427], "oppos": [4, 72], "incorrect": [4, 109], "thought": [4, 123, 126, 130, 137, 149, 150, 156, 157], "region": 4, "squash": [4, 415, 431], "tanh": [4, 239, 240, 254, 255, 257, 258, 259, 261, 267, 286, 287, 288, 310, 414, 416, 418, 425, 426, 427, 428, 431], "prob": [4, 264, 265, 274, 277, 414, 426], "rememb": [4, 425], "remap": 4, "origin": [4, 8, 52, 54, 56, 59, 60, 66, 73, 134, 181, 182, 191, 197, 216, 220, 224, 254, 303, 306, 307, 318, 320, 332, 333, 335, 337, 338, 340, 342, 343, 412, 416, 424, 427, 432], "histor": 5, "ceas": 5, "farama": [5, 87, 138, 139, 151, 152, 414, 427], "best": [5, 9, 134, 256, 260, 425, 426, 429, 431], "gymwrapp": [5, 123, 126, 130, 137, 149, 150, 156, 157, 185, 206, 209, 221, 405, 414, 431], "feel": [5, 406, 422, 431], "free": [5, 7, 180, 183, 231, 317, 329, 337, 409, 414, 422, 426, 431], "gladli": 5, "prepar": [6, 37, 86, 414], "conda": [6, 7, 406], "cmake": 6, "activ": [6, 7, 9, 41, 239, 240, 246, 250, 261, 266, 267, 319, 334, 337, 407, 416, 427, 431], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 86, 406], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 132], "y": [6, 7, 56, 58, 66, 146, 251, 266, 290, 412, 426, 429], "facebookresearch": [6, 86, 132], "subdirectori": 6, "verbos": [6, 422], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 80, 123, 126, 130, 137, 149, 150, 156, 157, 199, 208, 224, 335, 425, 426, 431, 432], "command": [6, 7, 10, 157, 414, 425, 426, 427, 432], "readm": [6, 7, 160, 431], "md": [6, 7], "habitatenv": [6, 405], "_has_habitat": 6, "available_env": [6, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 138, 141, 142, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 432], "startswith": [6, 238, 408, 412, 419], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 127, 335, 412], "env_nam": [6, 121, 123, 124, 126, 127, 129, 130, 132, 135, 137, 138, 144, 149, 150, 153, 156, 157, 412, 414, 432], "llvmlite": 6, "config": [6, 7, 197, 220, 241, 246, 276, 393, 394, 395, 397, 400], "var": [6, 7, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 335, 340], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 299, 335], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 30, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 335, 340, 416, 429], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7, 416], "libgldispatch": [6, 7], "offici": [7, 85, 416], "stand": [7, 36, 124, 125, 149, 156, 424, 427, 432], "joint": [7, 413], "contact": [7, 55, 425], "engin": [7, 153, 427], "biomechan": 7, "graphic": 7, "anim": [7, 426], "area": 7, "demand": [7, 421, 432], "fast": [7, 9, 121, 122, 200, 231, 338, 412, 413, 414, 431], "articul": 7, "acquir": [7, 414], "deepmind": [7, 8, 9, 89, 123, 124, 125, 126, 130, 137, 141, 142, 147, 148, 149, 150, 156, 157, 184, 414, 417], "whomev": 7, "licenc": 7, "incorpor": [7, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 252, 278, 279, 342, 415, 418, 427], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 406], "tip": [7, 406], "glfw": [7, 412], "osmesa": 7, "egl": 7, "advic": [7, 89, 432], "sudo": [7, 406], "apt": [7, 426], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 137, 295, 296, 297], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 412, 414, 415, 425, 426, 429], "roboti": 7, "html": [7, 14, 15, 144, 146, 147, 148], "wget": 7, "mujoco210": 7, "tar": [7, 86], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 149, 156], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 52, 54, 72, 92], "bin": [7, 249, 277, 300, 407], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 245, 303, 307, 412, 414, 416, 429], "nvidia": [7, 134, 416], "older": [7, 12], "hack": [7, 412], "adatp": 7, "script": [7, 86, 123, 126, 130, 137, 149, 150, 156, 157, 226, 399, 403, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "unnot": [7, 198], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 94, 413, 429], "troubleshoot": 7, "gl": 7, "h": [7, 104, 174, 176, 179, 201, 213, 254, 255, 256, 258, 259, 260, 263, 372, 413, 415, 429], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 44, 45, 50, 51], "directori": [7, 52, 54, 59, 72, 73, 83, 85, 86, 87, 89, 90, 91, 96, 377, 379, 409, 412, 418, 421, 425], "devel": 7, "ubuntu": [7, 134], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 413, 415, 424], "libstdc": [7, 416], "glibcxx_3": [7, 416], "29": [7, 109, 110, 411, 413, 416, 425, 430], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 95, 96, 97, 98, 102, 105, 109, 110, 111, 116, 117, 119, 123, 126, 130, 137, 149, 150, 156, 157, 224, 254, 255, 258, 259, 287, 352], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 30, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 123, 126, 130, 137, 149, 150, 156, 157, 192, 214, 216, 224, 320, 340, 408, 416, 432], "job": [7, 18, 19, 20, 22, 58, 67, 68, 104, 429, 431], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 109, 121, 122, 413, 414, 415, 426], "114": [7, 416], "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 425, 426], "global": [7, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 104, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 214, 224, 280, 289, 303, 307, 350, 409, 412, 425, 426], "cuda_visible_devic": 7, "id": [7, 23, 60, 73, 102, 104, 109, 110, 123, 126, 129, 130, 137, 149, 150, 156, 157, 158, 159, 278, 279, 320, 338, 375, 379, 420, 429], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 425], "onscreen": 7, "101": [7, 412], "correctli": [7, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "lgl": 7, "libegl": 7, "x11": [7, 426], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 409], "n_training_step": 8, "datapoint": [8, 72, 429], "n_data_per_train": 8, "no_grad": [8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 191, 224, 237, 254, 255, 258, 259, 352, 353, 354, 355, 414, 415, 416, 426], "loss_fn": [8, 415, 419, 420, 431], "zero_grad": [8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 277, 409, 412, 414, 415, 416, 419, 422, 425, 426, 427], "backpropag": [8, 121, 122, 135, 136, 149, 317, 318, 319, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 343, 350, 419, 426, 427], "differenti": [8, 72, 121, 122, 191, 320, 342, 352, 353, 354, 355, 415, 418, 419, 425, 426, 427], "denomin": 8, "artifact": 8, "numer": [8, 58, 130, 222, 257, 287, 288, 294, 299, 300, 303, 304, 305, 306, 307, 387, 414, 429, 432], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 50, 73, 74, 83, 89, 102, 109, 110, 427, 429], "compuat": 8, "fix": [8, 33, 149, 211, 318, 320, 336, 340, 413, 422, 427, 432], "retain_graph": [8, 121, 122], "discuss": [8, 9, 420, 425, 426], "inplac": [8, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 224, 412, 416], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 126, 130, 137, 149, 150, 156, 157, 168, 170, 171, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 196, 197, 198, 199, 200, 202, 205, 206, 209, 210, 211, 212, 214, 215, 218, 219, 221, 222, 224, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 276, 278, 279, 280, 282, 283, 285, 289, 290, 298, 300, 302, 303, 305, 306, 307, 310, 311, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 350, 352, 353, 354, 355, 356, 405, 408, 415, 416, 427, 431], "submodul": [8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 163, 211, 224, 256, 260, 314, 335], "param": [8, 27, 38, 46, 56, 57, 60, 61, 66, 123, 126, 130, 137, 143, 149, 150, 156, 157, 171, 178, 180, 181, 185, 191, 199, 200, 206, 209, 215, 224, 247, 249, 266, 267, 268, 286, 298, 303, 306, 309, 335, 345, 349, 352, 353, 354, 355, 356, 412, 416, 422, 425, 426, 427, 428, 431], "grad": [8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 224, 412, 414], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 271, 280, 306], "factor": [8, 11, 24, 46, 202, 224, 233, 234, 235, 252, 257, 270, 278, 279, 287, 288, 318, 324, 327, 328, 330, 341, 358, 412, 413, 416, 418, 422, 425, 426, 429, 432], "fit": [8, 12, 57, 193, 211, 408, 409, 412], "bottlneck": 8, "brax": [8, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 200, 417, 432], "jax": [8, 12, 121, 122, 135, 136], "improperli": 8, "underli": [8, 123, 126, 127, 130, 137, 149, 150, 156, 157, 335, 415, 417, 419, 421, 427], "tedeiou": 8, "priorit": [8, 53, 67, 101, 102, 320, 321, 322, 324, 325, 326, 333, 338, 340, 342, 343, 412, 413, 420, 431], "amount": [8, 278, 279, 413, 429], "costli": [8, 427], "constitut": [8, 413, 426, 427], "profil": 8, "frequent": [8, 41, 429], "program": [8, 325, 333, 416, 432], "functorch": [8, 10], "incl": 8, "suit": [8, 125, 414, 417, 431, 432], "mujoco_instal": 8, "valueerror": [8, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 108, 195, 416, 431, 432], "idea": [9, 338, 409, 415, 418, 425, 426], "introductori": 9, "intro": [9, 414, 415], "dai": [9, 431], "2022": [9, 10, 237, 431], "spin": [9, 124, 125, 432], "deep": [9, 174, 242, 243, 244, 245, 248, 278, 279, 317, 320, 332, 340, 341, 412, 425], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 418], "summari": [9, 193, 222, 412, 413, 414, 415], "reddit": 9, "reagent": 9, "orient": [9, 91, 432], "baselines3": 9, "tf": 9, "bandit": [9, 146], "tensorflow": [9, 264, 265], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 416, 422], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 431], "grade": 9, "factori": [9, 69, 412], "cherri": 9, "jaxrl": 9, "mbrl": [9, 143, 407], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 414, 415, 425, 426], "notebook": [10, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "24": [10, 90, 110, 129, 144, 145, 277, 302, 411, 412, 413, 422, 425, 430], "pip3": [10, 412, 414, 415, 425, 426], "url": [10, 132], "org": [10, 14, 15, 24, 53, 86, 87, 89, 91, 101, 102, 121, 122, 124, 125, 132, 135, 136, 141, 142, 144, 145, 146, 153, 160, 161, 174, 197, 218, 235, 241, 242, 243, 244, 245, 246, 249, 250, 251, 258, 263, 264, 265, 270, 272, 273, 277, 278, 279, 280, 282, 283, 289, 300, 317, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 352, 357, 365, 404, 423, 428], "whl": 10, "u": [10, 88, 254, 255, 258, 259, 427], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 174, 414, 425, 426, 427, 429], "power": [11, 413], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 206, 405], "ultim": [11, 257, 287, 288], "ffmpeg": 11, "whatev": [11, 408, 412], "fed": [11, 426, 429], "feed": [11, 197, 220, 335, 407, 412, 425, 426, 429], "suppos": [11, 149, 384, 409, 432], "snippet": [11, 197, 218, 412], "gave": 11, "extrem": [11, 149, 156, 317, 319, 334, 337, 339], "blurri": [11, 416], "stitch": 11, "exp_nam": [11, 372, 373, 374, 377, 378, 379, 399, 413, 421, 422], "my_exp": [11, 421], "pixels_onli": [11, 124, 125, 129, 131, 132, 153, 412, 413, 421, 422, 431, 432], "my_video": [11, 421], "record_env": [11, 421, 422], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 297, 407], "module_nam": [12, 335], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 102, 104, 115, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 137, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 170, 174, 184, 190, 191, 197, 201, 209, 210, 214, 216, 218, 220, 221, 222, 224, 230, 232, 236, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 256, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 276, 280, 281, 289, 294, 299, 300, 303, 304, 305, 306, 310, 311, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 397, 403, 413, 414, 416], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": [12, 41], "vs": [12, 256, 260], "x": [12, 23, 46, 56, 57, 58, 60, 61, 66, 89, 110, 137, 191, 213, 235, 237, 238, 240, 249, 251, 254, 255, 256, 258, 259, 260, 261, 263, 266, 267, 290, 299, 303, 304, 313, 316, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 389, 412, 416, 425, 427, 429, 431], "23": [12, 90, 110, 411, 412, 413, 414, 420, 425, 430], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 90, 121, 122, 130, 135, 136, 259, 316, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 412, 413, 414, 415, 416, 422, 425, 426, 427, 429, 432], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 218, 240, 241, 276], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 90, 94, 102, 109, 110, 123, 126, 127, 128, 129, 130, 131, 137, 141, 142, 144, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 191, 211, 214, 216, 221, 222, 224, 239, 240, 241, 242, 243, 244, 245, 246, 251, 261, 276, 303, 307, 320, 340, 342, 376, 377, 384, 389, 394, 395, 401, 402, 403, 407, 412, 413, 414, 429, 431, 432], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 127, 149, 156, 412, 431], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 413], "create_env_kwarg": [14, 15, 16, 17, 21, 127, 144, 149, 156, 214, 412, 432], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 46, 202, 413, 429], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 227, 230, 303, 307, 384], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 52, 54, 59, 73, 149, 156], "num_sub_thread": [14, 15, 17, 149, 156], "set_trunc": [14, 15, 16, 17, 123, 126, 130, 137, 149, 150, 156, 157], "use_buff": [14, 15, 16, 149, 156], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 123, 126, 130, 137, 149, 150, 156, 157], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 46, 307, 337, 414, 420, 429], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 102, 109, 233, 234, 278, 279, 286, 287, 294, 299, 300, 303, 304, 305, 306, 307, 309, 407, 431], "sota": [14, 15, 143, 188, 339, 380, 394, 412, 413, 431], "guard": [14, 15], "doc": [14, 15, 69, 132, 135, 136, 146, 153, 379, 413, 416, 425, 426, 427, 429], "env_mak": [14, 15, 16, 21, 399, 432], "2000": [14, 15, 16, 46, 72, 133, 277, 372, 414, 429], "50": [14, 15, 16, 21, 55, 60, 83, 91, 109, 110, 141, 142, 224, 411, 413, 414, 415, 425, 426, 428, 429, 430], "shutdown": [14, 15, 16, 17, 21, 171, 412, 431], "del": [14, 15, 16, 412, 413, 414, 424, 425, 431, 432], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 59, 60, 64, 67, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 109, 123, 126, 130, 137, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 167, 171, 184, 195, 202, 209, 249, 278, 279, 281, 299, 300, 303, 304, 305, 407, 414, 415, 416, 417, 418, 420, 421, 427, 429, 431, 432], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 173, 290, 299, 302, 304, 415], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 72], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 413], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 83, 89, 102, 109, 110, 235, 426], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 130, 170, 211, 221, 260, 415, 427, 428], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 391, 413], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 92, 121, 122, 123, 124, 125, 126, 129, 130, 131, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 178, 180, 183, 191, 197, 211, 215, 216, 218, 220, 222, 224, 306, 425, 432], "span": [14, 15, 16, 17, 18, 19, 20, 21, 89, 102, 109, 110], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 46, 224, 302, 413, 414, 425, 426], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 60, 379, 407, 425, 426, 427], "round": [14, 15, 16, 17, 18, 19, 20, 21, 83], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 87, 123, 126, 130, 137, 149, 150, 156, 157, 224], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 303, 335, 384, 407, 412, 413, 414, 415, 418, 425, 431], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 221], "ratio": [14, 15, 17, 60, 412, 414], "finish": [14, 15, 17, 21, 130, 202, 432], "rest": [14, 15, 17, 237, 407, 414, 415, 425, 427, 431], "earli": [14, 15, 17, 46, 130, 209, 431], "safeti": [14, 15, 17, 143, 149, 156], "harm": [14, 15, 17, 149, 156], "exclus": [14, 15, 79, 80, 83, 89, 102, 109, 110, 171, 185, 187, 254, 256, 258, 260, 264, 265, 299, 300, 304, 305, 341, 342, 343, 352, 353, 354, 355, 356, 379, 403, 407], "add_truncated_kei": [14, 15, 16, 17, 123, 126, 130, 137, 149, 150, 156, 157, 216], "trust": [14, 15, 16, 123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 260], "cudagraphmodul": [14, 15, 16, 123, 126, 130, 137, 149, 150, 156, 157], "behaviour": [14, 15, 16, 56, 66, 415, 416, 431], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 104, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 169, 171, 178, 197, 199, 208, 211, 214, 215, 216, 217, 219, 220, 223, 224, 233, 234, 236, 238, 239, 240, 242, 243, 244, 245, 248, 251, 252, 253, 256, 257, 260, 261, 262, 263, 266, 267, 268, 274, 278, 279, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 370, 372, 376, 377, 379, 382, 389, 394, 395, 400, 401, 402, 408, 414, 416, 426], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 222, 224, 320, 340, 413], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 123, 126, 130, 137, 149, 150, 156, 157, 216], "increment": [14, 15, 16, 17, 123, 126, 130, 137, 149, 150, 156, 157, 193, 334], "env_fn": [14, 15, 16, 17, 127, 401, 402], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 109, 110, 244, 245], "out_se": [14, 15, 16, 17, 432], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 337], "whole": [16, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 303, 320, 340, 380, 412, 414], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 416, 418], "policy_state_dict": 16, "env_state_dict": 16, "mere": [17, 416], "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 70, 247, 389], "respect": [18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 172, 178, 180, 183, 197, 198, 207, 211, 215, 216, 218, 220, 224, 254, 258, 266, 283, 306, 311, 317, 319, 334, 337, 339, 352, 354, 355, 385, 414, 415, 425, 426], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 406, 413, 414, 416, 418, 421, 424, 429, 431], "fashion": [18, 20, 21, 52, 54, 59, 73, 110], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 41, 83, 86, 87, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 187], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 53, 56, 57, 58, 61, 66, 67, 68, 85, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313, 412], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 427], "visit": [18, 19, 20, 73], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 158], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 277, 412], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 50, 83, 303, 307], "tensorpiperpcbackendopt": 20, "_td": [21, 127], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 401, 402, 412, 413], "coordin": [21, 179], "init": [21, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224, 266, 267, 268, 379, 413, 414], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 246, 413, 416, 429], "equat": [21, 56, 73, 89, 130, 222, 278, 279, 316, 319, 341, 414, 417, 427], "exce": [21, 429], "indefinit": [21, 82], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 235, 389, 412, 414, 415], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 342, 419], "jump": [22, 417], "host": [22, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 241, 246, 276, 298], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 102, 109, 110], "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 110, 123, 126, 130, 137, 149, 150, 156, 157, 164, 167, 168, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 217, 218, 222, 224, 225, 231, 232, 233, 234, 238, 249, 252, 278, 279, 281, 298, 302, 307, 322, 350, 370, 372], "as_nest": 23, "durat": [23, 426], "meta": [23, 52, 54, 59, 71, 73, 85, 128, 132, 317, 319, 334, 337, 339, 409, 414, 425, 426, 429], "aren": [23, 210, 415], "eventu": [23, 280, 415, 427], "supersed": 23, "recov": [23, 85, 87, 89, 90, 91, 109, 110, 234, 279, 308, 325, 333, 424], "layout": 23, "to_padded_tensor": 23, "nested_tensor": [23, 129, 131], "stride": [23, 27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 239, 240, 242, 243, 251, 266, 413, 425, 431], "jag": 23, "focu": [23, 412, 413, 414, 416, 418, 419, 420, 425], "team": [23, 425, 426, 431], "cat": [23, 41, 311, 318, 320, 321, 333, 338, 340, 342, 343, 425, 429, 431], "arang": [23, 50, 102, 109, 110, 167, 249, 265, 299, 380, 407, 429], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 68, 74, 83, 89, 109, 123, 135, 136, 147, 148, 157, 229, 302, 429], "data_split": 23, "got": [23, 420], "init_kl_coef": 24, "horizon": [24, 141, 142, 160, 161, 236, 263, 414], "kl": [24, 33, 60, 191, 329, 334], "describ": [24, 52, 54, 59, 71, 73, 175, 215, 225, 286, 287, 322, 375, 408, 412, 414, 425, 426, 427, 432], "ziegler": 24, "et": [24, 236], "relax": [24, 370], "penalti": [24, 60, 331, 334], "strai": [24, 60], "greater": [24, 83, 102, 109, 110, 256, 260, 320, 412, 413], "increas": [24, 94, 174, 212, 237, 278, 279, 425, 426], "pull": [24, 429], "toward": [24, 220], "aggress": 24, "kl_coef": [24, 33, 60], "arxiv": [24, 53, 86, 89, 91, 101, 102, 121, 122, 124, 125, 135, 136, 141, 142, 144, 145, 153, 160, 161, 174, 197, 218, 235, 241, 242, 243, 244, 245, 246, 249, 250, 251, 258, 263, 270, 272, 273, 277, 278, 279, 280, 282, 283, 289, 300, 317, 318, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 341, 342, 352, 357, 365, 428], "pdf": [24, 174, 241, 242, 243, 244, 245, 249, 277, 278, 279, 300, 320, 327, 331, 338, 341, 342, 352, 357, 365], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 425, 426], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 191], "newest": 24, "int8": [25, 126, 140, 151, 152, 172], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 121, 122, 126, 129, 131, 132, 135, 136, 144, 145, 147, 148, 153, 158, 159, 167, 182, 273, 274, 277, 282, 316, 413, 414, 415, 418, 427, 429], "null": [25, 28, 29, 31, 32, 39, 40, 48, 49, 53, 62, 63, 67, 71, 74, 75, 76, 77, 78, 101, 102, 172], "denot": [25, 426], "nmber": 25, "clariti": [25, 41], "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 135, 136, 143, 147, 148, 158, 159, 168, 171, 180, 183, 199, 225, 236, 263, 303, 317, 318, 320, 321, 322, 324, 325, 326, 333, 335, 337, 338, 340, 342, 343, 416, 427, 431, 432], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "cardin": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 73, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 249, 281, 299, 300, 305, 414], "outcom": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 247, 265, 286, 335, 425], "cartesian": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 432], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 130, 278, 279, 310, 370, 416, 425], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 60, 62, 63, 71, 74, 75, 76, 77, 78, 101, 123, 126, 130, 131, 137, 149, 150, 156, 157, 184, 254, 255, 258, 259, 412, 425, 429], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 130, 310, 370, 416, 425, 427], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 247, 326, 340], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 239, 240, 261, 284, 285], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 121, 122, 123, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 178, 180, 183, 197, 211, 215, 216, 218, 220, 222, 224, 306, 316, 335, 412, 413, 414, 427, 429], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 427, 432], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 412], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 407], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 265, 274, 303, 408], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 62, 63, 71, 74, 75, 76, 77, 78, 182, 233, 234, 258, 278, 279, 294, 299, 300, 303, 304, 305, 306, 307, 379, 407, 431, 432], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 103, 335, 432], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157, 193, 222, 233, 234, 235, 239, 240, 257, 261, 264, 265, 271, 287, 288, 303, 307, 319, 320, 334, 337, 384, 387, 403, 407, 409, 415, 418, 426, 432], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 211, 252, 303, 307, 414, 425, 426], "set_provisional_n": [25, 26, 30, 34, 42, 43, 123], "temporarili": [25, 26, 30, 34, 42, 43, 94, 123, 126, 130, 137, 149, 150, 156, 157, 226, 420, 429], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 197, 218, 220, 306], "to_categor": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_categorical_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 123, 126, 130, 137, 149, 150, 156, 157], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 215, 216, 271, 286, 403], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_one_hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 121, 122, 129, 131, 132, 135, 136, 141, 142, 144, 145, 147, 148, 151, 152, 153, 158, 159, 160, 161, 167, 168, 182, 249, 274, 275, 281, 299, 300, 304, 305, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 415], "categ": [25, 26, 30, 34, 44, 45, 303], "categ_sampl": [25, 26, 30, 34, 44, 45, 50, 51], "onehot_sampl": [25, 26, 30, 34, 44, 45], "to_one_hot_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "categoricalbox": [25, 26, 30, 34, 44, 45, 50, 51, 150, 418, 425, 426, 432], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "update_mask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "disabl": [25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 257, 288, 370, 412, 425], "unmask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "ts": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 414, 415, 417, 425, 426, 429], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "child": [27, 38, 41, 46, 56, 57, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 224, 413], "fn": [27, 38, 46, 55, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 224, 271, 401, 402], "recurs": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 79, 80, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335, 416], "children": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 224], "init_weight": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "m": [27, 38, 42, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 182, 224, 238, 307, 413, 427], "fill_": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 413, 415], "net": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 243, 245, 248, 251, 267, 317, 318, 320, 326, 333, 337, 338, 339, 340, 399, 413, 427, 428, 431], "in_featur": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 239, 240, 242, 243, 244, 245, 251, 261, 266, 267, 269, 270, 295, 306, 314, 322, 324, 416, 418, 419, 431], "out_featur": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 143, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 236, 239, 240, 242, 243, 244, 245, 250, 251, 256, 260, 261, 263, 266, 267, 269, 270, 295, 299, 306, 314, 322, 324, 407, 412, 415, 416, 418, 419, 422, 431], "bia": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 214, 215, 216, 218, 220, 224, 235, 239, 240, 242, 243, 244, 245, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 267, 269, 270, 271, 278, 279, 306, 313, 315, 316, 320, 335, 340, 408, 412, 413, 414, 415, 416, 426, 431], "requires_grad": [27, 38, 46, 56, 57, 61, 66, 121, 122, 123, 126, 130, 137, 149, 150, 156, 157, 191, 214, 216, 224, 277, 320, 340], "bfloat16": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "datatyp": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 429], "member": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335, 372], "xdoctest": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 214, 215, 216, 218, 220, 224, 306, 320, 335, 340], "buf": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "20l": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335], "1l": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335], "5l": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335], "__call__": [27, 38, 46, 55, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 307, 409], "doubl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 180, 181, 183, 197, 211, 215, 216, 218, 220, 224, 306, 322, 327, 332, 338, 341, 350, 412, 413, 414, 415, 432], "eval": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 222, 224, 237, 407, 412, 413, 414], "evalu": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 131, 137, 141, 142, 149, 150, 156, 157, 216, 224, 237, 247, 264, 265, 274, 288, 338, 394, 395, 413, 414, 422], "dropout": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 237, 238, 254, 256, 258, 260, 261, 407, 415], "batchnorm": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 235], "comparison": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 216, 224, 335, 412, 413], "similar": [27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 89, 123, 126, 130, 137, 149, 150, 151, 152, 156, 157, 178, 197, 211, 215, 216, 218, 219, 220, 222, 224, 295, 297, 303, 306, 307, 408, 412, 413, 414, 415, 416, 418, 419, 420, 421, 427, 429, 431, 432], "extra_repr": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "recip": [27, 38, 55, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313], "silent": [27, 38, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 268, 271, 272, 273, 276, 278, 279, 282, 283, 285, 290, 298, 300, 302, 305, 310, 313], "get_buff": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "get_submodul": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "qualifi": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "referenc": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "attributeerror": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "resolv": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "someth": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 140, 149, 150, 156, 157, 224, 406, 413, 414, 427, 432], "get_extra_st": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224], "set_extra_st": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224], "picklabl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224], "pickl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224], "get_paramet": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "net_b": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "net_c": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "conv": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 239, 240, 413, 416], "conv2d": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 240, 242, 243, 251, 266, 416, 431], "kernel_s": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 239, 240, 242, 243, 251, 266, 272, 413, 431], "diagram": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "degre": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "named_modul": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "half": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 412], "ipu": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "strict": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340, 416], "descend": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "get_swap_module_params_on_convers": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "persist": [27, 36, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 231, 320, 340], "enforc": [27, 38, 46, 56, 57, 61, 66, 108, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 308, 320, 340, 427], "preserv": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "missing_kei": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "unexpected_kei": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "namedtupl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "l": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 254, 258, 351, 414, 427], "idx": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "mtia": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "named_buff": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "remove_dupl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335], "prepend": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 335, 416], "running_var": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "named_children": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "conv4": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "conv5": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "memo": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "named_paramet": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 191, 224, 335], "register_backward_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "removablehandl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "favor": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 414], "register_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_buff": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "running_mean": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "alongsid": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 421], "num_featur": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 235], "register_forward_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 249, 281], "with_kwarg": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "always_cal": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_module_forward_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "regardless": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 319, 334, 337], "register_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "invok": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "And": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 419], "forward_pr": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_module_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "grad_input": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "grad_output": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "subsequ": [27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 170, 224, 415, 425], "technic": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 413, 415, 416, 418], "caller": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_module_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "backward_pr": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_module_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_load_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "incompatible_kei": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "thrown": [27, 38, 46, 56, 57, 61, 62, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 429], "register_load_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "local_metadata": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "error_msg": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "noqa": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "b950": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_modul": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 409], "alia": [27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_paramet": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "register_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "keep_var": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "requires_grad_": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 416], "autograd": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340], "freez": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 222, 224], "finetun": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "gan": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "set_submodul": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "overid": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "share_memori": [27, 38, 46, 56, 57, 61, 66, 123, 126, 127, 130, 137, 149, 150, 156, 157, 224, 412], "share_memory_": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224, 431], "destin": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 173, 180, 181, 183, 214, 216, 218, 222, 224, 231, 320, 340, 372], "averag": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 222, 224, 278, 279, 320, 328, 329, 340, 387, 412, 414], "shallow": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 340, 415], "pleas": [27, 38, 46, 56, 57, 61, 66, 70, 87, 123, 126, 129, 130, 137, 149, 150, 151, 152, 156, 157, 171, 174, 212, 214, 216, 224, 266, 267, 268, 320, 340, 406], "detach": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 214, 216, 224, 320, 331, 335, 340, 342, 352, 353, 354, 355, 412], "non_block": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 415], "memory_format": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "channels_last": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "unchang": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 182, 197, 211, 215, 216, 218, 220, 224, 252, 306, 386, 412, 429], "tri": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 421], "pin": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "4d": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "ignore_w": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "1913": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "3420": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "5113": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "2325": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "torch_doctest_cuda1": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "gpu1": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "1914": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "5112": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "2324": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "float16": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 255, 259, 306], "cdoubl": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "3741": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "j": [27, 38, 46, 53, 56, 57, 61, 66, 101, 102, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306, 409, 419], "2382": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "5593": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "4443": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "complex128": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "6122": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "1150": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 178, 197, 211, 215, 216, 218, 220, 224, 306], "to_empti": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "dst_type": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "xpu": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "set_to_non": [27, 38, 46, 56, 57, 61, 66, 123, 126, 130, 137, 149, 150, 156, 157, 224], "upper": [28, 107, 192], "continuousbox": [28, 31, 74, 123, 126, 130, 137, 149, 150, 156, 157, 211, 229, 414, 415, 425, 426, 427, 431, 432], "inst": 30, "provision": 30, "descript": [31, 160, 170, 413, 414], "akin": 31, "unnam": 31, "compositespec": [31, 405, 427, 432], "constraint": [31, 143, 287, 414, 425, 426], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 175, 412], "_nodefault": [31, 32, 39, 52, 54, 59, 63, 73], "is_empti": [31, 32, 39, 63, 427], "include_nest": [31, 32, 39, 63], "leaves_onli": [31, 32, 39, 63], "is_leaf": [31, 32, 39, 63], "_compositespecitemsview": [31, 32, 39, 63], "_compositespeckeysview": [31, 32, 39, 63], "reflect": [31, 32, 39, 63, 131, 151, 152, 221, 231, 335, 392, 413, 414, 415, 426], "lock_": [31, 32, 39, 63], "succeed": [31, 32, 39, 63], "pop": [31, 32, 39, 63], "keyerror": [31, 32, 39, 63, 216], "extract": [31, 32, 39, 63, 86, 170, 301, 412, 414, 431], "selected_kei": [31, 32, 39, 63, 206, 412], "unlock_": [31, 32, 39, 63], "unlock": [31, 32, 39, 52, 54, 59, 63, 73], "_compositespecvaluesview": [31, 32, 39, 63], "multipli": [33, 237, 254, 258, 317, 318, 319, 320, 326, 334, 336, 337, 338, 340, 387, 412, 425], "calcul": [33, 60, 202, 254, 317, 319, 324, 334, 337, 339, 342], "shift_kei": [35, 37, 47, 64], "is_full_kei": [35, 37, 47, 64], "is_ful": [35, 37, 47, 64], "tempfil": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 399, 412, 413, 416, 425, 429], "register_save_hook": [35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "temporarydirectori": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 412, 413, 416, 425, 429], "tmpdir": [35, 53, 58, 64, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 412, 413, 416, 425], "rb_load": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "register_load_hook": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "filesystem": [36, 429], "ted2nest": [37, 405], "stackedcomposit": [39, 405], "tensordictmap": [41, 405], "observation_kei": [41, 123, 126, 130, 137, 149, 150, 156, 157], "excluded_kei": [41, 185], "consolid": [41, 66, 80, 97], "lazili": [41, 267, 427], "from_tensordict_pair": [41, 66], "querymodul": [41, 66], "get_keys_from_env": 41, "cattensor": [41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 126, 130, 137, 149, 150, 156, 157, 412, 424, 427, 432], "unsqueezetransform": [41, 174, 427, 429], "oracl": 41, "obs_kei": 41, "state_kei": [41, 123, 126, 130, 137, 149, 150, 156, 157], "reset_st": 41, "rollout0": 41, "rollout1": 41, "rollout1b": 41, "collaps": 41, "max_length": [41, 52, 54, 55, 69, 72, 73, 92, 416, 422], "valid_path": [41, 73], "assert_clos": [41, 256, 260], "subtre": [41, 73], "Or": [41, 154, 155, 266], "rollout_from_path": [41, 73], "plot": [41, 73, 412, 414, 415, 425, 426, 427], "nvec": [42, 44], "remove_singleton": 42, "ax": [42, 269, 270, 425], "Not": [42, 43, 58, 121, 122, 135, 214, 256, 260], "neither": [42, 43, 44, 45, 89, 158, 427], "use_regist": [44, 50], "mone_hot": [44, 45], "boxlist": [44, 45], "gamma": [46, 202, 224, 263, 317, 318, 320, 321, 322, 324, 326, 327, 328, 330, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 399, 408, 412, 413, 414, 425, 426, 431], "sutton": [46, 408, 425, 426], "1988": 46, "tempor": [46, 256, 260, 263, 353, 354, 359, 360], "44": [46, 109, 412, 413, 414, 415, 428], "discount": [46, 89, 127, 202, 224, 318, 324, 327, 328, 330, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 413, 414, 425, 426], "ahead": [46, 224, 432], "bias": [46, 254, 255, 258, 259, 313, 408, 412], "mitig": [46, 174], "multisteptransform": [46, 405], "99": [46, 202, 222, 263, 330, 345, 351, 358, 399, 412, 413, 414, 416, 419, 422, 425, 426, 431], "nontermin": 46, "original_reward": 46, "newli": [46, 123, 126, 130, 137, 149, 150, 156, 157], "OR": 46, "row": [47, 65, 135, 136], "shae": 48, "nontensordata": [48, 83, 89, 123, 147, 148, 370], "nontensor": [49, 405], "unidimension": 50, "action_valu": [50, 248, 249, 281, 299, 300, 304, 305, 320, 326, 335, 350, 407, 415, 416, 418, 422], "keepdim": 50, "chosen_action_valu": [50, 280, 281, 289, 304, 305, 350, 407, 415, 416, 418], "priori": 50, "uniqu": [50, 73, 109, 110, 137, 141, 142, 174, 184, 210, 211, 212, 214, 302, 379, 420, 429], "tensor_spec": [50, 71, 168, 225, 232, 325, 326, 337, 339], "one_hot": [50, 51, 249, 265, 281], "one_hot_sampl": [50, 51], "chosen_data": [52, 92], "rewarddata": [52, 92, 405], "rejected_data": [52, 92], "dataclass": [52, 54, 59, 71, 73, 335], "from_dataset": [52, 54, 92], "dataset_nam": [52, 54, 60, 72, 92, 146], "550": [52, 54, 60, 72, 92, 109, 110], "root_dir": [52, 54, 72, 92], "from_disk": [52, 54, 72, 92], "carperai": [52, 54, 60, 72], "openai_summarize_comparison": [52, 54, 72], "sequen": [52, 54], "load_from_disk": [52, 54, 72, 92], "load_dataset": [52, 54, 72, 92], "attention_mask": [52, 54, 55, 59, 60, 69, 72, 92], "92534": 52, "input_id": [52, 54, 55, 59, 60, 69, 72, 92, 137], "end_scor": [52, 59, 60, 92], "sub_data": [52, 54], "from_tensordict": [52, 54, 59, 73], "non_tensordict": [52, 54, 59, 73], "getattr": [52, 54, 59, 73], "tensorclass": [52, 54, 59, 73, 92, 96, 97, 117], "pathlib": [52, 54, 59, 73, 96, 416], "load_memmap": [52, 54, 59, 73], "load_": [52, 54, 59, 73], "load_memmap_": [52, 54, 59, 73], "fetch": [52, 54, 59, 73, 121, 122, 124, 125, 191, 418, 428, 429, 432], "fromkei": [52, 54, 59, 73], "memmap": [52, 54, 59, 73, 96, 149, 156, 222, 372, 374, 386, 429], "saved_td": [52, 54, 59, 73], "td_load": [52, 54, 59, 73], "fake": [52, 54, 59, 73, 123, 126, 130, 137, 149, 150, 156, 157, 412, 413, 416], "_subclass": [52, 54, 59, 73], "faketensormod": [52, 54, 59, 73], "faketensor": [52, 54, 59, 73], "from_flatten": [52, 54, 59, 73], "attemptedli": [52, 54, 59, 73], "copy_exist": [52, 54, 59, 73], "return_earli": [52, 54, 59, 73], "share_non_tensor": [52, 54, 59, 73], "existsok": [52, 54, 59, 73, 96], "mimic": [52, 54, 59, 73, 123, 126, 130, 137, 149, 150, 156, 157], "cross": [52, 54, 59, 73, 236], "tensordictfutur": [52, 54, 59, 73], "serialis": [52, 54, 59, 73], "deepli": [52, 54, 59, 73], "insid": [52, 54, 59, 73, 149, 432], "memmap_": [52, 54, 59, 73, 222], "memmap_lik": [52, 54, 59, 73], "contentless": [52, 54, 59, 73], "1_000_000": [52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 412, 415, 425], "alloc": [52, 54, 59, 73, 97, 247, 264, 265, 412], "memmap_refresh_": [52, 54, 59, 73], "refresh": [52, 54, 59, 73, 422, 425, 426], "saved_path": [52, 54, 59, 73], "setattr": [52, 54, 59, 73], "tent": [52, 54, 59, 72, 73], "to_tensordict": [52, 54, 59, 73, 415], "retain_non": [52, 54, 59, 73], "discrard": [52, 54, 59, 73], "switch": [52, 54, 59, 73, 257, 288, 370], "alpha": [53, 67, 101, 102, 239, 240, 242, 243, 244, 245, 251, 266, 318, 320, 326, 336, 338, 340, 342, 412, 429, 431], "ep": [53, 67, 101, 102, 193, 222, 235, 278, 279, 319, 341, 387, 412, 413, 415, 416, 419, 422], "1e": [53, 67, 101, 102, 193, 222, 235, 247, 250, 271, 286, 412, 413, 414, 426], "08": [53, 67, 101, 102, 412, 413, 414, 415], "pin_memori": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 196, 412, 416, 431], "schaul": [53, 101, 102], "quan": [53, 101, 102], "antonogl": [53, 101, 102], "silver": [53, 101, 102], "2015": [53, 101, 102], "ab": [53, 86, 89, 91, 101, 102, 121, 122, 124, 125, 135, 136, 141, 142, 144, 145, 153, 160, 161, 173, 197, 218, 222, 235, 241, 246, 250, 251, 258, 263, 270, 272, 273, 280, 282, 283, 289, 317, 318, 322, 323, 324, 325, 328, 329, 330, 332, 333, 336, 337, 340, 428], "1511": [53, 101, 102, 251], "05952": [53, 101, 102], "expon": [53, 67, 101, 102], "\u03b1": [53, 67, 101, 102], "delta": [53, 67, 101, 102, 254, 258, 286, 303, 307, 405, 408, 425], "1_000": [53, 58, 67, 68, 425, 429], "merg": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 427], "mini": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 426], "decid": [53, 58, 67, 68, 425, 431], "meth": [53, 58, 67, 68, 256, 260, 335, 427], "incompat": [53, 58, 67, 68, 339, 429], "drop_last": [53, 58, 67, 68, 108, 110], "notion": [53, 58, 67, 68, 277], "caution": [53, 58, 67, 68, 108, 123, 126, 130, 137, 149, 150, 156, 157, 226, 432], "codebas": [53, 58, 67, 68, 427], "approach": [53, 58, 67, 68, 174, 193, 235, 266, 267, 342, 412, 414, 419, 420, 425, 432], "return_info": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 429], "tensordictprioritizedreplaybuff": [53, 405, 431], "simplifi": [53, 418, 427, 429], "_weight": [53, 67, 101, 102, 429, 431], "update_prior": [53, 101, 102, 386, 409, 413, 429, 431], "36278465": 53, "invert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 315, 414], "tqdm": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 389, 412, 414, 415, 425, 426, 427], "randomsampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 412, 425], "td_error": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 320, 321, 322, 324, 325, 326, 327, 333, 335, 338, 340, 342, 343, 350, 412, 419, 429, 431], "update_tensordict_prior": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 412, 429, 431], "insert_transform": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 169, 216], "insert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 115, 116, 119, 120, 169, 174, 178, 216, 217], "set_sampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_storag": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_writ": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "write_count": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "prompt_rindex": [54, 55, 60], "promptdatatldr": 54, "116722": 54, "prompt": [55, 60], "return_tensordict": [55, 69], "text": [55, 60, 69, 87, 137, 254, 255, 258, 259, 278, 279, 414], "tensodict": [55, 69], "orign": [55, 56, 66, 69], "valid_sampl": 55, "eough": 55, "toknen": 55, "meet": 55, "criterion": 55, "autotoken": [55, 69, 72], "from_pretrain": [55, 60, 69, 137], "gpt2": [55, 60, 69, 72, 137, 241, 246, 276], "pad_token": [55, 69], "eos_token": 55, "enough": [55, 429], "inde": [55, 182, 414, 416, 427], "index_kei": [56, 66], "hash_kei": 56, "_hash": 56, "hash_modul": [56, 61, 66], "siphash": [56, 57, 66, 137], "hash_to_int": 56, "hashtoint": 56, "query_modul": [56, 66], "key1": [56, 66, 175, 380, 388, 431], "key2": [56, 66, 175, 380, 388, 431], "write_hash": 56, "is_tdmodule_compat": [56, 66], "reset_out_kei": [56, 66], "mod": [56, 66, 191, 238, 256, 260, 302, 310, 415, 416, 422], "select_out_kei": [56, 66, 317, 318, 320, 321, 325, 326, 333, 337, 338, 340, 342, 343, 416], "reset_parameters_recurs": [56, 66, 335], "relu": [56, 66, 143, 236, 246, 263, 271, 316, 416], "old_param": [56, 66], "bork": [56, 66], "dork": [56, 66], "reset_paramet": [56, 66, 268], "from_modul": [56, 66, 249, 306, 309, 431], "rid": [56, 66], "out_keys_sourc": [56, 66], "rubric": [56, 66, 193, 309], "revert": [56, 66, 123, 126, 130, 137, 149, 150, 156, 157, 226, 418, 429], "seq": [56, 66, 238, 254, 256, 258, 260, 302, 415, 416, 422, 424], "z": [56, 66, 255], "n_compon": 57, "dtype_cast": 57, "as_tensor": [57, 61, 416], "init_method": 57, "emb": [57, 415], "sklearn": [57, 88, 146], "byte": [57, 61], "builtin": [57, 61], "pythonhashse": [57, 61], "todo": 57, "storagecheckpointerbas": [58, 111], "roundrobinwrit": [58, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_pytre": [58, 429], "tree_map": [58, 429], "did": [58, 221, 358, 413, 414, 420, 429, 432], "assert0": [58, 429], "ref_model": 60, "reward_model": [60, 312], "max_new_token": 60, "score_clip": 60, "kl_schedul": 60, "klcontrollerbas": 60, "num_step": [60, 416], "causal": 60, "sentenc": 60, "frozen": [60, 191, 222], "gpt2rewardmodel": 60, "get_dataload": [60, 405], "promptdata": [60, 405], "gpt2lmheadmodel": 60, "dl": 60, "block_siz": [60, 92], "tensorclass_typ": [60, 92], "openai_summarize_tldr": 60, "config_class": 60, "model_path": 60, "rollout_from_model": 60, "rollout_from_data": 60, "600": [60, 421, 429], "reward_kl": [60, 191], "reward_raw": 60, "sample_log_prob": [60, 295, 296, 297, 303, 307, 309, 337, 414, 418, 426, 431], "create_rollout_td": 60, "log_prob": [60, 247, 264, 265, 274, 277, 288, 307, 320], "log_ratio": 60, "replic": [60, 408], "rindex": 60, "eo": 60, "generation_config": 60, "generationconfig": 60, "ti": [60, 361, 362, 363, 364, 366, 367, 368, 369, 413], "log_probs_gen": 60, "logprobs_of_label": 60, "hash_a": 61, "4669941682990263259": 61, "3778166555168484291": 61, "9122128731510687521": 61, "hash_b": 61, "heterogen": [62, 63, 123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 226, 266, 267, 412, 413], "220": 64, "resembl": 66, "tensormap": 66, "collat": [66, 104], "subtyp": 66, "embedding_storag": 66, "tensor_dict_storag": 66, "new_index": 66, "key3": 66, "retrieve_valu": 66, "storage_constructor": 66, "write_fn": 66, "tensordictstorag": 66, "thumb": [66, 149, 414], "lazydynamicstorag": 66, "fixedstorag": 66, "randomprojectionhash": 66, "priority_kei": [67, 68, 84, 101, 320, 322, 325, 326, 327, 333, 335, 338, 340, 342, 343, 350, 429, 431], "reduct": [67, 101, 102, 115, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343], "prioritizedreplaybuff": [67, 405, 431], "min": [67, 101, 102, 115, 278, 279, 318, 319, 320, 326, 336, 338, 340, 413, 414], "median": [67, 101, 102, 115, 135, 136, 167, 303, 307], "include_info": [67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "huggingfac": [69, 86, 91, 301], "co": [69, 184, 427], "pad_trunc": 69, "am": 69, "me": 69, "reassur": 69, "ok": 69, "primarili": [71, 198, 418], "educ": 71, "guess": 71, "knowledg": [71, 123, 126, 130, 137, 149, 150, 156, 157, 419, 421], "tokenizer_fn": 72, "tensordicttoken": [72, 405], "pre_tokenization_hook": 72, "valid_s": 72, "tokenizer_class": 72, "tokenizer_model_nam": 72, "tokein": 72, "elementwis": 72, "vocabulari": [72, 137], "loader": [72, 414, 416], "185068": 72, "dataset_to_tensordict": 72, "data_dir": 72, "batch_dim": [72, 123, 126, 130, 137, 149, 150, 156, 157, 403], "valid_mask_kei": 72, "conver": 72, "batch_dimens": 72, "filder": 72, "from_dict": 72, "data_memmap": 72, "win": 73, "node_id": 73, "node_data": 73, "_parent": 73, "weakref": 73, "ref": 73, "branching_act": 73, "prev_act": 73, "edg": [73, 416], "travers": 73, "breadth": 73, "bf": 73, "fully_expand": 73, "get_vertex_by_hash": 73, "get_vertex_by_id": 73, "is_termin": 73, "make_nod": 73, "node_observ": 73, "bag": 73, "num_children": 73, "num_vertic": 73, "count_repeat": 73, "recustruct": 73, "scope": [73, 123, 126, 130, 137, 149, 150, 156, 157, 416, 432], "plotli": 73, "make_label": 73, "visual": [73, 197, 218, 220, 372, 414, 425, 427], "notimplementederror": [73, 412], "unsupport": 73, "selected_act": 73, "key_typ": 73, "liter": [73, 293], "recurse_through_entri": 80, "recurse_through_stack": 80, "dataset_id": [83, 85, 86, 87, 89, 90, 91], "num_proc": 83, "slice_len": [83, 89, 102, 109, 110, 372], "strict_len": 83, "arari": 83, "2600": 83, "million": [83, 415], "consequ": [83, 94, 258, 420], "50x10": 83, "available_dataset": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110], "ataridqn": 83, "immutabledatasetwrit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "shorter": [83, 89, 102, 109, 110], "Be": [83, 89, 102, 109, 110], "game_nam": 83, "krull": 83, "1d": [83, 101, 102, 109, 110, 115], "cheapli": 83, "invalid_rang": 83, "999998": 83, "999999": 83, "add_count": 83, "84": [83, 109, 201, 413, 415, 416, 428], "valueestim": [83, 317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 405, 408, 412, 425, 426], "convolut": [83, 239, 240, 242, 243, 266, 284, 416, 418], "2657628": 83, "2657629": 83, "2657630": 83, "2657631": 83, "2657632": 83, "2657633": 83, "2657634": 83, "2657635": 83, "2657636": 83, "2657637": 83, "2657638": 83, "2657639": 83, "2657640": 83, "2657641": 83, "2657642": 83, "2657643": 83, "2657644": 83, "2657645": 83, "2657646": 83, "2657647": 83, "2657648": 83, "2657649": 83, "2657650": 83, "2657651": 83, "2657652": 83, "2657653": 83, "2657654": 83, "2657655": 83, "2657656": 83, "2657657": 83, "2657658": 83, "2657659": 83, "2657660": 83, "2657661": 83, "2657662": 83, "2657663": 83, "2657664": 83, "2657665": 83, "2657666": 83, "2657667": 83, "2657668": 83, "2657669": 83, "2657670": 83, "2657671": 83, "2657672": 83, "2657673": 83, "2657674": 83, "2657675": 83, "2657676": 83, "2657677": 83, "2657678": 83, "2657679": 83, "2657680": 83, "2657681": 83, "2657682": 83, "2657683": 83, "2657684": 83, "2657685": 83, "2657686": 83, "2657687": 83, "2657688": 83, "2657689": 83, "2657690": 83, "2657691": 83, "1995687": 83, "1995688": 83, "1995689": 83, "1995690": 83, "1995691": 83, "1995692": 83, "1995693": 83, "1995694": 83, "1995695": 83, "1995696": 83, "1995697": 83, "1995698": 83, "1995699": 83, "1995700": 83, "1995701": 83, "1995702": 83, "1995703": 83, "1995704": 83, "1995705": 83, "1995706": 83, "1995707": 83, "1995708": 83, "1995709": 83, "1995710": 83, "1995711": 83, "1995712": 83, "1995713": 83, "1995714": 83, "1995715": 83, "1995716": 83, "1995717": 83, "1995718": 83, "1995719": 83, "1995720": 83, "1995721": 83, "1995722": 83, "1995723": 83, "1995724": 83, "1995725": 83, "1995726": 83, "1995727": 83, "1995728": 83, "1995729": 83, "1995730": 83, "1995731": 83, "1995732": 83, "1995733": 83, "1995734": 83, "1995735": 83, "1995736": 83, "1995737": 83, "1995738": 83, "1995739": 83, "1995740": 83, "1995741": 83, "1995742": 83, "1995743": 83, "1995744": 83, "1995745": 83, "1995746": 83, "1995747": 83, "1995748": 83, "1995749": 83, "1995750": 83, "left": [83, 85, 89, 102, 109, 171, 178, 179, 180, 181, 185, 191, 197, 199, 200, 206, 209, 212, 215, 218, 220, 224, 252, 266, 413, 414, 416, 420, 421], "untouch": [83, 89, 171, 178, 180, 181, 185, 191, 199, 200, 206, 209, 215, 224], "_max_run": 83, "dataset_asterix": 83, "asterix": 83, "dataset_pong": 83, "sample_from_al": [83, 104, 107], "buffer_id": [83, 107, 113], "hidden": [83, 149, 156, 173, 242, 250, 254, 255, 256, 258, 259, 260, 272, 273, 282, 283, 295, 296, 297, 298, 306, 309, 319, 334, 337, 407, 415, 424, 431], "data_path": [83, 84, 85, 86, 87, 88, 89, 90, 91], "data_path_root": [83, 84, 85, 86, 87, 88, 89, 90, 91], "delet": [83, 84, 85, 86, 87, 88, 89, 90, 91, 175, 379], "chunksiz": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pool": [83, 84, 85, 86, 87, 88, 89, 90, 91, 212], "max_tasks_per_child": [83, 84, 85, 86, 87, 88, 89, 90, 91], "worker_thread": [83, 84, 85, 86, 87, 88, 89, 90, 91], "index_with_gener": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pbar": [83, 84, 85, 86, 87, 88, 89, 90, 91, 412, 414, 415, 425, 426, 427], "num_fram": [83, 84, 85, 86, 87, 88, 89, 90, 91], "unitari": [83, 84, 85, 86, 87, 88, 89, 90, 91, 427], "minariexperiencereplai": [83, 84, 85, 86, 88, 89, 90, 91], "1000000": [83, 84, 85, 86, 87, 88, 89, 90, 91], "distance_from_origin": [83, 84, 85, 86, 87, 88, 89, 90, 91], "forward_reward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qpo": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qvel": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_ctrl": [83, 84, 85, 86, 87, 88, 89, 90, 91, 130, 149], "reward_forward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_surv": [83, 84, 85, 86, 87, 88, 89, 90, 91], "x_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91, 130, 149], "x_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91, 130, 149], "y_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "y_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91], "achieved_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "desired_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "27": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 121, 122, 149, 156, 411, 413, 425, 430], "_collate_id": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x120e21dc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_next_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "new_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "31": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 135, 136, 411, 412, 413, 428, 430], "full_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x168406fc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "from_env": 85, "use_truncated_as_don": 85, "direct_download": 85, "terminate_on_end": 85, "env_kwarg": [85, 90, 91, 171, 401, 402, 412], "reconstruct": [85, 109, 110, 329, 412, 432], "get_dataset": 85, "qlearning_dataset": 85, "fewer": [85, 102, 109], "unexpectedli": 85, "traj_split": 85, "observationnorm": [85, 222, 403, 412, 413, 414, 415, 431], "maze2d": 85, "umaz": 85, "loc": [85, 123, 126, 130, 137, 149, 150, 156, 157, 191, 193, 204, 222, 257, 271, 287, 288, 295, 296, 297, 303, 307, 309, 317, 318, 320, 333, 337, 338, 339, 340, 393, 403, 407, 412, 413, 414, 415, 418, 426, 431], "gen": 86, "dgrl": 86, "accompani": [86, 171, 209], "gap": 86, "2312": 86, "05742": 86, "gen_dgrl": 86, "procgen": 86, "bigfish": 86, "bossfight": 86, "1m_e": 86, "1m_": 86, "comma": [86, 416], "npy": 86, "mmap": [86, 90, 91], "minut": [86, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "internet": [86, 91], "connect": [86, 91, 158], "minari": 87, "websit": [87, 89], "currenrtli": 87, "minari_data": 87, "door": 87, "torchrl_logg": [87, 422], "28": [87, 109, 110, 266, 411, 413, 414, 419, 428, 429, 430], "door_body_po": 87, "dua": 88, "graff": 88, "2017": 88, "uci": 88, "archiv": 88, "ic": 88, "edu": 88, "ml": [88, 158, 159], "adult_num": [88, 146], "adult_onehot": [88, 146], "mushroom_num": [88, 146], "mushroom_onehot": [88, 146], "covertyp": [88, 146], "shuttl": [88, 146], "magic": [88, 146, 416, 417], "shuffl": [89, 108, 110, 426], "embodi": [89, 428], "institut": 89, "demonstr": [89, 414, 416, 420, 425, 426, 427, 429, 432], "527": 89, "skill": 89, "160266": 89, "googl": [89, 90, 121, 122, 141, 142, 147, 148, 235, 414, 415, 425, 426], "open_x_embodi": 89, "2310": [89, 153], "08864": 89, "language_instruct": 89, "get_non_tensor": 89, "nor": [89, 158], "insuffici": 89, "chosen": [89, 160, 161, 210, 211, 280, 281, 289, 305, 372, 407, 421], "openx": 89, "__will": 89, "change__": 89, "randomli": [89, 108, 157, 192, 193, 211, 252, 303, 307, 418, 425, 426, 427, 429], "crop": [89, 176, 198, 372], "modal": [89, 412], "cmu_stretch": [89, 372], "is_init": [89, 91, 173, 190, 256, 260, 278, 279, 302, 314, 415, 416], "language_embed": 89, "512": [89, 251, 413, 416], "lift": 89, "green": [89, 425], "garbag": 89, "lid": 89, "roboset": 90, "h5": [90, 91, 94], "roboh": [90, 153], "concis": [90, 419], "75": [90, 109, 413, 415, 428], "totensor": 91, "image_s": 91, "v": [91, 222, 254, 255, 258, 259, 295, 325, 333, 340, 412, 413], "npz": 91, "2206": [91, 144, 145], "04779": [91, 318, 324], "vd4rl": 91, "squar": [91, 176, 179, 257, 287, 288, 372], "rectangular": [91, 239, 240], "walker_walk": 91, "64px": 91, "height": [91, 176, 179, 201], "veloc": [91, 123, 124, 125, 126, 130, 137, 149, 150, 156, 157, 174, 425, 426, 427, 432], "infinit": [92, 141, 142, 160, 161, 420, 429], "block": [92, 95, 120, 407, 412, 415, 416, 419, 420, 425, 429], "pairwisedataset": [92, 405], "256": [92, 141, 142, 246, 413, 414, 416, 425, 426], "checkpoint_fil": 94, "h5_kwarg": 94, "iff": 94, "suffix": [94, 384], "h5py": 94, "create_dataset": 94, "immut": [95, 123, 126, 130, 137, 149, 156, 200, 216], "piec": [95, 105, 116, 119, 120, 412, 413, 414, 421, 425, 426, 427, 429], "scratch_dir": [96, 412, 429], "sent": [96, 97, 117, 222], "mistak": [96, 97, 117], "overewritten": 96, "tensorstoragecheckpoint": 96, "main_ckpt_dir": 96, "rb_memmap": 96, "10_000_000": 96, "myclass": [96, 97, 117], "foo": [96, 97, 117, 298, 429, 432], "bar": [96, 97, 117, 298, 382, 383, 384, 389, 409, 413], "attach": [96, 97, 98, 111, 113, 117, 413], "entiti": [96, 97, 98, 111, 113, 117], "expans": [97, 335], "zero_": [97, 117, 229], "unlimit": 98, "liststoag": 99, "max_capac": [101, 102, 412, 429], "max_priority_within_buff": [101, 102], "data_0": 101, "data_1": 101, "smoothen": 101, "tdrb": 101, "pack": [101, 254, 258, 414, 417, 432], "nd": [101, 102], "sum_tre": [101, 102], "min_tre": [101, 102], "end_kei": [102, 109, 110], "cache_valu": [102, 109, 110], "closer": [102, 431], "readili": [102, 109, 110], "conjunct": [102, 109, 110, 413], "Will": [102, 109, 144, 372], "buffer0": [102, 109], "immutablewrit": [102, 109], "buffer1": [102, 109], "other_sampl": [102, 109], "short": [102, 109, 110, 121, 122, 123, 126, 130, 135, 136, 137, 149, 150, 156, 157, 226, 258, 259, 413, 414, 417, 418, 426, 429], "tolist": 102, "120110917137936e": 102, "06": [102, 247, 286, 411, 412, 413, 425, 428, 430], "storageensembl": [104, 107], "samplerensembl": 104, "writerensembl": [104, 113], "num_buffer_sampl": [104, 107], "ensembl": [104, 107, 113, 114, 120, 306, 338], "forbidden": 104, "0x13a2ef430": 104, "0x13a2f9310": 104, "interpol": [104, 201, 413, 415, 416], "interpolationmod": [104, 415], "bilinear": [104, 201, 415], "0x13a2f9220": 104, "0x13a2f9f70": 104, "0x13a2d9b50": 104, "0x13a2f95b0": 104, "0x128648260": 104, "roundrobin": [105, 116], "incomplet": [108, 110], "fresh": 108, "haven": [108, 428], "remain": [108, 173, 181, 182, 191, 210, 270, 419], "draw": [108, 252], "slicesamplerwithoutreplac": [109, 429], "ep_1": [109, 110], "ep_2": [109, 110], "73": [109, 413], "74": [109, 413, 428], "76": [109, 412, 413, 428], "77": [109, 413, 428], "42": [109, 261, 277, 317, 318, 320, 321, 325, 333, 340, 411, 412, 413, 415, 428, 430, 432], "43": [109, 413, 415], "45": [109, 412, 413, 428], "67": [109, 413, 424, 428], "68": [109, 412, 413, 425, 428, 429], "69": [109, 413, 428], "70": [109, 413, 414, 425, 426, 428], "71": [109, 413, 429], "80": [109, 121, 122, 412, 413, 414, 425, 426, 428], "82": [109, 412, 413, 425, 428], "83": [109, 413, 428], "78": [109, 412, 413, 428], "79": [109, 413, 428, 429], "320": [109, 110, 124, 125, 411, 413, 424, 430, 432], "700": [109, 110], "dataid": [109, 110], "counter": [110, 214, 302, 382, 409, 416], "request": [110, 171, 198], "51": [110, 413, 426], "__len__": 111, "rank_kei": 115, "rank": [115, 236], "samplerwithoutreplac": [115, 414, 426, 429], "get_insert_index": 115, "convers": [121, 122, 135, 136, 408], "2106": [121, 122, 323, 342], "13281": [121, 122], "categorical_action_encod": [121, 122, 123, 126, 129, 130, 131, 132, 135, 136, 137, 144, 145, 149, 150, 153, 156, 157, 416], "frame_skip": [121, 122, 124, 125, 129, 130, 131, 132, 135, 136, 138, 139, 144, 145, 153, 188, 382, 384, 392, 409, 412, 413, 414, 431], "allow_done_after_reset": [121, 122, 124, 125, 126, 129, 131, 132, 135, 136, 144, 145, 147, 148, 153, 158, 159], "toler": [121, 122, 124, 125, 129, 131, 132, 135, 136, 144, 145, 147, 148, 153, 158, 159, 247, 286], "availalb": [121, 122, 135, 136], "is_avail": [121, 122, 412, 413, 414, 415, 425, 426, 428], "els": [121, 122, 171, 254, 255, 258, 259, 272, 407, 409, 412, 413, 414, 415, 425, 426, 427, 428], "ant": [121, 122, 123, 126, 130, 133, 137, 149, 150, 156, 157, 428], "87": [121, 122, 412, 413], "acrobot": [121, 122, 124, 125, 432], "advant": [121, 122, 135, 136], "timer": [121, 122, 135, 136], "timeit": [121, 122, 135, 136, 416], "310": [121, 122], "ms": [121, 122, 135, 136], "268": [121, 122], "433": [121, 122], "213": [121, 122, 412], "8605": [121, 122], "pipelineenv": 122, "get_environ": 122, "board": [123, 157], "legal": 123, "rand_act": [123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 171, 417], "fen": [123, 147, 148], "rnbqkbnr": [123, 147, 148], "pppppppp": [123, 147, 148], "kqkq": [123, 147, 148], "2n5": 123, "r1bqkbnr": 123, "322": [123, 154, 155, 411, 414, 419, 420, 430], "nontensorstack": [123, 137], "kq": 123, "2p5": 123, "pp1ppppp": 123, "sort": [123, 126, 130, 137, 149, 150, 156, 157, 175, 278, 279], "another_act": [123, 126, 130, 137, 149, 150, 156, 157], "discretebox": [123, 126, 130, 137, 149, 150, 156, 157], "mutabl": [123, 126, 130, 137, 149, 150, 156, 157], "action_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157, 414, 426], "had": [123, 126, 130, 137, 149, 150, 156, 157, 418, 420], "_callabletransform": [123, 126, 130, 137, 149, 150, 156, 157], "auto_specs_": [123, 126, 130, 137, 149, 150, 156, 157], "batch_lock": [123, 126, 128, 130, 137, 149, 156, 171, 211, 216, 427], "action_spac": [123, 126, 130, 137, 149, 150, 156, 157, 184, 249, 281, 299, 300, 304, 305, 317, 318, 320, 321, 322, 324, 325, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 415, 416, 418, 422], "check_dtyp": [123, 126, 130, 137, 149, 150, 156, 157, 226], "discrep": [123, 126, 130, 137, 149, 150, 156, 157, 226, 317, 319, 321, 322, 334, 337, 339, 350], "broken": [123, 126, 130, 137, 149, 150, 156, 157, 226], "rng": [123, 126, 130, 137, 149, 150, 156, 157, 226, 427], "done_keys_group": [123, 126, 130, 137, 149, 150, 156, 157], "outer": [123, 126, 130, 137, 149, 150, 156, 157, 409, 412, 413, 432], "another_don": [123, 126, 130, 137, 149, 150, 156, 157], "done_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "empty_cach": [123, 126, 130, 137, 149, 150, 156, 157, 216], "fake_tensordict": [123, 126, 130, 137, 149, 150, 156, 157, 413, 416], "braxenv": [123, 126, 130, 137, 149, 150, 156, 157, 200, 405, 417], "envnam": [123, 126, 130, 137, 149, 150, 156, 157], "full_action_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157, 425, 426], "full_done_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "full_observation_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "full_reward_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "pipeline_st": [123, 126, 130, 137, 149, 150, 156, 157], "full_state_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "attibut": [123, 126, 130, 137, 149, 150, 156, 157], "input_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "maybe_reset": [123, 126, 130, 137, 149, 150, 156, 157], "speak": [123, 126, 130, 137, 149, 150, 156, 157, 412], "observation_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "output_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "register_gym": [123, 126, 130, 137, 149, 150, 156, 157, 417], "entry_point": [123, 126, 130, 137, 149, 150, 156, 157], "info_kei": [123, 126, 130, 137, 149, 150, 156, 157], "reward_threshold": [123, 126, 130, 137, 149, 150, 156, 157], "nondeterminist": [123, 126, 130, 137, 149, 150, 156, 157], "max_episode_step": [123, 126, 129, 130, 131, 137, 149, 150, 156, 157], "order_enforc": [123, 126, 130, 137, 149, 150, 156, 157], "autoreset": [123, 126, 130, 137, 149, 150, 156, 157], "disable_env_check": [123, 126, 129, 130, 137, 144, 145, 149, 150, 156, 157], "apply_api_compat": [123, 126, 130, 137, 149, 150, 156, 157], "nasium": [123, 126, 130, 137, 149, 150, 156, 157], "dmcontrolenv": [123, 126, 130, 137, 149, 150, 156, 157, 372, 405, 412, 417, 424, 432], "dmc": [123, 126, 130, 137, 149, 150, 156, 157], "cheetah": [123, 124, 125, 126, 130, 137, 149, 150, 156, 157, 372, 412, 432], "removeemptyspec": [123, 126, 130, 137, 149, 150, 156, 157], "threshold": [123, 126, 130, 137, 149, 150, 156, 157, 252, 318, 319, 414], "learnt": [123, 126, 130, 137, 149, 150, 156, 157, 399], "checker": [123, 126, 129, 130, 137, 144, 145, 149, 150, 156, 157], "stepapicompat": [123, 126, 130, 137, 149, 150, 156, 157], "deem": [123, 126, 130, 137, 141, 142, 149, 150, 156, 157, 160, 161], "task_nam": [123, 124, 126, 130, 137, 149, 150, 156, 157], "envgym": [123, 126, 130, 137, 149, 150, 156, 157], "0855": [123, 126, 130, 137, 149, 150, 156, 157], "0215": [123, 126, 130, 137, 149, 150, 156, 157], "0881": [123, 126, 130, 137, 149, 150, 156, 157], "0412": [123, 126, 130, 137, 149, 150, 156, 157], "1101": [123, 126, 130, 137, 149, 150, 156, 157], "0080": [123, 126, 130, 137, 149, 150, 156, 157], "0254": [123, 126, 130, 137, 149, 150, 156, 157], "0424": [123, 126, 130, 137, 149, 150, 156, 157], "9609e": [123, 126, 130, 137, 149, 150, 156, 157], "9776e": [123, 126, 130, 137, 149, 150, 156, 157], "04": [123, 126, 130, 134, 137, 149, 150, 156, 157, 412, 413, 428], "6347e": [123, 126, 130, 137, 149, 150, 156, 157], "3842e": [123, 126, 130, 137, 149, 150, 156, 157], "5338e": [123, 126, 130, 137, 149, 150, 156, 157], "3064e": [123, 126, 130, 137, 149, 150, 156, 157], "0381e": [123, 126, 130, 137, 149, 150, 156, 157], "6656e": [123, 126, 130, 137, 149, 150, 156, 157], "05": [123, 126, 130, 137, 149, 150, 156, 157, 235, 412, 413, 414, 425, 426, 427, 428], "0204e": [123, 126, 130, 137, 149, 150, 156, 157], "0833": [123, 126, 130, 137, 149, 150, 156, 157], "0275": [123, 126, 130, 137, 149, 150, 156, 157], "0612": [123, 126, 130, 137, 149, 150, 156, 157], "0770": [123, 126, 130, 137, 149, 150, 156, 157], "1256": [123, 126, 130, 137, 149, 150, 156, 157], "0082": [123, 126, 130, 137, 149, 150, 156, 157], "0186": [123, 126, 130, 137, 149, 150, 156, 157], "0476": [123, 126, 130, 137, 149, 150, 156, 157], "2221": [123, 126, 130, 137, 149, 150, 156, 157], "2256": [123, 126, 130, 137, 149, 150, 156, 157], "5930": [123, 126, 130, 137, 149, 150, 156, 157], "6937": [123, 126, 130, 137, 149, 150, 156, 157], "5865": [123, 126, 130, 137, 149, 150, 156, 157], "5479": [123, 126, 130, 137, 149, 150, 156, 157], "0187": [123, 126, 130, 137, 149, 150, 156, 157], "6825": [123, 126, 130, 137, 149, 150, 156, 157], "5224": [123, 126, 130, 137, 149, 150, 156, 157], "0018": [123, 126, 130, 137, 149, 150, 156, 157], "1005": [123, 126, 130, 137, 149, 150, 156, 157], "0335": [123, 126, 130, 137, 149, 150, 156, 157], "0268": [123, 126, 130, 137, 149, 150, 156, 157], "0133": [123, 126, 130, 137, 149, 150, 156, 157], "0627": [123, 126, 130, 137, 149, 150, 156, 157], "0074": [123, 126, 130, 137, 149, 150, 156, 157], "0488": [123, 126, 130, 137, 149, 150, 156, 157], "0353": [123, 126, 130, 137, 149, 150, 156, 157], "0075": [123, 126, 130, 137, 149, 150, 156, 157], "0069": [123, 126, 130, 137, 149, 150, 156, 157], "0098": [123, 126, 130, 137, 149, 150, 156, 157], "0058": [123, 126, 130, 137, 149, 150, 156, 157], "0033": [123, 126, 130, 137, 149, 150, 156, 157], "0157": [123, 126, 130, 137, 149, 150, 156, 157], "0004": [123, 126, 130, 137, 149, 150, 156, 157, 415], "0381": [123, 126, 130, 137, 149, 150, 156, 157], "0452": [123, 126, 130, 137, 149, 150, 156, 157], "11355747": [123, 126, 130, 137, 149, 150, 156, 157], "04257728": [123, 126, 130, 137, 149, 150, 156, 157], "00408397": [123, 126, 130, 137, 149, 150, 156, 157], "04155852": [123, 126, 130, 137, 149, 150, 156, 157], "0389733": [123, 126, 130, 137, 149, 150, 156, 157], "01409826": [123, 126, 130, 137, 149, 150, 156, 157], "0978704": [123, 126, 130, 137, 149, 150, 156, 157], "08808327": [123, 126, 130, 137, 149, 150, 156, 157], "03970837": [123, 126, 130, 137, 149, 150, 156, 157], "00535434": [123, 126, 130, 137, 149, 150, 156, 157], "02353762": [123, 126, 130, 137, 149, 150, 156, 157], "05116226": [123, 126, 130, 137, 149, 150, 156, 157], "02788907": [123, 126, 130, 137, 149, 150, 156, 157], "06848346": [123, 126, 130, 137, 149, 150, 156, 157], "05154399": [123, 126, 130, 137, 149, 150, 156, 157], "0371798": [123, 126, 130, 137, 149, 150, 156, 157], "05128025": [123, 126, 130, 137, 149, 150, 156, 157], "dydact": [123, 126, 130, 137, 149, 150, 156, 157], "gym_env": [123, 126, 130, 137, 149, 150, 156, 157, 431], "reset_kei": [123, 126, 130, 137, 149, 150, 156, 157, 174, 205, 210, 211, 212, 425], "multitask": [123, 126, 130, 137, 149, 150, 156, 157], "multiag": [123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 232, 267, 280, 289, 350], "another_reward": [123, 126, 130, 137, 149, 150, 156, 157], "reward_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "auto_cast_to_devic": [123, 126, 130, 137, 149, 150, 156, 157, 426], "break_when_all_don": [123, 126, 130, 136, 137, 149, 150, 156, 157], "soon": [123, 126, 130, 137, 149, 150, 151, 152, 156, 157], "__sort": [123, 126, 130, 137, 149, 150, 156, 157], "as__": [123, 126, 130, 137, 149, 150, 156, 157], "argmaxmodul": [123, 126, 130, 137, 149, 150, 156, 157], "argmax": [123, 126, 130, 137, 149, 150, 156, 157, 249, 281, 300, 305, 416, 418], "n_ob": [123, 126, 130, 137, 149, 150, 156, 157, 191, 302, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 419], "n_act": [123, 126, 130, 137, 149, 150, 156, 157, 191, 317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 419], "ourselv": [123, 126, 130, 137, 149, 150, 156, 157, 414, 432], "emul": [123, 126, 130, 137, 149, 150, 156, 157], "epoch": [123, 126, 130, 137, 149, 150, 156, 157, 389, 414, 425, 426], "input_td": [123, 126, 130, 137, 149, 150, 156, 157], "rollout_td": [123, 126, 130, 137, 149, 150, 156, 157], "state_spec_unbatch": [123, 126, 130, 137, 149, 150, 156, 157], "prevail": [123, 126, 130, 137, 149, 150, 156, 157, 175, 205, 232], "next_tensordict": [123, 126, 130, 137, 149, 150, 156, 157, 231], "precomput": [123, 126, 130, 137, 149, 150, 156, 157], "_stepmdp": [123, 126, 130, 137, 149, 150, 156, 157, 231], "exclude_act": [123, 126, 130, 137, 149, 150, 156, 157, 231], "leverag": [123, 126, 130, 137, 140, 149, 150, 151, 152, 156, 157, 412, 426, 432], "minim": [123, 126, 130, 137, 149, 150, 156, 157, 374, 429], "reset_data": [123, 126, 130, 137, 149, 150, 156, 157, 432], "dm_control": [124, 125, 412, 424, 432], "2006": [124, 125, 318, 324], "12983": [124, 125], "240": [124, 125, 431, 432], "swingup": [124, 125, 432], "swingup_spars": [124, 125, 432], "ball_in_cup": [124, 125, 432], "catch": [124, 125, 416, 432], "balance_spars": [124, 125, 432], "three_pol": [124, 125, 432], "two_pol": [124, 125, 432], "finger": [124, 125, 432], "turn_easi": [124, 125, 432], "turn_hard": [124, 125, 432], "fish": [124, 125, 432], "upright": [124, 125, 413, 432], "swim": [124, 125, 432], "hopper": [124, 125, 432], "hop": [124, 125, 432], "humanoid": [124, 125, 149, 156, 424, 432], "walk": [124, 125, 149, 156, 413, 424, 432], "run_pure_st": [124, 125, 432], "bring_bal": [124, 125, 432], "bring_peg": [124, 125, 432], "insert_bal": [124, 125, 432], "insert_peg": [124, 125, 432], "point_mass": [124, 125, 432], "reacher": [124, 125, 432], "swimmer": [124, 125, 432], "swimmer6": [124, 125, 432], "swimmer15": [124, 125, 432], "walker": [124, 125, 432], "dog": [124, 125, 432], "trot": [124, 125, 432], "humanoid_cmu": [124, 125, 432], "lqr": [124, 125, 432], "lqr_2_1": [124, 125, 432], "lqr_6_2": [124, 125, 432], "quadrup": [124, 125, 432], "escap": [124, 125, 432], "stacker": [124, 125, 432], "stack_2": [124, 125, 416, 432], "stack_4": [124, 125, 416, 432], "deviceless": 126, "run_type_check": [126, 143], "counterenv": 126, "creator": [127, 394, 395, 401, 402, 403], "substitut": [127, 210, 222, 418], "vecnorm": [127, 403], "env_creat": [127, 412], "test_env1": 127, "observation_count": [127, 432], "test_env2": 127, "sleep": [127, 432], "ps": 127, "p1": 127, "p2": 127, "9934": 127, "make_vari": [127, 214], "variant": [127, 214, 237, 407], "trajcount": 127, "env_creator_pendulum": 127, "env_creator_cartpol": 127, "env_str": 128, "device_map": 128, "accross": [129, 131], "registri": [129, 158], "asyncvectorenv": 129, "involv": [129, 131, 132, 141, 142, 153, 171, 174, 214, 256, 260, 417, 419], "pixel_observ": [129, 131, 132, 153], "pixelobservationwrapp": [129, 131, 132, 153], "adventur": [129, 131, 432], "airraid": [129, 131, 432], "alien": [129, 131, 432], "time_limit": 129, "timelimit": [129, 141, 142, 160, 161], "default_info_dict_read": [129, 130, 131, 149], "reader": [129, 130, 131, 149, 413], "set_info_dict_read": [129, 130, 131, 149, 417], "info_dict": [129, 130, 131, 149], "auto_register_info_dict": [129, 130, 131, 149], "multibinari": [129, 131], "multidiscret": [129, 131], "rag": [129, 131], "gym_conversion_exampl": [129, 131], "info_dict_read": [130, 149], "ignore_priv": 130, "baseinfodictread": 130, "tensordictprim": [130, 149, 238, 256, 260, 314, 407, 415], "succe": [130, 149], "underscor": 130, "primer": [130, 211, 238, 256, 260, 314, 415], "halfcheetah": [130, 149, 167, 201, 412, 431], "reward_run": [130, 149], "read_act": 130, "read_don": 130, "nonsens": 130, "fallback": 130, "read_ob": 130, "dictat": [130, 303, 307, 337, 412, 427], "read_reward": 130, "hoc": [130, 149, 418], "dict_read": 130, "my_info_kei": 130, "some_env": 130, "vecenv": 131, "vectorenv": 131, "convert_actions_to_numpi": 131, "isaaclab": 131, "secur": 132, "habitat3": 132, "ai": [132, 428], "habitatrenderpick": 132, "isaacgym": [133, 134], "isaacgymwrapp": [133, 405], "isaacgymenv": [134, 405], "webpag": 134, "isaac": 134, "essenc": [134, 417], "instadeepai": [135, 136], "2306": [135, 136], "09884": [135, 136], "snake": [135, 136], "grid": [135, 136, 372], "bodi": [135, 136], "body_st": [135, 136], "fruit_posit": [135, 136], "col": [135, 136], "head_posit": [135, 136], "tail": [135, 136], "game2048": [135, 136], "maze": [135, 136], "cleaner": [135, 136], "cvrp": [135, 136], "multicvrp": [135, 136], "minesweep": [135, 136], "rubikscub": [135, 136], "knapsack": [135, 136], "sudoku": [135, 136], "tsp": [135, 136], "connector": [135, 136], "v2": [135, 136, 154, 155, 346, 361, 362, 363, 364, 366, 367, 368, 369, 415], "mmst": [135, 136], "graphcolor": [135, 136], "partli": [135, 136], "scrambl": [135, 136], "robotwarehous": [135, 136], "tetri": [135, 136], "binpack": [135, 136], "jobshop": [135, 136], "0x1fca91910": 135, "122": [135, 136, 412, 432], "0x1ff9baee0": 135, "134": [135, 136], "0x1ff9ba7c0": 135, "172": [135, 136], "jit": 136, "eager": 136, "tdreset": [136, 224, 424], "whichev": 136, "drastic": [136, 149, 429], "mctsforest": [137, 405], "noth": [137, 412, 414], "overview": [137, 414, 416, 419, 425, 426, 431], "beam": 137, "vocab_s": 137, "hashing_modul": 137, "text_output": 137, "decod": [137, 164, 272], "batch_decod": 137, "text_kei": 137, "gpt2token": 137, "make_tensordict": 137, "mo": [138, 139], "minecart": [138, 139], "mo_gym": 139, "qualnam": 140, "neural": [140, 151, 152, 239, 240, 275, 277, 284, 306, 407, 413, 414, 415, 418, 425, 426, 427, 432], "group_map": [140, 141, 142, 147, 148, 151, 152, 158, 159, 160, 161, 162, 425], "constructiuon": [140, 151, 152], "premad": [140, 141, 142, 151, 152, 160, 161, 350], "all_in_one_group": [140, 147, 148, 162], "agent_0": [140, 151, 152, 158, 162, 425], "agent_1": [140, 151, 152, 158, 162], "agent_2": [140, 151, 152, 158, 162], "agent_3": [140, 158], "one_group_per_ag": [140, 151, 152], "meltingpot": [141, 142], "2211": [141, 142], "13746": [141, 142], "melt": [141, 142], "pot": [141, 142], "novel": [141, 142, 419], "social": [141, 142], "familiar": [141, 142, 413, 426, 432], "unfamiliar": [141, 142], "broad": [141, 142], "cooper": [141, 142, 425, 426], "decept": [141, 142], "reciproc": [141, 142], "stubborn": [141, 142], "substrat": [141, 142], "ml_collect": 141, "config_dict": 141, "configdict": 141, "categorical_act": [141, 142, 147, 148, 151, 152, 154, 155, 158, 159, 160, 161], "marlgroupmaptyp": [141, 142, 147, 148, 151, 152, 158, 159, 160, 161, 162, 405, 425], "agent_nam": [141, 142, 160, 161, 162], "agent_names_to_indices_map": [141, 142, 160, 161], "env_torchrl": [141, 142], "commons_harvest__open": [141, 142], "rgb": [141, 142], "144": [141, 142], "192": [141, 142, 413], "collective_reward": [141, 142], "ready_to_shoot": [141, 142], "88": [141, 142, 154, 155, 412, 413, 428], "substrate_config": 142, "get_config": 142, "mp_env": 142, "build_from_config": 142, "default_player_rol": 142, "environn": 143, "mymbenv": [143, 236, 263], "world_model": [143, 236, 263, 329], "hidden_observ": [143, 236, 263], "mlp": [143, 236, 239, 240, 242, 243, 244, 245, 251, 256, 260, 263, 267, 268, 295, 299, 314, 322, 324, 407, 413, 416, 418, 419, 422, 424, 428, 431], "worldmodelwrapp": [143, 236, 263], "activation_class": [143, 236, 239, 240, 242, 243, 244, 245, 250, 251, 261, 263, 266, 267, 413, 418, 425, 426, 431], "activate_last_lay": [143, 236, 245, 261, 263], "sail": [144, 145], "sg": [144, 145], "10558": [144, 145], "readthedoc": [144, 147, 148], "en": [144, 147, 148], "python_interfac": 144, "envpoolmixin": 145, "env_bas": 145, "task_id": 145, "env_typ": 145, "gym_reset_return_info": 145, "envpool_env": 145, "www": [146, 264, 265], "fetch_openml": 146, "106": 146, "openspiel": [147, 148], "open_spiel": [147, 148], "game_str": 147, "return_st": [147, 148, 151, 152], "4672": [147, 148, 413], "current_play": [147, 148], "674": 147, "2048": [147, 148, 413, 428], "add_nois": [147, 148], "amazon": [147, 148], "backgammon": [147, 148], "restor": [147, 148], "td_restor": [147, 148], "pyspiel": 148, "load_gam": 148, "new_initial_st": 148, "3009": 148, "my_env_fun": [149, 156], "custom_attribute_list": [149, 156], "custom_attribut": [149, 156], "custom_method_list": [149, 156], "custom_method": [149, 156], "deploi": [149, 156, 171, 416], "slight": [149, 156, 413], "share_individual_td": [149, 156], "shared_memori": [149, 156], "policy_proof": [149, 156], "ll": [149, 156, 254, 255, 258, 259, 412, 413, 414, 415, 417, 418, 419, 420, 422, 426, 432], "serial_for_singl": [149, 156, 413], "circular": [149, 156, 412], "list_of_kwarg": [149, 156], "com_veloc": [149, 156], "head_height": [149, 156], "joint_angl": [149, 156], "torso_vert": [149, 156], "stringent": [149, 414, 425, 426], "inter": 149, "penv": [149, 214], "env_fix": 149, "influenc": 149, "myenv": [149, 171, 180, 183], "pipe": 149, "update_kwarg": [149, 156], "th": [150, 187, 217, 254, 258, 427], "thdot": [150, 427], "max_spe": [150, 427], "max_torqu": [150, 427], "gen_param": [150, 427], "gravit": [150, 427], "torqu": [150, 427], "pettingzoo": [151, 152, 425, 426], "pet": [151, 152], "zoo": [151, 152], "__": [151, 152], "aecenv": [151, 152], "use_mask": [151, 152], "dead": [151, 152], "done_on_ani": [151, 152, 425], "compulsori": [151, 152], "adversary_0": [151, 152, 425], "adversari": [151, 152, 331, 425], "sisl": 151, "multiwalker_v9": 151, "aec": [151, 152], "n_piston": [151, 152], "pistonball_v6": [151, 152], "piston": [151, 152], "piston_0": [151, 152], "piston_1": [151, 152], "piston_20": [151, 152], "tictactoe_v3": [151, 152], "player": [151, 152, 157], "player_1": [151, 152], "player_2": [151, 152], "butterfli": 152, "parallel_env": [152, 412, 431, 432], "vikashplu": 153, "wiki": 153, "06828": 153, "from_depth": 153, "smacv2": [154, 155], "starcraft": [154, 155], "challeng": [154, 155, 417, 427, 428], "10gen_terran": [154, 155], "10gen_zerg": [154, 155], "10gen_protoss": [154, 155], "3m": [154, 155], "8m": [154, 155, 428], "25m": [154, 155], "5m_vs_6m": [154, 155], "8m_vs_9m": [154, 155], "10m_vs_11m": [154, 155], "27m_vs_30m": [154, 155], "mmm": [154, 155], "mmm2": [154, 155], "2s3z": [154, 155], "3s5z": [154, 155], "3s5z_vs_3s6z": [154, 155], "3s_vs_3z": [154, 155], "3s_vs_4z": [154, 155], "3s_vs_5z": [154, 155], "1c3s5z": [154, 155], "2m_vs_1z": [154, 155], "corridor": [154, 155], "6h_vs_8z": [154, 155], "2s_vs_1sc": [154, 155], "so_many_banel": [154, 155], "bane_vs_ban": [154, 155], "2c_vs_64zg": [154, 155], "old": [154, 155, 334, 432], "smac": [154, 155], "map_nam": [154, 155], "176": [154, 155], "battle_won": [154, 155], "dead_al": [154, 155], "dead_enemi": [154, 155], "episode_limit": [154, 155], "procedur": [154, 155], "distribution_config": [154, 155], "n_unit": [154, 155], "n_enemi": [154, 155], "team_gen": [154, 155], "dist_typ": [154, 155], "weighted_team": [154, 155], "unit_typ": [154, 155], "marin": [154, 155], "maraud": [154, 155], "medivac": [154, 155], "exception_unit_typ": [154, 155], "start_posit": [154, 155], "surrounded_and_reflect": [154, 155], "map_x": [154, 155], "map_i": [154, 155], "capability_config": [154, 155], "131": [154, 155, 429], "starcraft2env": 155, "tic": 157, "tac": 157, "toe": 157, "single_play": 157, "player1": 157, "desired_batch_s": 157, "player0": 157, "uniti": [158, 159], "technolog": [158, 159], "llapi": [158, 159], "mlagents_env": [158, 159], "unityenviron": [158, 159], "file_nam": 158, "registered_nam": 158, "localhost": 158, "3dball": 158, "group_0": 158, "vectorsensor_size8": 158, "continuous_act": [158, 160, 161, 370, 425, 426], "agent_10": 158, "agent_11": 158, "agent_4": 158, "agent_5": 158, "agent_6": 158, "agent_7": 158, "agent_8": 158, "agent_9": 158, "group_reward": 158, "proroklab": [160, 161], "vectorizedmultiagentsimul": [160, 161], "2207": [160, 161], "03530": [160, 161], "basescenario": 160, "perfrom": [160, 161], "defaultt": 160, "repositiori": 160, "sparsiti": 160, "unbatched_action_spec": [160, 161], "unbatched_observation_spec": [160, 161], "unbatched_reward_spec": [160, 161], "het_spec": [160, 161], "het_specs_map": [160, 161], "flock": [160, 161, 370], "agent_collision_rew": [160, 161], "agent_distance_rew": [160, 161], "ca": 162, "environment4": 162, "get_group_map": 162, "sumbodul": 163, "model_bas": [164, 165, 236, 263], "model_based_env": [164, 328], "dreamerenv": [164, 328, 405], "model_based_env_ev": 164, "num_interv": 167, "out_action_kei": 167, "samplingstrategi": 167, "optino": 167, "intenum": 167, "interv": [167, 371, 372, 381, 391, 413, 427], "action_disc": 167, "transform_input_spec": [167, 171, 178, 180, 181, 182, 193, 195, 199, 200, 205, 209, 210, 211, 215, 217, 219, 224], "masker": 168, "maskedenv": 168, "ones_lik": 168, "scatter": 168, "fill_float": 170, "fill_int": 170, "fill_bool": 170, "someenvclass": 170, "autoresetenv": 170, "argumet": 170, "fooenv": 170, "sign": [170, 207, 352, 425], "envtyp": 170, "reshape_fn": [171, 416], "reset_func": 171, "environmt": 171, "tensordict_batch_s": 171, "tensordict_reset": [171, 427], "transform_env_batch_s": [171, 178, 215, 224], "transform_output_spec": [171, 178, 180, 181, 185, 191, 199, 200, 206, 209, 215, 224], "transform_observation_spec": [171, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 189, 190, 191, 193, 195, 199, 200, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 224, 427], "transform_reward_spec": [171, 172, 177, 178, 180, 181, 185, 191, 199, 200, 203, 204, 205, 206, 207, 209, 215, 217, 224], "transformfull_done_spec": [171, 178, 180, 181, 185, 191, 199, 200, 206, 209, 215, 224], "biner": 172, "burn_in": 173, "burn": 173, "date": [173, 375], "retur": 173, "burnt": 173, "gru_modul": [173, 256, 314], "input_s": [173, 211, 254, 255, 256, 258, 259, 260, 314, 415, 416], "hidden_s": [173, 211, 254, 255, 256, 258, 259, 260, 314, 415, 416], "default_recurrent_mod": [173, 256, 260], "burn_in_transform": 173, "gru": [173, 211, 255, 256, 314, 416], "num_lay": [173, 254, 256, 258, 260, 272, 273, 314, 416], "86": [173, 412, 413, 416, 428], "3008": [173, 413], "0344": 173, "padding_valu": [174, 264, 265], "as_invers": 174, "movement": 174, "1312": [174, 413], "5602": 174, "consumpt": [174, 405], "followin": 174, "pictur": 174, "pixels_trsf": [174, 429], "grayscal": [174, 413, 415, 416, 429, 432], "data_exclud": [174, 429], "significantli": [174, 408, 412, 413, 419, 426], "make_rb_transform_and_sampl": 174, "sampler_kwarg": 174, "redund": [174, 415], "del_kei": [175, 218, 424, 427], "unsqueeze_if_oor": 175, "observation_posit": 175, "observation_veloc": 175, "center": [176, 277, 372], "width": [176, 179, 201], "scalar": [177, 203, 233, 234, 243, 245, 252, 269, 270, 278, 279, 313, 317, 318, 319, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 350, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 407, 413, 419, 427], "permit": [177, 187, 217, 317, 319, 334, 337, 339], "rewardsc": [178, 216, 412, 413, 415], "rewardclip": 178, "transformed_env": [178, 215, 216, 417], "transform_env_devic": [178, 181, 215, 224], "dtype_in": 180, "dtype_out": 180, "scan": [180, 183, 308, 309], "resp": [180, 183], "not_transform": [180, 183], "constructedw": [180, 183], "orig_devic": 181, "unspecifi": 181, "transform_done_spec": [181, 215, 224], "num_actions_effect": 182, "max_act": 182, "include_forward": 182, "num_act": [182, 240, 326, 416, 418], "action_out": 182, "_call": [182, 187, 427], "eol_kei": 184, "lives_kei": 184, "eol_attribut": 184, "unwrap": 184, "breakout": 184, "210": [184, 195, 411, 416, 429, 430, 432], "160": [184, 195, 413, 416, 432], "eol_transform": 184, "eol": 184, "dqnloss": [184, 317, 318, 320, 321, 324, 326, 327, 328, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 350, 396, 405, 408, 413, 415, 416, 422], "register_kei": 184, "loss_or_advantag": 184, "lossmodul": [184, 389, 398, 399, 405, 408], "valueestimatorbas": [184, 335, 405], "finit": [186, 277, 418, 429], "first_dim": 187, "last_dim": 187, "allow_positive_dim": [187, 217], "frameskip": 187, "repeatedli": [188, 414, 426], "init_kei": [190, 302], "tracker": 190, "pi_curr": 191, "pi_0": 191, "overfit": 191, "probabilist": [191, 227, 303, 317, 337, 405, 414, 431], "get_dist": [191, 307, 308], "normalparamextractor": [191, 295, 296, 297, 303, 309, 317, 318, 320, 326, 333, 337, 338, 339, 340, 342, 343, 407, 414, 418, 426, 431], "probabilisticactor": [191, 295, 296, 297, 298, 317, 318, 320, 323, 325, 326, 333, 336, 337, 338, 339, 340, 342, 343, 407, 412, 414, 418, 425, 426], "tanhnorm": [191, 295, 296, 297, 303, 309, 317, 318, 320, 333, 337, 338, 339, 340, 342, 343, 405, 414, 426, 431], "return_log_prob": [191, 295, 296, 297, 303, 307, 309, 339, 407, 414, 418, 425, 426, 431], "apply_": 191, "copy_": [191, 412], "formulat": 191, "diverg": [191, 256, 260, 303, 307, 329, 334], "noop": [192, 431], "trial": 192, "standard_norm": [193, 204, 222, 412, 413, 415], "affin": [193, 204, 222], "layer": [193, 222, 235, 239, 240, 242, 243, 248, 250, 254, 255, 256, 258, 259, 260, 261, 266, 267, 269, 270, 272, 273, 284, 285, 292, 301, 310, 407, 413, 414, 415, 416, 418, 425, 428], "epsilon": [193, 233, 234, 252, 253, 278, 279, 341, 387, 413, 414, 415, 418], "recover": 193, "set_default_tensor_typ": 193, "doubletensor": 193, "isclos": 193, "next_ob": [193, 352, 353, 354, 355, 431], "init_stat": [193, 412, 413, 414, 415], "3752e": 193, "5087e": 193, "9294e": 193, "9636": 193, "5608": 193, "6408": 193, "num_it": [193, 413, 414], "reduce_dim": [193, 412, 413, 414, 415], "cat_dim": [193, 412, 413, 414, 415], "keep_dim": [193, 413, 415], "statist": [193, 222, 235, 339, 403, 412, 413, 414, 432], "gaussian": [193, 211, 233, 234, 236, 263, 269, 270, 276, 414, 416, 425], "empir": [193, 236, 263, 303, 307, 412, 414, 426], "3d": [193, 239], "reorder": 195, "in_keys_in": [195, 217], "channel": [195, 213, 266, 272, 273, 413], "r3m": [197, 428], "resnet": [197, 218, 220], "embed": [197, 218, 219, 220, 242, 280, 294, 295, 296, 297, 306, 311, 428], "ego4d": [197, 218, 220], "univers": [197, 218, 220, 417], "suraj": [197, 218], "nair": [197, 218], "aravind": [197, 218], "rajeswaran": [197, 218], "vikash": [197, 218, 220], "kumar": [197, 218, 220], "chelsea": [197, 218], "finn": [197, 218], "abhinav": [197, 218], "gupta": [197, 218], "2203": [197, 218, 263, 428], "12601": [197, 218, 428], "_init": [197, 218, 412], "resnet50": [197, 220, 428], "model_nam": [197, 218, 220, 375, 416], "resnet34": 197, "resnet18": 197, "r3m_vec": [197, 428], "stack_imag": [197, 220], "tread": [197, 220], "separet": [197, 220], "hub": [197, 220, 417, 428], "resnet50_weight": [197, 220], "imagenet1k_v1": [197, 220], "download_path": [197, 220], "tensor_pixels_kei": [197, 220], "sub_seq_len": 198, "sample_dim": [198, 412], "hesit": 198, "robust": [198, 235], "mix": [198, 280, 289, 350, 412, 425, 426], "improp": 198, "dummyenv": 199, "another_oth": 199, "other_reward": 199, "create_copi": 200, "stuff": [200, 420], "newnam": 200, "r2g": 202, "reward_to_go": 202, "bernoulli_": 202, "9010": 202, "9404": [202, 358], "9701": [202, 358], "9900": [202, 358], "0000": [202, 212, 252, 277, 310, 358, 414, 415, 431], "crash": 202, "clamp_min": 203, "clamp_max": 203, "clip_min": 203, "clip_max": 203, "episode_": 205, "reward1": 205, "reward2": 205, "episode_reward": [205, 425, 426], "keep_reward": 206, "keep_don": 206, "logical_or": 207, "step_count_kei": 209, "update_don": 209, "disjunct": 209, "recognis": 209, "target_return": 210, "subtract": 210, "default_valu": [211, 314, 415], "unit": [211, 236, 250, 254, 255, 272, 273, 282, 283, 414], "mykei": 211, "__unless": 211, "exists__": 211, "get_primers_from_modul": [211, 238, 256, 260, 405], "recurrent_st": [211, 256, 260, 314, 415], "10th": 212, "0216": 212, "1149": 212, "1990": 212, "2749": 212, "3281": 212, "9290": 212, "3702": 212, "8978": 212, "from_int": 213, "shape_toler": 213, "permuat": 213, "ri": 213, "traj_count": 214, "traj": 214, "countingenv": 214, "mocking_class": 214, "make_env_c0": 214, "make_env_c1": 214, "principl": 215, "cattransform": 215, "notabl": 215, "rewardsum": [215, 224, 231, 425, 426], "smoothli": [216, 235], "add_1": [216, 416], "cache_spec": 216, "set_missing_toler": 216, "danger": 217, "vc1": 218, "vc1_vec": 218, "untrain": 218, "make_noload_model": 218, "vip": [219, 220, 428], "implicit": [220, 325, 333, 429], "jason": 220, "ma": 220, "shagun": 220, "sodhani": 220, "dinesh": 220, "jayaraman": 220, "osbert": 220, "bastani": 220, "ami": 220, "zhang": 220, "vip_vec": 220, "final_nam": 221, "sb3": 221, "terminal_obs_read": 221, "truli": [221, 431], "till": 221, "shared_td": 222, "decai": [222, 233, 234, 252, 341, 387, 412, 413, 415, 432], "9999": 222, "0001": [222, 250, 271, 414], "to_observation_norm": 222, "frozen_copi": 222, "race": 222, "underflow": [222, 387], "build_td_for_shared_vecnorm": 222, "memmori": 222, "queue": [222, 429, 431], "td_share": 222, "unfreez": 222, "train_env": 222, "eval_env": 222, "state_dim": [223, 241, 246, 276, 282, 283, 298], "action_dim": [223, 241, 242, 244, 246, 276, 298, 412, 424], "gsde": [223, 338, 403], "gsdemodul": 223, "rb_transform": 224, "resist": 224, "insensit": 224, "sensit": [224, 413, 415], "_orig": 224, "95": [224, 263, 345, 413, 414, 415], "window": [224, 302, 425, 429, 431], "edit": [224, 420], "cube": 225, "unsqueeze_null_shap": 229, "probabilistictdmodul": [230, 261, 303, 307, 351, 384], "keep_oth": [231, 427], "exclude_reward": 231, "exclude_don": 231, "next_": 231, "write_full_fals": 232, "_terminated_or_trunc": 232, "po": [233, 234, 253], "sigma_init": [233, 234, 425], "sigma_end": [233, 234, 425], "annealing_num_step": [233, 234, 252, 278, 279, 412, 413, 415, 416, 418, 422, 425], "sigma": [233, 234, 254, 255, 257, 258, 259, 278, 279, 287, 288, 414, 425], "captur": [233, 234, 252, 278, 279, 416], "omiss": [233, 234, 252, 278, 279], "ommit": [233, 234, 252, 278, 279], "momentum": 235, "max_r": 235, "max_d": 235, "warmup_step": 235, "batchrenorm": 235, "1702": 235, "03275": 235, "corenet": 235, "enhanc": 235, "warmup": 235, "phase": [235, 237, 426, 429], "outlier": 235, "period": 235, "varianc": [235, 236, 237, 257, 271, 287, 288, 408, 412, 414, 426], "warm": 235, "renorm": 235, "entropi": [236, 274, 317, 318, 319, 320, 325, 326, 333, 334, 336, 337, 338, 340, 342, 343, 426], "botev": 236, "2013": 236, "cem": 236, "plan": [236, 262, 263], "k": [236, 238, 254, 255, 258, 259], "maximis": [236, 242, 244, 263, 413, 414, 426], "modelbasedenv": [236, 263], "planning_horizon": [236, 263], "optim_step": [236, 263, 413, 416, 422], "mpc": [236, 262, 263], "num_candid": [236, 263], "candid": [236, 263], "top_k": [236, 263], "modelbasedenvbas": [236, 262, 263, 405], "safemodul": [236, 262, 295, 297, 307, 317, 318, 320, 325, 326, 333, 337, 338, 339, 340, 342, 343, 394, 395, 399, 405, 431], "hausknecht": 237, "wagen": 237, "reus": [237, 242, 379], "consistentdropoutmodul": [237, 407], "capit": 237, "themselv": [237, 413], "conceptu": 237, "devianc": 237, "set_exploration_typ": [237, 335, 384, 405, 407, 414, 415, 416, 418, 425, 431], "_main_async_collector": 237, "asyncdatacollector": [237, 405], "ditto": 237, "consistentdropout": 238, "input_shap": 238, "batcht": 238, "make_tensordict_prim": [238, 256, 260, 415], "input_dtyp": 238, "pase": 238, "get_default_dtyp": [238, 387], "mask_6127171760": 238, "env0": [238, 432], "num_cel": [239, 240, 242, 243, 244, 245, 250, 251, 256, 260, 261, 266, 267, 295, 314, 413, 414, 415, 416, 418, 419, 422, 425, 426, 431], "elu": [239, 240, 242, 243, 244, 245, 250, 251, 266, 413, 431], "activation_kwarg": [239, 240, 261], "norm_class": [239, 240, 242, 243, 261], "norm_kwarg": [239, 240, 261], "bias_last_lay": [239, 240, 242, 243, 244, 245, 251, 261], "aggregator_class": [239, 240, 242, 243, 413, 415, 431], "squashdim": [239, 240, 242, 251, 266, 431], "aggregator_kwarg": [239, 240, 242, 243, 413, 415], "squeeze_output": [239, 240, 242, 243, 413, 415], "cell": [239, 240, 254, 255, 256, 258, 259, 260, 261, 266, 267, 414, 416, 417, 418, 419, 420, 421, 422], "kernel": [239, 240, 266], "cnet": [239, 240], "conv3d": 239, "lazyconv2d": [240, 242, 243, 251, 266, 431], "default_atari_dqn": [240, 416], "semin": 240, "transformer_config": [241, 276, 298], "dtconfig": [241, 246, 276], "2202": [241, 246, 336], "05607": [241, 246, 336], "decisiontransform": [241, 276], "return_to_go": [241, 246, 276, 298], "conv_net_kwarg": [242, 243], "mlp_net_kwarg": [242, 243, 244], "use_avg_pool": [242, 243], "WITH": [242, 243, 244, 245, 278, 279, 341], "1509": [242, 243, 244, 245, 263, 278, 279, 322, 332, 341], "02971": [242, 243, 244, 245, 278, 279, 341], "convnet": [242, 243, 251, 266, 415, 416, 418, 431], "ndims_in": [242, 416], "avgpool": [242, 243], "lazylinear": [242, 243, 244, 245, 251, 261, 407, 414, 418, 427, 428, 431], "2304": [242, 413], "adaptiveavgpool2d": [243, 413, 415], "output_s": [243, 413, 415], "squeeze2dlay": 243, "400": [244, 245, 421, 426, 429], "mlp_net_kwargs_net1": 245, "mlp_net_kwargs_net2": 245, "mlp1": 245, "mlp2": 245, "decion": 246, "desdescrib": 246, "n_embd": 246, "n_layer": [246, 254, 258], "n_head": 246, "n_inner": 246, "n_posit": 246, "resid_pdrop": 246, "attn_pdrop": 246, "gpt2config": 246, "atol": [247, 286], "rtol": [247, 286], "batch_shap": [247, 274, 286], "event_shap": [247, 286], "absolut": [247, 286, 412], "_instanc": 247, "densiti": [247, 264, 265, 274, 288], "mass": [247, 264, 265, 274, 288, 427], "rsampl": [247, 265, 274, 307], "sample_shap": [247, 264, 265, 274], "softmax": [248, 265, 274, 299, 300], "var_num": [249, 281, 299, 300, 305], "action_value_kei": [249, 281, 299, 300, 304, 305, 320, 335, 350], "action_mask_kei": [249, 252, 281, 299, 300, 304, 305], "perspect": [249, 300, 327, 414, 416], "1707": [249, 300, 327, 337], "06887": [249, 300, 327], "mult": [249, 267, 281, 299, 300, 304, 305], "tensordict_modul": [249, 254, 255, 258, 259, 281, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 320, 321, 325, 326, 333, 337, 338, 339, 340, 342, 343, 407, 416], "nbin": [249, 299, 407], "customdistributionalqv": 249, "log_softmax": [249, 299], "qvalue_actor": [249, 281, 299, 304, 407], "to_modul": [249, 306, 309, 412, 431], "std_bia": 250, "std_min_val": 250, "belief": [250, 272, 282, 283], "1912": [250, 328, 329, 330], "01603": [250, 328, 329, 330], "softplu": [250, 271, 313, 315, 316], "out_features_valu": 251, "cnn_kwarg": [251, 413], "mlp_kwarg": [251, 413], "duel": 251, "cnn": [251, 266, 413, 416, 418, 431], "06581": 251, "greedi": [252, 253, 281, 300, 305, 413, 415, 416, 418], "eps_init": [252, 278, 279, 413, 415, 416, 418, 422], "eps_end": [252, 278, 279, 413], "explorative_polici": [252, 278, 279], "9055": 252, "9277": 252, "6295": 252, "2532": 252, "grad_fn": [252, 294, 431], "addbackward0": 252, "batch_first": [254, 256, 258, 260, 415], "bidirect": [254, 258, 415], "cudnn": [254, 255, 256, 258, 259, 260, 415, 416], "rnn": [254, 255, 256, 258, 259, 260, 293, 326, 340, 415, 416, 418], "device_count": [254, 255, 258, 259, 432], "n_in": [254, 255, 258, 259], "n_out": [254, 255, 258, 259], "h0": [254, 255, 258, 259], "h1": [254, 255, 258, 259], "vectoris": [254, 255, 258, 259], "call_gru": [254, 255], "h_out": [254, 255, 258, 259], "batched_cal": [254, 255, 258, 259], "gate": [254, 255, 258], "r_t": 254, "w_": [254, 255, 258, 259], "ir": [254, 255], "x_t": [254, 258], "b_": [254, 255, 258, 259], "hr": [254, 255, 258], "h_": [254, 255, 258], "z_t": 254, "iz": [254, 255], "hz": [254, 255], "n_t": 254, "odot": [254, 255, 258, 259], "hn": [254, 255, 258], "h_t": [254, 258], "sigmoid": [254, 255, 258, 259, 416], "hadamard": [254, 255, 258, 259], "multilay": [254, 258], "_t": [254, 258, 426, 427], "ge": [254, 258], "bernoulli": [254, 258], "b_ih": [254, 255, 258, 259, 260], "b_hh": [254, 255, 258, 259, 260], "h_0": [254, 258, 259], "unbatch": [254, 258], "pack_padded_sequ": [254, 258], "pack_sequ": [254, 258], "num": [254, 258, 422], "_layer": [254, 258], "_size": [254, 255, 258, 259], "h_n": [254, 258], "packedsequ": [254, 258], "weight_ih_l": [254, 258], "learnabl": [254, 255, 258, 259], "w_ir": 254, "w_iz": 254, "w_in": 254, "num_direct": [254, 258], "weight_hh_l": [254, 258], "w_hr": 254, "w_hz": 254, "w_hn": 254, "bias_ih_l": [254, 258], "b_ir": 254, "b_iz": 254, "b_in": 254, "bias_hh_l": [254, 258], "b_hr": 254, "b_hz": 254, "b_hn": 254, "mathcal": [254, 255, 258, 259], "sqrt": [254, 255, 258, 259, 278, 279], "frac": [254, 255, 258, 259, 414], "seq_len": [254, 258], "subtli": 254, "matrix": [254, 258, 269, 270], "contrast": [254, 277, 332, 429], "hx": [254, 255, 258, 259, 416], "lstmcell": [255, 260, 416], "gru_cel": 255, "weight_ih": [255, 259], "weight_hh": [255, 259], "bias_ih": [255, 259], "bias_hh": [255, 259], "rocm": [255, 259], "embedd": [256, 260], "grucel": [256, 306], "python_bas": [256, 260], "custom_kei": [256, 260], "hasn": [256, 260], "set_recurrent_mod": [256, 260, 415], "recurrent_mod": [256, 260, 293], "rs": [256, 412], "gru_module_train": 256, "policy_train": [256, 260], "traj_td": [256, 260], "make_cudnn_bas": [256, 260], "make_python_bas": [256, 260, 416], "supplementari": [256, 260, 414, 432], "That": [256, 260, 414, 425], "dealt": [256, 260], "poorli": [256, 260], "data_collector": [256, 260, 413], "policy_infer": [256, 260], "td_inf": [256, 260], "upscal": [257, 287, 288], "tanh_loc": [257, 287, 288], "event_dim": [257, 286, 287], "poor": [257, 287, 288], "explos": [257, 287, 288], "formula": [257, 287, 288, 317, 319, 334, 337, 408, 414], "proj_siz": 258, "c0": [258, 259], "c1": [258, 259], "call_lstm": [258, 259], "c_out": [258, 259], "i_t": 258, "ii": [258, 259], "hi": [258, 259], "f_t": 258, "hf": [258, 259], "g_t": 258, "ig": [258, 259], "hg": [258, 259], "o_t": 258, "ho": [258, 259], "c_t": 258, "c_": 258, "forget": 258, "1402": 258, "1128": 258, "c_0": [258, 259], "proj": 258, "c_n": 258, "w_ii": 258, "w_if": 258, "w_ig": 258, "w_io": 258, "w_hi": 258, "w_hf": 258, "w_hg": 258, "w_ho": 258, "b_ii": 258, "b_if": 258, "b_ig": 258, "b_io": 258, "b_hi": 258, "b_hf": 258, "b_hg": 258, "b_ho": 258, "weight_hr_l": 258, "_revers": 258, "analog": [258, 418], "cn": 258, "lstm_cell": 259, "h_1": 259, "c_1": 259, "time_step": [259, 302], "cx": 259, "correspont": 260, "recurrent_state_h": [260, 415], "recurrent_state_c": [260, 415], "triplet": [260, 304, 305], "lstm_modul": 260, "rs_h": 260, "rs_c": 260, "hidden0": [260, 416], "hidden1": [260, 416], "single_bias_last_lay": 261, "layer_class": 261, "layer_kwarg": 261, "perceptron": [261, 418], "aslo": 261, "noisylinear": [261, 269, 405, 413], "noisylazylinear": [261, 405], "mpcplanner": 262, "tensordict_out": [262, 432], "mppi": 263, "covari": 263, "william": [263, 339], "aldrich": 263, "theodor": 263, "01149": 263, "hansen": 263, "wang": 263, "su": 263, "04955": 263, "valueoper": [263, 295, 296, 297, 317, 318, 319, 320, 321, 326, 333, 334, 337, 338, 339, 340, 342, 343, 399, 407, 412, 414, 419], "tdlambdaestim": [263, 405, 412], "value_net": [263, 322, 324, 339, 352, 353, 354, 355, 414, 416, 418, 419, 422], "adv": 263, "lmbda": [263, 345, 352, 355, 357, 363, 364, 365, 368, 369, 408, 412, 414, 426], "value_network": [263, 321, 322, 324, 325, 327, 333, 340, 352, 353, 354, 355, 408, 412, 414, 416, 419, 422, 425], "temperatur": [263, 318, 325, 333], "neg_inf": [264, 265], "inf": [264, 265], "api_doc": [264, 265], "tf_agent": [264, 265], "event": [264, 265, 274, 361, 362, 363, 364, 366, 367, 368, 369, 429], "unnorm": [264, 265, 274], "sparse_mask": [264, 265], "dens": [264, 265], "0831": [264, 265], "1203": [264, 265], "0928": [264, 265], "1972": [264, 265], "grad_method": [265, 274], "reparamgradientstrategi": [265, 274], "passthrough": [265, 274], "relaxedonehot": [265, 274], "sample_non_valid": 265, "zeros_lik": [265, 427], "share_param": [266, 267, 268, 425, 426], "use_td_param": [266, 267, 268], "get_stateful_net": [266, 267, 268, 335, 407, 408], "from_stateful_net": [266, 267, 268, 335, 408], "homogen": [266, 267, 425, 426], "tensordictparam": [266, 267], "_empty_net": [266, 267], "roughli": [266, 267, 431], "agent_network": [266, 267], "modulelist": [266, 267, 431], "2592": [266, 413], "decentr": 266, "n_agent_input": [267, 268, 425, 426], "n_agent_output": [267, 268, 425, 426], "toech": 267, "centalis": 267, "shown": [267, 407, 416, 424, 425, 426, 429], "agent_dim": 268, "vmap_random": [268, 335, 408], "stateful_net": [268, 335], "Such": [268, 335], "multiagentmlp": [268, 425, 426], "snet": 268, "hasattr": [268, 412], "kaiming_normal_": 268, "std_init": [269, 270], "device_typ": [269, 270], "initialize_paramet": 269, "isol": [269, 335, 416], "1706": [270, 289], "10295v3": 270, "induc": 270, "aid": 270, "scale_map": 271, "biased_softplus_1": 271, "scale_lb": [271, 282, 283], "module_norm": 271, "1803": [272, 273, 280], "10122": [272, 273], "rnn_hidden": 272, "latent": 273, "ordin": [275, 405], "parametris": [275, 277], "inres": 276, "mu": [276, 278, 279, 414], "impos": [277, 407], "proxim": [277, 337, 414, 426], "atom": 277, "tang": 277, "agraw": 277, "2020": 277, "1901": 277, "10500": 277, "discretis": 277, "num_atom": 277, "num_sampl": 277, "middl": 277, "adam": [277, 287, 412, 413, 414, 415, 416, 419, 422, 425, 426, 427], "lr": [277, 412, 413, 414, 415, 422, 425, 426, 427], "optimis": [277, 425, 426], "minimis": 277, "penalis": 277, "0308": 277, "1586": 277, "4727": 277, "2260": 277, "1120": [277, 413], "histogram": 277, "return_typ": 277, "hist": [277, 429], "158": 277, "478": 277, "228": 277, "112": 277, "bin_edg": 277, "8000": [277, 412, 414], "6000": [277, 414], "4000": [277, 412, 413, 414], "ornstein": [278, 279, 412, 416], "uhlenbeck": [278, 279, 412, 416], "ou": [278, 279, 412], "correl": [278, 279], "noise_t": [278, 279], "noise_": [278, 279], "theta": [278, 279, 414, 427], "sigma_t": [278, 279], "sigma_": [278, 279], "anneal": [278, 279, 413, 418, 425], "ou_prev_nois": [278, 279], "ou_step": [278, 279], "x0": [278, 279], "sigma_min": [278, 279], "n_steps_ann": [278, 279], "is_init_kei": [278, 279], "_ou_prev_nois": [278, 279], "_ou_step": [278, 279], "state_shap": [280, 350], "mixing_embed_dim": [280, 350], "qmix": [280, 425, 426], "mixer": [280, 289, 350], "monoton": 280, "hyper": 280, "11485": 280, "qmixerloss": [280, 289], "qmix_vdn": [280, 289], "vdn": [280, 289], "hidden_dim": [282, 283], "posterior": [282, 329], "rssm": [282, 283, 329], "1811": [282, 283], "04551": [282, 283], "obs_embed": 282, "rnn_hidden_dim": 283, "dream": 283, "safe_tanh": 287, "tanhtransform": 287, "overflow": [287, 294, 299, 300, 303, 304, 305, 306, 307], "get_mod": 287, "decomposit": 289, "05296": 289, "hide": [290, 414, 425, 426], "satisfi": [290, 407], "vmap_dim": 290, "lam": 290, "sample_in": 290, "sample_in_td": 290, "vm": 290, "translat": [294, 303], "character": [294, 299, 303, 304, 306, 429], "td_modul": [294, 295, 296, 297, 303, 306, 307, 309, 311, 418, 431], "3635": 294, "0340": 294, "1476": 294, "3911": 294, "1664": [294, 413], "5455": 294, "2247": 294, "4583": 294, "2916": 294, "2160": 294, "5337": 294, "5193": 294, "addmmbackward0": 294, "actorvalueoper": [295, 319, 334, 337, 407, 418], "get_policy_oper": [295, 296, 297, 319, 334, 337, 407], "standalon": [295, 296, 297, 416, 418], "tdmodul": [295, 296, 297, 399], "get_critic_oper": 295, "common_oper": [295, 297], "policy_oper": [295, 296, 297], "value_oper": [295, 296, 297], "module_hidden": [295, 297], "td_module_hidden": [295, 297], "module_act": [295, 297], "td_module_act": [295, 296, 297], "module_valu": [295, 296, 297], "td_module_valu": [295, 296, 297], "state_action_valu": [295, 311, 318, 320, 325, 333, 340, 351, 399, 407, 412, 425, 431], "td_clone": [295, 296, 297], "tensordictmodulewrapp": [295, 394, 395, 399], "get_policy_head": [295, 296, 297], "safesequenti": [295, 296, 297, 350], "head": [295, 297, 314, 319, 334, 337], "get_value_head": [295, 296, 297], "get_value_oper": [295, 296, 297, 319, 334, 337], "action_modul": 296, "state_valu": [296, 297, 311, 319, 325, 333, 334, 337, 338, 340, 352, 353, 354, 355, 357, 359, 361, 363, 365, 366, 368, 407, 412, 414, 426], "actorcriticoper": [297, 407, 418], "actorcriticwrapp": [297, 407, 412], "inferec": 298, "set_tensor_kei": 298, "dt_inference_wrapp": 298, "baz": 298, "inference_context": 298, "obs_dim": 298, "tanhdelta": [298, 405, 412, 425], "dtactor": 298, "actor_modul": [298, 431], "dist_class": 298, "dist_kwarg": 298, "distribution_kwarg": [298, 303, 307, 414, 425, 426], "inference_actor": 298, "sequence_length": 298, "mask_context": 298, "out_act": 298, "qvaluemodul": [299, 304, 350, 415, 416, 418, 422], "distributionaldqnnet": 299, "make_log_softmax": 299, "my_action_valu": [300, 305], "chanc": 300, "thid": 300, "lmheadmodel": 301, "actor_head": [301, 319, 334, 337], "base_model": 301, "lm_head": 301, "macro": 302, "lookahead": 302, "n_action": [302, 318, 320, 322, 324, 336, 340], "reshape_cat": 302, "actor_bas": 302, "obs_cat": 302, "obs_cat_reshap": 302, "action_orig": 302, "default_interaction_typ": [303, 307, 418], "interaction_typ": [303, 307], "datacollectorbas": [303, 391, 394, 395, 399, 405], "set_interaction_typ": [303, 307], "compositedistribut": [303, 317, 337, 418], "distribution_map": 303, "name_map": 303, "cache_dist": [303, 307], "n_empirical_estim": [303, 307], "compound": [303, 418], "chose": 305, "functionalmodul": 306, "functionalmodulewithbuff": 306, "td_fmodul": 306, "td_function": 306, "td_state": 306, "params_repeat": 306, "td_vmap": [306, 309], "random_sampl": [306, 307], "suppli": 307, "fist": 307, "log_prob_kei": [307, 426], "probabilistictensordictsequenti": [308, 317, 319, 334, 337, 339, 394, 395, 431], "partial_toler": [308, 309, 424], "who": [308, 309], "AND": [308, 309, 320], "tensordictsequenci": 309, "tensordictsequ": 309, "safeprobabilisticmodul": [309, 407], "spec1": 309, "net1": 309, "module1": 309, "td_module1": 309, "spec2": 309, "module2": 309, "td_module2": 309, "clamp": [310, 329, 389, 425, 427], "boundari": [310, 414, 416, 425, 426], "resolut": 310, "9944": 310, "9991": 310, "3020": 310, "2299": 310, "5418": 310, "2989": [310, 416], "6849": 310, "3169": 310, "2690": 310, "9649": 310, "5686": 310, "8602": 310, "0315": 310, "8455": 310, "6027": 310, "4746": 310, "7843": 310, "7782": 310, "2111": 310, "5115": 310, "4687": 310, "5760": 310, "custommodul": 311, "imaginari": 312, "imagin": 312, "transition_model": 312, "get_reward_oper": 312, "get_transition_model_oper": 312, "min_val": [313, 316], "_bia": 313, "surject": 316, "expln": 316, "biased_softplu": [316, 405], "beggin": 316, "biased_softplus_": 316, "syntax": [316, 412], "met": [316, 425, 427], "1602": 317, "01783v2": 317, "actor_network": [317, 318, 319, 320, 321, 323, 325, 326, 333, 334, 336, 337, 338, 339, 340, 342, 343, 408, 412, 414, 419, 425, 426], "critic_network": [317, 319, 334, 337, 339, 414, 426], "entropy_bonu": [317, 319, 334, 337, 414], "favour": [317, 319, 334, 337], "samples_mc_entropi": [317, 319, 334, 336, 337], "entropy_coef": [317, 319, 334, 337, 414, 426], "critic_coef": [317, 319, 334, 337, 414], "loss_critic_typ": [317, 319, 334, 337, 339, 414], "l1": [317, 319, 321, 322, 326, 334, 337, 338, 339, 342, 343, 346, 350, 407, 412], "l2": [317, 319, 321, 322, 323, 324, 326, 329, 330, 334, 337, 338, 339, 342, 343, 346, 350, 412, 425], "smooth_l1": [317, 318, 319, 320, 321, 322, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 346, 350, 414], "separate_loss": [317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343], "propag": [317, 319, 320, 321, 325, 326, 333, 334, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 414, 425, 426], "advantage_kei": [317, 319, 334, 337, 339, 352, 353, 354, 355], "value_target_kei": [317, 319, 334, 337, 339, 352, 353, 354, 355], "value_target": [317, 319, 334, 337, 339, 352, 353, 354, 355, 414, 426], "ddp": [317, 319, 334, 337, 339], "fsdp": [317, 319, 334, 337, 339], "divid": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 392, 412, 425, 426, 427], "clip_valu": [317, 319, 334, 337, 339], "loss_crit": [317, 337, 414, 426], "loss_entropi": [317, 337, 414, 426], "loss_object": [317, 337, 414, 426], "recur": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 356, 418], "next_reward": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "next_don": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "next_termin": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355], "loss_obj": 317, "next_observ": [317, 318, 320, 321, 322, 324, 325, 326, 333, 337, 338, 339, 340, 342, 343, 424], "sacloss": [317, 332, 341, 405], "fraction": 317, "make_value_estim": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350, 408, 412, 413, 425, 426, 431], "value_typ": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 412], "hyperparam": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 412], "enum": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 345, 350, 412], "default_value_estim": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 412, 431], "default_value_kwarg": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 405, 412], "dqn_loss": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 344, 350], "td1": [317, 318, 320, 321, 322, 324, 326, 327, 328, 333, 335, 337, 338, 339, 340, 342, 343, 350, 412], "conserv": [318, 324], "qvalue_network": [318, 320, 325, 326, 333, 338, 340, 342, 343], "unti": [318, 320, 333, 338, 340, 342, 343], "loss_funct": [318, 320, 321, 322, 323, 324, 325, 326, 333, 338, 340, 342, 343, 346, 350, 412, 425], "alpha_init": [318, 320, 326, 336, 338, 340], "min_alpha": [318, 320, 326, 336, 338, 340], "max_alpha": [318, 320, 326, 336, 338, 340], "fixed_alpha": [318, 320, 326, 336, 338, 340], "target_entropi": [318, 320, 326, 336, 338, 340], "prod": [318, 320, 336, 340], "delay_actor": [318, 321, 340, 342, 343], "delay_qvalu": [318, 326, 338, 340, 342, 343], "min_q_weight": 318, "max_q_backup": 318, "backup": 318, "deterministic_backup": 318, "num_random": 318, "with_lagrang": 318, "lagrang": 318, "lagrange_thresh": 318, "valueclass": [318, 320, 321, 326, 338, 340, 342, 343], "qvalu": [318, 320, 325, 326, 333, 338, 340, 342, 343], "loss_actor": [318, 320, 321, 325, 326, 333, 338, 339, 340, 342, 343, 385, 412, 419, 425, 431], "loss_actor_bc": 318, "loss_alpha": [318, 320, 326, 338, 340], "loss_cql": [318, 324], "loss_qvalu": [318, 320, 324, 325, 326, 333, 338, 340, 342, 343], "loss_alpha_prim": 318, "clip_epsilon": [319, 414, 426], "normalize_advantag": [319, 334, 337, 426], "value_kei": [319, 334, 337, 352, 353, 354, 355, 412], "somemodul": [319, 334, 337], "someactor": [319, 334, 337], "value_head": [319, 334, 337], "somevalu": [319, 334, 337], "loss_modul": [319, 332, 334, 335, 337, 341, 389, 398, 399, 408, 409, 412, 413, 414, 425, 426, 429], "IN": 320, "FOR": 320, "simplic": [320, 413, 414, 420, 428, 429, 431], "openreview": [320, 338], "pczqttstix": 320, "qvalue_loss": [320, 342], "actor_loss": [320, 342], "alpha_loss": 320, "num_qvalue_net": [320, 325, 326, 333, 338, 340, 342, 343], "maybe_init_target_entropi": 320, "fault_toler": 320, "target_entropy_buff": 320, "delay_valu": [321, 322, 324, 327, 339, 340, 350, 413, 415, 416, 422, 425], "loss_valu": [321, 325, 333, 339, 340, 412, 414, 419, 425, 426, 431], "pred_valu": [321, 324, 342, 343, 412, 419, 431], "pred_value_max": [321, 412, 419, 431], "target_valu": [321, 324, 338, 342, 343, 351, 408, 412, 419, 431], "target_value_max": [321, 412, 419, 431], "qvalueactor": [322, 324, 350, 413, 415], "double_dqn": 322, "06461": [322, 332], "mult_one_hot": [322, 325, 326, 350], "loss_val": [322, 324, 408, 412, 414, 415, 416, 419, 420, 422, 425, 426, 429], "01345": 323, "distanc": [324, 334, 346, 351, 352, 426], "dcql_loss": 324, "2110": [325, 333], "06169": [325, 333], "expectil": [325, 333], "tau": [325, 333, 341, 412, 413, 425], "antmaz": [325, 333], "sticht": [325, 333], "onehotcategor": [325, 326, 405], "target_entropy_weight": 326, "skip_done_st": [326, 340], "disctount": 327, "distributionalqvalueactor": [327, 407], "input_tensordict": [327, 412], "actor_model": 328, "value_model": [328, 330], "imagination_horizon": 328, "unrol": [328, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369], "discount_loss": [328, 330], "lambda_kl": 329, "lambda_reco": 329, "lambda_reward": 329, "reco_loss": 329, "reward_loss": 329, "free_nat": 329, "nat": 329, "delayed_clamp": 329, "global_averag": 329, "value_loss": 330, "fake_data": 330, "1606": 331, "03476": 331, "discriminator_network": 331, "use_grad_penalti": 331, "gp_lambda": 331, "discrimin": 331, "ddpgloss": [332, 341, 399, 405, 412, 419, 425, 431], "td3loss": [332, 341, 405], "value_network_update_interv": 332, "qvalueclass": 333, "loss_value_diff": 333, "diff": 333, "old_polici": 334, "new_polici": 334, "apart": [334, 426], "dtarg": 334, "samples_mc_kl": 334, "analyt": 334, "decrement": 334, "loss_": [335, 385, 408, 412, 419], "equip": [335, 415, 416, 418], "gh": 335, "_acceptedkei": 335, "_forward_value_estimator_kei": 335, "alter": [335, 407], "value_estim": [335, 352, 353, 354, 355, 356, 408, 412, 426], "myloss": 335, "action2": 335, "augment": [335, 420, 422, 429], "deterministic_sampling_mod": 335, "convert_to_funct": [335, 412], "expand_dim": 335, "create_target_param": [335, 412], "compare_against": [335, 412], "_param": 335, "resampl": 335, "_target_param": 335, "network_nam": 335, "blend": 335, "add_random_modul": [335, 408], "flavor": [337, 412, 425, 426, 431], "clipppoloss": [337, 405, 414, 426], "klpenppoloss": [337, 405], "06347": 337, "gae": [337, 405, 408, 412, 414, 426], "ppo_loss": 337, "tdlambda": [337, 345, 408, 412], "base_lay": 337, "randn_lik": 337, "samplelogprob": 337, "ay8zfzm0tdd": 338, "sub_sample_len": 338, "subsampl": [338, 380, 409], "action_log_prob_actor": 338, "state_action_value_actor": [338, 342, 343], "connectionist": 339, "1992": 339, "doi": 339, "1007": 339, "bf00992696": 339, "actor_net": [339, 412, 414], "1801": 340, "01290": 340, "applic": [340, 350, 417, 418, 427], "1812": 340, "05905": 340, "redqloss": [341, 405], "math": 341, "theta_t": [341, 427], "theta_": [341, 427], "polyak": 341, "minimalist": 342, "06860": 342, "policy_nois": [342, 343], "noise_clip": [342, 343], "td3_bc": 342, "bc_loss": 342, "lmbd": 342, "next_state_valu": [342, 343, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 405], "td0": [344, 412, 425], "strict_shap": 346, "view_a": 346, "qmixer": [350, 405], "local_valu": 350, "visibl": [350, 426], "dafault": 350, "acceptedkei": 350, "global_valu": 350, "penultim": 350, "local_value_network": 350, "mixer_network": 350, "value_modul": [350, 414, 431], "qnet": [350, 412], "next_val_kei": 351, "pred_next_v": 351, "usus": 351, "mse": 351, "q_valu": 351, "n_steps_to_next": 351, "value_next_st": 351, "1506": [352, 357, 365], "02438": [352, 357, 365], "exponenti": [352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 387], "average_ga": [352, 414], "skip_exist": [352, 353, 354, 355], "get_default_devic": [352, 353, 354, 355, 356], "time_dim": [352, 354, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369], "gradient_mod": 352, "value_error": [352, 353, 354, 355, 356], "target_param": [352, 353, 354, 355, 356, 412, 426], "98": [352, 353, 354, 355, 413], "94": [352, 355, 413, 428], "unpack": [352, 353, 354, 355], "tensor_kei": [352, 353, 354, 355, 356], "next_valu": [352, 353, 354, 355, 356], "aka": [353, 413, 425], "average_reward": [353, 354, 355], "tdestim": [353, 354, 356], "infti": 354, "valuefunctionbas": 356, "old_stat": [357, 359, 361, 363, 365, 366, 368], "new_stat": [357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "rolling_gamma": [361, 362, 363, 364, 366, 367, 368, 369], "g1": [361, 362, 363, 364, 366, 367, 368, 369], "g2": [361, 362, 363, 364, 366, 367, 368, 369], "g3": [361, 362, 363, 364, 366, 367, 368, 369], "g4": [361, 362, 363, 364, 366, 367, 368, 369], "v3": [361, 362, 363, 364, 366, 367, 368, 369], "preproc": [370, 416, 425], "as_non_tensor": [370, 425], "render_method": 370, "pass_tensordict": 370, "syntat": 370, "sugar": 370, "out_file_bas": 371, "skip_reset": 371, "center_crop": 372, "make_grid": 372, "csv": [372, 374, 376, 413, 421, 422], "wandb": [372, 376, 379, 421, 431], "tensorboard": [372, 376, 378, 421, 431], "log_dir": [372, 373, 374, 376, 378, 379, 413, 422], "cheetah_video": 372, "run_video": 372, "openxexperiencereplai": 372, "run_video_0": 372, "templat": 373, "pt": [374, 409, 428], "video_fp": 374, "dependeci": 374, "cur_dir": 374, "csv_log": 374, "add_video": 374, "video_": 374, "experiment_nam": [375, 376], "uuid": [375, 413, 432], "logger_typ": 376, "logger_nam": 376, "mlflow": [376, 377], "wandb_kwarg": 376, "mlflow_kwarg": 376, "tracking_uri": 377, "uri": 377, "datastor": 377, "tb_log": 378, "tensoarboard": 378, "td_log": 378, "save_dir": 379, "resum": 379, "uncategor": 379, "sub_traj_len": 380, "min_sub_traj_len": 380, "register_op": [380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 409, 413], "process_optim_batch": [380, 386, 387, 409], "td_out": [380, 388], "_process_optim_batch_hook": [380, 409], "batch_subsampl": 380, "clear_cuda": 381, "pre_optim_step": [381, 409], "log_pbar": [382, 383, 384, 387, 409, 413], "progress": [382, 383, 384, 389, 409, 413, 415, 432], "count_fram": 382, "pre_steps_log": [382, 383, 409], "count_frames_log": 382, "lognam": 383, "r_train": [383, 413], "log_reward": [383, 413], "record_interv": [384, 412, 413], "record_fram": [384, 392, 412, 413], "policy_explor": [384, 399, 412, 413, 416, 418, 422], "log_kei": [384, 413], "underestim": 384, "r_evalu": [384, 412], "loss_compon": 385, "appl": 385, "optimizer_hook": 385, "flatten_tensordict": [386, 413], "max_dim": 386, "rb_trainer": 386, "batch_process": [386, 387, 388, 409], "post_loss": [386, 409], "999": [387, 413], "jitter": 387, "finfo": 387, "default_dtyp": 387, "reward_norm": 387, "update_reward_stat": 387, "normalize_reward": 387, "make_train": [388, 405], "_process_batch_hook": [388, 409], "select_kei": [388, 409], "versatil": [389, 417], "optim_steps_per_batch": [389, 409, 413], "clip_grad_norm": 389, "clip_norm": 389, "progress_bar": 389, "save_trainer_interv": 389, "log_interv": [389, 413], "save_trainer_fil": [389, 409], "load_from_fil": [389, 409], "update_weights_interv": [391, 413], "update_weight": 391, "post_step": [391, 409, 413], "cfg": [392, 393, 394, 395, 396, 397, 398, 399, 400, 403], "dictconfig": [392, 393, 394, 395, 397, 398, 399, 400, 403], "unknowingli": 392, "annealing_fram": [392, 412], "init_env_step": [392, 393, 412], "proof_environ": [393, 412], "sta": 393, "ot": 393, "actor_model_explor": [394, 395, 412], "make_env_kwarg": [394, 395], "targetnetupdat": [396, 398, 399], "replayargsconfig": 397, "target_net_updat": [399, 412, 413], "constitu": 399, "egreedywrapp": 399, "env_proof": 399, "obs_spec": 399, "net_valu": 399, "dir": [399, 409, 413], "gettempdir": 399, "argpars": [400, 403], "namespac": [400, 403], "parser": [400, 403], "transformed_env_constructor": [400, 405], "num_env_per_collector": [401, 402], "video_tag": 403, "norm_obs_onli": 403, "use_env_cr": 403, "custom_env_mak": 403, "custom_env": 403, "return_transformed_env": 403, "action_dim_gsd": 403, "state_dim_gsd": 403, "obs_norm_state_dict": 403, "wheter": 403, "maker": [403, 413], "distributedsyncdatacollector": 405, "submitit_delayed_launch": 405, "raycollector": 405, "rational": 405, "footnot": 405, "binarydiscretetensorspec": 405, "boundedtensorspec": 405, "discretetensorspec": 405, "lazystackedcompositespec": 405, "lazystackedtensorspec": 405, "multidiscretetensorspec": 405, "multionehotdiscretetensorspec": 405, "onehotdiscretetensorspec": 405, "unboundedcontinuoustensorspec": 405, "unboundeddiscretetensorspec": 405, "prompttensordicttoken": 405, "rolloutfrommodel": 405, "tokenizeddatasetload": 405, "create_infinite_iter": 405, "constantklcontrol": 405, "adaptiveklcontrol": 405, "consolidate_spec": 405, "check_no_exclusive_kei": 405, "contains_lazy_spec": 405, "nested2t": 405, "h5combin": 405, "h5split": 405, "chessenv": 405, "tictactoeenv": 405, "llmhashingenv": 405, "check_marl_group": 405, "get_available_librari": 405, "terminated_or_trunc": 405, "dreamerdecod": 405, "braxwrapp": 405, "dmcontrolwrapp": 405, "jumanjienv": 405, "jumanjiwrapp": 405, "meltingpotenv": 405, "meltingpotwrapp": 405, "mogymenv": 405, "mogymwrapp": 405, "multithreadedenvwrapp": 405, "openmlenv": 405, "openspielwrapp": 405, "openspielenv": 405, "pettingzooenv": [405, 425], "robohiveenv": 405, "smacv2env": 405, "smacv2wrapp": 405, "unitymlagentsenv": 405, "unitymlagentswrapp": 405, "vmaswrapp": 405, "qvaluehook": 405, "distributionalqvaluehook": 405, "reset_nois": 405, "cemplann": 405, "mpcplannerbas": 405, "mppiplann": 405, "independentnorm": 405, "normalparamwrapp": 405, "truncatednorm": 405, "maskedonehotcategor": 405, "onehotordin": 405, "inv_softplu": 405, "vmapmodul": 405, "distributionaldqnloss": [405, 413], "discretesacloss": 405, "crossqloss": 405, "iqlloss": 405, "discreteiqlloss": 405, "cqlloss": 405, "discretecqlloss": 405, "gailloss": 405, "dtloss": 405, "onlinedtloss": 405, "td3bcloss": 405, "ppoloss": 405, "a2closs": 405, "reinforceloss": 405, "dreameractorloss": 405, "dreamermodelloss": 405, "dreamervalueloss": 405, "td0estim": [405, 412], "td1estim": [405, 412], "td0_return_estim": 405, "td0_advantage_estim": 405, "td1_return_estim": 405, "vec_td1_return_estim": 405, "td1_advantage_estim": 405, "vec_td1_advantage_estim": 405, "td_lambda_return_estim": 405, "vec_td_lambda_return_estim": 405, "td_lambda_advantage_estim": 405, "vec_td_lambda_advantage_estim": 405, "generalized_advantage_estim": 405, "vec_generalized_advantage_estim": 405, "reward2go": 405, "hardupd": [405, 412, 419], "softupd": [405, 412, 413, 415, 416, 419, 422, 425], "distance_loss": [405, 412], "group_optim": 405, "hold_out_net": 405, "hold_out_param": [405, 412], "batchsubsampl": [405, 409], "clearcudacach": 405, "countframeslog": 405, "logscalar": [405, 409, 413], "optimizerhook": [405, 413], "logvalidationreward": [405, 409, 412, 413], "replaybuffertrain": [405, 409, 413], "rewardnorm": 405, "selectkei": [405, 409], "trainerhookbas": [405, 409, 413], "updateweight": [405, 409, 413], "make_collector_offpolici": 405, "make_collector_onpolici": 405, "make_dqn_loss": 405, "make_replay_buff": [405, 412], "make_target_updat": 405, "parallel_env_constructor": [405, 412], "sync_async_collector": 405, "sync_sync_collector": 405, "correct_for_frame_skip": 405, "get_stats_random_rollout": 405, "mlflowlogg": 405, "get_logg": 405, "generate_exp_nam": 405, "journei": 406, "textbook": 406, "highlight": [406, 425], "ever": [406, 426], "bump": 406, "think": [406, 414, 425, 426, 432], "benefit": [406, 417, 425, 426, 429], "pr": 406, "ground": [407, 412, 427], "recycl": [407, 429], "noisier": 407, "Their": [407, 425, 426], "sd": [407, 432], "prob_modul": 407, "uncertainti": 407, "soften": 407, "backbon": [407, 415, 418, 424, 431], "make_actor": 407, "make_valu": 407, "shared_param": 407, "make_common": 407, "reusabl": [408, 412, 429], "swappabl": [408, 412], "characterist": [408, 412, 427], "trainabl": [408, 412, 419, 428], "smth": [408, 412], "metric": [408, 412], "plenti": [408, 416], "amort": [408, 413, 414], "told": [408, 414], "pseudo": [408, 420, 427], "buri": 408, "str_valu": 408, "nutshel": [408, 412], "barto": [408, 425, 426], "chapter": [408, 421], "value_net_loss": 408, "pow": [408, 412], "room": 408, "signifi": [408, 425, 426], "underperform": 408, "thin": 408, "intric": [408, 418], "believ": 409, "scheme": [409, 432], "substenti": 409, "_pre_steps_log_hook": 409, "_pre_optim_hook": 409, "sub_batch": 409, "_post_loss_hook": 409, "_post_optim_hook": 409, "post_optim": [409, 413], "_post_optim_log": 409, "post_optim_log": 409, "_post_steps_hook": 409, "_post_steps_log_hook": 409, "post_steps_log": 409, "reserv": 409, "logginghook": 409, "logging_hook": 409, "save_dict": 409, "some_valu": 409, "torchsnapshot": 409, "ckpt_backend": 409, "filepath": 409, "save_train": 409, "143": [411, 430], "galleri": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "mem": [411, 430], "mb": [411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432], "torchrl_env": [411, 430, 432], "221": [411, 430, 432], "dqn_with_rnn": [411, 415, 430], "468": [411, 415, 430], "2214": [411, 430], "rb_tutori": [411, 429, 430], "466": [411, 430], "coding_dqn": [411, 413, 430], "47": [411, 413, 428, 430], "061": [411, 413, 430], "1063": [411, 413, 430], "torchrl_demo": [411, 430, 431], "393": [411, 430, 431], "325": [411, 412, 430, 431], "coding_ddpg": [411, 412, 430], "117": [411, 412, 430], "324": [411, 426, 430], "multiagent_ppo": [411, 426, 430], "993": [411, 426, 430], "323": [411, 422, 425, 430], "multiagent_competitive_ddpg": [411, 425, 430], "970": [411, 425, 430], "coding_ppo": [411, 414, 430], "756": [411, 414, 430], "321": [411, 430, 432], "pretrained_model": [411, 428, 430], "771": [411, 428, 430], "4145": [411, 430], "58": [411, 412, 413, 416, 428, 430], "642": [411, 416, 430], "4750": [411, 430], "multi_task": [411, 424, 430], "53": [411, 412, 413, 424, 428, 429, 430], "604": [411, 424, 430], "319": [411, 417, 418, 430], "48": [411, 412, 413, 417, 418, 428, 430], "948": [411, 417, 430], "563": [411, 418, 430], "318": [411, 430], "446": [411, 419, 430], "227": [411, 422, 430], "262": [411, 420, 430], "900": [411, 426, 427, 430], "4951": [411, 427, 430], "592": [411, 421, 430], "353": [411, 414, 430], "author": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 429, 432], "vincent": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 427, 429, 432], "moen": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 427, 429, 432], "assembl": 412, "focus": [412, 419], "straightforward": [412, 413, 417, 418, 419, 420, 429], "maxim": [412, 419, 427], "transpar": [412, 415], "illustr": [412, 413, 418, 429], "bash": 412, "is_fork": [412, 413, 414, 415, 425, 426, 428], "get_start_method": [412, 413, 414, 415, 425, 426, 428], "collector_devic": 412, "loss_dict": 412, "oblivi": [412, 414, 429], "elementari": 412, "didact": [412, 416], "dilut": 412, "pessimist": [412, 413, 414], "target_actor_network_param": 412, "actor_in_kei": 412, "actor_crit": 412, "compromis": 412, "hp": 412, "_value_estim": 412, "elif": [412, 413], "unknown": 412, "_loss_actor": 412, "td_copi": 412, "actor_network_param": [412, 425], "value_network_param": [412, 425], "_loss_valu": 412, "pred_val": 412, "target_value_network_param": 412, "glue": 412, "_forward": 412, "remaind": 412, "env_librari": 412, "env_task": 412, "env_arg": [412, 413], "friendli": 412, "torchr": 412, "rescal": 412, "presum": 412, "make_transformed_env": 412, "reward_sc": 412, "marker": 412, "env_per_collector": 412, "transform_state_dict": 412, "make_t_env": 412, "cheat": 412, "10m": 412, "cautiou": 412, "magnitud": [412, 425], "thousand": [412, 415], "get_env_stat": 412, "proof_env": 412, "5000": [412, 413, 414, 416, 422], "recal": [412, 414, 429], "ddpgmlpactor": 412, "ddpgmlpqnet": 412, "materi": 412, "ornsteinuhlenbeckprocessmodul": [412, 418], "make_ddpg_actor": 412, "q_net": 412, "tight": 412, "decoupl": [412, 419, 431], "10_000": [412, 414], "traj_len": [412, 415], "make_record": 412, "recorder_obj": 412, "pick": [412, 413, 418], "buffer_s": [412, 413], "random_crop_len": 412, "prb": 412, "buffer_scratch_dir": 412, "temporari": 412, "25": [412, 413, 414, 415, 425, 426], "dataflow": 412, "ceil_div": 412, "utd": [412, 415], "update_to_data": 412, "realiz": 412, "_must_": 412, "001": [412, 427], "outdat": 412, "trick": [412, 413], "despit": 412, "optimizer_actor": 412, "weight_decai": [412, 413], "optimizer_valu": 412, "total_collection_step": 412, "pretti": [412, 417, 421, 429], "rewards_ev": 412, "collected_fram": 412, "r0": 412, "numel": [412, 414, 415, 416, 422, 425, 428, 429], "current_fram": [412, 425], "sampled_tensordict": 412, "gn1": 412, "clip_grad_norm_": [412, 414, 425, 426, 427], "gn2": 412, "gn": [412, 427], "td_record": 412, "rn": 412, "set_descript": [412, 414, 415, 425, 426, 427], "2f": 412, "800": [412, 413], "2492": 412, "44it": [412, 413], "1600": [412, 413], "635": 412, "40it": [412, 413], "2400": [412, 413], "07": [412, 413, 428], "961": 412, "82it": [412, 413], "3200": [412, 413], "1265": [412, 432], "84it": 412, "1537": 412, "06it": [412, 413], "4800": [412, 413], "1775": 412, "78it": [412, 413], "56": [412, 413, 428], "5600": 412, "1970": 412, "79it": 412, "72": [412, 413, 428], "272": 412, "6400": [412, 431], "695": 412, "77it": [412, 413], "09": [412, 413, 425], "289": 412, "91": [412, 413], "60": [412, 413, 414, 425, 426, 428, 429, 431], "61": [412, 413, 428], "7200": 412, "484": 412, "25it": [412, 413], "288": [412, 413], "405": 412, "93": [412, 413], "402": 412, "37it": [412, 413], "57": [412, 413, 425, 428], "141": [412, 429], "194": 412, "8800": 412, "361": [412, 414], "71it": [412, 413], "85": [412, 413], "55": [412, 413, 428], "284": 412, "96": [412, 413, 428], "9600": 412, "280": 412, "38it": 412, "241": 412, "10400it": 412, "264": 412, "242": 412, "mention": [412, 415, 429, 432], "matplotlib": [412, 414, 415, 416, 425, 426, 427, 429, 432], "pyplot": [412, 414, 415, 416, 425, 426, 427, 429, 432], "plt": [412, 414, 415, 416, 425, 426, 427, 429, 432], "zip": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "legend": [412, 425], "xlabel": [412, 415, 426, 427], "ylabel": [412, 426], "tight_layout": 412, "takeawai": [412, 413, 416], "distpatch": 412, "jupyt": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "ipynb": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432], "sphinx": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432], "road": 413, "aspect": [413, 419], "highest": [413, 418], "prerequisit": [413, 415], "lookup": 413, "cart": 413, "pole": 413, "un": 413, "actuat": 413, "frictionless": 413, "duelingcnndqnet": 413, "egreedymodul": [413, 415, 416, 418, 422], "is_notebook": 413, "shell": 413, "get_ipython": 413, "__class__": 413, "zmqinteractiveshel": 413, "qtconsol": 413, "terminalinteractiveshel": 413, "ipython": [413, 426, 427], "nameerror": [413, 425], "umbrella": 413, "misplac": 413, "misus": 413, "orchestr": [413, 419, 421], "five": 413, "64x64": 413, "motion": [413, 427], "obs_norm_sd": 413, "mp_context": 413, "simpler": [413, 417], "get_norm_stat": 413, "test_env": 413, "mathbb": 413, "rightarrow": 413, "make_model": 413, "dummy_env": 413, "init_bia": 413, "exploration_modul": [413, 415, 416, 418, 422], "eps_greedy_v": 413, "eps_greedy_val_env": 413, "actor_explor": 413, "get_replay_buff": 413, "n_optim": [413, 419, 420], "parametriz": 413, "get_collector": 413, "cl": 413, "bunch": 413, "ubiquit": [413, 417], "get_loss_modul": 413, "target_updat": [413, 425], "995": 413, "hopefulli": 413, "variat": 413, "2e": [413, 427], "wd": 413, "upd": 413, "harder": [413, 431], "5_000": 413, "500000": 413, "100000": 413, "005": [413, 425], "mandatori": [413, 414, 426, 427], "fairer": 413, "budget": 413, "dqn_exp_": 413, "uuid1": [413, 432], "9895": 413, "0737": 413, "registr": 413, "cumbersom": 413, "buffer_hook": 413, "weight_updat": 413, "aliv": 413, "total_reward": 413, "56it": 413, "3688": 413, "9259": 413, "27it": 413, "12it": 413, "3293": 413, "15it": 413, "3869": 413, "66it": 413, "52": [413, 428], "73it": 413, "224": 413, "93it": 413, "65": [413, 428], "61it": 413, "4021": 413, "39it": 413, "3778": 413, "352": [413, 414], "98it": 413, "384": 413, "58it": 413, "416": 413, "19it": [413, 414], "4173": 413, "448": 413, "54": [413, 428], "11it": [413, 415], "480": [413, 428], "36it": 413, "3991": 413, "53it": 413, "3415": 413, "544": 413, "08it": 413, "576": 413, "91it": 413, "608": 413, "97it": 413, "640": 413, "99it": 413, "3505": 413, "672": 413, "09it": 413, "704": 413, "72it": 413, "4295": 413, "736": 413, "3718": 413, "768": [413, 416], "94it": [413, 414], "34it": 413, "832": [413, 427], "49": [413, 428], "24it": 413, "864": 413, "896": 413, "3475": 413, "928": 413, "960": 413, "992": 413, "13it": [413, 414], "4082": 413, "1056": 413, "03it": 413, "1088": 413, "1152": 413, "3899": 413, "1184": 413, "07it": 413, "1216": 413, "20it": [413, 414], "1248": 413, "48it": 413, "1280": 413, "29it": 413, "00it": 413, "1344": 413, "1376": 413, "67it": [413, 414], "1408": 413, "1440": 413, "30it": 413, "1472": 413, "42it": 413, "1504": 413, "1536": 413, "68it": 413, "1568": 413, "65it": 413, "1632": 413, "86it": 413, "1696": 413, "1728": 413, "49it": 413, "1760": 413, "1792": 413, "1824": 413, "32it": 413, "1856": 413, "17it": 413, "1888": 413, "1920": 413, "1952": 413, "1984": 413, "26it": 413, "2016": 413, "05it": 413, "2080": 413, "02it": 413, "2112": 413, "87it": 413, "2144": 413, "2176": 413, "2208": 413, "2240": 413, "2272": 413, "2336": 413, "2368": 413, "55it": 413, "2432": [413, 414], "2464": 413, "2496": 413, "45it": [413, 414], "2528": 413, "2560": 413, "28it": 413, "2624": 413, "90it": 413, "2656": 413, "10it": 413, "2688": 413, "2720": 413, "2752": 413, "2784": 413, "2816": 413, "2848": 413, "2880": 413, "95it": 413, "2912": 413, "59": [413, 428, 429], "2944": 413, "2976": 413, "3040": 413, "33it": 413, "3072": 413, "64it": 413, "62": [413, 428], "3104": 413, "83it": 413, "63": [413, 428, 429], "3136": [413, 416], "3168": 413, "59it": [413, 414], "3232": 413, "7037": 413, "3264": 413, "74it": 413, "66": [413, 428], "3296": 413, "57it": 413, "3328": 413, "3360": 413, "96it": 413, "3392": 413, "3424": 413, "3456": 413, "47it": 413, "3488": 413, "3520": 413, "75it": 413, "3552": 413, "3584": 413, "3616": 413, "3648": 413, "3680": 413, "3712": 413, "3744": 413, "14it": 413, "3776": 413, "63it": 413, "3808": 413, "3840": 413, "3872": 413, "3904": 413, "3936": 413, "3968": 413, "4032": 413, "4064": 413, "4096": 413, "4128": 413, "4160": 413, "4192": 413, "4224": 413, "70it": 413, "4256": 413, "4288": 413, "4320": 413, "4352": 413, "4384": 413, "4416": 413, "89": 413, "4448": 413, "90": [413, 414, 425, 426], "4480": 413, "4512": 413, "4544": 413, "92": [413, 428], "4576": 413, "76it": 413, "4608": 413, "4640": 413, "4704": 413, "04it": 413, "4736": 413, "4768": 413, "97": [413, 428], "4832": 413, "4864": 413, "4896": 413, "4928": 413, "4960": 413, "16it": 413, "4992": 413, "5024it": 413, "print_csv_files_in_fold": 413, "folder_path": 413, "csv_file": 413, "output_str": 413, "dirpath": 413, "endswith": 413, "strip": 413, "tmp": [413, 416, 429], "tmp0_81a4o3": 413, "dqn_exp_1a2e6d44": 413, "bb68": 413, "11ef": [413, 432], "bdb6": [413, 432], "0242ac110002": [413, 432], "3414844274520874": 413, "40816524624824524": 413, "39912936091423035": 413, "39912933111190796": 413, "40213119983673096": 413, "42945271730422974": 413, "37784188985824585": 413, "1978113055229187": 413, "1293526589870453": 413, "18597376346588135": 413, "23150721192359924": 413, "31563201546669006": 413, "35344168543815613": 413, "25122886896133423": 413, "34413230419158936": 413, "3021546006202698": 413, "grad_norm_0": 413, "4979428052902222": 413, "1560639142990112": 413, "591616630554199": 413, "2395172119140625": 413, "0551068782806396": 413, "9243991374969482": 413, "595486879348755": 413, "600033760070801": 413, "151525020599365": 413, "10000000894069672": 413, "7037038803100586": 413, "qvaluenetwork": 413, "worst": 413, "accuraci": 413, "fanci": [413, 420], "talk": 414, "repetit": [414, 417, 420], "six": 414, "sophist": [414, 426], "invent": 414, "theta_k": 414, "pi_": 414, "exceed": 414, "discourag": [414, 427], "indispens": 414, "analyz": 414, "lingua": 414, "franca": 414, "defaultdict": [414, 427], "3e": [414, 415, 425, 426], "max_grad_norm": [414, 425, 426], "sub_batch_s": 414, "num_epoch": [414, 426], "entropy_ep": [414, 426], "charact": [414, 416], "inverteddoublependulum": 414, "transmit": 414, "stai": 414, "confid": [414, 425, 426], "ran": 414, "f_": 414, "mu_": 414, "difficulti": [414, 432], "d_ob": 414, "d_action": 414, "policy_modul": [414, 425, 426], "briefli": [414, 425, 426], "refil": [414, 426], "easiest": [414, 419, 425, 426], "mathemat": [414, 425, 426], "tradeoff": [414, 426], "advantage_modul": 414, "lr_schedul": [414, 427], "cosineannealinglr": [414, 427], "eval_str": 414, "tensordict_data": [414, 426], "data_view": [414, 426], "subdata": [414, 425, 426], "cum_reward_str": 414, "4f": [414, 415, 427], "stepcount_str": 414, "param_group": [414, 425], "lr_str": 414, "eval_rollout": 414, "nice": [414, 417, 420], "92it": 414, "110": [414, 429], "9838": 414, "0879": 414, "0003": 414, "340": 414, "1253": 414, "3000": 414, "336": 414, "1550": 414, "343": 414, "1834": 414, "0002": 414, "348": 414, "2011": 414, "23it": 414, "2301": 414, "7000": 414, "356": 414, "2381": 414, "358": 414, "9000": 414, "360": 414, "18it": 414, "2384": 414, "2494": 414, "cap": [414, 429], "figsiz": [414, 427], "subplot": [414, 425, 427, 432], "titl": [414, 415, 416, 426, 427], "84x84": [415, 416], "accessori": 415, "stamp": 415, "assist": 415, "n_cell": 415, "customiz": 415, "wouldn": 415, "qval": 415, "stoch_polici": 415, "opportun": [415, 425], "uniniti": 415, "again": [415, 416, 417, 418, 420, 426, 428, 429, 432], "strongli": 415, "sake": [415, 428, 429], "20_000": [415, 427], "longest": 415, "npai": 415, "action_spread": 415, "137": 415, "0007": 415, "46it": 415, "150": 415, "89it": 415, "69it": 415, "0005": 415, "2215": 415, "rom": 416, "licens": 416, "strong": 416, "impress": 416, "arduino": 416, "raspberri": 416, "pi": [416, 425, 426, 427], "alon": 416, "examplifi": 416, "ship": 416, "stick": 416, "nearest": 416, "value_mlp": [416, 422], "100_000": [416, 422], "init_rand_step": [416, 422], "total_count": [416, 422], "total_episod": [416, 422], "t0": [416, 422], "screen": [416, 425], "color": [416, 425], "unblock": 416, "policy_transform": 416, "fake_td": 416, "exported_polici": 416, "div": 416, "graph_modul": 416, "print_read": 416, "graphmodul": 416, "p_module_1_module_0_module_0_module_0_0_weight": 416, "f32": 416, "p_module_1_module_0_module_0_module_0_0_bia": 416, "p_module_1_module_0_module_0_module_0_2_weight": 416, "p_module_1_module_0_module_0_module_0_2_bia": 416, "p_module_1_module_0_module_0_module_0_4_weight": 416, "p_module_1_module_0_module_0_module_0_4_bia": 416, "p_module_1_module_0_module_0_module_1_0_weight": 416, "p_module_1_module_0_module_0_module_1_0_bia": 416, "p_module_1_module_0_module_0_module_1_2_weight": 416, "p_module_1_module_0_module_0_module_1_2_bia": 416, "b_module_1_module_1_eps_init": 416, "b_module_1_module_1_eps_end": 416, "b_module_1_module_1_ep": 416, "kwargs_pixel": 416, "u8": 416, "308": 416, "_apply_transform": [416, 427, 432], "aten": 416, "upsample_nearest2d": 416, "vec": 416, "getitem": 416, "getitem_1": 416, "getitem_2": 416, "mul": 416, "mul_1": 416, "587": 416, "mul_2": 416, "to_1": 416, "unsqueeze_1": 416, "554": 416, "_conv_forward": 416, "133": 416, "conv2d_1": 416, "relu_1": 416, "conv2d_2": 416, "relu_2": 416, "using_int": 416, "125": 416, "relu_3": 416, "linear_1": 416, "616": 416, "action_func_map": 416, "i64": 416, "to_2": 416, "621": 416, "action_value_func": 416, "unsqueeze_2": 416, "group0": 416, "group0_agent0_ob": 416, "collid": [416, 426], "group0_agent0": 416, "agent0_ob": 416, "digress": 416, "exported_stochastic_polici": 416, "167": 416, "cond": 416, "action_tensordict": 416, "lt": 416, "b8": 416, "169": 416, "expand_as_right": 416, "193": [416, 429], "196": 416, "trace": 416, "batchsizetransform": 416, "recurrent_polici": 416, "fake_ob": 416, "fake_hidden0": 416, "fake_hidden1": 416, "fake_is_init": 416, "exported_recurrent_polici": 416, "p_module_1_lstm_weight_ih_l0": 416, "p_module_1_lstm_weight_hh_l0": 416, "p_module_1_lstm_bias_ih_l0": 416, "p_module_1_lstm_bias_hh_l0": 416, "p_module_1_lstm_weight_ih_l1": 416, "p_module_1_lstm_weight_hh_l1": 416, "p_module_1_lstm_bias_ih_l1": 416, "p_module_1_lstm_bias_hh_l1": 416, "p_module_2_module_0_weight": 416, "p_module_2_module_0_bia": 416, "p_module_2_module_2_weight": 416, "p_module_2_module_2_bia": 416, "p_module_2_module_4_weight": 416, "p_module_2_module_4_bia": 416, "kwargs_observ": 416, "kwargs_hidden0": 416, "kwargs_hidden1": 416, "kwargs_is_init": 416, "485": 416, "tensordict_exec": 416, "_run_modul": 416, "unsqueeze_3": 416, "738": 416, "tensordict_shap": 416, "unsqueeze_4": 416, "unsqueeze_5": 416, "unsqueeze_6": 416, "unsqueeze_7": 416, "740": 416, "767": 416, "is_init_expand": 416, "unsqueeze_8": 416, "unsqueeze_9": 416, "unsqueeze_10": 416, "scalarself": 416, "769": 416, "where_1": 416, "770": 416, "_lstm": 416, "slice_1": 416, "9223372036854775807": 416, "slice_2": 416, "select_1": 416, "transpos": 416, "transpose_1": 416, "317": 416, "unbind_1": 416, "getitem_3": 416, "unbind_2": 416, "getitem_4": 416, "getitem_5": 416, "getitem_6": 416, "getitem_7": 416, "getitem_8": 416, "sigmoid_1": 416, "sigmoid_2": 416, "tanh_1": 416, "linear_2": 416, "linear_3": 416, "add_2": 416, "chunk_1": 416, "getitem_9": 416, "getitem_10": 416, "getitem_11": 416, "getitem_12": 416, "sigmoid_3": 416, "sigmoid_4": 416, "tanh_2": 416, "sigmoid_5": 416, "mul_3": 416, "mul_4": 416, "add_3": 416, "tanh_3": 416, "mul_5": 416, "stack_1": 416, "transpose_2": 416, "transpose_3": 416, "stack_3": 416, "783": 416, "reshape_1": 416, "reshape_2": 416, "reshape_3": 416, "reshape_4": 416, "linear_4": 416, "392": 416, "tanh_4": 416, "linear_5": 416, "tanh_5": 416, "linear_6": 416, "squeeze_1": 416, "squeeze_2": 416, "squeeze_3": 416, "squeeze_4": 416, "squeeze_5": 416, "squeeze_6": 416, "platform": [416, 431], "aoti": 416, "_inductor": 416, "aoti_compile_and_packag": 416, "aoti_load_packag": 416, "pt2": 416, "pkg_path": 416, "package_path": 416, "compiled_modul": 416, "traceback": [416, 427], "351": 416, "load_packag": 416, "287": 416, "_c": 416, "_aoti": 416, "aotimodelpackageload": 416, "dlopen": 416, "gkui6d": 416, "cmgd7nbznueo6tiiaim2v7yni7dso3a5igbery63mpdlx4wrq7s3": 416, "onnxruntim": 416, "showcas": [416, 427], "web": 416, "explain": [416, 428], "tensorrt": 416, "android": 416, "ale_pi": 416, "aleinterfac": 416, "loadrom": 416, "reset_gam": 416, "screen_ob": 416, "getscreenrgb": 416, "tick_param": 416, "bottom": 416, "labelleft": 416, "labelbottom": 416, "imshow": [416, 432], "dynamo_export": 416, "onnx_policy_export": 416, "onnx_file_path": 416, "ort_sess": 416, "inferencesess": 416, "cpuexecutionprovid": 416, "onnxruntime_input": 416, "get_input": 416, "onnx_polici": 416, "lightweight": [416, 421], "onnxruntime_output": 416, "deploy": 416, "4751": 416, "topic": [417, 418, 419], "straight": 417, "backtrack": 417, "encapsul": [417, 418, 419], "reset_with_act": 417, "4024": 417, "tp": 417, "stepped_data": 417, "spatial": 417, "useless": 417, "policyless": 417, "appreci": 417, "monitor": 417, "examin": [417, 425], "tackl": 418, "delv": 418, "bypass": 418, "extractor": 418, "palliat": 418, "additivegaussianmodul": [418, 425], "exploration_polici": [418, 425], "greedili": 418, "2d": [418, 425, 426], "innov": [418, 419], "rollout_explor": 418, "sole": 419, "supervis": [419, 420, 429, 432], "n_collect": 419, "get_next_batch": 419, "ddpg_loss": 419, "total_loss": 419, "prove": 419, "reliev": 419, "concern": 419, "accustom": 420, "surprisingli": 420, "fundament": 420, "art": [420, 425, 426], "countless": 420, "yourself": [420, 425, 426], "portabl": 421, "everywher": 421, "log_scalar": 421, "elaps": 421, "my_scalar": 421, "saw": [421, 427, 429], "excess": 421, "354": 421, "lesson": 422, "voluntarili": 422, "training_loop": 422, "video_record": 422, "arbitrarili": 422, "t1": 422, "conclud": [422, 428], "tutorials_python": 423, "tutorials_jupyt": 423, "env1_obs_kei": 424, "observation_stand": 424, "env2_obs_kei": 424, "observation_walk": 424, "tdreset1": 424, "tdreset2": 424, "lazy_stack": 424, "policy_common": 424, "policy_stand": 424, "policy_walk": 424, "But": 424, "env1_mak": 424, "env2_mak": 424, "_single_task": 424, "td_rollout": 424, "matteo": [425, 426], "bettini": [425, 426], "benchmarl": [425, 426], "simple_tag": 425, "maddpg": [425, 426], "multiagentparticleenviron": 425, "mpe": 425, "centralis": [425, 426], "tie": [425, 426], "iddpg": [425, 426], "typical": 425, "richard": 425, "andrew": 425, "mit": 425, "press": 425, "2018": 425, "mathbf": [425, 426], "decentralis": [425, 426], "literatur": [425, 426], "overcom": [425, 426], "stationari": [425, 426], "concurr": [425, 426], "establish": 425, "gui": [425, 426], "is_sphinx": 425, "__sphinx_build__": 425, "n_iter": [425, 426], "evad": 425, "iteration_when_stop_training_evad": 425, "memory_s": 425, "n_optimiser_step": 425, "train_batch_s": 425, "polyak_tau": 425, "chaser": 425, "red": 425, "circl": [425, 426], "touch": [425, 427], "penal": [425, 426], "acceler": [425, 426], "obstacl": 425, "drag": [425, 426], "elast": [425, 426], "collis": [425, 426], "imped": 425, "n_chaser": 425, "n_evad": 425, "n_obstacl": 425, "use_vma": 425, "simple_tag_v3": 425, "num_good": 425, "num_adversari": 425, "num_obstacl": 425, "max_cycl": 425, "num_vmas_env": [425, 426], "num_good_ag": 425, "num_landmark": 425, "adversary_1": 425, "four": [425, 426, 427], "n_agents_in_that_group": 425, "stress": [425, 426], "paramount": [425, 426], "n_rollout_step": [425, 426], "evolut": [425, 426], "group_nam": 425, "n_agents_in_group": 425, "minor": 425, "agents_exploration_polici": 425, "utilis": [425, 426], "withing": 425, "n_obs_per_ag": [425, 426], "n_actions_per_ag": [425, 426], "share_parameters_polici": [425, 426], "policy_net": [425, 426], "_agent": 425, "grant": [425, 426], "converg": [425, 426], "share_parameters_crit": [425, 426], "obs_act": 425, "cat_modul": 425, "critic_modul": 425, "fantast": [425, 426], "reset_td": 425, "interfer": 425, "subject": [425, 427], "flatten_kei": 425, "process_batch": 425, "group_shap": 425, "get_item_shap": [425, 426], "nested_done_kei": 425, "nested_terminated_kei": 425, "desc": [425, 426], "episode_reward_mean_": 425, "episode_reward_mean_map": 425, "train_group_map": 425, "group_batch": 425, "_group": 425, "loss_nam": 425, "episode_reward_mean": [425, 426], "episode_reward_mean_adversari": 425, "episode_reward_mean_ag": 425, "proce": 425, "fig": 425, "set_ylabel": 425, "axvlin": 425, "orang": 425, "set_xlabel": 425, "video_logg": 425, "vmas_log": 425, "env_with_rend": 425, "vmas_rend": 425, "print_log_dir": 425, "profici": [425, 426], "lidar": 426, "sensor": 426, "mappo": 426, "ippo": 426, "analys": 426, "visualis": 426, "vmas_devic": 426, "6_000": 426, "minibatch_s": 426, "generalis": 426, "simd": 426, "warp": 426, "todai": 426, "surround": 426, "dot": [426, 427], "scenario_nam": 426, "final_rew": 426, "agent_collis": 426, "critic_net": 426, "minibatch": 426, "episode_reward_mean_list": 426, "critic_network_param": 426, "target_critic_network_param": 426, "4579917788505554": 426, "1870676875114441": 426, "1689366102218628": 426, "4059897661209106": 426, "890636920928955": 426, "1948678493499756": 426, "1456124782562256": 426, "6171820163726807": 426, "5954275131225586": 426, "713913679122925": 426, "xvfb": 426, "pyvirtualdisplai": 426, "1400": 426, "pil": 426, "rendering_callback": 426, "fromarrai": 426, "gif": 426, "save_al": 426, "append_imag": 426, "freeli": 427, "broader": 427, "wider": 427, "algebra": 427, "acquaint": 427, "avenu": 427, "_apply_to_composit": 427, "default_x": 427, "default_i": 427, "upward": 427, "angular": 427, "sin": 427, "rad": 427, "sec": 427, "angl": 427, "deleg": 427, "new_th": 427, "new_thdot": 427, "g_forc": 427, "angle_norm": 427, "albeit": 427, "high_th": 427, "high_thdot": 427, "low_th": 427, "low_thdot": 427, "trivial": 427, "irrelev": 427, "_make_spec": 427, "td_param": 427, "render_fp": 427, "random_": 427, "_make_step": 427, "staticmethod": 427, "564": 427, "assertionerror": 427, "skeleton": 427, "_inv_apply_transform": [427, 432], "subset": [427, 428], "sine": 427, "cosin": 427, "sintransform": 427, "costransform": 427, "t_sin": 427, "t_co": 427, "cat_transform": 427, "simple_rollout": 427, "unexplor": 427, "init_td": 427, "traj_return": 427, "last_reward": 427, "is_ipython": 427, "inlin": 427, "get_backend": 427, "ion": 427, "gcf": 427, "clear_output": 427, "semat": 428, "r3mtransform": 428, "env_transform": [428, 432], "s3": 428, "amazonaw": 428, "r3m_50": 428, "374m": 428, "9m": 428, "1mb": 428, "2m": 428, "3mb": 428, "5mb": 428, "6m": 428, "0mb": 428, "2mb": 428, "0m": 428, "4mb": 428, "106m": 428, "112m": 428, "118m": 428, "131m": 428, "148m": 428, "154m": 428, "164m": 428, "179m": 428, "184m": 428, "195m": 428, "201m": 428, "6mb": 428, "212m": 428, "217m": 428, "7mb": 428, "229m": 428, "246m": 428, "262m": 428, "9mb": 428, "270m": 428, "278m": 428, "287m": 428, "8mb": 428, "294m": 428, "301m": 428, "311m": 428, "328m": 428, "342m": 428, "352m": 428, "360m": 428, "wiser": 428, "163": 428, "4146": 428, "batteri": 429, "buffer_list": 429, "lowest": 429, "medium": 429, "buffer_lazytensor": 429, "buffer_lazymemmap": 429, "tempdir": 429, "tmp33p14ee9": 429, "fullest": 429, "mydata": 429, "background": 429, "question": [429, 431], "_i": 429, "artifici": 429, "0893e": 429, "hamper": 429, "she": 429, "pars": 429, "proport": 429, "126": 429, "111": 429, "149": 429, "116": 429, "barcontain": 429, "artist": 429, "107": 429, "203": 429, "140": 429, "reappear": 429, "unfold": 429, "problemat": 429, "4th": 429, "prioritizedslicesampl": 429, "tensordictmaxvaluewrit": 429, "467": 429, "demo": 431, "icml": 431, "vmoen": 431, "fb": 431, "invest": 431, "media": 431, "predominantli": 431, "data2": 431, "sub_key1": 431, "scturctur": 431, "data_stack": 431, "data_sampl": 431, "_sampler": 431, "_sum_tre": 431, "28791671991348267": 431, "modulenotfounderror": 431, "noopresetenv": [431, 432], "backbone_modul": 431, "tailor": 431, "params_expand": 431, "exec_sequ": 431, "tensordict_exp": 431, "base_modul": 431, "asstridedbackward0": 431, "8728": 431, "1334": 431, "9833": 431, "3494": 431, "6887": 431, "6402": 431, "_safetanhnoepsbackward": 431, "1132": 431, "1762": 431, "3430": 431, "2668": 431, "2918": 431, "6239": 431, "tensordicts_prealloc": 431, "tensordicts_stack": 431, "tensordict_rollout": [431, 432], "automatical": 431, "particularili": [431, 432], "concatmodul": 431, "loss_td": 431, "contributor": 431, "curiou": 431, "nascent": 431, "unsupervis": 432, "unifi": 432, "_build_env": 432, "amidar": 432, "assault": 432, "0048": 432, "deserv": 432, "__episode__": 432, "__trajectory__": 432, "void": 432, "reproduct": 432, "tensordict_tprim": 432, "axesimag": 432, "0x7f5470c32a70": 432, "wrapper1": 432, "wrapper2": 432, "obviou": 432, "truth": 432, "env_transformed_bi": 432, "stanc": 432, "transformeddistribut": 432, "base_dist": 432, "concat": 432, "mofidi": 432, "transformedenviron": 432, "moderet": 432, "computation": 432, "legitim": 432, "incom": 432, "amongst": 432, "has_cuda": 432, "wor": 432, "convention": 432, "markovian": 432, "3288080526": 432, "constain": 432, "bar_": 432, "get_someth": 432, "bar_2dd79cea": 432, "bb67": 432, "aargh": 432, "is_clos": 432, "foo_list": 432, "batched_env": 432, "_dispatch_caller_parallel": 432, "0x7f54707929b0": 432, "bar_329c3498": 432, "8e9b": 432, "bar_329c59b4": 432, "8e9a": 432, "bar_32912238": 432, "9eab": 432, "121": 432, "evolv": 432, "steadi": 432, "approx": 432, "2035": 432, "0338": 432, "5911": 432, "1590": 432, "0857": 432, "_extra_st": 432, "observation_ssq": 432, "observation_sum": 432, "reward_count": 432, "reward_ssq": 432, "reward_sum": 432, "7757": 432, "2809": 432, "2642": 432, "7061": 432, "2558": 432, "1067": 432, "dispach": 432, "absor": 432}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MCTSForest"], [42, 0, 1, "", "MultiCategorical"], [43, 0, 1, "", "MultiDiscreteTensorSpec"], [44, 0, 1, "", "MultiOneHot"], [45, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [46, 0, 1, "", "MultiStep"], [47, 0, 1, "", "Nested2TED"], [48, 0, 1, "", "NonTensor"], [49, 0, 1, "", "NonTensorSpec"], [50, 0, 1, "", "OneHot"], [51, 0, 1, "", "OneHotDiscreteTensorSpec"], [52, 0, 1, "", "PairwiseDataset"], [53, 0, 1, "", "PrioritizedReplayBuffer"], [54, 0, 1, "", "PromptData"], [55, 0, 1, "", "PromptTensorDictTokenizer"], [56, 0, 1, "", "QueryModule"], [57, 0, 1, "", "RandomProjectionHash"], [58, 0, 1, "", "ReplayBuffer"], [59, 0, 1, "", "RewardData"], [60, 0, 1, "", "RolloutFromModel"], [61, 0, 1, "", "SipHash"], [62, 0, 1, "", "Stacked"], [63, 0, 1, "", "StackedComposite"], [64, 0, 1, "", "TED2Flat"], [65, 0, 1, "", "TED2Nested"], [66, 0, 1, "", "TensorDictMap"], [67, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [68, 0, 1, "", "TensorDictReplayBuffer"], [69, 0, 1, "", "TensorDictTokenizer"], [70, 0, 1, "", "TensorMap"], [71, 0, 1, "", "TensorSpec"], [72, 0, 1, "", "TokenizedDatasetLoader"], [73, 0, 1, "", "Tree"], [74, 0, 1, "", "Unbounded"], [75, 0, 1, "", "UnboundedContinuous"], [76, 0, 1, "", "UnboundedContinuousTensorSpec"], [77, 0, 1, "", "UnboundedDiscrete"], [78, 0, 1, "", "UnboundedDiscreteTensorSpec"], [79, 0, 1, "", "check_no_exclusive_keys"], [80, 0, 1, "", "consolidate_spec"], [81, 0, 1, "", "contains_lazy_spec"], [82, 0, 1, "", "create_infinite_iterator"], [92, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "cardinality"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "set_provisional_n"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "cardinality"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "set_provisional_n"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "cardinality"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "cardinality"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "cardinality"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "set_provisional_n"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "cardinality"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "cardinality"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[41, 4, 1, "", "action_keys"], [41, 4, 1, "", "done_keys"], [41, 1, 1, "", "get_keys_from_env"], [41, 4, 1, "", "observation_keys"], [41, 4, 1, "", "reward_keys"]], "torchrl.data.MultiCategorical": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "cardinality"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_provisional_n"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "cardinality"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "set_provisional_n"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "cardinality"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "compile"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "mtia"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_load_state_dict_pre_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_post_hook"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_submodule"], [46, 1, 1, "", "share_memory"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "cardinality"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 3, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 4, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_categorical"], [50, 1, 1, "", "to_categorical_spec"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "to_one_hot"], [50, 1, 1, "", "to_one_hot_spec"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "update_mask"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "cardinality"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 3, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "fields"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dump"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "load"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "register_load_hook"], [53, 1, 1, "", "register_save_hook"], [53, 1, 1, "", "sample"], [53, 4, 1, "", "sampler"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 4, 1, "", "storage"], [53, 4, 1, "", "write_count"], [53, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[54, 4, 1, "", "batch_size"], [54, 4, 1, "", "device"], [54, 1, 1, "", "fields"], [54, 1, 1, "", "from_dataset"], [54, 1, 1, "", "from_tensordict"], [54, 1, 1, "", "get"], [54, 1, 1, "", "load"], [54, 1, 1, "", "load_"], [54, 1, 1, "", "load_memmap"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "memmap"], [54, 1, 1, "", "memmap_"], [54, 1, 1, "", "memmap_like"], [54, 1, 1, "", "memmap_refresh_"], [54, 4, 1, "", "names"], [54, 1, 1, "", "save"], [54, 1, 1, "", "set"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to_tensordict"], [54, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "is_tdmodule_compatible"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset_out_keys"], [56, 1, 1, "", "reset_parameters_recursive"], [56, 1, 1, "", "select_out_keys"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "compile"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "mtia"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_load_state_dict_pre_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_post_hook"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_submodule"], [57, 1, 1, "", "share_memory"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dump"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "load"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "register_load_hook"], [58, 1, 1, "", "register_save_hook"], [58, 1, 1, "", "sample"], [58, 4, 1, "", "sampler"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 4, 1, "", "storage"], [58, 4, 1, "", "write_count"], [58, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[59, 4, 1, "", "batch_size"], [59, 4, 1, "", "device"], [59, 1, 1, "", "fields"], [59, 1, 1, "", "from_tensordict"], [59, 1, 1, "", "get"], [59, 1, 1, "", "load"], [59, 1, 1, "", "load_"], [59, 1, 1, "", "load_memmap"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "memmap"], [59, 1, 1, "", "memmap_"], [59, 1, 1, "", "memmap_like"], [59, 1, 1, "", "memmap_refresh_"], [59, 4, 1, "", "names"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to_tensordict"], [59, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[60, 1, 1, "", "create_rollout_td"], [60, 1, 1, "", "generate"], [60, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "cardinality"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "cardinality"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "get"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_empty"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "items"], [63, 1, 1, "", "keys"], [63, 1, 1, "", "lock_"], [63, 1, 1, "", "make_neg_dim"], [63, 4, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "pop"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "separates"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unlock_"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "values"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "from_tensordict_pair"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 4, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 4, 1, "", "storage"], [67, 4, 1, "", "write_count"], [67, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 4, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 4, 1, "", "storage"], [68, 4, 1, "", "write_count"], [68, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "cardinality"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "enumerate"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[72, 1, 1, "", "dataset_to_tensordict"], [72, 1, 1, "", "load"]], "torchrl.data.Tree": [[73, 4, 1, "", "batch_size"], [73, 4, 1, "", "branching_action"], [73, 4, 1, "", "device"], [73, 1, 1, "", "edges"], [73, 1, 1, "", "fields"], [73, 1, 1, "", "from_tensordict"], [73, 4, 1, "", "full_action_spec"], [73, 4, 1, "", "full_done_spec"], [73, 4, 1, "", "full_observation_spec"], [73, 4, 1, "", "full_reward_spec"], [73, 4, 1, "", "full_state_spec"], [73, 1, 1, "", "fully_expanded"], [73, 1, 1, "", "get"], [73, 1, 1, "", "get_vertex_by_hash"], [73, 1, 1, "", "get_vertex_by_id"], [73, 4, 1, "", "is_terminal"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "make_node"], [73, 1, 1, "", "max_length"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 4, 1, "", "names"], [73, 4, 1, "", "node_observation"], [73, 4, 1, "", "node_observations"], [73, 4, 1, "", "num_children"], [73, 1, 1, "", "num_vertices"], [73, 4, 1, "", "parent"], [73, 1, 1, "", "plot"], [73, 4, 1, "", "prev_action"], [73, 1, 1, "", "rollout_from_path"], [73, 1, 1, "", "save"], [73, 4, 1, "", "selected_actions"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"], [73, 1, 1, "", "valid_paths"], [73, 1, 1, "", "vertices"], [73, 4, 1, "", "visits"]], "torchrl.data.Unbounded": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "cardinality"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "cardinality"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "cardinality"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[83, 0, 1, "", "AtariDQNExperienceReplay"], [84, 0, 1, "", "BaseDatasetExperienceReplay"], [85, 0, 1, "", "D4RLExperienceReplay"], [86, 0, 1, "", "GenDGRLExperienceReplay"], [87, 0, 1, "", "MinariExperienceReplay"], [88, 0, 1, "", "OpenMLExperienceReplay"], [89, 0, 1, "", "OpenXExperienceReplay"], [90, 0, 1, "", "RobosetExperienceReplay"], [91, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[89, 1, 1, "", "add"], [89, 1, 1, "", "append_transform"], [89, 4, 1, "", "data_path"], [89, 4, 1, "", "data_path_root"], [89, 1, 1, "", "delete"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "dumps"], [89, 1, 1, "", "empty"], [89, 1, 1, "", "extend"], [89, 1, 1, "", "insert_transform"], [89, 1, 1, "", "load"], [89, 1, 1, "", "loads"], [89, 1, 1, "", "preprocess"], [89, 1, 1, "", "register_load_hook"], [89, 1, 1, "", "register_save_hook"], [89, 1, 1, "", "sample"], [89, 4, 1, "", "sampler"], [89, 1, 1, "", "save"], [89, 1, 1, "", "set_sampler"], [89, 1, 1, "", "set_storage"], [89, 1, 1, "", "set_writer"], [89, 4, 1, "", "storage"], [89, 4, 1, "", "write_count"], [89, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[90, 1, 1, "", "add"], [90, 1, 1, "", "append_transform"], [90, 4, 1, "", "data_path"], [90, 4, 1, "", "data_path_root"], [90, 1, 1, "", "delete"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "dumps"], [90, 1, 1, "", "empty"], [90, 1, 1, "", "extend"], [90, 1, 1, "", "insert_transform"], [90, 1, 1, "", "load"], [90, 1, 1, "", "loads"], [90, 1, 1, "", "preprocess"], [90, 1, 1, "", "register_load_hook"], [90, 1, 1, "", "register_save_hook"], [90, 1, 1, "", "sample"], [90, 4, 1, "", "sampler"], [90, 1, 1, "", "save"], [90, 1, 1, "", "set_sampler"], [90, 1, 1, "", "set_storage"], [90, 1, 1, "", "set_writer"], [90, 4, 1, "", "storage"], [90, 4, 1, "", "write_count"], [90, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[91, 1, 1, "", "add"], [91, 1, 1, "", "append_transform"], [91, 4, 1, "", "data_path"], [91, 4, 1, "", "data_path_root"], [91, 1, 1, "", "delete"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "dumps"], [91, 1, 1, "", "empty"], [91, 1, 1, "", "extend"], [91, 1, 1, "", "insert_transform"], [91, 1, 1, "", "load"], [91, 1, 1, "", "loads"], [91, 1, 1, "", "preprocess"], [91, 1, 1, "", "register_load_hook"], [91, 1, 1, "", "register_save_hook"], [91, 1, 1, "", "sample"], [91, 4, 1, "", "sampler"], [91, 1, 1, "", "save"], [91, 1, 1, "", "set_sampler"], [91, 1, 1, "", "set_storage"], [91, 1, 1, "", "set_writer"], [91, 4, 1, "", "storage"], [91, 4, 1, "", "write_count"], [91, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[93, 0, 1, "", "FlatStorageCheckpointer"], [94, 0, 1, "", "H5StorageCheckpointer"], [95, 0, 1, "", "ImmutableDatasetWriter"], [96, 0, 1, "", "LazyMemmapStorage"], [97, 0, 1, "", "LazyTensorStorage"], [98, 0, 1, "", "ListStorage"], [99, 0, 1, "", "ListStorageCheckpointer"], [100, 0, 1, "", "NestedStorageCheckpointer"], [101, 0, 1, "", "PrioritizedSampler"], [102, 0, 1, "", "PrioritizedSliceSampler"], [103, 0, 1, "", "RandomSampler"], [104, 0, 1, "", "ReplayBufferEnsemble"], [105, 0, 1, "", "RoundRobinWriter"], [106, 0, 1, "", "Sampler"], [107, 0, 1, "", "SamplerEnsemble"], [108, 0, 1, "", "SamplerWithoutReplacement"], [109, 0, 1, "", "SliceSampler"], [110, 0, 1, "", "SliceSamplerWithoutReplacement"], [111, 0, 1, "", "Storage"], [112, 0, 1, "", "StorageCheckpointerBase"], [113, 0, 1, "", "StorageEnsemble"], [114, 0, 1, "", "StorageEnsembleCheckpointer"], [115, 0, 1, "", "TensorDictMaxValueWriter"], [116, 0, 1, "", "TensorDictRoundRobinWriter"], [117, 0, 1, "", "TensorStorage"], [118, 0, 1, "", "TensorStorageCheckpointer"], [119, 0, 1, "", "Writer"], [120, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[97, 1, 1, "", "attach"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "load"], [97, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[101, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[102, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[104, 1, 1, "", "add"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "dumps"], [104, 1, 1, "", "empty"], [104, 1, 1, "", "extend"], [104, 1, 1, "", "insert_transform"], [104, 1, 1, "", "load"], [104, 1, 1, "", "loads"], [104, 1, 1, "", "register_load_hook"], [104, 1, 1, "", "register_save_hook"], [104, 1, 1, "", "sample"], [104, 4, 1, "", "sampler"], [104, 1, 1, "", "save"], [104, 1, 1, "", "set_sampler"], [104, 1, 1, "", "set_storage"], [104, 1, 1, "", "set_writer"], [104, 4, 1, "", "storage"], [104, 4, 1, "", "write_count"], [104, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[113, 1, 1, "", "attach"], [113, 1, 1, "", "dump"], [113, 1, 1, "", "load"], [113, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[115, 1, 1, "", "add"], [115, 1, 1, "", "extend"], [115, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[120, 1, 1, "", "add"], [120, 1, 1, "", "extend"]], "torchrl.envs": [[121, 2, 1, "", "BraxEnv"], [122, 2, 1, "", "BraxWrapper"], [123, 0, 1, "", "ChessEnv"], [124, 2, 1, "", "DMControlEnv"], [125, 2, 1, "", "DMControlWrapper"], [126, 0, 1, "", "EnvBase"], [127, 0, 1, "", "EnvCreator"], [128, 0, 1, "", "EnvMetaData"], [129, 2, 1, "", "GymEnv"], [130, 0, 1, "", "GymLikeEnv"], [131, 2, 1, "", "GymWrapper"], [132, 2, 1, "", "HabitatEnv"], [133, 2, 1, "", "IsaacGymEnv"], [134, 2, 1, "", "IsaacGymWrapper"], [135, 2, 1, "", "JumanjiEnv"], [136, 2, 1, "", "JumanjiWrapper"], [137, 0, 1, "", "LLMHashingEnv"], [138, 2, 1, "", "MOGymEnv"], [139, 2, 1, "", "MOGymWrapper"], [140, 2, 1, "", "MarlGroupMapType"], [141, 2, 1, "", "MeltingpotEnv"], [142, 2, 1, "", "MeltingpotWrapper"], [143, 2, 1, "", "ModelBasedEnvBase"], [144, 2, 1, "", "MultiThreadedEnv"], [145, 2, 1, "", "MultiThreadedEnvWrapper"], [146, 2, 1, "", "OpenMLEnv"], [147, 2, 1, "", "OpenSpielEnv"], [148, 2, 1, "", "OpenSpielWrapper"], [149, 0, 1, "", "ParallelEnv"], [150, 0, 1, "", "PendulumEnv"], [151, 2, 1, "", "PettingZooEnv"], [152, 2, 1, "", "PettingZooWrapper"], [153, 2, 1, "", "RoboHiveEnv"], [154, 2, 1, "", "SMACv2Env"], [155, 2, 1, "", "SMACv2Wrapper"], [156, 0, 1, "", "SerialEnv"], [157, 0, 1, "", "TicTacToeEnv"], [158, 2, 1, "", "UnityMLAgentsEnv"], [159, 2, 1, "", "UnityMLAgentsWrapper"], [160, 2, 1, "", "VmasEnv"], [161, 2, 1, "", "VmasWrapper"], [162, 2, 1, "", "check_marl_grouping"], [163, 2, 1, "", "gym_backend"], [143, 1, 1, "", "rand_step"], [143, 1, 1, "", "reset"], [143, 1, 1, "", "rollout"], [166, 2, 1, "", "set_gym_backend"], [143, 1, 1, "", "set_seed"], [143, 1, 1, "", "step"]], "torchrl.envs.ChessEnv": [[123, 4, 1, "", "action_key"], [123, 4, 1, "", "action_keys"], [123, 4, 1, "", "action_spec"], [123, 4, 1, "", "action_spec_unbatched"], [123, 1, 1, "", "add_module"], [123, 1, 1, "", "add_truncated_keys"], [123, 1, 1, "", "append_transform"], [123, 1, 1, "", "apply"], [123, 1, 1, "", "auto_specs_"], [123, 4, 1, "", "batch_dims"], [123, 4, 1, "", "batch_locked"], [123, 4, 1, "", "batch_size"], [123, 1, 1, "", "bfloat16"], [123, 1, 1, "", "buffers"], [123, 1, 1, "", "cardinality"], [123, 1, 1, "", "check_env_specs"], [123, 1, 1, "", "children"], [123, 1, 1, "", "compile"], [123, 1, 1, "", "cpu"], [123, 1, 1, "", "cuda"], [123, 4, 1, "", "done_key"], [123, 4, 1, "", "done_keys"], [123, 4, 1, "", "done_keys_groups"], [123, 4, 1, "", "done_spec"], [123, 4, 1, "", "done_spec_unbatched"], [123, 1, 1, "", "double"], [123, 1, 1, "", "empty_cache"], [123, 1, 1, "", "eval"], [123, 1, 1, "", "extra_repr"], [123, 1, 1, "", "fake_tensordict"], [123, 1, 1, "", "float"], [123, 1, 1, "", "forward"], [123, 4, 1, "", "full_action_spec"], [123, 4, 1, "", "full_action_spec_unbatched"], [123, 4, 1, "", "full_done_spec"], [123, 4, 1, "", "full_done_spec_unbatched"], [123, 4, 1, "", "full_observation_spec_unbatched"], [123, 4, 1, "", "full_reward_spec"], [123, 4, 1, "", "full_reward_spec_unbatched"], [123, 4, 1, "", "full_state_spec"], [123, 4, 1, "", "full_state_spec_unbatched"], [123, 1, 1, "", "get_buffer"], [123, 1, 1, "", "get_extra_state"], [123, 1, 1, "", "get_parameter"], [123, 1, 1, "", "get_submodule"], [123, 1, 1, "", "half"], [123, 4, 1, "", "input_spec"], [123, 4, 1, "", "input_spec_unbatched"], [123, 1, 1, "", "ipu"], [123, 1, 1, "", "load_state_dict"], [123, 1, 1, "", "maybe_reset"], [123, 1, 1, "", "modules"], [123, 1, 1, "", "mtia"], [123, 1, 1, "", "named_buffers"], [123, 1, 1, "", "named_children"], [123, 1, 1, "", "named_modules"], [123, 1, 1, "", "named_parameters"], [123, 4, 1, "", "observation_spec"], [123, 4, 1, "", "observation_spec_unbatched"], [123, 4, 1, "", "output_spec"], [123, 4, 1, "", "output_spec_unbatched"], [123, 1, 1, "", "parameters"], [123, 1, 1, "", "rand_action"], [123, 1, 1, "", "rand_step"], [123, 1, 1, "", "register_backward_hook"], [123, 1, 1, "", "register_buffer"], [123, 1, 1, "", "register_forward_hook"], [123, 1, 1, "", "register_forward_pre_hook"], [123, 1, 1, "", "register_full_backward_hook"], [123, 1, 1, "", "register_full_backward_pre_hook"], [123, 1, 1, "", "register_gym"], [123, 1, 1, "", "register_load_state_dict_post_hook"], [123, 1, 1, "", "register_load_state_dict_pre_hook"], [123, 1, 1, "", "register_module"], [123, 1, 1, "", "register_parameter"], [123, 1, 1, "", "register_state_dict_post_hook"], [123, 1, 1, "", "register_state_dict_pre_hook"], [123, 1, 1, "", "requires_grad_"], [123, 1, 1, "", "reset"], [123, 4, 1, "", "reset_keys"], [123, 4, 1, "", "reward_key"], [123, 4, 1, "", "reward_keys"], [123, 4, 1, "", "reward_spec"], [123, 4, 1, "", "reward_spec_unbatched"], [123, 1, 1, "", "rollout"], [123, 1, 1, "", "set_extra_state"], [123, 1, 1, "", "set_seed"], [123, 1, 1, "", "set_submodule"], [123, 4, 1, "", "shape"], [123, 1, 1, "", "share_memory"], [123, 4, 1, "", "specs"], [123, 1, 1, "", "state_dict"], [123, 4, 1, "", "state_keys"], [123, 4, 1, "", "state_spec"], [123, 4, 1, "", "state_spec_unbatched"], [123, 1, 1, "", "step"], [123, 1, 1, "", "step_and_maybe_reset"], [123, 1, 1, "", "step_mdp"], [123, 1, 1, "", "to"], [123, 1, 1, "", "to_empty"], [123, 1, 1, "", "train"], [123, 1, 1, "", "type"], [123, 1, 1, "", "xpu"], [123, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[126, 4, 1, "", "action_key"], [126, 4, 1, "", "action_keys"], [126, 4, 1, "", "action_spec"], [126, 4, 1, "", "action_spec_unbatched"], [126, 1, 1, "", "add_module"], [126, 1, 1, "", "add_truncated_keys"], [126, 1, 1, "", "append_transform"], [126, 1, 1, "", "apply"], [126, 1, 1, "", "auto_specs_"], [126, 4, 1, "", "batch_dims"], [126, 4, 1, "", "batch_locked"], [126, 4, 1, "", "batch_size"], [126, 1, 1, "", "bfloat16"], [126, 1, 1, "", "buffers"], [126, 1, 1, "", "cardinality"], [126, 1, 1, "", "check_env_specs"], [126, 1, 1, "", "children"], [126, 1, 1, "", "compile"], [126, 1, 1, "", "cpu"], [126, 1, 1, "", "cuda"], [126, 4, 1, "", "done_key"], [126, 4, 1, "", "done_keys"], [126, 4, 1, "", "done_keys_groups"], [126, 4, 1, "", "done_spec"], [126, 4, 1, "", "done_spec_unbatched"], [126, 1, 1, "", "double"], [126, 1, 1, "", "empty_cache"], [126, 1, 1, "", "eval"], [126, 1, 1, "", "extra_repr"], [126, 1, 1, "", "fake_tensordict"], [126, 1, 1, "", "float"], [126, 1, 1, "", "forward"], [126, 4, 1, "", "full_action_spec"], [126, 4, 1, "", "full_action_spec_unbatched"], [126, 4, 1, "", "full_done_spec"], [126, 4, 1, "", "full_done_spec_unbatched"], [126, 4, 1, "", "full_observation_spec_unbatched"], [126, 4, 1, "", "full_reward_spec"], [126, 4, 1, "", "full_reward_spec_unbatched"], [126, 4, 1, "", "full_state_spec"], [126, 4, 1, "", "full_state_spec_unbatched"], [126, 1, 1, "", "get_buffer"], [126, 1, 1, "", "get_extra_state"], [126, 1, 1, "", "get_parameter"], [126, 1, 1, "", "get_submodule"], [126, 1, 1, "", "half"], [126, 4, 1, "", "input_spec"], [126, 4, 1, "", "input_spec_unbatched"], [126, 1, 1, "", "ipu"], [126, 1, 1, "", "load_state_dict"], [126, 1, 1, "", "maybe_reset"], [126, 1, 1, "", "modules"], [126, 1, 1, "", "mtia"], [126, 1, 1, "", "named_buffers"], [126, 1, 1, "", "named_children"], [126, 1, 1, "", "named_modules"], [126, 1, 1, "", "named_parameters"], [126, 4, 1, "", "observation_spec"], [126, 4, 1, "", "observation_spec_unbatched"], [126, 4, 1, "", "output_spec"], [126, 4, 1, "", "output_spec_unbatched"], [126, 1, 1, "", "parameters"], [126, 1, 1, "", "rand_action"], [126, 1, 1, "id0", "rand_step"], [126, 1, 1, "", "register_backward_hook"], [126, 1, 1, "", "register_buffer"], [126, 1, 1, "", "register_forward_hook"], [126, 1, 1, "", "register_forward_pre_hook"], [126, 1, 1, "", "register_full_backward_hook"], [126, 1, 1, "", "register_full_backward_pre_hook"], [126, 1, 1, "", "register_gym"], [126, 1, 1, "", "register_load_state_dict_post_hook"], [126, 1, 1, "", "register_load_state_dict_pre_hook"], [126, 1, 1, "", "register_module"], [126, 1, 1, "", "register_parameter"], [126, 1, 1, "", "register_state_dict_post_hook"], [126, 1, 1, "", "register_state_dict_pre_hook"], [126, 1, 1, "", "requires_grad_"], [126, 1, 1, "id1", "reset"], [126, 4, 1, "", "reset_keys"], [126, 4, 1, "", "reward_key"], [126, 4, 1, "", "reward_keys"], [126, 4, 1, "", "reward_spec"], [126, 4, 1, "", "reward_spec_unbatched"], [126, 1, 1, "id2", "rollout"], [126, 1, 1, "", "set_extra_state"], [126, 1, 1, "id3", "set_seed"], [126, 1, 1, "", "set_submodule"], [126, 4, 1, "", "shape"], [126, 1, 1, "", "share_memory"], [126, 4, 1, "", "specs"], [126, 1, 1, "", "state_dict"], [126, 4, 1, "", "state_keys"], [126, 4, 1, "", "state_spec"], [126, 4, 1, "", "state_spec_unbatched"], [126, 1, 1, "id4", "step"], [126, 1, 1, "", "step_and_maybe_reset"], [126, 1, 1, "", "step_mdp"], [126, 1, 1, "", "to"], [126, 1, 1, "", "to_empty"], [126, 1, 1, "", "train"], [126, 1, 1, "", "type"], [126, 1, 1, "", "xpu"], [126, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[127, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[130, 4, 1, "", "action_key"], [130, 4, 1, "", "action_keys"], [130, 4, 1, "", "action_spec"], [130, 4, 1, "", "action_spec_unbatched"], [130, 1, 1, "", "add_module"], [130, 1, 1, "", "add_truncated_keys"], [130, 1, 1, "", "append_transform"], [130, 1, 1, "", "apply"], [130, 1, 1, "", "auto_register_info_dict"], [130, 1, 1, "", "auto_specs_"], [130, 4, 1, "", "batch_dims"], [130, 4, 1, "", "batch_locked"], [130, 4, 1, "", "batch_size"], [130, 1, 1, "", "bfloat16"], [130, 1, 1, "", "buffers"], [130, 1, 1, "", "cardinality"], [130, 1, 1, "", "check_env_specs"], [130, 1, 1, "", "children"], [130, 1, 1, "", "close"], [130, 1, 1, "", "compile"], [130, 1, 1, "", "cpu"], [130, 1, 1, "", "cuda"], [130, 4, 1, "", "done_key"], [130, 4, 1, "", "done_keys"], [130, 4, 1, "", "done_keys_groups"], [130, 4, 1, "", "done_spec"], [130, 4, 1, "", "done_spec_unbatched"], [130, 1, 1, "", "double"], [130, 1, 1, "", "empty_cache"], [130, 1, 1, "", "eval"], [130, 1, 1, "", "extra_repr"], [130, 1, 1, "", "fake_tensordict"], [130, 1, 1, "", "float"], [130, 1, 1, "", "forward"], [130, 4, 1, "", "full_action_spec"], [130, 4, 1, "", "full_action_spec_unbatched"], [130, 4, 1, "", "full_done_spec"], [130, 4, 1, "", "full_done_spec_unbatched"], [130, 4, 1, "", "full_observation_spec_unbatched"], [130, 4, 1, "", "full_reward_spec"], [130, 4, 1, "", "full_reward_spec_unbatched"], [130, 4, 1, "", "full_state_spec"], [130, 4, 1, "", "full_state_spec_unbatched"], [130, 1, 1, "", "get_buffer"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "get_parameter"], [130, 1, 1, "", "get_submodule"], [130, 1, 1, "", "half"], [130, 4, 1, "", "input_spec"], [130, 4, 1, "", "input_spec_unbatched"], [130, 1, 1, "", "ipu"], [130, 1, 1, "", "load_state_dict"], [130, 1, 1, "", "maybe_reset"], [130, 1, 1, "", "modules"], [130, 1, 1, "", "mtia"], [130, 1, 1, "", "named_buffers"], [130, 1, 1, "", "named_children"], [130, 1, 1, "", "named_modules"], [130, 1, 1, "", "named_parameters"], [130, 4, 1, "", "observation_spec"], [130, 4, 1, "", "observation_spec_unbatched"], [130, 4, 1, "", "output_spec"], [130, 4, 1, "", "output_spec_unbatched"], [130, 1, 1, "", "parameters"], [130, 1, 1, "", "rand_action"], [130, 1, 1, "", "rand_step"], [130, 1, 1, "", "read_action"], [130, 1, 1, "", "read_done"], [130, 1, 1, "", "read_obs"], [130, 1, 1, "", "read_reward"], [130, 1, 1, "", "register_backward_hook"], [130, 1, 1, "", "register_buffer"], [130, 1, 1, "", "register_forward_hook"], [130, 1, 1, "", "register_forward_pre_hook"], [130, 1, 1, "", "register_full_backward_hook"], [130, 1, 1, "", "register_full_backward_pre_hook"], [130, 1, 1, "", "register_gym"], [130, 1, 1, "", "register_load_state_dict_post_hook"], [130, 1, 1, "", "register_load_state_dict_pre_hook"], [130, 1, 1, "", "register_module"], [130, 1, 1, "", "register_parameter"], [130, 1, 1, "", "register_state_dict_post_hook"], [130, 1, 1, "", "register_state_dict_pre_hook"], [130, 1, 1, "", "requires_grad_"], [130, 1, 1, "", "reset"], [130, 4, 1, "", "reset_keys"], [130, 4, 1, "", "reward_key"], [130, 4, 1, "", "reward_keys"], [130, 4, 1, "", "reward_spec"], [130, 4, 1, "", "reward_spec_unbatched"], [130, 1, 1, "", "rollout"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "set_info_dict_reader"], [130, 1, 1, "", "set_seed"], [130, 1, 1, "", "set_submodule"], [130, 4, 1, "", "shape"], [130, 1, 1, "", "share_memory"], [130, 4, 1, "", "specs"], [130, 1, 1, "", "state_dict"], [130, 4, 1, "", "state_keys"], [130, 4, 1, "", "state_spec"], [130, 4, 1, "", "state_spec_unbatched"], [130, 1, 1, "", "step"], [130, 1, 1, "", "step_and_maybe_reset"], [130, 1, 1, "", "step_mdp"], [130, 1, 1, "", "to"], [130, 1, 1, "", "to_empty"], [130, 1, 1, "", "train"], [130, 1, 1, "", "type"], [130, 1, 1, "", "xpu"], [130, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[137, 4, 1, "", "action_key"], [137, 4, 1, "", "action_keys"], [137, 4, 1, "", "action_spec"], [137, 4, 1, "", "action_spec_unbatched"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 1, 1, "", "auto_specs_"], [137, 4, 1, "", "batch_dims"], [137, 4, 1, "", "batch_locked"], [137, 4, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "cardinality"], [137, 1, 1, "", "check_env_specs"], [137, 1, 1, "", "children"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 4, 1, "", "done_key"], [137, 4, 1, "", "done_keys"], [137, 4, 1, "", "done_keys_groups"], [137, 4, 1, "", "done_spec"], [137, 4, 1, "", "done_spec_unbatched"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 4, 1, "", "full_action_spec"], [137, 4, 1, "", "full_action_spec_unbatched"], [137, 4, 1, "", "full_done_spec"], [137, 4, 1, "", "full_done_spec_unbatched"], [137, 4, 1, "", "full_observation_spec_unbatched"], [137, 4, 1, "", "full_reward_spec"], [137, 4, 1, "", "full_reward_spec_unbatched"], [137, 4, 1, "", "full_state_spec"], [137, 4, 1, "", "full_state_spec_unbatched"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 4, 1, "", "input_spec"], [137, 4, 1, "", "input_spec_unbatched"], [137, 1, 1, "", "ipu"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "make_tensordict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 4, 1, "", "observation_spec"], [137, 4, 1, "", "observation_spec_unbatched"], [137, 4, 1, "", "output_spec"], [137, 4, 1, "", "output_spec_unbatched"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 4, 1, "", "reset_keys"], [137, 4, 1, "", "reward_key"], [137, 4, 1, "", "reward_keys"], [137, 4, 1, "", "reward_spec"], [137, 4, 1, "", "reward_spec_unbatched"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_submodule"], [137, 4, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 4, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 4, 1, "", "state_keys"], [137, 4, 1, "", "state_spec"], [137, 4, 1, "", "state_spec_unbatched"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "step_mdp"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[149, 4, 1, "", "action_key"], [149, 4, 1, "", "action_keys"], [149, 4, 1, "", "action_spec"], [149, 4, 1, "", "action_spec_unbatched"], [149, 1, 1, "", "add_module"], [149, 1, 1, "", "add_truncated_keys"], [149, 1, 1, "", "append_transform"], [149, 1, 1, "", "apply"], [149, 1, 1, "", "auto_specs_"], [149, 4, 1, "", "batch_dims"], [149, 4, 1, "", "batch_locked"], [149, 4, 1, "", "batch_size"], [149, 1, 1, "", "bfloat16"], [149, 1, 1, "", "buffers"], [149, 1, 1, "", "cardinality"], [149, 1, 1, "", "check_env_specs"], [149, 1, 1, "", "children"], [149, 1, 1, "", "compile"], [149, 1, 1, "", "cpu"], [149, 1, 1, "", "cuda"], [149, 4, 1, "", "done_key"], [149, 4, 1, "", "done_keys"], [149, 4, 1, "", "done_keys_groups"], [149, 4, 1, "", "done_spec"], [149, 4, 1, "", "done_spec_unbatched"], [149, 1, 1, "", "double"], [149, 1, 1, "", "empty_cache"], [149, 1, 1, "", "eval"], [149, 1, 1, "", "extra_repr"], [149, 1, 1, "", "fake_tensordict"], [149, 1, 1, "", "float"], [149, 1, 1, "", "forward"], [149, 4, 1, "", "full_action_spec"], [149, 4, 1, "", "full_action_spec_unbatched"], [149, 4, 1, "", "full_done_spec"], [149, 4, 1, "", "full_done_spec_unbatched"], [149, 4, 1, "", "full_observation_spec_unbatched"], [149, 4, 1, "", "full_reward_spec"], [149, 4, 1, "", "full_reward_spec_unbatched"], [149, 4, 1, "", "full_state_spec"], [149, 4, 1, "", "full_state_spec_unbatched"], [149, 1, 1, "", "get_buffer"], [149, 1, 1, "", "get_extra_state"], [149, 1, 1, "", "get_parameter"], [149, 1, 1, "", "get_submodule"], [149, 1, 1, "", "half"], [149, 4, 1, "", "input_spec"], [149, 4, 1, "", "input_spec_unbatched"], [149, 1, 1, "", "ipu"], [149, 1, 1, "", "load_state_dict"], [149, 1, 1, "", "maybe_reset"], [149, 1, 1, "", "modules"], [149, 1, 1, "", "mtia"], [149, 1, 1, "", "named_buffers"], [149, 1, 1, "", "named_children"], [149, 1, 1, "", "named_modules"], [149, 1, 1, "", "named_parameters"], [149, 4, 1, "", "observation_spec"], [149, 4, 1, "", "observation_spec_unbatched"], [149, 4, 1, "", "output_spec"], [149, 4, 1, "", "output_spec_unbatched"], [149, 1, 1, "", "parameters"], [149, 1, 1, "", "rand_action"], [149, 1, 1, "", "rand_step"], [149, 1, 1, "", "register_backward_hook"], [149, 1, 1, "", "register_buffer"], [149, 1, 1, "", "register_forward_hook"], [149, 1, 1, "", "register_forward_pre_hook"], [149, 1, 1, "", "register_full_backward_hook"], [149, 1, 1, "", "register_full_backward_pre_hook"], [149, 1, 1, "", "register_gym"], [149, 1, 1, "", "register_load_state_dict_post_hook"], [149, 1, 1, "", "register_load_state_dict_pre_hook"], [149, 1, 1, "", "register_module"], [149, 1, 1, "", "register_parameter"], [149, 1, 1, "", "register_state_dict_post_hook"], [149, 1, 1, "", "register_state_dict_pre_hook"], [149, 1, 1, "", "requires_grad_"], [149, 1, 1, "", "reset"], [149, 4, 1, "", "reset_keys"], [149, 4, 1, "", "reward_key"], [149, 4, 1, "", "reward_keys"], [149, 4, 1, "", "reward_spec"], [149, 4, 1, "", "reward_spec_unbatched"], [149, 1, 1, "", "rollout"], [149, 1, 1, "", "set_extra_state"], [149, 1, 1, "", "set_seed"], [149, 1, 1, "", "set_submodule"], [149, 4, 1, "", "shape"], [149, 1, 1, "", "share_memory"], [149, 4, 1, "", "specs"], [149, 1, 1, "", "state_dict"], [149, 4, 1, "", "state_keys"], [149, 4, 1, "", "state_spec"], [149, 4, 1, "", "state_spec_unbatched"], [149, 1, 1, "", "step"], [149, 1, 1, "", "step_and_maybe_reset"], [149, 1, 1, "", "step_mdp"], [149, 1, 1, "", "to"], [149, 1, 1, "", "to_empty"], [149, 1, 1, "", "train"], [149, 1, 1, "", "type"], [149, 1, 1, "", "update_kwargs"], [149, 1, 1, "", "xpu"], [149, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[150, 4, 1, "", "action_key"], [150, 4, 1, "", "action_keys"], [150, 4, 1, "", "action_spec"], [150, 4, 1, "", "action_spec_unbatched"], [150, 1, 1, "", "add_module"], [150, 1, 1, "", "add_truncated_keys"], [150, 1, 1, "", "append_transform"], [150, 1, 1, "", "apply"], [150, 1, 1, "", "auto_specs_"], [150, 4, 1, "", "batch_dims"], [150, 4, 1, "", "batch_size"], [150, 1, 1, "", "bfloat16"], [150, 1, 1, "", "buffers"], [150, 1, 1, "", "cardinality"], [150, 1, 1, "", "check_env_specs"], [150, 1, 1, "", "children"], [150, 1, 1, "", "compile"], [150, 1, 1, "", "cpu"], [150, 1, 1, "", "cuda"], [150, 4, 1, "", "done_key"], [150, 4, 1, "", "done_keys"], [150, 4, 1, "", "done_keys_groups"], [150, 4, 1, "", "done_spec"], [150, 4, 1, "", "done_spec_unbatched"], [150, 1, 1, "", "double"], [150, 1, 1, "", "empty_cache"], [150, 1, 1, "", "eval"], [150, 1, 1, "", "extra_repr"], [150, 1, 1, "", "fake_tensordict"], [150, 1, 1, "", "float"], [150, 1, 1, "", "forward"], [150, 4, 1, "", "full_action_spec"], [150, 4, 1, "", "full_action_spec_unbatched"], [150, 4, 1, "", "full_done_spec"], [150, 4, 1, "", "full_done_spec_unbatched"], [150, 4, 1, "", "full_observation_spec_unbatched"], [150, 4, 1, "", "full_reward_spec"], [150, 4, 1, "", "full_reward_spec_unbatched"], [150, 4, 1, "", "full_state_spec"], [150, 4, 1, "", "full_state_spec_unbatched"], [150, 1, 1, "", "gen_params"], [150, 1, 1, "", "get_buffer"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "get_parameter"], [150, 1, 1, "", "get_submodule"], [150, 1, 1, "", "half"], [150, 4, 1, "", "input_spec"], [150, 4, 1, "", "input_spec_unbatched"], [150, 1, 1, "", "ipu"], [150, 1, 1, "", "load_state_dict"], [150, 1, 1, "", "maybe_reset"], [150, 1, 1, "", "modules"], [150, 1, 1, "", "mtia"], [150, 1, 1, "", "named_buffers"], [150, 1, 1, "", "named_children"], [150, 1, 1, "", "named_modules"], [150, 1, 1, "", "named_parameters"], [150, 4, 1, "", "observation_spec"], [150, 4, 1, "", "observation_spec_unbatched"], [150, 4, 1, "", "output_spec"], [150, 4, 1, "", "output_spec_unbatched"], [150, 1, 1, "", "parameters"], [150, 1, 1, "", "rand_action"], [150, 1, 1, "", "rand_step"], [150, 1, 1, "", "register_backward_hook"], [150, 1, 1, "", "register_buffer"], [150, 1, 1, "", "register_forward_hook"], [150, 1, 1, "", "register_forward_pre_hook"], [150, 1, 1, "", "register_full_backward_hook"], [150, 1, 1, "", "register_full_backward_pre_hook"], [150, 1, 1, "", "register_gym"], [150, 1, 1, "", "register_load_state_dict_post_hook"], [150, 1, 1, "", "register_load_state_dict_pre_hook"], [150, 1, 1, "", "register_module"], [150, 1, 1, "", "register_parameter"], [150, 1, 1, "", "register_state_dict_post_hook"], [150, 1, 1, "", "register_state_dict_pre_hook"], [150, 1, 1, "", "requires_grad_"], [150, 1, 1, "", "reset"], [150, 4, 1, "", "reset_keys"], [150, 4, 1, "", "reward_key"], [150, 4, 1, "", "reward_keys"], [150, 4, 1, "", "reward_spec"], [150, 4, 1, "", "reward_spec_unbatched"], [150, 1, 1, "", "rollout"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "set_seed"], [150, 1, 1, "", "set_submodule"], [150, 4, 1, "", "shape"], [150, 1, 1, "", "share_memory"], [150, 4, 1, "", "specs"], [150, 1, 1, "", "state_dict"], [150, 4, 1, "", "state_keys"], [150, 4, 1, "", "state_spec"], [150, 4, 1, "", "state_spec_unbatched"], [150, 1, 1, "", "step"], [150, 1, 1, "", "step_and_maybe_reset"], [150, 1, 1, "", "step_mdp"], [150, 1, 1, "", "to"], [150, 1, 1, "", "to_empty"], [150, 1, 1, "", "train"], [150, 1, 1, "", "type"], [150, 1, 1, "", "xpu"], [150, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[156, 4, 1, "", "action_key"], [156, 4, 1, "", "action_keys"], [156, 4, 1, "", "action_spec"], [156, 4, 1, "", "action_spec_unbatched"], [156, 1, 1, "", "add_module"], [156, 1, 1, "", "add_truncated_keys"], [156, 1, 1, "", "append_transform"], [156, 1, 1, "", "apply"], [156, 1, 1, "", "auto_specs_"], [156, 4, 1, "", "batch_dims"], [156, 4, 1, "", "batch_locked"], [156, 4, 1, "", "batch_size"], [156, 1, 1, "", "bfloat16"], [156, 1, 1, "", "buffers"], [156, 1, 1, "", "cardinality"], [156, 1, 1, "", "check_env_specs"], [156, 1, 1, "", "children"], [156, 1, 1, "", "compile"], [156, 1, 1, "", "cpu"], [156, 1, 1, "", "cuda"], [156, 4, 1, "", "done_key"], [156, 4, 1, "", "done_keys"], [156, 4, 1, "", "done_keys_groups"], [156, 4, 1, "", "done_spec"], [156, 4, 1, "", "done_spec_unbatched"], [156, 1, 1, "", "double"], [156, 1, 1, "", "empty_cache"], [156, 1, 1, "", "eval"], [156, 1, 1, "", "extra_repr"], [156, 1, 1, "", "fake_tensordict"], [156, 1, 1, "", "float"], [156, 1, 1, "", "forward"], [156, 4, 1, "", "full_action_spec"], [156, 4, 1, "", "full_action_spec_unbatched"], [156, 4, 1, "", "full_done_spec"], [156, 4, 1, "", "full_done_spec_unbatched"], [156, 4, 1, "", "full_observation_spec_unbatched"], [156, 4, 1, "", "full_reward_spec"], [156, 4, 1, "", "full_reward_spec_unbatched"], [156, 4, 1, "", "full_state_spec"], [156, 4, 1, "", "full_state_spec_unbatched"], [156, 1, 1, "", "get_buffer"], [156, 1, 1, "", "get_extra_state"], [156, 1, 1, "", "get_parameter"], [156, 1, 1, "", "get_submodule"], [156, 1, 1, "", "half"], [156, 4, 1, "", "input_spec"], [156, 4, 1, "", "input_spec_unbatched"], [156, 1, 1, "", "ipu"], [156, 1, 1, "", "load_state_dict"], [156, 1, 1, "", "maybe_reset"], [156, 1, 1, "", "modules"], [156, 1, 1, "", "mtia"], [156, 1, 1, "", "named_buffers"], [156, 1, 1, "", "named_children"], [156, 1, 1, "", "named_modules"], [156, 1, 1, "", "named_parameters"], [156, 4, 1, "", "observation_spec"], [156, 4, 1, "", "observation_spec_unbatched"], [156, 4, 1, "", "output_spec"], [156, 4, 1, "", "output_spec_unbatched"], [156, 1, 1, "", "parameters"], [156, 1, 1, "", "rand_action"], [156, 1, 1, "", "rand_step"], [156, 1, 1, "", "register_backward_hook"], [156, 1, 1, "", "register_buffer"], [156, 1, 1, "", "register_forward_hook"], [156, 1, 1, "", "register_forward_pre_hook"], [156, 1, 1, "", "register_full_backward_hook"], [156, 1, 1, "", "register_full_backward_pre_hook"], [156, 1, 1, "", "register_gym"], [156, 1, 1, "", "register_load_state_dict_post_hook"], [156, 1, 1, "", "register_load_state_dict_pre_hook"], [156, 1, 1, "", "register_module"], [156, 1, 1, "", "register_parameter"], [156, 1, 1, "", "register_state_dict_post_hook"], [156, 1, 1, "", "register_state_dict_pre_hook"], [156, 1, 1, "", "requires_grad_"], [156, 1, 1, "", "reset"], [156, 4, 1, "", "reset_keys"], [156, 4, 1, "", "reward_key"], [156, 4, 1, "", "reward_keys"], [156, 4, 1, "", "reward_spec"], [156, 4, 1, "", "reward_spec_unbatched"], [156, 1, 1, "", "rollout"], [156, 1, 1, "", "set_extra_state"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "set_submodule"], [156, 4, 1, "", "shape"], [156, 1, 1, "", "share_memory"], [156, 4, 1, "", "specs"], [156, 1, 1, "", "state_dict"], [156, 4, 1, "", "state_keys"], [156, 4, 1, "", "state_spec"], [156, 4, 1, "", "state_spec_unbatched"], [156, 1, 1, "", "step"], [156, 1, 1, "", "step_and_maybe_reset"], [156, 1, 1, "", "step_mdp"], [156, 1, 1, "", "to"], [156, 1, 1, "", "to_empty"], [156, 1, 1, "", "train"], [156, 1, 1, "", "type"], [156, 1, 1, "", "update_kwargs"], [156, 1, 1, "", "xpu"], [156, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[157, 4, 1, "", "action_key"], [157, 4, 1, "", "action_keys"], [157, 4, 1, "", "action_spec"], [157, 4, 1, "", "action_spec_unbatched"], [157, 1, 1, "", "add_module"], [157, 1, 1, "", "add_truncated_keys"], [157, 1, 1, "", "append_transform"], [157, 1, 1, "", "apply"], [157, 1, 1, "", "auto_specs_"], [157, 4, 1, "", "batch_dims"], [157, 4, 1, "", "batch_size"], [157, 1, 1, "", "bfloat16"], [157, 1, 1, "", "buffers"], [157, 1, 1, "", "cardinality"], [157, 1, 1, "", "check_env_specs"], [157, 1, 1, "", "children"], [157, 1, 1, "", "compile"], [157, 1, 1, "", "cpu"], [157, 1, 1, "", "cuda"], [157, 4, 1, "", "done_key"], [157, 4, 1, "", "done_keys"], [157, 4, 1, "", "done_keys_groups"], [157, 4, 1, "", "done_spec"], [157, 4, 1, "", "done_spec_unbatched"], [157, 1, 1, "", "double"], [157, 1, 1, "", "empty_cache"], [157, 1, 1, "", "eval"], [157, 1, 1, "", "extra_repr"], [157, 1, 1, "", "fake_tensordict"], [157, 1, 1, "", "float"], [157, 1, 1, "", "forward"], [157, 4, 1, "", "full_action_spec"], [157, 4, 1, "", "full_action_spec_unbatched"], [157, 4, 1, "", "full_done_spec"], [157, 4, 1, "", "full_done_spec_unbatched"], [157, 4, 1, "", "full_observation_spec_unbatched"], [157, 4, 1, "", "full_reward_spec"], [157, 4, 1, "", "full_reward_spec_unbatched"], [157, 4, 1, "", "full_state_spec"], [157, 4, 1, "", "full_state_spec_unbatched"], [157, 1, 1, "", "get_buffer"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "get_parameter"], [157, 1, 1, "", "get_submodule"], [157, 1, 1, "", "half"], [157, 4, 1, "", "input_spec"], [157, 4, 1, "", "input_spec_unbatched"], [157, 1, 1, "", "ipu"], [157, 1, 1, "", "load_state_dict"], [157, 1, 1, "", "maybe_reset"], [157, 1, 1, "", "modules"], [157, 1, 1, "", "mtia"], [157, 1, 1, "", "named_buffers"], [157, 1, 1, "", "named_children"], [157, 1, 1, "", "named_modules"], [157, 1, 1, "", "named_parameters"], [157, 4, 1, "", "observation_spec"], [157, 4, 1, "", "observation_spec_unbatched"], [157, 4, 1, "", "output_spec"], [157, 4, 1, "", "output_spec_unbatched"], [157, 1, 1, "", "parameters"], [157, 1, 1, "", "rand_action"], [157, 1, 1, "", "rand_step"], [157, 1, 1, "", "register_backward_hook"], [157, 1, 1, "", "register_buffer"], [157, 1, 1, "", "register_forward_hook"], [157, 1, 1, "", "register_forward_pre_hook"], [157, 1, 1, "", "register_full_backward_hook"], [157, 1, 1, "", "register_full_backward_pre_hook"], [157, 1, 1, "", "register_gym"], [157, 1, 1, "", "register_load_state_dict_post_hook"], [157, 1, 1, "", "register_load_state_dict_pre_hook"], [157, 1, 1, "", "register_module"], [157, 1, 1, "", "register_parameter"], [157, 1, 1, "", "register_state_dict_post_hook"], [157, 1, 1, "", "register_state_dict_pre_hook"], [157, 1, 1, "", "requires_grad_"], [157, 1, 1, "", "reset"], [157, 4, 1, "", "reset_keys"], [157, 4, 1, "", "reward_key"], [157, 4, 1, "", "reward_keys"], [157, 4, 1, "", "reward_spec"], [157, 4, 1, "", "reward_spec_unbatched"], [157, 1, 1, "", "rollout"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "set_seed"], [157, 1, 1, "", "set_submodule"], [157, 4, 1, "", "shape"], [157, 1, 1, "", "share_memory"], [157, 4, 1, "", "specs"], [157, 1, 1, "", "state_dict"], [157, 4, 1, "", "state_keys"], [157, 4, 1, "", "state_spec"], [157, 4, 1, "", "state_spec_unbatched"], [157, 1, 1, "", "step"], [157, 1, 1, "", "step_and_maybe_reset"], [157, 1, 1, "", "step_mdp"], [157, 1, 1, "", "to"], [157, 1, 1, "", "to_empty"], [157, 1, 1, "", "train"], [157, 1, 1, "", "type"], [157, 1, 1, "", "xpu"], [157, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[164, 2, 1, "", "DreamerDecoder"], [165, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[167, 0, 1, "", "ActionDiscretizer"], [168, 0, 1, "", "ActionMask"], [169, 0, 1, "", "AutoResetEnv"], [170, 0, 1, "", "AutoResetTransform"], [171, 0, 1, "", "BatchSizeTransform"], [172, 0, 1, "", "BinarizeReward"], [173, 0, 1, "", "BurnInTransform"], [174, 0, 1, "", "CatFrames"], [175, 0, 1, "", "CatTensors"], [176, 0, 1, "", "CenterCrop"], [177, 0, 1, "", "ClipTransform"], [178, 0, 1, "", "Compose"], [179, 0, 1, "", "Crop"], [180, 0, 1, "", "DTypeCastTransform"], [181, 0, 1, "", "DeviceCastTransform"], [182, 0, 1, "", "DiscreteActionProjection"], [183, 0, 1, "", "DoubleToFloat"], [184, 0, 1, "", "EndOfLifeTransform"], [185, 0, 1, "", "ExcludeTransform"], [186, 0, 1, "", "FiniteTensorDictCheck"], [187, 0, 1, "", "FlattenObservation"], [188, 0, 1, "", "FrameSkipTransform"], [189, 0, 1, "", "GrayScale"], [190, 0, 1, "", "InitTracker"], [191, 0, 1, "", "KLRewardTransform"], [192, 0, 1, "", "NoopResetEnv"], [193, 0, 1, "", "ObservationNorm"], [194, 0, 1, "", "ObservationTransform"], [195, 0, 1, "", "PermuteTransform"], [196, 0, 1, "", "PinMemoryTransform"], [197, 0, 1, "", "R3MTransform"], [198, 0, 1, "", "RandomCropTensorDict"], [199, 0, 1, "", "RemoveEmptySpecs"], [200, 0, 1, "", "RenameTransform"], [201, 0, 1, "", "Resize"], [202, 0, 1, "", "Reward2GoTransform"], [203, 0, 1, "", "RewardClipping"], [204, 0, 1, "", "RewardScaling"], [205, 0, 1, "", "RewardSum"], [206, 0, 1, "", "SelectTransform"], [207, 0, 1, "", "SignTransform"], [208, 0, 1, "", "SqueezeTransform"], [209, 0, 1, "", "StepCounter"], [210, 0, 1, "", "TargetReturn"], [211, 0, 1, "", "TensorDictPrimer"], [212, 0, 1, "", "TimeMaxPool"], [213, 0, 1, "", "ToTensorImage"], [214, 0, 1, "", "TrajCounter"], [215, 0, 1, "", "Transform"], [216, 0, 1, "", "TransformedEnv"], [217, 0, 1, "", "UnsqueezeTransform"], [218, 0, 1, "", "VC1Transform"], [219, 0, 1, "", "VIPRewardTransform"], [220, 0, 1, "", "VIPTransform"], [221, 0, 1, "", "VecGymEnvTransform"], [222, 0, 1, "", "VecNorm"], [223, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[167, 0, 1, "", "SamplingStrategy"], [167, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[169, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[170, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "transform_env_batch_size"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[172, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[173, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[174, 1, 1, "", "forward"], [174, 1, 1, "", "make_rb_transform_and_sampler"], [174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[176, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[177, 1, 1, "", "transform_observation_spec"], [177, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[178, 1, 1, "", "append"], [178, 1, 1, "", "forward"], [178, 1, 1, "", "insert"], [178, 1, 1, "", "to"], [178, 1, 1, "", "transform_env_batch_size"], [178, 1, 1, "", "transform_env_device"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_output_spec"], [178, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[179, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "transform_input_spec"], [180, 1, 1, "", "transform_observation_spec"], [180, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "transform_done_spec"], [181, 1, 1, "", "transform_env_device"], [181, 1, 1, "", "transform_input_spec"], [181, 1, 1, "", "transform_observation_spec"], [181, 1, 1, "", "transform_output_spec"], [181, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[182, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "register_keys"], [184, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[188, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[189, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[190, 1, 1, "", "forward"], [190, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[193, 1, 1, "", "init_stats"], [193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[195, 1, 1, "", "transform_input_spec"], [195, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[197, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[198, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[201, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[202, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[204, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_input_spec"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "to"], [211, 1, 1, "", "transform_input_spec"], [211, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[213, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TrajCounter": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "load_state_dict"], [214, 1, 1, "", "state_dict"], [214, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[215, 4, 1, "", "container"], [215, 1, 1, "", "forward"], [215, 4, 1, "", "parent"], [215, 1, 1, "", "to"], [215, 1, 1, "", "transform_done_spec"], [215, 1, 1, "", "transform_env_batch_size"], [215, 1, 1, "", "transform_env_device"], [215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_output_spec"], [215, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[216, 1, 1, "", "add_truncated_keys"], [216, 1, 1, "", "append_transform"], [216, 4, 1, "", "batch_locked"], [216, 4, 1, "", "batch_size"], [216, 1, 1, "", "empty_cache"], [216, 1, 1, "", "eval"], [216, 4, 1, "", "input_spec"], [216, 1, 1, "", "insert_transform"], [216, 1, 1, "", "load_state_dict"], [216, 4, 1, "", "output_spec"], [216, 1, 1, "", "set_missing_tolerance"], [216, 1, 1, "", "set_seed"], [216, 1, 1, "", "state_dict"], [216, 1, 1, "", "to"], [216, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[217, 1, 1, "", "transform_input_spec"], [217, 1, 1, "", "transform_observation_spec"], [217, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "make_noload_model"], [218, 1, 1, "", "to"], [218, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[220, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[222, 1, 1, "", "build_td_for_shared_vecnorm"], [222, 1, 1, "", "forward"], [222, 1, 1, "", "freeze"], [222, 1, 1, "", "frozen_copy"], [222, 1, 1, "", "get_extra_state"], [222, 4, 1, "", "loc"], [222, 4, 1, "", "scale"], [222, 1, 1, "", "set_extra_state"], [222, 4, 1, "", "standard_normal"], [222, 1, 1, "", "to_observation_norm"], [222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[224, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[224, 1, 1, "", "add_module"], [224, 1, 1, "", "apply"], [224, 1, 1, "", "bfloat16"], [224, 1, 1, "", "buffers"], [224, 1, 1, "", "children"], [224, 1, 1, "", "compile"], [224, 4, 1, "", "container"], [224, 1, 1, "", "cpu"], [224, 1, 1, "", "cuda"], [224, 1, 1, "", "double"], [224, 1, 1, "", "eval"], [224, 1, 1, "", "extra_repr"], [224, 1, 1, "", "float"], [224, 1, 1, "", "forward"], [224, 1, 1, "", "get_buffer"], [224, 1, 1, "", "get_extra_state"], [224, 1, 1, "", "get_parameter"], [224, 1, 1, "", "get_submodule"], [224, 1, 1, "", "half"], [224, 1, 1, "", "ipu"], [224, 1, 1, "", "load_state_dict"], [224, 1, 1, "", "modules"], [224, 1, 1, "", "mtia"], [224, 4, 1, "", "n_steps"], [224, 1, 1, "", "named_buffers"], [224, 1, 1, "", "named_children"], [224, 1, 1, "", "named_modules"], [224, 1, 1, "", "named_parameters"], [224, 1, 1, "", "parameters"], [224, 4, 1, "", "parent"], [224, 1, 1, "", "register_backward_hook"], [224, 1, 1, "", "register_buffer"], [224, 1, 1, "", "register_forward_hook"], [224, 1, 1, "", "register_forward_pre_hook"], [224, 1, 1, "", "register_full_backward_hook"], [224, 1, 1, "", "register_full_backward_pre_hook"], [224, 1, 1, "", "register_load_state_dict_post_hook"], [224, 1, 1, "", "register_load_state_dict_pre_hook"], [224, 1, 1, "", "register_module"], [224, 1, 1, "", "register_parameter"], [224, 1, 1, "", "register_state_dict_post_hook"], [224, 1, 1, "", "register_state_dict_pre_hook"], [224, 1, 1, "", "requires_grad_"], [224, 1, 1, "", "set_extra_state"], [224, 1, 1, "", "set_submodule"], [224, 1, 1, "", "share_memory"], [224, 1, 1, "", "state_dict"], [224, 1, 1, "", "to"], [224, 1, 1, "", "to_empty"], [224, 1, 1, "", "train"], [224, 1, 1, "", "transform_done_spec"], [224, 1, 1, "", "transform_env_batch_size"], [224, 1, 1, "", "transform_env_device"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_observation_spec"], [224, 1, 1, "", "transform_output_spec"], [224, 1, 1, "", "transform_reward_spec"], [224, 1, 1, "", "type"], [224, 1, 1, "", "xpu"], [224, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[225, 2, 1, "", "RandomPolicy"], [226, 2, 1, "", "check_env_specs"], [227, 2, 1, "", "exploration_type"], [228, 2, 1, "", "get_available_libraries"], [229, 2, 1, "", "make_composite_from_td"], [230, 2, 1, "", "set_exploration_type"], [231, 2, 1, "", "step_mdp"], [232, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[233, 0, 1, "", "AdditiveGaussianModule"], [234, 0, 1, "", "AdditiveGaussianWrapper"], [235, 0, 1, "", "BatchRenorm1d"], [236, 0, 1, "", "CEMPlanner"], [237, 0, 1, "", "ConsistentDropout"], [238, 0, 1, "", "ConsistentDropoutModule"], [239, 0, 1, "", "Conv3dNet"], [240, 0, 1, "", "ConvNet"], [241, 0, 1, "", "DTActor"], [242, 0, 1, "", "DdpgCnnActor"], [243, 0, 1, "", "DdpgCnnQNet"], [244, 0, 1, "", "DdpgMlpActor"], [245, 0, 1, "", "DdpgMlpQNet"], [246, 0, 1, "", "DecisionTransformer"], [247, 0, 1, "", "Delta"], [248, 0, 1, "", "DistributionalDQNnet"], [249, 0, 1, "", "DistributionalQValueHook"], [250, 0, 1, "", "DreamerActor"], [251, 0, 1, "", "DuelingCnnDQNet"], [252, 0, 1, "", "EGreedyModule"], [253, 0, 1, "", "EGreedyWrapper"], [254, 0, 1, "", "GRU"], [255, 0, 1, "", "GRUCell"], [256, 0, 1, "", "GRUModule"], [257, 0, 1, "", "IndependentNormal"], [258, 0, 1, "", "LSTM"], [259, 0, 1, "", "LSTMCell"], [260, 0, 1, "", "LSTMModule"], [261, 0, 1, "", "MLP"], [262, 0, 1, "", "MPCPlannerBase"], [263, 0, 1, "", "MPPIPlanner"], [264, 0, 1, "", "MaskedCategorical"], [265, 0, 1, "", "MaskedOneHotCategorical"], [266, 0, 1, "", "MultiAgentConvNet"], [267, 0, 1, "", "MultiAgentMLP"], [268, 0, 1, "", "MultiAgentNetBase"], [269, 0, 1, "", "NoisyLazyLinear"], [270, 0, 1, "", "NoisyLinear"], [271, 0, 1, "", "NormalParamWrapper"], [272, 0, 1, "", "ObsDecoder"], [273, 0, 1, "", "ObsEncoder"], [274, 0, 1, "", "OneHotCategorical"], [275, 0, 1, "", "OneHotOrdinal"], [276, 0, 1, "", "OnlineDTActor"], [277, 0, 1, "", "Ordinal"], [278, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [279, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [280, 0, 1, "", "QMixer"], [281, 0, 1, "", "QValueHook"], [282, 0, 1, "", "RSSMPosterior"], [283, 0, 1, "", "RSSMPrior"], [284, 0, 1, "", "Squeeze2dLayer"], [285, 0, 1, "", "SqueezeLayer"], [286, 0, 1, "", "TanhDelta"], [287, 0, 1, "", "TanhNormal"], [288, 0, 1, "", "TruncatedNormal"], [289, 0, 1, "", "VDNMixer"], [290, 0, 1, "", "VmapModule"], [291, 0, 1, "", "recurrent_mode"], [292, 0, 1, "", "reset_noise"], [293, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[235, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[236, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[237, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[239, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[240, 1, 1, "", "default_atari_dqn"], [240, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[241, 1, 1, "", "default_config"], [241, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[242, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[243, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[244, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[245, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[246, 0, 1, "", "DTConfig"], [246, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[247, 1, 1, "", "expand"], [247, 1, 1, "", "log_prob"], [247, 4, 1, "", "mean"], [247, 4, 1, "", "mode"], [247, 1, 1, "", "rsample"], [247, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[248, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[250, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[251, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "step"]], "torchrl.modules.GRU": [[254, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[255, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_cudnn_based"], [256, 1, 1, "", "make_python_based"], [256, 1, 1, "id0", "make_tensordict_primer"], [256, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[257, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[258, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[259, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_cudnn_based"], [260, 1, 1, "", "make_python_based"], [260, 1, 1, "id0", "make_tensordict_primer"], [260, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[261, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[263, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[264, 1, 1, "", "log_prob"], [264, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[265, 1, 1, "", "log_prob"], [265, 4, 1, "", "mode"], [265, 1, 1, "", "rsample"], [265, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "from_stateful_net"], [268, 1, 1, "", "get_stateful_net"], [268, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[269, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[271, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[272, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[273, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[274, 1, 1, "", "entropy"], [274, 1, 1, "", "log_prob"], [274, 4, 1, "", "mode"], [274, 1, 1, "", "rsample"], [274, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[276, 1, 1, "", "default_config"], [276, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[280, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[282, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[283, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[285, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[286, 4, 1, "", "mean"], [286, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[287, 1, 1, "", "get_mode"], [287, 4, 1, "", "mean"], [287, 4, 1, "", "mode"], [287, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[288, 1, 1, "", "log_prob"], [288, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[289, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[290, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[294, 0, 1, "", "Actor"], [295, 0, 1, "", "ActorCriticOperator"], [296, 0, 1, "", "ActorCriticWrapper"], [297, 0, 1, "", "ActorValueOperator"], [298, 0, 1, "", "DecisionTransformerInferenceWrapper"], [299, 0, 1, "", "DistributionalQValueActor"], [300, 0, 1, "", "DistributionalQValueModule"], [301, 0, 1, "", "LMHeadActorValueOperator"], [302, 0, 1, "", "MultiStepActorWrapper"], [303, 0, 1, "", "ProbabilisticActor"], [304, 0, 1, "", "QValueActor"], [305, 0, 1, "", "QValueModule"], [306, 0, 1, "", "SafeModule"], [307, 0, 1, "", "SafeProbabilisticModule"], [308, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [309, 0, 1, "", "SafeSequential"], [310, 0, 1, "", "TanhModule"], [311, 0, 1, "", "ValueOperator"], [312, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[295, 1, 1, "", "get_critic_operator"], [295, 1, 1, "", "get_policy_head"], [295, 1, 1, "", "get_value_head"], [295, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[296, 1, 1, "", "get_policy_head"], [296, 1, 1, "", "get_policy_operator"], [296, 1, 1, "", "get_value_head"], [296, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[297, 1, 1, "", "get_policy_head"], [297, 1, 1, "", "get_policy_operator"], [297, 1, 1, "", "get_value_head"], [297, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[298, 1, 1, "", "forward"], [298, 1, 1, "", "mask_context"], [298, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[300, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[302, 1, 1, "", "forward"], [302, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[305, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[306, 1, 1, "", "random"], [306, 1, 1, "", "random_sample"], [306, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[307, 1, 1, "", "random"], [307, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[310, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[312, 1, 1, "", "get_reward_operator"], [312, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[313, 0, 1, "", "biased_softplus"], [314, 0, 1, "", "get_primers_from_module"], [315, 0, 1, "", "inv_softplus"], [316, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[313, 1, 1, "", "forward"]], "torchrl.objectives": [[317, 0, 1, "", "A2CLoss"], [318, 0, 1, "", "CQLLoss"], [319, 0, 1, "", "ClipPPOLoss"], [320, 0, 1, "", "CrossQLoss"], [321, 0, 1, "", "DDPGLoss"], [322, 0, 1, "", "DQNLoss"], [323, 0, 1, "", "DTLoss"], [324, 0, 1, "", "DiscreteCQLLoss"], [325, 0, 1, "", "DiscreteIQLLoss"], [326, 0, 1, "", "DiscreteSACLoss"], [327, 0, 1, "", "DistributionalDQNLoss"], [328, 0, 1, "", "DreamerActorLoss"], [329, 0, 1, "", "DreamerModelLoss"], [330, 0, 1, "", "DreamerValueLoss"], [331, 0, 1, "", "GAILLoss"], [332, 0, 1, "", "HardUpdate"], [333, 0, 1, "", "IQLLoss"], [334, 0, 1, "", "KLPENPPOLoss"], [335, 0, 1, "", "LossModule"], [336, 0, 1, "", "OnlineDTLoss"], [337, 0, 1, "", "PPOLoss"], [338, 0, 1, "", "REDQLoss"], [339, 0, 1, "", "ReinforceLoss"], [340, 0, 1, "", "SACLoss"], [341, 0, 1, "", "SoftUpdate"], [342, 0, 1, "", "TD3BCLoss"], [343, 0, 1, "", "TD3Loss"], [344, 0, 1, "", "ValueEstimators"], [345, 0, 1, "", "default_value_kwargs"], [346, 0, 1, "", "distance_loss"], [347, 0, 1, "", "group_optimizers"], [348, 0, 1, "", "hold_out_net"], [349, 0, 1, "", "hold_out_params"], [351, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[317, 1, 1, "", "forward"], [317, 4, 1, "", "functional"], [317, 1, 1, "", "loss_critic"], [317, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[318, 1, 1, "", "forward"], [318, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[319, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[320, 1, 1, "", "actor_loss"], [320, 1, 1, "", "alpha_loss"], [320, 1, 1, "", "forward"], [320, 1, 1, "", "load_state_dict"], [320, 1, 1, "", "make_value_estimator"], [320, 1, 1, "", "maybe_init_target_entropy"], [320, 1, 1, "", "qvalue_loss"], [320, 1, 1, "", "set_keys"], [320, 1, 1, "", "state_dict"], [320, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[325, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[327, 1, 1, "", "forward"], [327, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[328, 1, 1, "", "forward"], [328, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[329, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[330, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[331, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[333, 1, 1, "", "forward"], [333, 1, 1, "", "loss_value_diff"], [333, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[334, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[335, 1, 1, "", "convert_to_functional"], [335, 1, 1, "", "forward"], [335, 1, 1, "", "from_stateful_net"], [335, 4, 1, "", "functional"], [335, 1, 1, "", "get_stateful_net"], [335, 1, 1, "", "make_value_estimator"], [335, 1, 1, "", "named_parameters"], [335, 1, 1, "", "parameters"], [335, 1, 1, "", "reset_parameters_recursive"], [335, 1, 1, "", "set_keys"], [335, 4, 1, "", "value_estimator"], [335, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[336, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[337, 1, 1, "", "forward"], [337, 4, 1, "", "functional"], [337, 1, 1, "", "loss_critic"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[338, 1, 1, "", "forward"], [338, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[339, 1, 1, "", "forward"], [339, 4, 1, "", "functional"], [339, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[340, 1, 1, "", "forward"], [340, 1, 1, "", "load_state_dict"], [340, 1, 1, "", "make_value_estimator"], [340, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[342, 1, 1, "", "actor_loss"], [342, 1, 1, "", "forward"], [342, 1, 1, "", "make_value_estimator"], [342, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[343, 1, 1, "", "forward"], [343, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[350, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[350, 1, 1, "", "forward"], [350, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[352, 0, 1, "", "GAE"], [353, 0, 1, "", "TD0Estimator"], [354, 0, 1, "", "TD1Estimator"], [355, 0, 1, "", "TDLambdaEstimator"], [356, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[352, 1, 1, "", "forward"], [352, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[353, 1, 1, "", "forward"], [353, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[354, 1, 1, "", "forward"], [354, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[355, 1, 1, "", "forward"], [355, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[356, 1, 1, "", "forward"], [356, 1, 1, "", "set_keys"], [356, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[357, 0, 1, "", "generalized_advantage_estimate"], [358, 0, 1, "", "reward2go"], [359, 0, 1, "", "td0_advantage_estimate"], [360, 0, 1, "", "td0_return_estimate"], [361, 0, 1, "", "td1_advantage_estimate"], [362, 0, 1, "", "td1_return_estimate"], [363, 0, 1, "", "td_lambda_advantage_estimate"], [364, 0, 1, "", "td_lambda_return_estimate"], [365, 0, 1, "", "vec_generalized_advantage_estimate"], [366, 0, 1, "", "vec_td1_advantage_estimate"], [367, 0, 1, "", "vec_td1_return_estimate"], [368, 0, 1, "", "vec_td_lambda_advantage_estimate"], [369, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[370, 2, 1, "", "PixelRenderTransform"], [371, 2, 1, "", "TensorDictRecorder"], [372, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[373, 2, 1, "", "Logger"], [375, 2, 1, "", "generate_exp_name"], [376, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[374, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[377, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[378, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[379, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[380, 0, 1, "", "BatchSubSampler"], [381, 0, 1, "", "ClearCudaCache"], [382, 0, 1, "", "CountFramesLog"], [383, 0, 1, "", "LogScalar"], [384, 0, 1, "", "LogValidationReward"], [385, 0, 1, "", "OptimizerHook"], [386, 0, 1, "", "ReplayBufferTrainer"], [387, 0, 1, "", "RewardNormalizer"], [388, 0, 1, "", "SelectKeys"], [389, 0, 1, "", "Trainer"], [390, 0, 1, "", "TrainerHookBase"], [391, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[380, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[381, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[382, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[383, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[384, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[385, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[386, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[387, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[388, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[389, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[390, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[391, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[392, 2, 1, "", "correct_for_frame_skip"], [393, 2, 1, "", "get_stats_random_rollout"], [394, 2, 1, "", "make_collector_offpolicy"], [395, 2, 1, "", "make_collector_onpolicy"], [396, 2, 1, "", "make_dqn_loss"], [397, 2, 1, "", "make_replay_buffer"], [398, 2, 1, "", "make_target_updater"], [399, 2, 1, "", "make_trainer"], [400, 2, 1, "", "parallel_env_constructor"], [401, 2, 1, "", "sync_async_collector"], [402, 2, 1, "", "sync_sync_collector"], [403, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 407, 408, 409, 410, 412, 413, 414, 416, 418, 425, 426, 427, 431, 432], "instal": [0, 6, 7, 431], "get": [0, 417, 418, 419, 420, 421, 422], "start": [0, 417, 418, 419, 420, 421, 422], "tutori": [0, 414, 425, 426], "basic": [0, 429], "intermedi": [0, 8], "advanc": 0, "refer": [0, 405], "knowledg": [0, 406], "base": [0, 2, 7, 406, 416], "indic": 0, "tabl": 0, "collector": [1, 412, 413, 414, 415, 420, 422, 425, 426, 431], "packag": [1, 2, 3, 407, 408, 409, 410], "batch": [1, 412, 427, 429], "size": [1, 412, 429], "polici": [1, 2, 4, 412, 414, 415, 416, 418, 422, 424, 425, 426, 427], "copi": 1, "replai": [1, 2, 412, 413, 414, 415, 420, 422, 425, 426, 429, 431], "buffer": [1, 2, 412, 413, 414, 415, 420, 422, 425, 426, 429, 431], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 412, 413, 414, 420, 422, 425, 426, 431], "distribut": [1, 407], "helper": [1, 3], "function": [1, 4, 408, 413, 414, 419, 425, 426, 431], "compos": [2, 178], "support": 2, "type": 2, "choos": 2, "storag": [2, 111, 412, 420, 429], "sampl": [2, 429], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 413, 429], "trajectori": [2, 429], "checkpoint": [2, 409], "episod": [2, 4], "format": 2, "ted": [2, 417], "The": [2, 412], "rational": 2, "behind": 2, "structur": [2, 429], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 407, 429, 431], "special": [2, 418, 431], "case": 2, "footnot": 2, "multi": [2, 3, 407, 408, 424, 425, 426], "agent": [2, 3, 4, 407, 408, 425, 426], "present": 2, "rnn": 2, "transform": [2, 3, 215, 412, 414, 417, 425, 426, 427, 429, 431, 432], "step": [2, 412, 414, 417, 420, 425, 426, 429, 432], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 71], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": [2, 73], "forest": 2, "tensordictmap": [2, 66], "mctsforest": [2, 41], "reinforc": [2, 408, 414, 425, 426], "learn": [2, 4, 407, 414, 425, 426], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 407, 408, 409, 425], "env": [3, 427, 431, 432], "vector": [3, 431], "custom": [3, 11, 427, 429], "nativ": 3, "environ": [3, 4, 6, 7, 412, 413, 414, 415, 417, 422, 424, 425, 426, 427, 431, 432], "auto": 3, "reset": [3, 427, 432], "dynam": [3, 4, 429], "spec": [3, 427, 432], "forward": [3, 4, 412], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 415, 427], "record": [3, 409, 412, 421], "video": [3, 11, 421], "domain": [3, 407], "specif": [3, 407, 424], "librari": [3, 431], "thing": [4, 412, 427], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 417, 419, 431], "gener": [4, 11, 407], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 412, 416, 422, 427], "algorithm": [4, 407], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 412, 413, 419, 422], "return": [4, 408], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 431], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 424], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 412, 413, 414], "standard": 4, "explor": [4, 407, 412, 413, 418], "valu": [4, 407, 408, 412, 414, 415, 418], "loss": [4, 412, 413, 414, 415, 422, 425, 426], "earli": 4, "train": [4, 8, 408, 412, 414, 415, 416, 419, 422, 425, 426, 427], "roughli": 4, "uniformli": 4, "random": [4, 408, 425, 426], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 413], "increas": 4, "an": [4, 414, 415, 417, 427], "can": 4, "low": 4, "model": [4, 407, 412, 413, 415, 416, 419, 428, 431], "also": 4, "us": [4, 6, 9, 415, 428, 429, 431], "offlin": 4, "observ": [4, 412], "space": 4, "effect": [4, 427], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 416], "gym": [5, 431, 432], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 412], "render": [7, 11, 422, 425, 426, 432], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 412], "pytorch": [8, 9, 10, 416], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 427], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 413, 429], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 416], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 42, "multidiscretetensorspec": 43, "multionehot": 44, "multionehotdiscretetensorspec": 45, "multistep": 46, "nested2t": 47, "nontensor": 48, "nontensorspec": 49, "onehot": 50, "onehotdiscretetensorspec": 51, "pairwisedataset": 52, "prioritizedreplaybuff": 53, "promptdata": 54, "prompttensordicttoken": 55, "querymodul": 56, "randomprojectionhash": 57, "replaybuff": 58, "rewarddata": 59, "rolloutfrommodel": 60, "siphash": 61, "stack": 62, "stackedcomposit": 63, "ted2flat": 64, "ted2nest": 65, "tensordictprioritizedreplaybuff": 67, "tensordictreplaybuff": 68, "tensordicttoken": 69, "tensormap": 70, "tokenizeddatasetload": 72, "unbound": 74, "unboundedcontinu": 75, "unboundedcontinuoustensorspec": 76, "unboundeddiscret": 77, "unboundeddiscretetensorspec": 78, "check_no_exclusive_kei": 79, "consolidate_spec": 80, "contains_lazy_spec": 81, "create_infinite_iter": 82, "ataridqnexperiencereplai": 83, "basedatasetexperiencereplai": 84, "d4rlexperiencereplai": 85, "gendgrlexperiencereplai": 86, "minariexperiencereplai": 87, "openmlexperiencereplai": 88, "openxexperiencereplai": 89, "robosetexperiencereplai": 90, "vd4rlexperiencereplai": 91, "get_dataload": 92, "flatstoragecheckpoint": 93, "h5storagecheckpoint": 94, "immutabledatasetwrit": 95, "lazymemmapstorag": 96, "lazytensorstorag": 97, "liststorag": 98, "liststoragecheckpoint": 99, "nestedstoragecheckpoint": 100, "prioritizedsampl": 101, "prioritizedslicesampl": 102, "randomsampl": 103, "replaybufferensembl": 104, "roundrobinwrit": 105, "sampler": 106, "samplerensembl": 107, "samplerwithoutreplac": 108, "slicesampl": 109, "slicesamplerwithoutreplac": 110, "storagecheckpointerbas": 112, "storageensembl": 113, "storageensemblecheckpoint": 114, "tensordictmaxvaluewrit": 115, "tensordictroundrobinwrit": 116, "tensorstorag": 117, "tensorstoragecheckpoint": 118, "writer": 119, "writerensembl": 120, "braxenv": 121, "braxwrapp": 122, "chessenv": 123, "dmcontrolenv": 124, "dmcontrolwrapp": 125, "envbas": [126, 427], "envcreat": 127, "envmetadata": 128, "gymenv": 129, "gymlikeenv": 130, "gymwrapp": 131, "habitatenv": 132, "isaacgymenv": 133, "isaacgymwrapp": 134, "jumanjienv": 135, "jumanjiwrapp": 136, "llmhashingenv": 137, "mogymenv": 138, "mogymwrapp": 139, "marlgroupmaptyp": 140, "meltingpotenv": 141, "meltingpotwrapp": 142, "modelbasedenvbas": 143, "multithreadedenv": 144, "multithreadedenvwrapp": 145, "openmlenv": 146, "openspielenv": 147, "openspielwrapp": 148, "parallelenv": 149, "pendulumenv": 150, "pettingzooenv": 151, "pettingzoowrapp": 152, "robohiveenv": 153, "smacv2env": 154, "smacv2wrapp": 155, "serialenv": 156, "tictactoeenv": 157, "unitymlagentsenv": 158, "unitymlagentswrapp": 159, "vmasenv": 160, "vmaswrapp": 161, "check_marl_group": 162, "gym_backend": 163, "dreamerdecod": 164, "dreamerenv": 165, "set_gym_backend": 166, "actiondiscret": 167, "actionmask": 168, "autoresetenv": 169, "autoresettransform": 170, "batchsizetransform": 171, "binarizereward": 172, "burnintransform": 173, "catfram": [174, 429], "cattensor": 175, "centercrop": 176, "cliptransform": 177, "crop": 179, "dtypecasttransform": 180, "devicecasttransform": 181, "discreteactionproject": 182, "doubletofloat": 183, "endoflifetransform": 184, "excludetransform": 185, "finitetensordictcheck": 186, "flattenobserv": 187, "frameskiptransform": 188, "grayscal": 189, "inittrack": 190, "klrewardtransform": 191, "noopresetenv": 192, "observationnorm": 193, "observationtransform": 194, "permutetransform": 195, "pinmemorytransform": 196, "r3mtransform": 197, "randomcroptensordict": 198, "removeemptyspec": 199, "renametransform": 200, "resiz": 201, "reward2gotransform": 202, "rewardclip": 203, "rewardsc": 204, "rewardsum": 205, "selecttransform": 206, "signtransform": 207, "squeezetransform": 208, "stepcount": 209, "targetreturn": 210, "tensordictprim": 211, "timemaxpool": 212, "totensorimag": 213, "trajcount": 214, "transformedenv": 216, "unsqueezetransform": 217, "vc1transform": 218, "viprewardtransform": 219, "viptransform": 220, "vecgymenvtransform": 221, "vecnorm": [222, 432], "gsdenois": 223, "multisteptransform": 224, "randompolici": 225, "check_env_spec": 226, "exploration_typ": 227, "get_available_librari": 228, "make_composite_from_td": 229, "set_exploration_typ": 230, "step_mdp": 231, "terminated_or_trunc": 232, "additivegaussianmodul": 233, "additivegaussianwrapp": 234, "batchrenorm1d": 235, "cemplann": 236, "consistentdropout": 237, "consistentdropoutmodul": 238, "conv3dnet": 239, "convnet": 240, "dtactor": 241, "ddpgcnnactor": 242, "ddpgcnnqnet": 243, "ddpgmlpactor": 244, "ddpgmlpqnet": 245, "decisiontransform": 246, "delta": 247, "distributionaldqnnet": 248, "distributionalqvaluehook": 249, "dreameractor": 250, "duelingcnndqnet": 251, "egreedymodul": 252, "egreedywrapp": 253, "gru": 254, "grucel": 255, "grumodul": 256, "independentnorm": 257, "lstm": [258, 415], "lstmcell": 259, "lstmmodul": 260, "mlp": [261, 415], "mpcplannerbas": 262, "mppiplann": 263, "maskedcategor": 264, "maskedonehotcategor": 265, "multiagentconvnet": 266, "multiagentmlp": 267, "multiagentnetbas": 268, "noisylazylinear": 269, "noisylinear": 270, "normalparamwrapp": 271, "obsdecod": 272, "obsencod": 273, "onehotcategor": 274, "onehotordin": 275, "onlinedtactor": 276, "ordin": 277, "ornsteinuhlenbeckprocessmodul": 278, "ornsteinuhlenbeckprocesswrapp": 279, "qmixer": [280, 408], "qvaluehook": 281, "rssmposterior": 282, "rssmprior": 283, "squeeze2dlay": 284, "squeezelay": 285, "tanhdelta": 286, "tanhnorm": 287, "truncatednorm": 288, "vdnmixer": 289, "vmapmodul": 290, "recurrent_mod": 291, "reset_nois": 292, "set_recurrent_mod": 293, "actor": [294, 407, 412, 418], "actorcriticoper": 295, "actorcriticwrapp": 296, "actorvalueoper": 297, "decisiontransformerinferencewrapp": 298, "distributionalqvalueactor": 299, "distributionalqvaluemodul": 300, "lmheadactorvalueoper": 301, "multistepactorwrapp": 302, "probabilisticactor": 303, "qvalueactor": [304, 407], "qvaluemodul": 305, "safemodul": [306, 407], "safeprobabilisticmodul": 307, "safeprobabilistictensordictsequenti": 308, "safesequenti": 309, "tanhmodul": 310, "valueoper": 311, "worldmodelwrapp": 312, "biased_softplu": 313, "get_primers_from_modul": 314, "inv_softplu": 315, "map": [316, 425], "a2closs": 317, "cqlloss": 318, "clipppoloss": 319, "crossqloss": 320, "ddpgloss": 321, "dqnloss": 322, "dtloss": 323, "discretecqlloss": 324, "discreteiqlloss": 325, "discretesacloss": 326, "distributionaldqnloss": 327, "dreameractorloss": 328, "dreamermodelloss": 329, "dreamervalueloss": 330, "gailloss": 331, "hardupd": 332, "iqlloss": 333, "klpenppoloss": 334, "lossmodul": [335, 412, 419], "onlinedtloss": 336, "ppoloss": 337, "redqloss": 338, "reinforceloss": 339, "sacloss": 340, "softupd": 341, "td3bcloss": 342, "td3loss": 343, "valueestim": 344, "default_value_kwarg": 345, "distance_loss": 346, "group_optim": 347, "hold_out_net": 348, "hold_out_param": 349, "qmixerloss": 350, "next_state_valu": 351, "gae": 352, "td0estim": 353, "td1estim": 354, "tdlambdaestim": 355, "valueestimatorbas": 356, "generalized_advantage_estim": 357, "reward2go": 358, "td0_advantage_estim": 359, "td0_return_estim": 360, "td1_advantage_estim": 361, "td1_return_estim": 362, "td_lambda_advantage_estim": 363, "td_lambda_return_estim": 364, "vec_generalized_advantage_estim": 365, "vec_td1_advantage_estim": 366, "vec_td1_return_estim": 367, "vec_td_lambda_advantage_estim": 368, "vec_td_lambda_return_estim": 369, "pixelrendertransform": 370, "tensordictrecord": 371, "videorecord": 372, "logger": [373, 409, 421, 422], "csvlogger": 374, "generate_exp_nam": 375, "get_logg": 376, "mlflowlogg": 377, "tensorboardlogg": 378, "wandblogg": 379, "batchsubsampl": 380, "clearcudacach": 381, "countframeslog": 382, "logscalar": 383, "logvalidationreward": 384, "optimizerhook": 385, "replaybuffertrain": 386, "rewardnorm": 387, "selectkei": 388, "trainer": [389, 409, 413], "trainerhookbas": 390, "updateweight": 391, "correct_for_frame_skip": 392, "get_stats_random_rollout": 393, "make_collector_offpolici": 394, "make_collector_onpolici": 395, "make_dqn_loss": 396, "make_replay_buff": 397, "make_target_updat": 398, "make_train": 399, "parallel_env_constructor": 400, "sync_async_collector": 401, "sync_sync_collector": 402, "transformed_env_constructor": 403, "readm": [404, 423], "tuto": [404, 423], "api": 405, "contribut": [406, 431], "content": 406, "modul": [407, 412, 415, 416, 418, 422, 431], "tensordictmodul": [407, 416, 418, 431], "wrapper": [407, 418], "probabilist": [407, 418], "q": [407, 413, 415, 418], "oper": 407, "join": 407, "hook": [407, 409, 413], "regular": 407, "planner": 407, "object": [408, 412, 419, 431], "torch": 408, "vmap": [408, 431], "dqn": [408, 413, 415], "ddpg": [408, 412, 425], "sac": 408, "redq": 408, "crossq": 408, "iql": 408, "cql": 408, "gail": 408, "dt": 408, "td3": 408, "bc": 408, "ppo": [408, 414, 426], "a2c": 408, "dreamer": 408, "builder": 409, "_util": 410, "comput": [411, 413, 427, 430], "time": [411, 412, 430], "code": [412, 427], "overview": [412, 415], "setup": [412, 415], "__init__": 412, "method": 412, "estim": 412, "put": 412, "togeth": [412, 427], "call": 412, "parallel": [412, 424, 432], "execut": [412, 424, 427], "stat": 412, "build": [412, 413, 422, 429], "evalu": 412, "construct": 412, "target": [412, 413, 419], "network": [412, 413, 414, 415, 418, 425, 426], "updat": 412, "experi": [412, 427], "result": [412, 414, 425, 426], "conclus": [412, 413, 414, 415, 416, 425, 426, 427, 429], "next": [412, 414, 417, 420, 425, 426, 429], "A": [413, 429], "deep": 413, "collect": [413, 414, 420], "paramet": [413, 414, 419], "hyperparamet": [413, 414, 425, 426], "regist": 413, "possibl": 413, "improv": 413, "defin": [414, 425, 426], "loop": [414, 415, 416, 422, 425, 426, 427], "recurr": [415, 416], "convolut": 415, "select": 415, "further": [415, 419], "read": 415, "export": 416, "introduct": [416, 431], "fast": 416, "recap": 416, "simpl": [416, 427], "stochast": 416, "aotinductor": 416, "free": 416, "c": 416, "onnx": 416, "run": [416, 417, 432], "rollout": [416, 417, 424, 425, 426, 427, 432], "creat": 417, "s": [418, 419], "output": 419, "consider": 419, "log": 421, "own": 422, "first": 422, "design": 422, "divers": 424, "competit": 425, "group": 425, "critic": [425, 426], "pendulum": 427, "write": 427, "_step": 427, "simul": 427, "_reset": 427, "metadata": 427, "_spec": 427, "shape": 427, "seed": [427, 432], "wrap": 427, "class": [427, 431], "test": 427, "our": 427, "pretrain": 428, "vanilla": 429, "integr": 429, "tensorclass": 429, "other": 429, "tensor": 429, "pytre": 429, "iter": 429, "over": 429, "fix": 429, "priorit": 429, "save": 429, "raw": 429, "imag": 429, "more": 429, "complex": 429, "config": 431, "sequenc": 431, "program": 431, "ensembl": 431, "meta": 431, "sync": 431, "multiprocess": 431, "async": 431, "frame_skip": 432, "deepmind": 432, "control": 432, "devic": 432, "close": 432, "access": 432, "attribut": 432, "kwarg": 432}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})