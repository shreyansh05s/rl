Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.RandomPolicy", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.EGreedyWrapper", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.RandomPolicy.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.EGreedyWrapper.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerDecoder", "DreamerEnv", "set_gym_backend", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "TrajCounter", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "RandomPolicy", "check_env_specs", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_type", "step_mdp", "terminated_or_truncated", "AdditiveGaussianModule", "AdditiveGaussianWrapper", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "EGreedyWrapper", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "OrnsteinUhlenbeckProcessWrapper", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 102, 104, 105, 107, 109, 111, 113, 115, 116, 117, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 135, 141, 142, 144, 147, 148, 149, 150, 151, 154, 155, 156, 160, 165, 166, 168, 169, 171, 172, 174, 178, 180, 181, 184, 190, 191, 195, 196, 197, 198, 200, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 222, 224, 232, 233, 237, 238, 240, 241, 242, 243, 245, 250, 252, 254, 256, 258, 259, 260, 264, 265, 267, 276, 277, 282, 283, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 310, 314, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 350, 351, 352, 353, 354, 368, 370, 373, 377, 381, 382, 386, 387, 390, 397, 398, 399, 400, 403, 404, 405, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 428, 429], "open": [0, 5, 7, 12, 52, 54, 59, 73, 89, 96, 410, 422, 423, 428], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "reinforc": [0, 3, 9, 86, 139, 140, 172, 235, 240, 241, 242, 243, 247, 276, 277, 298, 315, 316, 318, 321, 322, 323, 325, 330, 331, 337, 338, 339, 340, 402, 408, 410, 414, 415, 420, 424, 427, 428], "learn": [0, 3, 7, 8, 9, 18, 46, 86, 87, 88, 90, 91, 125, 139, 140, 144, 147, 154, 172, 235, 240, 241, 242, 243, 247, 261, 268, 275, 276, 277, 298, 315, 316, 318, 321, 322, 323, 325, 329, 330, 331, 336, 337, 338, 339, 340, 402, 405, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 426, 427, 428, 429], "rl": [0, 1, 2, 3, 5, 8, 10, 14, 15, 16, 17, 83, 141, 208, 268, 292, 301, 309, 315, 317, 332, 333, 335, 337, 378, 401, 403, 404, 405, 406, 409, 410, 411, 413, 417, 420, 422, 423, 425, 426, 429], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 55, 69, 123, 124, 133, 142, 226, 402, 403, 404, 407, 409, 410, 411, 413, 414, 415, 417, 422, 423, 424, 429], "pytorch": [0, 1, 2, 3, 23, 87, 125, 129, 147, 148, 154, 155, 158, 159, 211, 224, 235, 252, 256, 267, 268, 386, 401, 403, 404, 406, 409, 411, 412, 416, 420, 422, 423, 424, 425, 426, 428, 429], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 27, 38, 46, 56, 57, 61, 66, 69, 86, 125, 129, 133, 138, 139, 140, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 164, 220, 222, 235, 256, 275, 377, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 108, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 138, 139, 140, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 164, 165, 166, 168, 169, 171, 172, 175, 176, 178, 180, 181, 182, 190, 191, 195, 196, 200, 203, 207, 208, 209, 212, 213, 214, 216, 218, 220, 222, 224, 230, 232, 234, 236, 237, 238, 240, 250, 252, 254, 255, 256, 258, 260, 261, 264, 265, 266, 268, 269, 276, 286, 288, 292, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 368, 370, 377, 381, 398, 399, 400, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "directli": [0, 3, 4, 8, 23, 83, 104, 121, 122, 125, 128, 129, 141, 147, 148, 154, 155, 191, 200, 219, 333, 340, 400, 410, 411, 413, 414, 422, 423, 424, 426], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 169, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 223, 227, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 272, 274, 275, 276, 277, 278, 279, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 331, 332, 333, 335, 336, 337, 338, 340, 341, 343, 348, 349, 350, 351, 352, 353, 356, 368, 369, 370, 378, 383, 386, 389, 390, 394, 396, 397, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "pypi": [0, 2, 428], "see": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 125, 129, 132, 135, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 176, 195, 209, 211, 212, 213, 214, 216, 218, 220, 221, 222, 235, 236, 237, 238, 252, 254, 255, 256, 258, 259, 265, 266, 267, 275, 278, 286, 287, 291, 293, 295, 301, 304, 305, 318, 329, 333, 340, 370, 377, 383, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 426, 428, 429], "more": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 115, 125, 128, 129, 130, 132, 133, 135, 139, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 211, 216, 221, 222, 231, 232, 233, 236, 247, 256, 259, 267, 269, 292, 297, 298, 304, 309, 315, 325, 333, 335, 350, 355, 363, 377, 382, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 428, 429], "about": [0, 3, 5, 7, 9, 18, 19, 20, 44, 69, 87, 90, 91, 125, 147, 154, 404, 405, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 426, 428, 429], "instruct": [0, 6, 7, 10, 22, 85, 180, 182, 409, 410, 411, 412, 422, 423, 426], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 41, 58, 67, 68, 104, 147, 154, 293, 294, 295, 404, 409, 414, 416, 417, 419, 421, 423], "section": [0, 2, 3, 4, 24, 252, 256, 410, 413, 414, 419, 422, 423], "below": [0, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 92, 110, 125, 129, 147, 148, 154, 155, 176, 195, 209, 212, 213, 214, 216, 218, 222, 237, 238, 252, 255, 256, 259, 265, 286, 301, 304, 383, 409, 410, 411, 412, 413, 414, 422, 424], "pip": [0, 10, 88, 413, 414, 415, 416, 417, 418, 419, 423, 428, 429], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 38, 39, 41, 42, 44, 46, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 72, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 98, 102, 103, 104, 107, 109, 110, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 165, 169, 171, 172, 173, 174, 175, 177, 178, 181, 185, 190, 191, 193, 195, 196, 199, 200, 203, 204, 208, 209, 210, 212, 214, 215, 216, 218, 219, 220, 222, 230, 232, 237, 238, 244, 245, 247, 250, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 277, 288, 292, 296, 298, 300, 301, 302, 303, 308, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 374, 378, 383, 390, 396, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "python": [0, 3, 5, 6, 7, 10, 14, 15, 21, 61, 66, 143, 156, 157, 164, 252, 253, 254, 256, 257, 258, 262, 263, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "first": [0, 1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 125, 128, 129, 130, 135, 147, 148, 154, 155, 168, 169, 172, 173, 185, 191, 195, 196, 211, 214, 216, 238, 245, 252, 254, 256, 258, 259, 263, 265, 267, 271, 292, 296, 297, 298, 301, 302, 304, 305, 317, 327, 332, 333, 335, 369, 370, 385, 404, 408, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], "low": [0, 3, 28, 31, 57, 66, 71, 74, 102, 125, 129, 147, 148, 154, 155, 165, 175, 180, 209, 227, 284, 285, 286, 296, 298, 301, 308, 409, 410, 411, 412, 413, 422, 423, 424, 428, 429], "high": [0, 3, 9, 28, 31, 52, 54, 59, 67, 73, 74, 102, 125, 129, 147, 148, 154, 155, 165, 175, 180, 190, 209, 227, 284, 285, 286, 296, 298, 301, 308, 350, 355, 363, 409, 410, 411, 412, 422, 423, 424, 426, 428, 429], "level": [0, 2, 3, 4, 22, 31, 32, 39, 53, 58, 63, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 128, 130, 172, 207, 332, 409, 410, 413, 417, 428], "abstract": [0, 3, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 48, 49, 62, 63, 70, 71, 74, 75, 76, 77, 78, 83, 84, 88, 119, 125, 192, 260, 354, 379, 387, 406, 411, 413, 424, 428], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 104, 107, 108, 109, 110, 111, 113, 115, 117, 125, 126, 128, 129, 130, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 167, 168, 169, 171, 172, 175, 176, 178, 179, 180, 181, 182, 184, 185, 189, 190, 193, 195, 200, 203, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 227, 229, 230, 231, 234, 235, 243, 245, 250, 252, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 268, 272, 277, 278, 281, 291, 296, 297, 300, 301, 302, 304, 305, 306, 307, 308, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 344, 345, 348, 349, 350, 351, 352, 353, 354, 368, 377, 383, 386, 396, 400, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "intend": [0, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 171, 180, 288, 333, 404, 428], "effici": [0, 1, 2, 4, 8, 252, 268, 318, 404, 409, 410, 411, 412, 413, 416, 417, 419, 421, 422, 423, 425, 426, 428], "modular": [0, 83, 307, 413, 426, 428], "document": [0, 2, 5, 7, 11, 18, 19, 21, 27, 38, 46, 56, 57, 61, 66, 89, 125, 129, 145, 146, 147, 148, 154, 155, 156, 157, 214, 222, 401, 410, 412, 413, 414, 417, 420, 428], "properli": [0, 1, 74, 125, 129, 147, 148, 154, 155, 229, 254, 258, 411, 418, 422, 423, 424, 428], "test": [0, 3, 5, 121, 122, 125, 129, 134, 135, 139, 140, 147, 148, 154, 155, 212, 216, 224, 254, 258, 381, 396, 411, 412, 413, 428], "The": [0, 1, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 101, 102, 104, 107, 109, 110, 111, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 165, 168, 169, 171, 172, 176, 178, 181, 182, 183, 191, 193, 195, 200, 202, 203, 204, 207, 208, 209, 212, 213, 214, 216, 218, 219, 220, 222, 224, 229, 230, 231, 233, 234, 235, 240, 241, 242, 243, 244, 247, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269, 273, 275, 276, 277, 279, 280, 281, 291, 292, 293, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 356, 368, 370, 372, 375, 376, 377, 378, 382, 396, 398, 399, 402, 404, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "code": [0, 3, 5, 7, 8, 14, 15, 57, 61, 89, 125, 129, 135, 147, 148, 154, 155, 195, 214, 216, 233, 252, 253, 254, 256, 257, 258, 301, 307, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429], "aim": [0, 2, 3, 7, 41, 62, 63, 195, 216, 218, 259, 389, 403, 404, 405, 409, 410, 428], "support": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 56, 59, 66, 73, 88, 91, 92, 96, 97, 111, 113, 117, 118, 120, 121, 122, 128, 130, 134, 142, 144, 147, 149, 151, 169, 172, 182, 191, 209, 210, 213, 226, 247, 273, 275, 285, 288, 297, 298, 301, 304, 307, 325, 333, 350, 351, 352, 353, 375, 402, 404, 406, 411, 412, 414, 415, 423, 424, 426, 428], "research": [0, 7, 9, 139, 140, 233, 428], "most": [0, 1, 2, 3, 7, 8, 14, 15, 46, 109, 110, 125, 129, 147, 148, 154, 155, 180, 219, 224, 409, 411, 413, 414, 415, 416, 417, 418, 419, 423, 424, 428, 429], "written": [0, 1, 2, 3, 12, 35, 52, 53, 54, 56, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 102, 104, 109, 110, 123, 124, 125, 128, 129, 130, 131, 147, 148, 151, 154, 155, 165, 172, 182, 189, 203, 207, 210, 219, 222, 229, 230, 236, 276, 277, 292, 301, 304, 305, 309, 315, 317, 332, 335, 337, 349, 368, 369, 370, 404, 405, 406, 409, 412, 413, 415, 421, 424, 428], "highli": [0, 2, 414, 428, 429], "wai": [0, 1, 2, 3, 4, 83, 87, 104, 115, 133, 195, 198, 212, 218, 219, 254, 256, 258, 335, 350, 351, 352, 353, 404, 409, 410, 411, 413, 414, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429], "easili": [0, 1, 2, 3, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 405, 409, 410, 411, 414, 415, 416, 419, 422, 423, 428, 429], "swap": [0, 1, 3, 128, 219, 411, 413, 425, 428], "compon": [0, 1, 2, 3, 53, 57, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 247, 279, 297, 298, 303, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 382, 386, 409, 410, 411, 412, 413, 415, 416, 419, 421, 422, 423, 424, 425, 428], "transform": [0, 1, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 53, 55, 58, 60, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 113, 118, 125, 126, 129, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 236, 239, 240, 244, 247, 248, 254, 258, 274, 278, 279, 285, 287, 296, 299, 300, 308, 311, 312, 314, 321, 334, 368, 370, 383, 400, 402, 408, 410, 412, 413, 415, 417, 418, 419, 420, 425, 427], "them": [0, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 53, 55, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 120, 125, 126, 129, 133, 138, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 178, 181, 209, 214, 220, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 287, 288, 296, 298, 300, 303, 308, 311, 332, 370, 409, 410, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "write": [0, 2, 3, 8, 23, 41, 46, 52, 53, 54, 55, 58, 59, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 113, 120, 125, 129, 175, 193, 194, 203, 205, 207, 211, 215, 230, 292, 304, 305, 307, 309, 318, 319, 320, 322, 323, 324, 331, 336, 338, 340, 341, 349, 354, 370, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429], "new": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 125, 129, 142, 147, 148, 152, 153, 154, 155, 169, 203, 213, 220, 222, 229, 230, 245, 252, 254, 258, 276, 277, 304, 305, 310, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 377, 405, 409, 411, 414, 416, 422, 423, 424, 428, 429], "ones": [0, 2, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 109, 110, 125, 129, 147, 148, 149, 150, 154, 155, 173, 176, 178, 179, 181, 191, 195, 200, 209, 213, 214, 216, 218, 222, 223, 235, 262, 263, 275, 288, 304, 315, 316, 318, 319, 331, 335, 336, 338, 340, 341, 356, 409, 411, 413, 422, 423, 424, 426, 428, 429], "littl": [0, 1, 3, 69, 125, 129, 147, 148, 154, 155, 214, 235, 315, 317, 332, 335, 337, 411, 412, 413, 417, 426, 428, 429], "effort": [0, 3, 424, 426, 428], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 144, 147, 148, 149, 150, 154, 155, 156, 158, 159, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 191, 195, 196, 197, 198, 200, 203, 204, 205, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 283, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 348, 350, 351, 352, 353, 354, 368, 369, 377, 378, 380, 381, 383, 386, 388, 389, 390, 396, 400, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "repo": [0, 6, 85, 172, 210, 216, 403, 423, 428], "attempt": [0, 14, 15, 16, 17, 18, 19, 20, 21, 109, 110, 123, 124, 125, 128, 129, 130, 131, 147, 148, 151, 154, 155, 232, 235, 277, 320, 323, 331, 348, 416, 428], "align": [0, 252, 256, 428], "exist": [0, 2, 3, 4, 12, 18, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 96, 125, 129, 147, 148, 154, 155, 173, 179, 212, 214, 222, 245, 318, 338, 390, 400, 422, 423, 428, 429], "ecosystem": [0, 413, 417, 428], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 89, 96, 97, 104, 107, 109, 115, 117, 125, 126, 129, 133, 139, 140, 147, 148, 154, 155, 158, 159, 169, 172, 207, 208, 209, 210, 212, 214, 222, 231, 232, 252, 254, 256, 258, 264, 266, 277, 285, 298, 300, 305, 315, 318, 332, 333, 335, 337, 370, 409, 410, 411, 412, 413, 414, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "dataset": [0, 37, 41, 52, 53, 54, 55, 58, 59, 60, 65, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 107, 109, 110, 144, 220, 370, 402, 409, 410, 414, 425, 426, 428, 429], "pillar": [0, 428], "environ": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 168, 169, 171, 172, 173, 178, 179, 180, 181, 186, 190, 191, 195, 196, 197, 200, 203, 207, 208, 209, 210, 212, 213, 214, 216, 219, 220, 224, 232, 234, 236, 254, 258, 260, 261, 277, 300, 322, 326, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 378, 380, 381, 389, 390, 391, 392, 396, 397, 398, 399, 400, 402, 403, 404, 408, 413, 415, 416, 417, 418, 420, 425, 426, 427], "model": [0, 1, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 125, 129, 141, 147, 148, 154, 155, 178, 195, 209, 216, 218, 221, 222, 237, 238, 239, 244, 246, 254, 258, 259, 260, 261, 265, 266, 274, 278, 287, 293, 294, 295, 299, 304, 310, 312, 315, 316, 317, 318, 320, 321, 322, 323, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 348, 386, 391, 392, 393, 402, 403, 405, 406, 408, 411, 414, 417, 420, 422, 423, 424, 426, 427, 429], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 166, 169, 171, 172, 178, 179, 181, 183, 189, 191, 197, 200, 207, 214, 219, 222, 223, 224, 227, 230, 234, 235, 247, 250, 254, 258, 261, 264, 265, 276, 277, 279, 288, 291, 292, 297, 300, 301, 302, 304, 307, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 368, 370, 377, 378, 383, 386, 388, 391, 396, 398, 399, 400, 402, 404, 405, 406, 408, 412, 413, 414, 415, 416, 420, 424, 425, 426, 427, 429], "util": [0, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 38, 46, 56, 57, 58, 60, 61, 66, 109, 110, 121, 122, 125, 129, 134, 135, 140, 147, 148, 149, 150, 154, 155, 160, 172, 195, 200, 209, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 236, 237, 238, 244, 252, 254, 256, 258, 311, 312, 313, 314, 333, 396, 402, 407, 409, 411, 413, 415, 416, 417, 423, 424, 426, 428, 429], "e": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 101, 102, 115, 117, 125, 126, 129, 147, 148, 154, 155, 158, 169, 171, 173, 176, 177, 185, 191, 195, 203, 209, 212, 213, 214, 216, 218, 222, 224, 252, 254, 255, 256, 258, 261, 265, 269, 279, 285, 286, 291, 296, 298, 300, 301, 303, 304, 305, 315, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 349, 350, 351, 352, 353, 368, 378, 389, 399, 404, 410, 411, 413, 415, 416, 418, 422, 423, 425, 426, 428, 429], "g": [0, 1, 2, 3, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 50, 52, 54, 56, 57, 59, 61, 66, 73, 115, 125, 126, 129, 147, 148, 154, 155, 158, 169, 171, 173, 176, 185, 191, 195, 203, 209, 212, 213, 214, 216, 218, 222, 224, 252, 254, 255, 256, 257, 258, 261, 265, 285, 286, 296, 301, 304, 305, 318, 338, 349, 359, 360, 361, 362, 364, 365, 366, 367, 368, 399, 404, 410, 411, 413, 415, 418, 422, 423, 424, 425, 426, 428, 429], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 46, 60, 64, 83, 89, 109, 110, 125, 129, 147, 148, 154, 155, 169, 172, 200, 207, 222, 223, 235, 254, 258, 276, 277, 383, 386, 388, 391, 392, 396, 398, 399, 402, 405, 406, 413, 426, 429], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 102, 104, 105, 107, 109, 110, 111, 116, 119, 120, 125, 129, 141, 147, 148, 154, 155, 165, 176, 178, 181, 195, 209, 212, 213, 214, 216, 218, 219, 220, 222, 229, 230, 234, 237, 238, 252, 253, 256, 257, 259, 261, 264, 265, 292, 297, 298, 301, 303, 304, 309, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 356, 374, 378, 389, 396, 397, 398, 399, 400, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "etc": [0, 2, 3, 7, 8, 12, 27, 38, 41, 46, 56, 57, 61, 66, 71, 89, 125, 129, 147, 148, 154, 155, 189, 214, 222, 259, 265, 285, 410, 411, 417, 426, 428, 429], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 111, 125, 129, 147, 148, 149, 150, 154, 155, 165, 168, 172, 178, 181, 182, 189, 190, 191, 207, 212, 213, 214, 220, 222, 224, 230, 231, 232, 235, 237, 238, 259, 264, 265, 266, 276, 277, 288, 300, 306, 307, 315, 317, 332, 335, 337, 340, 344, 345, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 386, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "few": [0, 2, 8, 110, 129, 370, 378, 411, 412, 415, 422, 423, 426, 428, 429], "depend": [0, 1, 2, 3, 4, 7, 8, 28, 52, 54, 74, 128, 130, 131, 151, 158, 159, 178, 181, 309, 335, 404, 409, 411, 412, 422, 423, 424, 428, 429], "possibl": [0, 2, 3, 4, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 62, 66, 86, 89, 91, 102, 109, 115, 125, 129, 147, 148, 154, 155, 165, 176, 195, 209, 212, 213, 214, 216, 218, 222, 237, 238, 252, 253, 256, 257, 304, 368, 381, 386, 404, 409, 411, 412, 413, 415, 417, 418, 422, 423, 424, 426, 428, 429], "standard": [0, 3, 191, 202, 220, 231, 232, 233, 234, 248, 261, 267, 268, 274, 296, 340, 341, 350, 351, 352, 353, 409, 410, 414, 415, 423, 426, 428], "numpi": [0, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 130, 147, 148, 154, 155, 211, 386, 413, 424, 426, 428, 429], "common": [0, 2, 3, 4, 21, 71, 129, 134, 166, 293, 294, 295, 299, 315, 316, 317, 318, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 396, 403, 404, 406, 409, 411, 415, 418, 421, 422, 423, 424, 425, 428, 429], "openai": [0, 7, 24, 128, 130, 151, 411, 424, 428, 429], "gym": [0, 1, 3, 4, 8, 12, 14, 15, 16, 17, 21, 22, 125, 126, 128, 129, 130, 131, 133, 139, 140, 142, 143, 147, 148, 151, 154, 155, 158, 159, 161, 164, 168, 172, 175, 182, 188, 189, 191, 193, 198, 200, 203, 209, 213, 219, 220, 222, 396, 403, 409, 410, 411, 412, 414, 418, 419, 424, 425, 426], "onli": [0, 1, 2, 3, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 104, 109, 110, 117, 123, 124, 125, 128, 129, 130, 131, 133, 135, 142, 143, 147, 148, 149, 150, 151, 154, 155, 165, 168, 172, 173, 175, 176, 178, 180, 181, 185, 191, 195, 196, 200, 207, 208, 209, 210, 212, 213, 214, 216, 218, 220, 222, 235, 256, 258, 264, 265, 292, 296, 297, 301, 302, 304, 305, 306, 307, 315, 317, 318, 319, 323, 324, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 350, 351, 352, 353, 354, 370, 377, 390, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 281, 284, 285, 286, 288, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 375, 377, 378, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 395, 396, 398, 399, 400, 404, 412, 414, 417, 422, 423, 424, 426, 428], "On": [0, 3, 7, 18, 19, 20, 21, 31, 86, 253, 257, 404, 410, 422, 423], "end": [0, 2, 3, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 108, 109, 110, 125, 129, 147, 148, 154, 155, 182, 193, 207, 208, 212, 214, 222, 237, 238, 252, 253, 256, 257, 260, 300, 318, 338, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "come": [0, 1, 2, 3, 8, 46, 115, 125, 129, 135, 138, 147, 148, 154, 155, 178, 181, 291, 292, 293, 294, 295, 301, 309, 315, 317, 332, 335, 337, 370, 409, 410, 411, 412, 416, 417, 418, 419, 422, 423, 426, 428, 429], "set": [0, 1, 2, 3, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 30, 31, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 108, 111, 117, 125, 127, 129, 130, 135, 139, 140, 141, 147, 148, 149, 150, 154, 155, 158, 159, 164, 166, 168, 169, 172, 173, 176, 178, 181, 188, 189, 195, 200, 207, 208, 209, 210, 212, 213, 214, 216, 218, 220, 222, 224, 228, 230, 232, 252, 254, 256, 258, 260, 264, 265, 273, 275, 276, 285, 291, 296, 304, 317, 318, 324, 329, 333, 335, 338, 354, 378, 381, 383, 392, 400, 403, 404, 405, 407, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429], "re": [0, 2, 3, 8, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 125, 129, 147, 148, 154, 155, 222, 258, 262, 263, 266, 301, 305, 377, 406, 409, 411, 412, 414, 416, 421, 422, 424, 428, 429], "usabl": [0, 406, 412, 428], "function": [0, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 125, 126, 129, 130, 147, 148, 154, 155, 164, 168, 169, 178, 181, 212, 214, 220, 222, 224, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 269, 270, 271, 272, 274, 276, 277, 280, 281, 283, 286, 288, 293, 294, 295, 296, 298, 300, 301, 303, 304, 305, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 386, 396, 402, 404, 409, 412, 413, 414, 415, 418, 421, 424, 426, 429], "cost": [0, 2, 30, 89, 315, 317, 332, 335, 337, 405, 409, 410, 413, 422, 423, 424, 426], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 102, 104, 105, 107, 109, 110, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 158, 159, 161, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 229, 230, 234, 235, 238, 239, 240, 241, 242, 243, 245, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 272, 274, 278, 280, 281, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 300, 301, 303, 304, 305, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 344, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 374, 386, 389, 391, 396, 397, 398, 399, 400, 402, 404, 406, 409, 410, 411, 413, 415, 416, 418, 421, 422, 423, 424, 425, 426, 428, 429], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 69, 72, 73, 83, 86, 90, 91, 97, 101, 102, 105, 109, 117, 125, 126, 129, 133, 138, 142, 147, 148, 149, 150, 154, 155, 171, 178, 181, 209, 211, 212, 220, 222, 254, 258, 264, 265, 276, 277, 298, 303, 402, 406, 409, 410, 412, 413, 414, 422, 423, 424, 425, 426, 428, 429], "good": [0, 1, 4, 9, 147, 409, 411, 412, 413, 415, 423, 428, 429], "runtim": [0, 2, 3, 23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 424], "perform": [0, 2, 3, 4, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 123, 124, 125, 128, 129, 130, 131, 135, 147, 148, 151, 154, 155, 160, 178, 181, 190, 212, 214, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 266, 269, 270, 271, 274, 275, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 317, 318, 327, 335, 338, 381, 386, 405, 409, 410, 411, 412, 413, 414, 417, 419, 421, 422, 423, 424, 429], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 102, 104, 109, 110, 113, 120, 121, 122, 125, 128, 129, 130, 134, 135, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 207, 209, 220, 222, 236, 254, 258, 276, 277, 293, 294, 295, 318, 324, 329, 333, 340, 370, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "read": [0, 2, 3, 7, 23, 31, 32, 35, 39, 53, 55, 58, 60, 63, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 104, 111, 113, 117, 125, 128, 129, 130, 147, 148, 154, 155, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 193, 194, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 210, 212, 213, 215, 216, 217, 219, 220, 222, 230, 236, 272, 292, 293, 294, 295, 297, 300, 301, 304, 305, 307, 309, 310, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 350, 351, 352, 353, 354, 370, 381, 386, 404, 409, 410, 411, 413, 414, 415, 421, 422, 423, 424, 425, 428, 429], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 23, 406, 409, 414, 417, 421, 425, 429], "beyond": [0, 125, 129, 147, 148, 154, 155, 413], "api": [0, 2, 3, 5, 23, 56, 66, 71, 149, 150, 151, 195, 218, 220, 235, 404, 405, 406, 413, 414, 415, 416, 417, 418, 422, 423, 424, 426, 428, 429], "check": [0, 2, 3, 4, 5, 6, 7, 9, 12, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 79, 81, 93, 94, 100, 109, 125, 126, 128, 129, 130, 141, 147, 148, 154, 155, 160, 172, 173, 184, 189, 196, 209, 211, 214, 222, 224, 245, 254, 258, 292, 297, 298, 301, 302, 303, 304, 305, 318, 329, 340, 370, 401, 404, 405, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "paper": [0, 86, 89, 121, 122, 123, 124, 131, 134, 135, 139, 140, 142, 143, 151, 158, 159, 195, 216, 218, 238, 252, 278, 287, 322, 330, 340, 409, 411, 422, 423], "releas": [0, 4, 7, 10, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "sync": [0, 14, 15, 17, 18, 19, 20, 21, 388, 396, 406, 409], "so": [0, 2, 3, 4, 6, 7, 10, 11, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 139, 140, 147, 148, 154, 155, 209, 212, 220, 222, 235, 306, 307, 409, 411, 412, 416, 419, 422, 423, 424, 429], "make": [0, 2, 3, 4, 7, 11, 27, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 111, 113, 120, 125, 129, 130, 133, 135, 137, 143, 147, 148, 154, 155, 165, 183, 191, 195, 196, 200, 204, 207, 216, 222, 224, 233, 236, 252, 253, 254, 256, 257, 258, 264, 265, 267, 297, 305, 315, 317, 332, 335, 337, 350, 351, 352, 353, 368, 383, 392, 400, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "sure": [0, 3, 4, 7, 88, 111, 129, 133, 200, 297, 400, 404, 409, 411, 412, 413, 416, 422, 423, 424, 426, 428, 429], "alwai": [0, 2, 3, 14, 15, 20, 27, 28, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 71, 74, 83, 92, 93, 94, 100, 125, 129, 147, 148, 154, 155, 189, 190, 220, 222, 325, 333, 404, 405, 410, 411, 412, 413, 422, 423, 424, 426], "enjoi": [0, 2, 3, 89, 417], "latest": [0, 2, 3, 10, 142, 145, 146, 149, 150, 383, 411, 422, 423, 424, 428], "featur": [0, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 50, 56, 66, 71, 72, 87, 102, 109, 110, 125, 129, 138, 147, 148, 149, 150, 152, 153, 154, 155, 169, 172, 185, 189, 193, 209, 210, 215, 220, 224, 233, 237, 238, 248, 249, 252, 253, 254, 256, 257, 258, 259, 264, 267, 268, 305, 312, 315, 317, 332, 335, 337, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 400, 404, 409, 410, 411, 412, 413, 415, 416, 417, 419, 424, 426, 428, 429], "recent": [0, 7, 12, 219, 413, 423, 429], "version": [0, 1, 2, 3, 6, 12, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 54, 56, 57, 60, 61, 66, 75, 76, 77, 78, 86, 91, 109, 125, 128, 129, 130, 131, 142, 143, 147, 148, 149, 151, 154, 155, 158, 159, 219, 220, 222, 229, 233, 254, 258, 266, 273, 295, 315, 317, 332, 333, 335, 337, 338, 350, 353, 403, 404, 405, 409, 411, 412, 413, 414, 416, 419, 422, 423, 424, 425, 429], "although": [0, 1, 3, 8, 27, 38, 56, 57, 61, 66, 74, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 406, 409, 410, 417, 426], "core": [0, 2, 3, 8, 406, 412, 415, 428], "guarante": [0, 2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 125, 129, 147, 148, 154, 155, 212, 220, 222, 417], "backward": [0, 8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 147, 148, 154, 155, 220, 222, 252, 253, 256, 257, 275, 315, 316, 318, 319, 323, 324, 331, 335, 336, 337, 338, 340, 341, 409, 411, 412, 413, 416, 417, 419, 422, 423, 424], "compat": [0, 2, 3, 7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 61, 66, 85, 104, 107, 109, 110, 111, 115, 125, 129, 131, 144, 147, 148, 154, 155, 172, 207, 216, 220, 222, 252, 253, 254, 256, 257, 258, 302, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 344, 409, 412, 426], "2": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 125, 126, 129, 134, 135, 138, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 168, 169, 171, 173, 176, 178, 179, 180, 181, 189, 191, 193, 195, 197, 200, 203, 207, 208, 209, 212, 213, 214, 216, 218, 220, 222, 227, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 269, 274, 275, 276, 277, 285, 288, 296, 297, 298, 300, 304, 308, 309, 315, 316, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 349, 350, 351, 352, 353, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 404, 405, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 423, 424, 426, 427, 428, 429], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 117, 121, 122, 125, 128, 129, 131, 132, 134, 135, 141, 142, 143, 145, 146, 147, 148, 151, 152, 153, 154, 155, 165, 166, 168, 170, 172, 173, 175, 176, 177, 179, 180, 189, 190, 191, 195, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 269, 272, 275, 276, 277, 280, 281, 284, 285, 286, 288, 292, 296, 298, 303, 304, 307, 308, 311, 312, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 378, 384, 396, 400, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 53, 56, 58, 66, 67, 68, 85, 87, 88, 89, 90, 91, 129, 147, 154, 195, 198, 213, 218, 318, 321, 333, 405, 406, 409, 410, 411, 412, 415, 417, 426, 428, 429], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 234, 235, 236, 246, 247, 250, 254, 258, 260, 261, 264, 265, 276, 277, 278, 279, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 368, 369, 378, 381, 382, 383, 385, 386, 402, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 429], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 56, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 189, 197, 212, 293, 294, 295, 304, 323, 331, 340, 402, 409, 422, 424, 428], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 104, 112, 118, 125, 129, 147, 148, 154, 155, 156, 164, 195, 218, 222, 261, 372, 377, 386, 406, 410, 413, 419, 422], "root": [0, 2, 3, 31, 32, 39, 41, 53, 58, 63, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 147, 172, 210, 229, 254, 255, 258, 285, 286, 412, 414, 422, 423, 424, 425, 426, 429], "http": [0, 2, 5, 6, 7, 10, 14, 15, 18, 19, 20, 24, 53, 69, 83, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 123, 124, 131, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 156, 157, 158, 159, 172, 195, 216, 233, 239, 240, 241, 242, 243, 244, 247, 248, 249, 256, 261, 262, 263, 268, 270, 271, 275, 276, 277, 278, 280, 281, 287, 298, 315, 316, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 350, 355, 363, 401, 420, 425, 428], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 83, 86, 87, 89, 121, 122, 123, 124, 128, 131, 134, 135, 139, 140, 142, 143, 145, 146, 149, 150, 151, 156, 157, 158, 159, 169, 216, 233, 415, 419, 422, 423, 428], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 24, 86, 89, 90, 121, 122, 123, 124, 131, 133, 134, 135, 139, 140, 142, 143, 145, 146, 149, 150, 151, 156, 157, 158, 159, 233, 425, 428], "setup": [0, 7, 121, 122, 133, 134, 135, 156], "py": [0, 3, 24, 128, 130, 164, 245, 278, 287, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "develop": [0, 3, 4, 7, 133, 409, 428], "A": [0, 1, 2, 3, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 111, 115, 116, 117, 118, 119, 125, 127, 129, 131, 132, 147, 148, 151, 154, 155, 162, 165, 167, 168, 169, 171, 175, 180, 186, 189, 195, 196, 198, 205, 209, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 229, 231, 232, 234, 236, 237, 238, 247, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 275, 288, 296, 297, 298, 300, 301, 302, 305, 307, 308, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 344, 348, 350, 351, 352, 353, 354, 356, 368, 371, 372, 375, 377, 380, 386, 388, 396, 405, 408, 409, 411, 413, 415, 416, 417, 420, 424, 427, 429], "seri": [0, 2, 3, 7, 8, 50, 95, 105, 115, 116, 119, 120, 154, 190, 213, 370, 404, 405, 409, 410, 411, 418, 419, 422, 423, 426, 429], "quick": [0, 83, 413], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 30, 60, 85, 91, 125, 129, 147, 148, 154, 155, 168, 171, 210, 213, 222, 233, 335, 403, 404, 405, 409, 410, 411, 412, 415, 419, 422, 423, 424, 426, 428, 429], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 105, 107, 108, 109, 110, 115, 117, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 161, 165, 168, 169, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 185, 189, 190, 191, 195, 196, 199, 200, 203, 204, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 229, 230, 232, 236, 237, 238, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 276, 277, 288, 292, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 327, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 364, 365, 366, 367, 368, 374, 377, 382, 383, 386, 388, 390, 396, 400, 403, 405, 409, 410, 411, 412, 413, 414, 416, 418, 419, 421, 422, 423, 424, 426, 428, 429], "hurri": [0, 414], "last": [0, 1, 2, 3, 4, 12, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 62, 63, 71, 74, 75, 76, 77, 78, 85, 108, 109, 110, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 142, 143, 147, 148, 151, 154, 155, 165, 168, 171, 185, 191, 196, 208, 210, 211, 231, 232, 237, 238, 250, 252, 254, 256, 258, 259, 262, 263, 270, 282, 285, 288, 296, 300, 305, 318, 350, 352, 353, 410, 411, 412, 413, 414, 415, 422, 423, 424, 425, 426, 428, 429], "item": [0, 2, 8, 14, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 108, 115, 165, 184, 262, 263, 319, 320, 322, 378, 405, 406, 409, 411, 412, 416, 417, 422, 423, 424, 426], "navig": [0, 423], "previou": [0, 3, 4, 10, 46, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 209, 222, 230, 252, 256, 281, 296, 411, 412, 413, 414, 415, 419, 424, 429], "whenev": [0, 1, 2, 3, 23, 46, 53, 56, 58, 66, 67, 68, 83, 89, 101, 102, 109, 110, 123, 124, 128, 130, 131, 139, 140, 151, 158, 159, 164, 188, 214, 219, 333, 350, 351, 352, 353, 368, 388, 404, 418, 426], "want": [0, 2, 3, 6, 7, 8, 56, 66, 110, 191, 275, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 404, 409, 410, 411, 412, 413, 414, 416, 417, 418, 422, 423, 424, 425, 426, 428, 429], "ted": [0, 35, 47, 64, 65, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 402, 408, 420, 427], "s": [0, 1, 2, 3, 6, 7, 8, 11, 27, 31, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 110, 115, 121, 122, 125, 129, 133, 134, 135, 139, 140, 142, 147, 148, 149, 150, 154, 155, 158, 159, 172, 176, 195, 207, 209, 211, 212, 213, 214, 216, 218, 220, 222, 224, 231, 232, 235, 237, 238, 245, 250, 254, 258, 263, 264, 265, 268, 275, 278, 285, 287, 293, 295, 298, 300, 301, 304, 305, 308, 316, 318, 323, 329, 331, 333, 338, 340, 350, 351, 352, 353, 354, 368, 404, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], "modul": [0, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 115, 121, 122, 125, 129, 138, 141, 144, 147, 148, 154, 155, 164, 171, 176, 180, 182, 189, 195, 196, 208, 209, 212, 213, 214, 216, 218, 220, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 346, 348, 350, 351, 352, 353, 354, 368, 386, 393, 396, 402, 405, 406, 408, 410, 411, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427], "optim": [0, 1, 2, 8, 27, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 147, 148, 154, 155, 212, 214, 222, 234, 261, 267, 268, 275, 285, 316, 318, 333, 334, 335, 338, 345, 381, 382, 386, 396, 405, 406, 408, 411, 412, 413, 414, 415, 417, 420, 422, 423, 424, 427], "collect": [0, 1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 41, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 125, 129, 147, 148, 151, 154, 155, 169, 172, 191, 195, 218, 224, 276, 277, 300, 316, 319, 322, 324, 336, 338, 340, 341, 370, 378, 383, 386, 388, 389, 390, 396, 406, 408, 409, 412, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429], "storag": [0, 1, 8, 27, 35, 38, 41, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 70, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 108, 109, 110, 112, 113, 114, 115, 117, 118, 125, 127, 129, 147, 148, 154, 155, 171, 172, 178, 181, 200, 222, 402, 406, 408, 410, 411, 412, 413, 414, 416, 419, 420, 422, 423, 425, 427], "log": [0, 3, 4, 8, 11, 60, 245, 246, 247, 262, 263, 272, 285, 286, 297, 298, 301, 305, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 341, 348, 377, 380, 381, 386, 396, 404, 405, 406, 408, 409, 410, 411, 414, 415, 419, 420, 422, 423, 424, 427, 428], "your": [0, 2, 3, 7, 8, 10, 11, 14, 15, 18, 27, 38, 46, 56, 57, 61, 66, 125, 129, 133, 138, 147, 148, 149, 150, 154, 155, 220, 222, 400, 403, 404, 405, 408, 410, 411, 412, 414, 415, 416, 417, 418, 420, 422, 423, 426, 427, 428], "own": [0, 1, 3, 14, 15, 17, 22, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 149, 150, 154, 155, 222, 370, 408, 410, 411, 414, 420, 422, 423, 424, 427], "train": [0, 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 72, 73, 83, 86, 92, 125, 129, 139, 140, 147, 148, 149, 150, 154, 155, 178, 186, 195, 208, 214, 216, 218, 222, 224, 231, 232, 233, 235, 240, 242, 250, 254, 258, 276, 277, 315, 316, 317, 318, 319, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 350, 386, 388, 396, 402, 404, 406, 408, 410, 414, 417, 418, 420, 425, 426, 427, 428, 429], "loop": [0, 8, 52, 54, 59, 73, 125, 129, 147, 148, 154, 155, 229, 231, 232, 250, 275, 276, 277, 335, 386, 405, 406, 408, 409, 410, 414, 416, 417, 418, 420, 421, 426, 427, 428], "ppo": [0, 4, 8, 301, 305, 317, 332, 335, 402, 404, 408, 409, 410, 413, 415, 416, 420, 422, 427], "pendulum": [0, 3, 14, 15, 16, 17, 21, 22, 115, 123, 124, 125, 126, 128, 129, 130, 142, 147, 148, 154, 155, 172, 175, 176, 183, 188, 189, 191, 198, 200, 204, 205, 207, 209, 210, 212, 213, 214, 220, 222, 236, 254, 258, 396, 404, 408, 410, 411, 414, 415, 416, 420, 427, 428, 429], "introduct": [0, 405, 408, 414, 420, 422, 423, 427, 429], "multi": [0, 1, 7, 9, 27, 38, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 93, 94, 100, 125, 129, 139, 140, 147, 148, 152, 153, 154, 155, 214, 222, 252, 254, 256, 258, 259, 264, 265, 266, 300, 348, 350, 351, 352, 353, 402, 408, 409, 410, 411, 412, 414, 415, 420, 424, 427, 428], "agent": [0, 9, 62, 63, 138, 139, 140, 145, 146, 149, 150, 152, 153, 156, 157, 158, 159, 160, 207, 208, 262, 263, 264, 265, 266, 268, 278, 287, 348, 402, 408, 414, 420, 424, 427], "env": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 35, 38, 41, 46, 56, 57, 60, 61, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 254, 258, 260, 261, 300, 304, 333, 368, 369, 370, 390, 391, 392, 396, 398, 399, 400, 402, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 191, 195, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 224, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 272, 274, 275, 276, 277, 278, 279, 285, 286, 287, 288, 291, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 363, 368, 370, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 396, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 429], "pretrain": [0, 408, 420, 427], "recurr": [0, 2, 171, 252, 253, 254, 256, 258, 281, 291, 408, 410, 415, 420, 426, 427], "dqn": [0, 2, 83, 165, 182, 238, 247, 297, 298, 315, 316, 318, 319, 320, 322, 324, 325, 326, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 348, 393, 402, 404, 408, 413, 415, 416, 419, 420, 427], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 35, 46, 64, 121, 122, 125, 129, 141, 147, 148, 154, 155, 180, 189, 208, 223, 228, 231, 232, 235, 236, 247, 250, 254, 258, 264, 265, 268, 276, 277, 279, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 315, 316, 317, 318, 319, 323, 324, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 381, 388, 391, 392, 396, 398, 399, 402, 404, 405, 406, 408, 410, 414, 416, 417, 420, 425, 426, 427, 428, 429], "replai": [0, 8, 16, 46, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 115, 116, 120, 171, 172, 180, 196, 200, 209, 222, 318, 319, 320, 322, 323, 324, 331, 336, 338, 340, 341, 383, 386, 394, 396, 402, 406, 408, 413, 420, 424, 425, 427], "buffer": [0, 3, 4, 8, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 120, 125, 129, 141, 147, 148, 154, 155, 171, 172, 176, 180, 195, 196, 200, 209, 212, 213, 214, 216, 218, 222, 231, 232, 276, 277, 296, 304, 307, 318, 319, 320, 322, 323, 324, 331, 336, 338, 340, 341, 350, 351, 352, 353, 354, 383, 386, 394, 396, 402, 406, 408, 413, 418, 420, 424, 425, 427, 429], "export": [0, 6, 7, 408, 420, 427], "competit": [0, 3, 139, 140, 408, 420, 423, 427], "ddpg": [0, 240, 241, 242, 243, 319, 330, 339, 402, 404, 408, 410, 416, 420, 423, 427], "task": [0, 2, 3, 9, 60, 62, 63, 72, 86, 89, 123, 124, 125, 129, 132, 139, 140, 147, 148, 149, 150, 151, 154, 155, 158, 159, 195, 207, 214, 216, 218, 323, 331, 408, 409, 410, 411, 412, 414, 415, 420, 422, 423, 424, 427, 429], "specif": [0, 1, 2, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 125, 129, 145, 146, 147, 148, 154, 155, 158, 209, 244, 254, 258, 296, 315, 333, 335, 337, 370, 386, 402, 405, 406, 408, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 426, 427, 428], "object": [0, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 38, 46, 48, 52, 54, 56, 57, 59, 61, 66, 71, 72, 73, 96, 97, 98, 104, 107, 111, 113, 117, 120, 125, 129, 134, 147, 148, 154, 155, 165, 178, 181, 182, 191, 195, 212, 213, 214, 216, 220, 222, 223, 254, 258, 261, 264, 265, 278, 285, 287, 292, 293, 301, 304, 305, 306, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 390, 391, 392, 395, 396, 400, 402, 404, 406, 408, 410, 411, 412, 413, 417, 419, 420, 422, 423, 424, 426, 427, 429], "loss": [0, 3, 8, 54, 182, 275, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 348, 349, 350, 382, 386, 393, 396, 405, 406, 408, 413, 414, 416, 417, 418, 420, 424, 426, 427], "trainer": [0, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 408, 409, 420, 427], "exampl": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 188, 189, 191, 193, 195, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 223, 227, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 263, 264, 265, 266, 269, 272, 274, 275, 276, 277, 278, 279, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 343, 348, 350, 351, 352, 353, 356, 368, 370, 378, 379, 380, 382, 383, 384, 385, 388, 396, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429], "packag": [0, 6, 7, 10, 164, 402, 403, 413, 429], "batch": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 31, 46, 50, 52, 53, 54, 55, 58, 59, 60, 67, 68, 69, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 141, 142, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 169, 172, 176, 185, 191, 193, 196, 200, 209, 213, 214, 215, 219, 220, 222, 230, 233, 245, 252, 253, 254, 256, 257, 258, 262, 263, 264, 265, 266, 267, 272, 276, 277, 278, 284, 288, 291, 300, 304, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 378, 383, 384, 385, 386, 388, 398, 399, 400, 402, 404, 405, 406, 410, 411, 412, 413, 414, 417, 419, 421, 422, 423, 425, 428, 429], "size": [0, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 108, 109, 110, 111, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 169, 171, 173, 176, 177, 178, 181, 182, 183, 185, 193, 195, 197, 198, 200, 204, 206, 207, 209, 211, 213, 214, 215, 218, 220, 222, 227, 229, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 370, 378, 383, 402, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 428, 429], "copi": [0, 2, 3, 12, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 96, 125, 129, 147, 148, 154, 155, 168, 198, 208, 212, 214, 220, 222, 229, 254, 258, 266, 296, 318, 333, 338, 368, 402, 405, 409, 410, 412, 414, 422, 426, 428], "interoper": [0, 14, 15, 402], "singl": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 36, 38, 39, 41, 44, 46, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 125, 128, 129, 139, 140, 147, 148, 154, 155, 158, 159, 165, 172, 173, 195, 200, 212, 214, 218, 222, 237, 238, 252, 253, 254, 256, 257, 258, 259, 265, 303, 307, 316, 317, 318, 320, 322, 324, 325, 331, 332, 335, 336, 338, 340, 341, 345, 350, 351, 352, 353, 359, 360, 361, 362, 364, 365, 366, 367, 368, 400, 402, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428], "node": [0, 2, 18, 19, 20, 21, 22, 31, 32, 39, 41, 52, 54, 59, 63, 73, 91, 212, 402, 417, 428], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 58, 67, 68, 104, 149, 150, 189, 191, 231, 232, 234, 245, 246, 247, 248, 255, 261, 262, 263, 269, 272, 273, 274, 275, 280, 281, 284, 285, 286, 296, 297, 298, 301, 305, 306, 315, 316, 317, 318, 323, 324, 325, 331, 332, 335, 336, 337, 338, 340, 341, 402, 406, 410, 411, 413, 415, 417, 422, 423, 424, 428, 429], "helper": [0, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 409, 410, 412, 422, 424], "compos": [0, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 104, 105, 106, 115, 116, 125, 129, 147, 148, 154, 155, 172, 199, 212, 213, 214, 220, 222, 299, 300, 318, 327, 338, 370, 402, 409, 410, 411, 412, 413, 417, 421, 423, 424, 426, 428, 429], "episod": [0, 3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 125, 129, 147, 148, 154, 155, 168, 200, 203, 208, 229, 234, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 402, 410, 414, 419, 422, 423, 426], "format": [0, 3, 27, 35, 38, 44, 45, 46, 47, 50, 51, 56, 57, 61, 64, 65, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 107, 115, 125, 129, 147, 148, 149, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 370, 402, 409, 410, 413, 414, 416, 418, 428, 429], "tensorspec": [0, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 125, 129, 141, 147, 148, 154, 155, 158, 159, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 230, 231, 232, 250, 276, 277, 281, 292, 296, 297, 298, 301, 302, 303, 304, 305, 306, 308, 316, 318, 320, 323, 324, 336, 338, 340, 341, 348, 402, 424], "tree": [0, 1, 41, 52, 54, 59, 125, 129, 147, 148, 154, 155, 402, 422, 426], "forest": [0, 41, 402], "human": [0, 24, 87, 402, 424], "feedback": [0, 402, 419, 428], "rlhf": [0, 60, 72, 92, 189, 402, 404], "envbas": [0, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 126, 129, 147, 148, 154, 155, 166, 169, 178, 181, 190, 197, 198, 213, 214, 220, 222, 224, 234, 254, 258, 260, 261, 381, 390, 391, 392, 396, 398, 399, 400, 402, 414], "gymlikeenv": [0, 128, 130, 402], "envmetadata": [0, 402], "vector": [0, 1, 8, 25, 50, 121, 122, 130, 134, 135, 138, 149, 150, 151, 158, 159, 180, 219, 240, 242, 252, 253, 256, 257, 259, 350, 353, 363, 364, 365, 366, 367, 402, 404, 405, 409, 410, 412, 421, 422, 423, 424, 425, 429], "custom": [0, 2, 5, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 216, 222, 264, 265, 308, 325, 335, 342, 400, 402, 404, 409, 410, 411, 412, 415, 416, 418, 422, 423], "nativ": [0, 1, 7, 9, 87, 125, 129, 147, 148, 154, 155, 172, 370, 402, 412, 426], "auto": [0, 97, 117, 167, 168, 219, 276, 277, 316, 318, 324, 334, 336, 338, 340, 341, 402, 405, 422, 423], "reset": [0, 1, 2, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 167, 168, 169, 172, 182, 185, 188, 190, 195, 203, 207, 208, 209, 210, 212, 213, 214, 216, 219, 220, 222, 224, 230, 236, 252, 254, 258, 266, 276, 277, 290, 300, 333, 369, 402, 405, 409, 410, 411, 412, 414, 417, 421, 422, 423, 428], "dynam": [0, 2, 7, 14, 15, 16, 86, 89, 91, 125, 147, 154, 222, 323, 331, 402, 411, 414, 424], "spec": [0, 1, 2, 14, 15, 16, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 79, 80, 81, 85, 121, 122, 125, 127, 128, 129, 130, 131, 134, 135, 141, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 227, 229, 230, 231, 232, 247, 250, 254, 258, 276, 277, 279, 281, 292, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 402, 404, 409, 410, 411, 412, 413, 414, 415, 419, 421, 422, 423, 428], "mask": [0, 1, 4, 23, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 149, 150, 155, 166, 196, 222, 235, 236, 247, 250, 262, 263, 279, 296, 297, 298, 302, 303, 324, 338, 383, 402, 410, 412, 413, 429], "action": [0, 2, 8, 9, 14, 15, 16, 17, 21, 35, 41, 50, 60, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 165, 166, 169, 175, 178, 180, 181, 182, 183, 186, 189, 190, 193, 197, 198, 200, 204, 207, 209, 214, 219, 223, 227, 229, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 254, 258, 259, 260, 261, 262, 263, 264, 274, 276, 277, 278, 279, 281, 284, 285, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 396, 400, 402, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 428, 429], "record": [0, 2, 11, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 162, 165, 189, 222, 335, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 396, 402, 410, 411, 415, 419, 422], "domain": [0, 2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 180, 209, 227, 292, 297, 298, 301, 302, 303, 304, 305, 306, 307, 312, 402, 411, 412, 415, 416, 422, 423, 424, 428, 429], "actor": [0, 3, 4, 21, 189, 223, 234, 239, 240, 242, 247, 248, 250, 261, 274, 276, 277, 279, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 348, 402, 405, 410, 412, 413, 414, 416, 419, 422, 425, 428], "explor": [0, 1, 221, 231, 232, 235, 250, 268, 276, 277, 292, 297, 298, 301, 302, 303, 304, 305, 315, 333, 381, 391, 392, 396, 402, 411, 412, 413, 414, 416, 417, 419, 422, 423, 424], "valu": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 125, 129, 138, 147, 148, 154, 155, 164, 165, 168, 170, 172, 173, 175, 178, 179, 180, 181, 182, 190, 191, 195, 196, 199, 200, 201, 203, 205, 209, 210, 213, 214, 218, 220, 222, 227, 230, 231, 232, 233, 236, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 272, 276, 277, 278, 279, 284, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 380, 381, 382, 383, 386, 396, 402, 406, 410, 413, 416, 417, 418, 421, 422, 423, 424, 426, 428, 429], "gener": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 56, 58, 60, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 106, 108, 125, 126, 129, 139, 140, 141, 144, 147, 148, 149, 150, 152, 153, 154, 155, 169, 176, 178, 179, 183, 189, 191, 197, 198, 203, 204, 207, 209, 213, 219, 222, 230, 235, 236, 245, 254, 258, 262, 263, 272, 292, 301, 305, 309, 310, 329, 336, 343, 350, 355, 363, 373, 386, 402, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "hook": [0, 2, 27, 35, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 118, 125, 129, 147, 148, 154, 155, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 279, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 402], "planner": [0, 234, 261, 402], "torch": [0, 1, 2, 3, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 105, 108, 109, 110, 115, 116, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 173, 176, 178, 179, 180, 181, 182, 183, 189, 191, 193, 195, 197, 198, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 216, 218, 220, 222, 223, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 284, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 313, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 355, 356, 360, 362, 363, 365, 367, 368, 372, 378, 384, 385, 396, 402, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "vmap": [0, 252, 253, 256, 257, 266, 288, 304, 307, 333, 402, 404], "random": [0, 1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 60, 62, 63, 71, 74, 75, 76, 77, 78, 89, 91, 103, 115, 125, 129, 141, 147, 148, 154, 155, 165, 180, 190, 191, 209, 223, 224, 236, 250, 252, 254, 256, 258, 301, 304, 305, 312, 316, 333, 336, 381, 390, 402, 404, 409, 410, 411, 412, 413, 414, 415, 417, 424, 425, 426, 428, 429], "sac": [0, 324, 336, 338, 402], "redq": [0, 336, 402], "crossq": [0, 318, 402], "iql": [0, 323, 331, 402, 409, 422, 423], "cql": [0, 316, 322, 402], "gail": [0, 329, 402], "dt": [0, 148, 276, 277, 402, 424], "td3": [0, 340, 341, 402], "bc": [0, 5, 340, 402], "a2c": [0, 315, 402], "dreamer": [0, 162, 163, 248, 326, 327, 328, 402, 404], "checkpoint": [0, 58, 94, 96, 99, 111, 112, 114, 118, 402, 425, 426], "builder": [0, 402, 410, 429], "logger": [0, 3, 11, 368, 370, 372, 373, 374, 375, 376, 377, 386, 396, 400, 402, 410, 422], "_util": [0, 3, 12, 402, 413, 419], "implement_for": [0, 3, 402], "thing": [0, 3, 7, 8, 125, 129, 147, 148, 154, 155, 264, 265, 324, 338, 403, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 426, 429], "consid": [0, 1, 2, 3, 8, 20, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 96, 97, 109, 117, 125, 129, 147, 148, 154, 155, 180, 220, 222, 245, 264, 265, 284, 316, 318, 331, 336, 338, 340, 341, 350, 352, 353, 403, 409, 414, 415, 416, 424, 426], "when": [0, 1, 2, 3, 5, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 113, 117, 125, 126, 128, 129, 130, 135, 138, 139, 140, 142, 144, 147, 148, 149, 150, 154, 155, 158, 159, 166, 168, 171, 172, 176, 178, 180, 181, 189, 190, 191, 195, 196, 203, 209, 212, 213, 214, 216, 218, 219, 220, 222, 228, 229, 233, 234, 245, 247, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 275, 279, 285, 300, 301, 304, 305, 307, 311, 316, 317, 318, 320, 324, 325, 331, 332, 333, 335, 336, 338, 340, 341, 342, 348, 349, 350, 351, 352, 353, 368, 369, 370, 372, 383, 400, 403, 404, 405, 406, 409, 410, 411, 412, 413, 415, 417, 418, 422, 423, 424, 425, 426, 428, 429], "debug": [0, 6, 8, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 403, 429], "work": [0, 1, 2, 3, 4, 8, 12, 27, 38, 46, 56, 57, 58, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 102, 107, 109, 110, 113, 120, 125, 128, 129, 130, 133, 147, 148, 151, 154, 155, 173, 189, 195, 212, 216, 219, 220, 222, 229, 237, 238, 259, 298, 303, 308, 317, 332, 335, 386, 403, 404, 409, 410, 411, 412, 414, 417, 421, 422, 423, 424, 425, 426, 428, 429], "habitat": [0, 3, 131, 403, 425], "lab": [0, 3, 123, 124, 131, 403], "mujoco": [0, 6, 8, 151, 403, 409, 411, 412], "error": [0, 1, 3, 7, 10, 12, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 73, 96, 125, 129, 147, 148, 154, 155, 156, 160, 196, 212, 222, 224, 333, 403, 405, 409, 411, 422, 423, 429], "solut": [0, 2, 3, 6, 7, 9, 21, 109, 403, 404, 406, 413, 428], "resourc": [0, 1, 21, 131, 403, 409, 411, 413, 422, 423], "issu": [0, 3, 4, 5, 8, 83, 87, 94, 96, 97, 109, 117, 128, 133, 172, 196, 210, 229, 292, 297, 298, 301, 302, 303, 304, 305, 403, 428], "customis": [0, 403, 410, 418], "video": [0, 4, 9, 370, 372, 381, 400, 402, 403, 419, 422, 423], "render": [0, 3, 8, 135, 158, 368, 370, 381, 403, 409, 410, 411, 413, 414, 418], "index": [0, 3, 7, 8, 10, 16, 25, 26, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 101, 102, 104, 105, 107, 109, 113, 115, 116, 117, 119, 120, 125, 129, 139, 140, 145, 146, 147, 148, 154, 155, 158, 159, 167, 172, 176, 180, 214, 229, 262, 263, 402, 414, 421, 422, 423, 426, 428], "search": [0, 2, 31, 32, 39, 63, 144, 230, 410], "page": [0, 7, 24, 377, 416], "somewhat": [1, 2, 405, 415, 429], "equival": [1, 3, 25, 26, 27, 30, 31, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 121, 122, 125, 128, 129, 130, 131, 134, 135, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 169, 179, 182, 214, 222, 247, 256, 259, 279, 297, 298, 302, 303, 335, 383, 417, 428, 429], "dataload": [1, 92, 108, 110, 410, 417, 426], "except": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 125, 129, 147, 148, 154, 155, 172, 184, 200, 208, 209, 210, 212, 214, 222, 231, 232, 250, 252, 254, 256, 258, 272, 276, 277, 315, 318, 333, 335, 338, 370, 404, 410, 414, 422, 426, 428, 429], "1": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 186, 189, 191, 193, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 222, 223, 227, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 307, 308, 309, 311, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 364, 365, 367, 368, 370, 378, 381, 383, 384, 396, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "thei": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 125, 128, 129, 130, 138, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 168, 171, 184, 189, 195, 204, 213, 214, 218, 222, 258, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 383, 386, 404, 405, 406, 409, 410, 411, 412, 413, 416, 421, 422, 423, 424, 425, 426, 428, 429], "over": [1, 2, 3, 4, 8, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 82, 83, 89, 102, 104, 108, 109, 125, 129, 139, 140, 147, 148, 154, 155, 165, 180, 191, 203, 210, 222, 229, 272, 275, 285, 288, 307, 325, 327, 333, 356, 368, 389, 404, 406, 409, 410, 411, 413, 414, 415, 416, 417, 422, 423, 424, 429], "non": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 38, 39, 40, 46, 48, 49, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 89, 98, 125, 129, 147, 148, 149, 150, 154, 155, 169, 170, 176, 185, 195, 209, 213, 214, 215, 216, 218, 222, 229, 236, 252, 254, 256, 258, 264, 304, 305, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 404, 409, 412, 413, 422, 423, 424, 426, 429], "static": [1, 12, 56, 60, 66, 72, 102, 109, 110, 131, 148, 220, 331, 414, 424, 426], "like": [1, 2, 3, 4, 7, 11, 21, 27, 31, 32, 38, 39, 41, 46, 48, 53, 56, 57, 58, 61, 63, 66, 67, 68, 72, 98, 104, 110, 125, 126, 129, 131, 138, 147, 148, 149, 150, 154, 155, 182, 209, 211, 222, 224, 252, 256, 265, 299, 315, 317, 332, 335, 336, 337, 404, 405, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "being": [1, 2, 3, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 62, 66, 92, 115, 118, 125, 128, 129, 130, 131, 135, 147, 148, 151, 154, 155, 171, 178, 180, 181, 190, 198, 209, 212, 214, 222, 228, 250, 254, 258, 276, 277, 317, 318, 332, 333, 335, 338, 370, 383, 388, 398, 399, 400, 404, 409, 410, 411, 412, 417, 422, 423, 424, 426], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 58, 61, 66, 74, 86, 87, 90, 91, 92, 125, 129, 141, 147, 148, 154, 155, 167, 172, 176, 185, 195, 203, 209, 212, 213, 214, 215, 216, 218, 222, 259, 288, 304, 305, 306, 318, 338, 370, 406, 411, 413, 414, 418, 426, 428, 429], "two": [1, 2, 3, 4, 8, 10, 27, 38, 41, 42, 43, 44, 45, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 89, 104, 108, 109, 110, 125, 129, 147, 148, 154, 155, 169, 191, 195, 212, 218, 222, 243, 252, 254, 256, 258, 264, 265, 282, 285, 305, 332, 340, 344, 381, 386, 405, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 426, 428, 429], "main": [1, 2, 3, 5, 14, 15, 20, 22, 23, 91, 126, 305, 386, 404, 405, 409, 410, 421, 428, 429], "argument": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 108, 109, 110, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 168, 169, 173, 175, 176, 179, 195, 203, 204, 207, 209, 211, 212, 213, 214, 215, 216, 218, 222, 229, 231, 232, 233, 236, 237, 238, 250, 252, 254, 256, 258, 259, 262, 263, 264, 265, 267, 276, 277, 288, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 343, 348, 350, 351, 352, 353, 354, 358, 368, 369, 370, 377, 380, 386, 389, 396, 397, 400, 409, 410, 411, 412, 413, 414, 415, 417, 422, 423, 424, 426, 428, 429], "list": [1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 107, 108, 109, 110, 111, 113, 123, 124, 125, 128, 129, 130, 131, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 170, 171, 175, 178, 179, 181, 189, 191, 193, 195, 203, 205, 211, 212, 214, 215, 216, 218, 220, 222, 229, 236, 237, 238, 240, 246, 249, 254, 258, 259, 262, 263, 270, 279, 298, 300, 302, 303, 305, 307, 308, 309, 316, 318, 331, 333, 336, 338, 340, 341, 347, 350, 353, 368, 369, 381, 383, 398, 399, 405, 409, 411, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429], "constructor": [1, 2, 16, 18, 19, 20, 21, 58, 72, 89, 101, 115, 125, 129, 142, 147, 148, 154, 155, 158, 168, 212, 213, 237, 238, 259, 291, 301, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 397, 400, 404, 409, 410, 411, 414, 417, 422, 423, 426, 428], "iter": [1, 2, 3, 12, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 108, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 183, 191, 204, 222, 233, 235, 236, 237, 238, 259, 264, 265, 283, 292, 297, 301, 302, 304, 306, 307, 309, 333, 347, 381, 385, 386, 405, 406, 409, 411, 412, 417, 419, 422, 423, 424], "execut": [1, 2, 3, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 121, 122, 125, 126, 129, 130, 131, 133, 134, 135, 141, 142, 147, 148, 151, 154, 155, 156, 166, 214, 222, 250, 252, 254, 256, 258, 266, 291, 300, 306, 307, 333, 340, 390, 400, 404, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 426, 427, 428, 429], "step": [1, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 41, 46, 60, 83, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 166, 171, 185, 188, 191, 207, 208, 209, 210, 212, 214, 219, 222, 229, 230, 231, 232, 233, 234, 248, 250, 252, 254, 256, 258, 260, 261, 275, 276, 277, 300, 301, 305, 315, 326, 335, 349, 350, 351, 352, 353, 356, 357, 358, 369, 372, 378, 381, 386, 406, 410, 412, 413, 415, 416, 418, 419, 421, 424, 425, 428], "queri": [1, 2, 3, 14, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 195, 213, 216, 220, 222, 307, 405, 409, 416, 424, 428], "defin": [1, 2, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 89, 125, 129, 147, 148, 154, 155, 196, 208, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 266, 269, 270, 271, 274, 275, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 312, 320, 322, 333, 350, 351, 352, 353, 354, 369, 397, 404, 409, 410, 412, 416, 419, 424, 426, 429], "number": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 107, 109, 110, 117, 121, 122, 125, 128, 129, 130, 134, 135, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 158, 159, 165, 171, 172, 180, 186, 190, 191, 202, 207, 210, 212, 214, 220, 222, 231, 232, 233, 234, 237, 238, 245, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 269, 270, 271, 276, 277, 278, 280, 281, 284, 285, 286, 287, 292, 296, 300, 301, 304, 305, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 378, 380, 381, 386, 388, 389, 390, 398, 399, 400, 404, 405, 409, 410, 411, 412, 414, 415, 417, 419, 422, 423, 424, 425, 426, 429], "befor": [1, 2, 3, 4, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 88, 108, 110, 115, 125, 129, 130, 147, 148, 154, 155, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 224, 235, 252, 254, 258, 259, 267, 268, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 351, 352, 353, 383, 409, 411, 412, 413, 417, 418, 422, 423, 424, 426, 429], "deliv": [1, 2, 3, 16, 89, 409, 410, 414, 417, 428], "stack": [1, 2, 3, 7, 8, 14, 15, 16, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 125, 128, 129, 130, 138, 147, 148, 149, 150, 154, 155, 220, 252, 254, 256, 257, 258, 300, 306, 307, 316, 318, 331, 336, 338, 340, 341, 369, 378, 402, 410, 413, 414, 421, 422, 424, 428], "user": [1, 2, 3, 5, 8, 23, 27, 38, 46, 56, 57, 61, 66, 83, 85, 89, 91, 102, 110, 125, 129, 147, 148, 154, 155, 156, 173, 208, 212, 214, 222, 224, 244, 318, 335, 338, 340, 370, 397, 405, 406, 409, 410, 414, 416, 417, 424, 428, 429], "reach": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 60, 108, 125, 129, 135, 139, 140, 147, 148, 154, 155, 158, 159, 207, 231, 232, 250, 276, 277, 409, 411, 419, 422, 423, 428, 429], "done": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 63, 64, 66, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 104, 109, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 172, 178, 179, 181, 182, 183, 190, 191, 193, 197, 198, 200, 202, 204, 207, 209, 210, 212, 213, 214, 220, 222, 229, 230, 234, 252, 254, 258, 261, 285, 300, 315, 316, 317, 318, 319, 320, 322, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 404, 405, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "state": [1, 2, 3, 4, 14, 15, 16, 17, 27, 35, 38, 41, 46, 53, 56, 57, 58, 60, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 104, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 171, 172, 173, 175, 182, 191, 198, 207, 208, 212, 213, 214, 220, 222, 224, 229, 230, 234, 239, 244, 248, 252, 253, 254, 256, 257, 258, 259, 261, 266, 270, 274, 278, 280, 281, 287, 291, 293, 300, 304, 310, 315, 317, 318, 322, 324, 332, 333, 335, 336, 337, 338, 348, 349, 350, 351, 352, 353, 354, 386, 400, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423, 424, 429], "after": [1, 2, 3, 8, 14, 15, 17, 18, 20, 21, 27, 35, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 73, 83, 97, 104, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 229, 231, 232, 233, 250, 252, 254, 258, 267, 297, 302, 318, 327, 338, 340, 410, 411, 412, 413, 414, 415, 417, 419, 422, 423, 424, 425, 426, 429], "predefin": [1, 410, 412, 417, 426, 428], "becaus": [1, 2, 3, 4, 7, 52, 54, 59, 60, 73, 83, 125, 129, 147, 148, 154, 155, 182, 189, 207, 213, 219, 222, 243, 265, 292, 297, 298, 300, 301, 302, 303, 304, 305, 315, 335, 404, 409, 410, 412, 413, 415, 416, 417, 421, 422, 423, 424, 426, 429], "potenti": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 424, 426], "comput": [1, 3, 4, 8, 14, 16, 21, 27, 30, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 191, 205, 214, 217, 222, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 269, 270, 271, 272, 274, 276, 277, 280, 281, 283, 285, 286, 288, 293, 296, 298, 300, 301, 303, 305, 308, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 390, 405, 409, 411, 412, 413, 414, 415, 421, 422, 423, 425, 426], "heavi": [1, 8, 83, 426], "crucial": [1, 2, 3, 231, 232, 250, 276, 277, 323, 331, 333, 409, 410, 411, 412, 414, 416, 418, 422, 423, 424, 428, 429], "configur": [1, 8, 21, 22, 60, 189, 239, 244, 274, 333, 335, 404, 409, 410, 411, 416, 422, 423, 424], "hyperparamet": [1, 107, 222, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 409, 418, 424, 426], "appropri": [1, 3, 4, 7, 95, 105, 115, 116, 119, 120, 147, 154, 182, 397, 400, 409, 418, 426], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 111, 113, 115, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 404, 405, 409, 412, 413, 415, 419, 422, 423, 424, 425, 428], "take": [1, 2, 3, 8, 23, 27, 38, 41, 56, 57, 60, 61, 66, 86, 112, 118, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 175, 207, 210, 213, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 299, 300, 301, 303, 308, 311, 314, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 378, 388, 404, 406, 409, 410, 411, 413, 414, 415, 416, 422, 423, 424, 426, 429], "consider": [1, 2, 3, 8, 128, 130, 410, 422, 423, 426], "whether": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 105, 117, 125, 129, 135, 139, 140, 141, 147, 148, 149, 150, 154, 155, 158, 159, 168, 178, 181, 208, 212, 214, 220, 222, 230, 237, 238, 254, 258, 259, 309, 315, 316, 317, 318, 319, 320, 322, 324, 325, 329, 332, 333, 335, 336, 337, 338, 340, 341, 348, 350, 353, 409, 410, 411, 413, 414, 422, 423, 424, 428, 429], "should": [1, 2, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 102, 104, 109, 110, 111, 115, 118, 123, 124, 125, 128, 129, 130, 131, 135, 138, 141, 147, 148, 149, 150, 154, 155, 158, 159, 165, 168, 169, 172, 175, 176, 178, 179, 182, 183, 185, 189, 191, 196, 197, 198, 200, 203, 204, 207, 208, 210, 213, 214, 219, 220, 222, 224, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 301, 303, 304, 305, 308, 311, 315, 317, 318, 324, 330, 332, 333, 335, 336, 337, 338, 339, 340, 349, 350, 351, 352, 353, 354, 370, 372, 381, 382, 383, 386, 396, 398, 399, 400, 404, 406, 409, 410, 411, 412, 413, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "occur": [1, 8, 15, 56, 62, 63, 66, 83, 125, 129, 131, 147, 148, 154, 155, 173, 183, 191, 196, 219, 230, 233, 292, 297, 298, 301, 302, 303, 304, 305, 327, 413, 426, 429], "serial": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 212, 220, 222], "parallel": [1, 3, 8, 125, 128, 129, 130, 147, 148, 149, 150, 154, 155, 214, 219, 224, 254, 258, 315, 397, 398, 399, 400, 410, 411, 422, 423, 428], "syncdatacollector": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 35, 46, 64, 169, 172, 200, 235, 254, 258, 396, 399, 402, 409, 410, 411, 412, 413, 417, 419, 422, 423, 426], "class": [1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 131, 135, 138, 141, 144, 147, 148, 149, 150, 151, 154, 155, 156, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 398, 399, 400, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 426, 429], "worker": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 52, 54, 59, 71, 72, 73, 86, 91, 92, 126, 142, 147, 154, 212, 220, 398, 399, 400, 409, 410, 411, 428, 429], "multisyncdatacollector": [1, 15, 18, 19, 20, 21, 235, 399, 402, 411, 417, 428], "split": [1, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 37, 39, 52, 54, 63, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 109, 110, 138, 149, 150, 252, 256, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 404, 406, 411, 415, 426, 428], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 57, 58, 61, 67, 68, 102, 109, 110, 121, 122, 123, 124, 128, 130, 131, 133, 134, 135, 142, 143, 147, 151, 155, 212, 220, 222, 254, 258, 264, 275, 276, 277, 333, 388, 402, 404, 405, 409, 414, 418, 422, 423, 424], "aggreg": [1, 3, 27, 56, 83, 102, 115, 149, 150, 230, 237, 238, 240, 241, 307], "result": [1, 2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 110, 125, 126, 129, 147, 148, 154, 155, 165, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 229, 230, 231, 235, 250, 252, 254, 256, 258, 259, 264, 279, 285, 296, 298, 303, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 388, 405, 410, 412, 414, 415, 418, 419, 424, 425, 428, 429], "final": [1, 2, 3, 4, 21, 41, 52, 54, 59, 60, 73, 209, 219, 231, 232, 250, 252, 254, 256, 258, 264, 276, 277, 299, 306, 350, 381, 404, 409, 410, 411, 413, 418, 419, 422, 423, 424, 429], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 235, 398, 402, 409, 410, 411, 417, 428], "sever": [1, 2, 3, 8, 27, 38, 42, 46, 56, 57, 61, 66, 72, 86, 125, 129, 147, 148, 154, 155, 173, 175, 214, 222, 335, 409, 411, 413, 418, 419, 426, 429], "gather": [1, 3, 18, 20, 21, 72, 92, 96, 97, 102, 109, 117, 196, 263, 266, 272, 333, 349, 390, 403, 410, 411, 412, 413, 417, 422, 423, 424, 426, 428, 429], "continu": [1, 2, 9, 28, 31, 74, 75, 76, 110, 125, 129, 147, 148, 149, 150, 154, 155, 158, 159, 165, 209, 227, 240, 241, 242, 243, 275, 276, 277, 307, 312, 316, 339, 350, 355, 363, 404, 409, 411, 412, 415, 422, 423, 424, 426, 428, 429], "concomitantli": [1, 125, 129, 147, 148, 154, 155], "network": [1, 4, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 138, 147, 148, 149, 150, 154, 155, 222, 237, 238, 240, 241, 242, 243, 246, 248, 249, 256, 259, 264, 265, 266, 268, 270, 271, 273, 275, 278, 280, 281, 282, 287, 293, 294, 295, 296, 304, 308, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 346, 348, 350, 351, 352, 353, 354, 395, 396, 404, 405, 406, 413, 416, 419, 421, 424, 429], "impli": [1, 73, 429], "weight": [1, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 60, 61, 66, 102, 104, 107, 121, 122, 125, 129, 147, 148, 152, 153, 154, 155, 176, 195, 209, 212, 213, 214, 216, 218, 222, 252, 253, 254, 256, 257, 258, 264, 266, 268, 304, 315, 316, 317, 318, 324, 327, 338, 340, 388, 395, 404, 406, 409, 410, 411, 413, 421, 424, 426, 428], "mai": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 85, 91, 94, 102, 109, 125, 128, 129, 130, 131, 147, 148, 151, 154, 155, 189, 191, 204, 212, 214, 215, 220, 222, 224, 233, 254, 258, 259, 264, 324, 338, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423, 424, 425, 426, 429], "slightli": [1, 23, 83, 405, 412, 413, 422, 424, 425, 426, 429], "lag": [1, 409, 410, 411], "therefor": [1, 2, 3, 7, 53, 58, 67, 68, 90, 91, 125, 129, 147, 148, 154, 155, 200, 335, 348, 413, 416, 422, 429], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 35, 37, 41, 47, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 102, 104, 109, 110, 115, 117, 118, 125, 129, 138, 141, 144, 147, 148, 149, 150, 154, 155, 165, 166, 169, 172, 182, 189, 195, 200, 203, 207, 208, 209, 210, 213, 215, 218, 219, 229, 230, 231, 232, 250, 252, 253, 254, 256, 257, 258, 262, 263, 264, 273, 275, 276, 277, 296, 301, 304, 305, 314, 315, 316, 317, 318, 323, 324, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 405, 406, 409, 410, 411, 413, 414, 421, 422, 423, 424, 426, 429], "asynchron": [1, 9, 15, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 315, 398, 409, 410, 411], "off": [1, 2, 4, 255, 286, 297, 338, 368, 381, 391, 404, 406, 409, 410, 411, 415, 416, 422, 423, 425, 428, 429], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 34, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 117, 125, 128, 129, 130, 135, 147, 148, 149, 150, 154, 155, 156, 158, 178, 181, 185, 191, 208, 214, 219, 222, 224, 247, 252, 254, 256, 258, 265, 267, 293, 295, 296, 298, 302, 315, 323, 325, 331, 335, 381, 404, 406, 409, 410, 411, 412, 414, 415, 417, 418, 422, 423, 424, 425, 426, 429], "remot": [1, 2, 18, 19, 20, 21, 147, 154, 429], "rollout": [1, 2, 3, 11, 14, 15, 16, 17, 21, 23, 41, 60, 66, 73, 115, 121, 122, 125, 129, 131, 132, 134, 135, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 165, 166, 168, 169, 172, 175, 178, 181, 182, 183, 189, 193, 197, 198, 203, 204, 205, 207, 208, 210, 212, 220, 222, 224, 234, 235, 236, 254, 258, 261, 276, 277, 300, 315, 368, 370, 390, 404, 409, 411, 412, 415, 416, 417, 418, 419, 425, 426, 428], "necessari": [1, 4, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 204, 336, 350, 351, 352, 353, 354, 405, 409, 411, 415, 416, 417], "synchronis": [1, 126, 422, 423], "either": [1, 2, 5, 22, 25, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 125, 129, 147, 148, 154, 155, 207, 208, 222, 310, 333, 340, 341, 374, 406, 409, 410, 412, 422, 425, 426, 428, 429], "update_policy_weights_": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 409, 423, 428], "update_at_each_batch": [1, 14, 15, 17], "true": [1, 2, 3, 4, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 171, 172, 173, 176, 180, 183, 185, 188, 189, 190, 191, 195, 196, 198, 199, 202, 203, 204, 207, 209, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 227, 229, 230, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 249, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 284, 285, 286, 291, 292, 293, 294, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 350, 351, 352, 353, 356, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 377, 380, 381, 383, 386, 400, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "second": [1, 2, 3, 8, 23, 41, 42, 43, 44, 45, 83, 86, 115, 169, 252, 254, 256, 258, 298, 317, 332, 335, 338, 372, 385, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 169, 176, 178, 179, 181, 182, 183, 189, 193, 194, 195, 197, 198, 200, 204, 207, 209, 211, 213, 214, 216, 218, 220, 222, 227, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 267, 268, 274, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 368, 383, 388, 394, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428], "oper": [1, 2, 3, 4, 7, 8, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 125, 129, 147, 148, 154, 155, 169, 185, 189, 213, 222, 246, 247, 253, 257, 269, 293, 294, 295, 297, 298, 299, 304, 310, 315, 317, 319, 320, 325, 332, 335, 337, 348, 349, 350, 351, 352, 353, 386, 402, 405, 406, 409, 410, 411, 412, 413, 414, 415, 421, 422, 423, 424, 429], "instanc": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 100, 102, 104, 109, 110, 117, 124, 125, 126, 128, 129, 130, 141, 147, 148, 154, 155, 172, 191, 209, 213, 214, 220, 222, 224, 227, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 311, 316, 318, 320, 323, 324, 331, 333, 336, 338, 340, 341, 348, 350, 351, 352, 353, 368, 370, 374, 381, 390, 391, 392, 396, 398, 399, 404, 405, 406, 409, 411, 412, 413, 414, 415, 424, 426, 429], "cpu": [1, 2, 3, 8, 10, 14, 15, 16, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 165, 169, 176, 178, 179, 181, 182, 183, 193, 195, 197, 198, 200, 204, 207, 209, 213, 214, 216, 218, 222, 227, 229, 234, 236, 246, 252, 253, 254, 256, 257, 258, 261, 267, 268, 276, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 368, 383, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "slower": [1, 422], "than": [1, 2, 3, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 56, 73, 83, 85, 89, 102, 109, 110, 113, 115, 125, 129, 133, 145, 146, 147, 148, 151, 154, 155, 198, 231, 232, 243, 254, 256, 258, 259, 269, 288, 292, 297, 304, 309, 333, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 403, 404, 405, 409, 410, 411, 413, 414, 416, 422, 423, 424, 426, 428, 429], "one": [1, 2, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 110, 111, 113, 115, 116, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 166, 169, 172, 175, 178, 179, 180, 181, 190, 191, 195, 200, 203, 206, 208, 209, 210, 213, 214, 215, 218, 220, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 283, 288, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 311, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 345, 348, 350, 351, 352, 353, 357, 358, 372, 380, 381, 382, 386, 390, 400, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 429], "cuda": [1, 2, 3, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 121, 122, 125, 129, 131, 132, 133, 147, 148, 154, 155, 176, 189, 194, 195, 209, 213, 214, 216, 218, 222, 252, 253, 256, 257, 304, 379, 409, 410, 411, 412, 422, 423, 425, 429], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 44, 56, 58, 69, 73, 97, 104, 105, 117, 121, 122, 134, 135, 147, 154, 155, 173, 175, 180, 188, 190, 200, 203, 207, 212, 213, 220, 252, 256, 258, 264, 267, 268, 292, 297, 301, 302, 304, 305, 308, 317, 324, 332, 335, 345, 356, 400, 404, 405, 406, 409, 410, 411, 414, 416, 417, 422, 423, 424, 426, 428], "infer": [1, 125, 129, 147, 148, 154, 155, 172, 220, 254, 258, 267, 296, 301, 322, 368, 409, 411, 413, 417, 419, 426, 428], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 17, 21, 27, 38, 46, 56, 57, 61, 66, 83, 86, 102, 109, 110, 121, 122, 123, 124, 125, 128, 129, 134, 135, 141, 142, 143, 147, 148, 154, 155, 190, 191, 212, 214, 220, 222, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 306, 307, 308, 311, 318, 324, 338, 370, 377, 381, 398, 399, 400, 403, 404, 406, 409, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428], "dispatch": [1, 18, 19, 20, 21, 56, 66, 288, 300, 370, 409], "avail": [1, 2, 3, 4, 6, 21, 53, 58, 67, 68, 83, 86, 91, 102, 108, 109, 110, 123, 124, 133, 139, 140, 145, 146, 147, 149, 150, 151, 156, 157, 158, 159, 165, 168, 171, 189, 247, 279, 301, 305, 333, 370, 398, 399, 409, 410, 411, 412, 413, 414, 415, 422, 423, 424, 426, 429], "speed": [1, 2, 4, 8, 30, 125, 129, 147, 148, 154, 155, 405, 409, 410, 411, 412, 422, 423, 424, 426, 428], "avoid": [1, 2, 3, 27, 38, 46, 56, 57, 61, 66, 96, 97, 109, 117, 125, 129, 147, 148, 154, 155, 164, 212, 214, 220, 222, 233, 285, 292, 304, 309, 317, 318, 332, 335, 338, 389, 411, 413, 423], "oom": [1, 3, 52, 54, 59, 73, 96, 97, 117], "choic": [1, 2, 85, 91, 147, 269, 404, 405, 409, 410, 416, 422, 423], "pass": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 60, 61, 63, 66, 67, 68, 71, 72, 83, 86, 87, 89, 90, 91, 94, 96, 97, 102, 104, 109, 110, 115, 117, 125, 126, 127, 129, 130, 138, 142, 147, 148, 149, 150, 154, 155, 158, 168, 169, 178, 181, 198, 212, 213, 215, 220, 222, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 278, 280, 281, 283, 287, 288, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 316, 317, 318, 331, 332, 333, 335, 336, 338, 340, 341, 350, 351, 352, 353, 354, 368, 383, 386, 398, 399, 400, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 426, 428, 429], "ie": [1, 2, 3, 18, 20, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 62, 63, 66, 67, 71, 72, 74, 75, 76, 77, 78, 89, 101, 110, 125, 129, 133, 144, 147, 148, 154, 155, 165, 172, 185, 215, 220, 230, 254, 258, 296, 404, 405, 410, 423], "store": [1, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 36, 37, 38, 41, 46, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 104, 109, 115, 117, 125, 129, 147, 148, 154, 155, 219, 220, 222, 231, 232, 234, 235, 261, 276, 277, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 377, 402, 406, 409, 411, 412, 415, 417, 419, 422, 423, 425, 429], "while": [1, 2, 3, 7, 8, 23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 200, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 323, 331, 332, 335, 404, 405, 409, 411, 412, 415, 417, 418, 422, 423, 424, 425, 426, 428], "wait": [1, 20, 21, 22, 156, 412, 424], "also": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 52, 54, 56, 57, 58, 59, 61, 66, 67, 71, 73, 83, 86, 87, 89, 90, 91, 92, 96, 97, 102, 104, 109, 110, 115, 117, 125, 129, 135, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 164, 168, 169, 171, 172, 180, 191, 198, 200, 203, 204, 207, 209, 212, 214, 222, 229, 237, 238, 252, 256, 281, 300, 301, 306, 307, 308, 315, 316, 318, 319, 320, 322, 323, 324, 329, 331, 335, 338, 340, 350, 357, 358, 368, 370, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 426, 428, 429], "impact": [1, 2, 3, 89, 135, 178, 181, 233, 315, 317, 332, 335, 337, 410, 412, 422, 423], "memori": [1, 3, 8, 21, 27, 30, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 94, 96, 100, 125, 126, 129, 133, 147, 148, 154, 155, 172, 176, 195, 209, 213, 214, 216, 218, 220, 222, 245, 256, 257, 304, 400, 402, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "manag": [1, 8, 235, 254, 258, 291, 346, 347, 350, 351, 352, 353, 381, 404, 412, 413, 416, 428], "kei": [1, 2, 3, 7, 14, 15, 16, 17, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 93, 101, 102, 104, 107, 109, 110, 115, 125, 129, 134, 135, 147, 148, 149, 150, 154, 155, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 194, 195, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 229, 230, 231, 232, 234, 236, 246, 247, 250, 254, 258, 260, 261, 276, 277, 279, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 368, 370, 381, 382, 384, 385, 386, 390, 405, 406, 409, 411, 412, 413, 414, 416, 421, 422, 423, 424, 426, 428, 429], "control": [1, 3, 5, 8, 16, 23, 24, 33, 58, 67, 68, 102, 104, 109, 123, 124, 125, 129, 135, 138, 147, 148, 149, 150, 154, 155, 180, 229, 240, 241, 242, 243, 254, 258, 260, 261, 276, 277, 281, 288, 304, 305, 306, 315, 317, 318, 332, 333, 335, 339, 350, 355, 363, 368, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 422, 423, 424, 426, 428], "which": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 104, 107, 108, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 172, 173, 178, 181, 186, 189, 190, 191, 195, 196, 198, 207, 209, 210, 213, 214, 216, 220, 222, 224, 246, 252, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 266, 273, 275, 286, 293, 294, 295, 296, 300, 301, 304, 305, 307, 315, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 344, 348, 350, 351, 352, 353, 368, 370, 378, 382, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 429], "storing_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 410, 423], "dure": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58, 60, 61, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 102, 104, 107, 109, 125, 126, 129, 135, 147, 148, 149, 150, 154, 155, 168, 169, 172, 175, 178, 181, 183, 186, 193, 205, 209, 212, 214, 215, 220, 222, 233, 235, 236, 254, 258, 265, 350, 352, 353, 381, 386, 405, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 424, 426, 429], "heurist": [1, 4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 231, 277, 300, 409, 413, 417, 429], "usual": [1, 2, 3, 4, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 85, 107, 115, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 212, 268, 335, 340, 350, 351, 352, 353, 354, 369, 403, 404, 406, 409, 410, 411, 412, 415, 417, 418, 423, 426, 429], "same": [1, 2, 3, 4, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 85, 89, 108, 109, 110, 113, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 142, 143, 147, 148, 149, 150, 151, 154, 155, 165, 172, 178, 180, 181, 186, 190, 191, 212, 213, 214, 220, 222, 237, 238, 253, 254, 257, 258, 259, 262, 263, 264, 265, 276, 277, 285, 296, 308, 316, 318, 331, 333, 336, 338, 340, 341, 345, 405, 409, 410, 411, 414, 415, 417, 421, 422, 423, 425, 426, 429], "default": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 105, 107, 108, 109, 110, 115, 117, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 193, 195, 196, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 279, 280, 281, 283, 284, 285, 286, 291, 292, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 396, 400, 405, 406, 409, 410, 411, 412, 413, 415, 422, 425, 426, 428, 429], "behavior": [1, 2, 3, 4, 14, 15, 21, 27, 38, 46, 56, 57, 61, 66, 71, 73, 89, 125, 129, 147, 148, 154, 155, 173, 178, 181, 191, 196, 208, 214, 222, 229, 233, 254, 255, 258, 286, 323, 331, 340, 368, 381, 404, 410, 412, 422, 423, 424, 426], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 172, 178, 181, 191, 209, 210, 258, 275, 301, 305, 306, 307, 388, 398, 399, 404, 409, 410, 414, 415, 423, 424, 429], "choos": [1, 11, 138, 254, 258, 335, 402, 405, 409, 410, 411, 413, 422, 423, 426, 428], "follow": [1, 2, 3, 6, 7, 8, 11, 27, 38, 41, 46, 52, 54, 55, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 86, 87, 88, 89, 90, 91, 102, 121, 122, 125, 128, 129, 130, 134, 135, 141, 144, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 168, 189, 195, 216, 220, 222, 237, 238, 252, 254, 256, 258, 259, 298, 301, 302, 303, 314, 315, 316, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 370, 386, 404, 405, 406, 409, 410, 411, 412, 413, 416, 417, 421, 422, 423, 424, 426, 428, 429], "max_frames_per_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 389, 409, 411, 428], "frame": [1, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 46, 83, 172, 186, 222, 231, 232, 250, 276, 277, 300, 369, 370, 372, 380, 381, 386, 389, 390, 409, 410, 411, 412, 415, 422, 423, 426, 428, 429], "call": [1, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 103, 104, 108, 109, 111, 113, 117, 118, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 168, 169, 172, 175, 176, 180, 183, 185, 188, 189, 191, 193, 194, 195, 203, 205, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 265, 266, 267, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 304, 305, 307, 308, 311, 317, 318, 332, 333, 335, 338, 340, 349, 350, 351, 352, 353, 368, 369, 372, 381, 405, 406, 410, 411, 412, 413, 414, 415, 417, 418, 422, 423, 424, 426, 428, 429], "frames_per_batch": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 169, 172, 200, 254, 258, 389, 409, 410, 411, 412, 413, 417, 419, 422, 423, 426, 428], "each": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 31, 32, 37, 38, 39, 42, 44, 46, 47, 56, 57, 58, 60, 61, 63, 65, 66, 67, 73, 83, 85, 86, 89, 102, 104, 107, 109, 110, 112, 115, 125, 126, 129, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 165, 188, 195, 200, 203, 207, 208, 209, 210, 212, 218, 220, 222, 231, 232, 247, 250, 252, 253, 254, 256, 258, 264, 265, 270, 278, 279, 287, 291, 297, 298, 303, 307, 356, 359, 360, 361, 362, 364, 365, 366, 367, 370, 381, 383, 398, 399, 405, 409, 410, 411, 412, 415, 416, 417, 419, 422, 423, 424, 425, 426, 428, 429], "init_random_fram": [1, 14, 15, 16, 17, 18, 19, 20, 21, 389, 409, 410, 413, 419], "rand_step": [1, 2, 3, 35, 64, 123, 124, 125, 126, 128, 129, 130, 136, 137, 141, 142, 143, 147, 148, 154, 155, 188, 209, 220, 424, 428, 429], "reset_at_each_it": [1, 14, 15, 16, 17, 18, 19, 20, 21, 409], "split_traj": [1, 14, 15, 16, 17, 18, 19, 20, 21, 85, 87, 89, 90, 91, 409, 410, 411], "trajectori": [1, 3, 14, 15, 16, 17, 18, 19, 20, 21, 23, 36, 37, 46, 47, 65, 67, 73, 83, 85, 86, 87, 89, 90, 91, 101, 102, 109, 110, 115, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 196, 207, 212, 213, 222, 234, 258, 261, 276, 277, 335, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 378, 402, 405, 409, 410, 411, 412, 414, 417, 419, 424, 428, 429], "pad": [1, 2, 3, 23, 55, 69, 85, 87, 89, 90, 91, 172, 237, 238, 240, 241, 258, 262, 263, 264, 383], "along": [1, 2, 3, 14, 15, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 97, 102, 104, 109, 110, 115, 117, 128, 130, 171, 172, 173, 191, 193, 196, 203, 211, 258, 259, 262, 263, 268, 297, 301, 304, 305, 318, 333, 340, 409, 410, 412, 414, 416, 422, 423, 424, 426, 428], "point": [1, 2, 3, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 88, 95, 101, 102, 105, 115, 116, 119, 120, 125, 126, 129, 147, 148, 154, 155, 165, 168, 171, 172, 176, 195, 208, 209, 211, 212, 213, 214, 216, 218, 222, 260, 304, 314, 325, 386, 403, 410, 411, 421, 422, 423, 424, 426, 428, 429], "boolean": [1, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 110, 129, 168, 196, 207, 230, 232, 262, 263, 276, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 406, 412], "repres": [1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 35, 39, 63, 64, 66, 67, 87, 123, 124, 125, 128, 129, 130, 147, 148, 154, 155, 158, 159, 186, 196, 220, 222, 247, 262, 263, 279, 285, 297, 298, 302, 303, 305, 344, 350, 383, 404, 409, 411, 412, 413, 414, 415, 416, 422, 423], "valid": [1, 2, 3, 23, 52, 54, 55, 72, 92, 115, 160, 168, 196, 212, 214, 222, 231, 232, 237, 238, 259, 262, 263, 276, 277, 324, 332, 338, 350, 351, 352, 353, 383, 406, 413, 429], "exploration_typ": [1, 14, 15, 16, 17, 18, 19, 20, 21, 381, 402, 404, 409, 410], "strategi": [1, 2, 16, 89, 107, 138, 165, 250, 263, 272, 404, 406, 409, 410, 413, 415, 422, 423, 426, 428], "reset_when_don": [1, 14, 15, 16, 17], "its": [1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 80, 97, 104, 125, 129, 135, 141, 147, 148, 149, 150, 154, 155, 158, 160, 169, 171, 172, 182, 189, 207, 208, 209, 212, 213, 214, 219, 220, 222, 231, 232, 237, 238, 254, 258, 262, 263, 264, 265, 275, 297, 301, 302, 305, 308, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 341, 348, 370, 386, 396, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "organ": [1, 2, 424, 426], "within": [1, 2, 3, 14, 15, 17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 110, 125, 128, 129, 130, 147, 148, 151, 154, 155, 169, 172, 178, 181, 182, 200, 207, 212, 219, 220, 222, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 291, 296, 298, 300, 303, 308, 311, 312, 320, 325, 340, 348, 368, 370, 404, 405, 410, 413, 414, 415, 416, 417, 418, 419, 422, 424, 428], "differ": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 89, 104, 107, 121, 122, 125, 126, 129, 134, 135, 138, 147, 148, 149, 150, 154, 155, 168, 172, 179, 180, 191, 198, 212, 214, 215, 222, 247, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 279, 331, 333, 335, 344, 350, 351, 352, 356, 357, 358, 381, 386, 388, 398, 399, 404, 405, 406, 409, 410, 411, 413, 414, 416, 418, 421, 422, 423, 424, 425, 426, 428, 429], "how": [1, 2, 3, 11, 18, 19, 20, 24, 27, 38, 46, 53, 56, 57, 61, 66, 67, 89, 101, 102, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 222, 266, 301, 315, 317, 330, 332, 333, 335, 370, 372, 386, 403, 404, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "tabl": [1, 27, 404, 410, 415], "summar": [1, 3, 424], "what": [1, 3, 8, 11, 33, 53, 71, 83, 102, 109, 125, 129, 147, 148, 154, 155, 182, 209, 212, 224, 229, 302, 318, 329, 333, 340, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 428, 429], "expect": [1, 2, 3, 4, 7, 27, 31, 38, 46, 56, 57, 58, 61, 66, 71, 72, 102, 108, 109, 125, 129, 141, 144, 147, 148, 154, 155, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 191, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 252, 253, 254, 256, 257, 258, 264, 265, 276, 277, 298, 304, 307, 315, 316, 317, 318, 319, 320, 322, 323, 324, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 345, 348, 390, 403, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 422, 423, 424, 426, 429], "n": [1, 2, 3, 6, 7, 25, 26, 27, 30, 34, 38, 44, 45, 46, 50, 51, 56, 57, 60, 61, 66, 125, 129, 147, 148, 154, 155, 172, 180, 185, 215, 222, 252, 253, 256, 261, 273, 275, 276, 277, 300, 305, 315, 316, 324, 333, 349, 383, 406, 410, 412, 413, 415, 422, 423, 426, 428, 429], "b": [1, 2, 3, 7, 8, 23, 31, 32, 39, 52, 54, 56, 58, 59, 60, 61, 63, 66, 67, 68, 73, 96, 115, 252, 253, 256, 257, 264, 265, 267, 268, 278, 287, 308, 350, 351, 352, 353, 354, 356, 370, 410, 425, 426], "cat_result": [1, 14, 15], "na": 1, "t": [1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 108, 109, 110, 115, 125, 126, 128, 129, 142, 143, 147, 148, 154, 155, 165, 168, 172, 178, 181, 182, 195, 199, 200, 208, 210, 212, 218, 220, 222, 224, 229, 252, 254, 256, 258, 276, 277, 297, 304, 315, 339, 350, 351, 352, 353, 354, 356, 370, 377, 386, 388, 400, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "p": [1, 2, 4, 104, 107, 126, 152, 153, 235, 236], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 38, 46, 56, 57, 61, 66, 83, 85, 87, 89, 90, 91, 110, 121, 122, 125, 129, 134, 135, 147, 148, 149, 150, 154, 155, 176, 178, 179, 181, 188, 195, 200, 204, 208, 209, 211, 212, 213, 214, 216, 218, 219, 222, 252, 255, 256, 259, 264, 281, 285, 286, 304, 307, 314, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 388, 398, 399, 400, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 429], "case": [1, 3, 4, 5, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 101, 102, 104, 115, 125, 128, 129, 147, 148, 154, 155, 178, 179, 181, 188, 191, 209, 211, 214, 224, 258, 259, 265, 266, 301, 304, 305, 307, 308, 314, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 370, 378, 388, 398, 399, 400, 402, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 423, 424, 426, 428, 429], "dimens": [1, 2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 58, 59, 60, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 90, 91, 96, 97, 102, 109, 110, 115, 117, 123, 124, 125, 128, 129, 130, 131, 147, 148, 154, 155, 158, 159, 165, 171, 172, 173, 185, 191, 193, 196, 203, 206, 209, 211, 215, 220, 237, 238, 239, 244, 245, 254, 256, 258, 259, 262, 263, 264, 267, 268, 274, 278, 282, 283, 284, 285, 288, 297, 300, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 400, 409, 410, 411, 412, 414, 422, 423, 424, 426], "time": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 19, 20, 21, 23, 27, 38, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 104, 115, 121, 122, 125, 126, 129, 134, 135, 138, 144, 147, 148, 149, 150, 151, 154, 155, 164, 171, 173, 196, 203, 209, 210, 212, 214, 220, 222, 229, 236, 248, 252, 256, 258, 276, 277, 291, 300, 316, 317, 318, 324, 327, 331, 332, 333, 335, 336, 338, 340, 341, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 386, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "adapt": [1, 24, 166, 207, 233, 332, 409, 413, 424], "equal": [1, 14, 15, 17, 27, 83, 102, 109, 110, 142, 145, 146, 147, 154, 190, 191, 237, 238, 252, 254, 256, 258, 259, 263, 265, 339, 344, 378, 398, 399, 409, 411, 425], "introduc": [1, 2, 147, 154, 252, 254, 256, 258, 276, 277, 409, 422], "some": [1, 2, 3, 4, 7, 8, 9, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 72, 74, 75, 76, 77, 78, 85, 91, 96, 97, 104, 115, 117, 121, 122, 125, 128, 129, 130, 134, 135, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 168, 195, 209, 214, 216, 222, 224, 240, 254, 258, 283, 305, 306, 307, 370, 378, 389, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 426, 428, 429], "confus": [1, 25, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222], "other": [1, 2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 89, 90, 91, 96, 97, 98, 104, 107, 108, 109, 110, 111, 113, 117, 125, 128, 129, 130, 141, 147, 148, 154, 155, 175, 179, 180, 197, 204, 211, 216, 220, 222, 235, 250, 252, 254, 258, 268, 269, 291, 296, 298, 303, 305, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 350, 368, 383, 398, 399, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429], "better": [1, 3, 8, 9, 14, 15, 23, 135, 254, 258, 405, 411, 414, 424, 428], "consist": [1, 2, 3, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 86, 89, 125, 129, 147, 148, 154, 155, 189, 219, 222, 235, 238, 259, 409, 410, 411, 424, 425, 429], "interact": [1, 2, 3, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 89, 125, 129, 139, 140, 147, 148, 154, 155, 214, 301, 305, 409, 411, 413, 414, 415, 417, 422, 423, 424, 429], "keep": [1, 2, 3, 4, 7, 8, 15, 53, 58, 67, 68, 104, 108, 115, 147, 154, 191, 195, 218, 220, 222, 229, 276, 277, 380, 386, 409, 410, 411, 412, 417, 418, 419, 423, 424, 426, 429], "separ": [1, 2, 4, 8, 14, 15, 17, 18, 20, 21, 23, 31, 32, 39, 63, 83, 86, 195, 218, 316, 319, 322, 324, 336, 338, 340, 341, 405, 409, 410, 415, 416, 422, 423, 426, 429], "interchang": [1, 264, 265, 411, 414, 418, 425, 426], "between": [1, 2, 3, 4, 5, 14, 15, 17, 21, 24, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 102, 104, 105, 108, 109, 110, 117, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 180, 190, 201, 212, 214, 220, 222, 224, 237, 238, 246, 252, 254, 258, 259, 264, 265, 298, 301, 305, 315, 317, 318, 319, 322, 323, 324, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 344, 350, 381, 386, 405, 409, 410, 412, 413, 417, 422, 423, 424, 426, 429], "wherea": [1, 2, 22, 27, 38, 46, 56, 57, 61, 66, 89, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 142, 143, 147, 148, 151, 154, 155, 180, 212, 214, 222, 318, 333, 338, 406, 418], "correspond": [1, 2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 62, 63, 66, 67, 71, 73, 74, 75, 76, 77, 78, 86, 89, 91, 101, 102, 125, 129, 141, 147, 148, 154, 155, 195, 209, 212, 214, 218, 220, 222, 235, 250, 254, 256, 258, 262, 263, 276, 277, 301, 305, 318, 320, 323, 324, 338, 348, 350, 351, 352, 353, 354, 404, 409, 410, 411, 413, 414, 416, 417, 418, 422, 423, 424, 425], "sub": [1, 2, 3, 14, 15, 17, 18, 19, 20, 21, 83, 89, 102, 109, 115, 147, 154, 196, 212, 306, 307, 378, 386, 404, 409, 410, 411, 417, 421, 428, 429], "doesn": [1, 4, 12, 115, 142, 178, 181, 413, 414], "understood": [1, 3, 409], "serv": [1, 18, 20, 21, 131, 426, 428, 429], "basi": [1, 115, 264, 426, 428], "we": [1, 2, 3, 5, 7, 9, 11, 12, 23, 24, 27, 31, 38, 41, 46, 53, 56, 57, 58, 60, 61, 66, 67, 68, 83, 85, 89, 91, 96, 108, 110, 115, 121, 122, 125, 126, 129, 133, 134, 135, 147, 148, 154, 155, 172, 189, 195, 198, 204, 212, 216, 219, 220, 222, 224, 234, 258, 264, 265, 266, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 370, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "anoth": [1, 2, 3, 8, 41, 66, 71, 89, 102, 109, 125, 128, 129, 130, 133, 147, 148, 154, 155, 169, 178, 179, 181, 209, 213, 259, 301, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 405, 409, 411, 412, 413, 415, 416, 421, 422, 423, 424, 429], "wise": 1, "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 85, 87, 89, 101, 102, 109, 110, 125, 129, 133, 142, 147, 148, 151, 154, 155, 169, 176, 195, 209, 212, 213, 214, 216, 218, 222, 235, 254, 258, 259, 266, 288, 304, 306, 307, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 368, 370, 372, 404, 406, 409, 410, 411, 412, 414, 415, 416, 418, 422, 423, 424, 426, 428, 429], "method": [1, 2, 3, 4, 12, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 104, 109, 110, 111, 112, 113, 115, 117, 125, 128, 129, 130, 131, 135, 147, 148, 151, 154, 155, 168, 169, 172, 176, 178, 179, 182, 183, 185, 189, 191, 195, 197, 198, 199, 200, 204, 207, 209, 213, 214, 216, 218, 222, 223, 231, 234, 235, 236, 245, 250, 254, 258, 264, 265, 266, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 312, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 329, 331, 333, 335, 336, 337, 338, 340, 341, 348, 354, 368, 369, 397, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 424, 426, 429], "op": [1, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 190, 219, 231, 232, 235, 250, 370, 388, 413], "sinc": [1, 2, 3, 4, 5, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 91, 101, 102, 110, 115, 125, 129, 147, 148, 149, 150, 151, 154, 155, 222, 224, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 297, 298, 300, 302, 303, 308, 311, 368, 370, 405, 409, 410, 411, 412, 414, 415, 416, 422, 424, 425, 426, 428, 429], "goal": [1, 3, 4, 83, 84, 85, 86, 87, 88, 89, 90, 91, 208, 409, 410, 411, 412, 423, 424], "policy_devic": [1, 14, 15, 16, 17, 18, 19, 20, 21, 410], "explicitli": [1, 2, 3, 4, 30, 93, 94, 100, 168, 275, 301, 405, 410, 412, 417, 422, 423, 426], "do": [1, 2, 3, 4, 7, 91, 125, 129, 147, 148, 154, 155, 158, 159, 165, 196, 209, 212, 219, 220, 229, 254, 258, 265, 267, 294, 333, 350, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429], "deepcopi": [1, 266, 333, 422], "structur": [1, 3, 7, 52, 53, 54, 58, 59, 60, 67, 68, 71, 72, 73, 115, 125, 129, 147, 148, 154, 155, 178, 181, 230, 264, 276, 277, 315, 324, 335, 338, 350, 351, 352, 353, 354, 402, 405, 409, 411, 412, 414, 417, 422, 423, 424, 425], "place": [1, 2, 3, 24, 27, 31, 32, 33, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 96, 97, 104, 107, 109, 117, 125, 126, 129, 147, 148, 154, 155, 158, 159, 168, 176, 182, 195, 209, 213, 214, 216, 218, 219, 220, 222, 230, 266, 296, 300, 304, 383, 388, 389, 405, 410, 411, 415, 418, 422, 423, 424, 426], "instanti": [1, 2, 3, 14, 15, 21, 52, 53, 54, 58, 59, 67, 68, 71, 73, 101, 102, 133, 135, 168, 209, 213, 265, 350, 351, 352, 353, 354, 368, 409, 410, 415, 416, 418, 422, 423, 424, 426, 429], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 126, 128, 129, 130, 131, 135, 139, 140, 141, 145, 146, 147, 148, 149, 150, 154, 155, 158, 159, 160, 165, 171, 172, 175, 176, 178, 179, 181, 184, 189, 190, 191, 195, 203, 205, 209, 210, 213, 214, 216, 218, 220, 222, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 291, 296, 298, 300, 303, 304, 305, 307, 308, 311, 312, 315, 316, 318, 327, 331, 333, 335, 336, 337, 338, 340, 341, 345, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 382, 386, 389, 398, 399, 400, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429], "graph": [1, 3, 4, 8, 56, 66, 121, 122, 134, 135, 346, 347, 409, 413, 424], "reli": [1, 2, 3, 11, 23, 57, 61, 209, 252, 253, 254, 256, 257, 258, 315, 335, 405, 409, 411, 413, 415, 417, 424, 429], "third": [1, 191, 298, 422, 423], "parti": 1, "try": [1, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 52, 54, 59, 63, 73, 410, 411, 412, 413, 416, 417, 422, 423, 424, 428, 429], "limit": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 141, 147, 148, 154, 155, 172, 189, 315, 317, 332, 333, 335, 337, 405, 409, 410, 412, 422, 423, 424], "chart": 1, "show": [1, 2, 3, 11, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 265, 370, 409, 411, 412, 413, 422, 423, 424, 426, 428], "decis": [1, 2, 3, 239, 274, 296, 321, 334, 404, 412, 414, 415, 422, 423, 426, 429], "simplest": [1, 56, 66, 115, 308, 409, 411, 412, 415, 422, 423, 426, 429], "scenario": [1, 2, 139, 140, 147, 158, 159, 212, 368, 409, 415, 422, 423, 424], "transit": [1, 27, 38, 46, 56, 57, 61, 66, 85, 89, 102, 110, 115, 125, 129, 147, 148, 154, 155, 222, 233, 235, 310, 409, 412, 414, 415, 417, 422, 424, 426], "sampl": [1, 4, 8, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 113, 115, 117, 125, 129, 141, 144, 147, 148, 154, 155, 165, 171, 172, 196, 200, 225, 228, 231, 232, 234, 245, 250, 255, 261, 262, 263, 272, 274, 275, 276, 277, 280, 285, 286, 289, 292, 297, 298, 299, 301, 302, 303, 304, 305, 315, 316, 317, 318, 319, 320, 322, 332, 334, 335, 340, 341, 378, 383, 386, 389, 402, 404, 409, 410, 411, 412, 413, 414, 415, 417, 419, 422, 423, 425, 428, 429], "attent": [1, 2, 8, 409, 412, 429], "given": [1, 2, 3, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 125, 129, 141, 145, 146, 147, 148, 154, 155, 156, 157, 176, 180, 191, 195, 209, 213, 214, 216, 218, 220, 222, 229, 231, 234, 236, 247, 248, 250, 252, 254, 256, 258, 261, 266, 277, 279, 283, 292, 297, 298, 300, 303, 304, 305, 306, 307, 309, 314, 319, 320, 322, 333, 349, 350, 351, 352, 353, 354, 356, 379, 381, 396, 404, 406, 409, 410, 411, 414, 415, 416, 417, 418, 423, 424, 429], "built": [1, 2, 3, 5, 7, 104, 121, 122, 128, 134, 135, 144, 145, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 348, 394, 396, 397, 400, 409, 410, 411, 412, 413, 416, 418, 424, 426, 429], "flatten": [1, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 115, 169, 185, 383, 402, 412, 413, 423], "suffici": [1, 3, 4, 409], "preprocess": [1, 2, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 410, 413], "popul": [1, 2, 3, 14, 15, 16, 53, 58, 65, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 188, 209, 245, 266, 333, 409, 411, 412, 415, 417, 424, 426], "replaybuff": [1, 2, 14, 15, 16, 35, 53, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 109, 110, 119, 172, 196, 200, 222, 320, 325, 348, 394, 396, 402, 411, 413, 417, 419, 422, 423, 425, 426, 428], "lazytensorstorag": [1, 2, 53, 58, 66, 67, 68, 101, 109, 110, 115, 200, 222, 411, 413, 419, 422, 423, 426], "lambda": [1, 2, 12, 14, 15, 16, 17, 21, 22, 56, 58, 66, 115, 125, 126, 129, 147, 148, 154, 155, 164, 169, 189, 209, 222, 236, 288, 297, 300, 301, 302, 326, 328, 329, 340, 350, 353, 361, 362, 366, 367, 368, 396, 405, 409, 413, 422, 423, 426, 428, 429], "reshap": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 89, 109, 115, 169, 254, 258, 259, 275, 368, 411, 413, 422, 423], "extend": [1, 2, 8, 35, 41, 53, 56, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 98, 101, 102, 104, 105, 109, 110, 113, 115, 116, 119, 120, 171, 200, 222, 233, 333, 383, 405, 406, 409, 410, 411, 412, 413, 417, 419, 422, 423, 425, 426, 428], "slice": [1, 2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 165, 171, 413, 423, 426], "recommend": [1, 2, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 53, 54, 58, 59, 67, 68, 73, 109, 115, 133, 266, 417, 422, 423], "achiev": [1, 2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 133, 147, 148, 154, 155, 208, 222, 230, 236, 301, 383, 406, 409, 410, 411, 412, 413, 422, 423, 424, 426, 428, 429], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 104, 115, 125, 126, 129, 133, 147, 148, 149, 154, 155, 158, 159, 169, 172, 195, 212, 213, 214, 216, 219, 220, 222, 227, 229, 237, 238, 240, 241, 242, 243, 244, 245, 249, 254, 258, 259, 260, 264, 265, 296, 305, 312, 318, 320, 325, 336, 338, 348, 370, 383, 390, 391, 392, 396, 398, 399, 404, 409, 410, 411, 412, 413, 415, 418, 422, 423, 424, 425, 426, 428, 429], "multidimension": [1, 2, 67, 101, 102, 426], "slicesampl": [1, 2, 83, 102, 110, 426], "sampler": [1, 2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 196, 275, 320, 325, 348, 409, 411, 422, 423, 426], "One": [1, 2, 4, 8, 25, 26, 30, 31, 32, 34, 39, 44, 45, 50, 51, 63, 72, 115, 121, 122, 147, 154, 172, 200, 216, 231, 232, 272, 304, 308, 339, 344, 374, 409, 410, 426, 429], "must": [1, 2, 3, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 102, 104, 109, 110, 111, 112, 113, 115, 117, 121, 125, 126, 129, 134, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 165, 168, 169, 172, 175, 182, 186, 189, 191, 193, 204, 208, 209, 210, 212, 214, 215, 220, 222, 237, 238, 247, 254, 258, 259, 262, 263, 264, 265, 279, 292, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 339, 340, 341, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 405, 409, 410, 411, 412, 415, 421, 424, 426], "ensur": [1, 2, 3, 27, 38, 46, 53, 56, 57, 61, 66, 67, 101, 102, 108, 125, 129, 147, 148, 154, 155, 165, 172, 195, 207, 214, 216, 220, 222, 254, 258, 297, 404, 410, 411, 424, 426], "shape": [1, 2, 3, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 104, 109, 115, 117, 123, 124, 125, 128, 129, 130, 134, 135, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 169, 171, 173, 178, 181, 182, 183, 189, 191, 193, 197, 198, 200, 204, 207, 209, 211, 220, 221, 222, 224, 227, 229, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 272, 273, 274, 275, 276, 278, 279, 284, 285, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 344, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 378, 383, 386, 396, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 428, 429], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 83, 255, 285, 286, 314, 403, 409, 410, 411, 412, 413, 416, 422, 423, 425, 429], "need": [1, 2, 3, 4, 7, 8, 10, 12, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 54, 56, 57, 61, 66, 71, 111, 115, 125, 129, 133, 138, 147, 148, 149, 150, 154, 155, 172, 175, 185, 195, 198, 210, 212, 214, 218, 220, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 267, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 301, 302, 303, 304, 308, 311, 314, 324, 337, 338, 349, 354, 370, 386, 400, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 426, 428, 429], "dimension": [1, 53, 57, 58, 66, 67, 68, 180, 254, 258, 350, 355, 363, 423], "num_slic": [1, 2, 83, 89, 102, 109, 110, 426], "4": [1, 2, 3, 7, 25, 27, 31, 32, 35, 39, 44, 45, 46, 50, 53, 56, 58, 60, 61, 63, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 117, 121, 122, 123, 124, 125, 129, 134, 135, 136, 137, 138, 141, 143, 147, 148, 152, 153, 154, 155, 165, 166, 168, 169, 172, 182, 200, 207, 208, 212, 220, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 256, 257, 259, 261, 263, 264, 265, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 368, 369, 404, 408, 409, 410, 411, 412, 413, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429], "trajectory_kei": [1, 23, 109, 110], "traj_id": [1, 2, 3, 14, 15, 16, 23, 35, 64, 169, 200, 412, 417, 426, 428], "total_fram": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 35, 46, 64, 169, 172, 200, 386, 389, 396, 406, 409, 410, 411, 412, 413, 417, 419, 422, 423, 426, 428], "dim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 172, 173, 193, 206, 209, 215, 220, 257, 283, 288, 300, 400, 410, 411, 413, 422, 424, 426], "ndim": [1, 2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 96, 97, 101, 102, 115, 117, 125, 129, 147, 148, 154, 155, 222, 300], "parallelenv": [1, 2, 3, 14, 15, 16, 17, 20, 115, 125, 129, 142, 148, 149, 150, 151, 154, 155, 212, 368, 397, 402, 409, 410, 411, 414, 421, 428, 429], "make_env": [1, 3, 147, 154, 159, 212, 220, 368, 391, 392, 409, 410, 428, 429], "regular": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 101, 107, 125, 129, 147, 148, 154, 155, 214, 233, 235, 246, 279, 298, 302, 303, 304, 305, 325, 335, 388, 402, 406, 409, 410, 413, 414, 415, 419, 426, 429], "behav": [1, 3, 131, 141, 252, 256, 272, 323, 331, 333, 413, 425], "iif": 1, "accordingli": [1, 2, 102, 207, 208, 256, 302, 412], "3": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 16, 17, 21, 25, 26, 27, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 115, 117, 123, 124, 125, 128, 129, 130, 131, 132, 138, 139, 140, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 168, 169, 172, 176, 180, 182, 183, 189, 191, 193, 195, 197, 198, 200, 203, 204, 207, 208, 209, 211, 212, 213, 214, 216, 218, 222, 223, 227, 233, 234, 236, 237, 238, 240, 241, 242, 244, 247, 249, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 269, 272, 275, 278, 288, 292, 293, 294, 295, 297, 298, 301, 303, 304, 307, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 356, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 385, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429], "isn": [1, 2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 73, 89, 101, 115, 125, 129, 147, 148, 154, 155, 168, 182, 224, 297, 304, 415, 416, 418, 422, 423], "current": [1, 2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 99, 102, 104, 110, 125, 129, 131, 142, 145, 146, 147, 148, 154, 155, 168, 169, 172, 196, 208, 209, 210, 212, 213, 214, 222, 225, 229, 248, 276, 277, 281, 285, 289, 300, 315, 317, 318, 325, 332, 335, 337, 338, 373, 406, 409, 410, 411, 412, 416, 422, 423, 424, 426, 429], "fulli": [1, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 253, 257, 410, 413, 416, 424, 426], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 104, 105, 108, 110, 111, 113, 115, 116, 117, 119, 120, 125, 126, 129, 142, 147, 148, 149, 150, 154, 155, 156, 158, 159, 166, 168, 185, 195, 196, 200, 212, 214, 216, 220, 222, 224, 230, 236, 237, 238, 244, 245, 259, 268, 275, 296, 300, 304, 305, 306, 307, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 350, 352, 353, 368, 375, 386, 403, 405, 409, 410, 411, 412, 413, 415, 416, 422, 423, 424, 426, 428, 429], "consecut": [1, 3, 83, 108, 133, 258, 276, 277, 370, 412, 414, 417, 423, 426, 429], "won": [1, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 125, 126, 128, 129, 142, 143, 147, 148, 154, 155, 195, 218, 222, 315, 386, 400, 410, 411, 414, 415], "therebi": [1, 24, 368, 405, 409, 410], "interrupt": [1, 2, 129, 300, 356], "These": [1, 2, 7, 60, 86, 91, 118, 158, 195, 218, 404, 405, 409, 411, 422, 423, 424, 426, 429], "tool": [1, 2, 3, 5, 404, 412, 414, 422, 424, 426, 429], "backend": [1, 3, 7, 12, 18, 19, 21, 22, 125, 128, 129, 147, 148, 154, 155, 161, 164, 406, 409, 411, 412, 413, 414, 417, 418, 424], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 402], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 402], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "multiprocess": [1, 2, 3, 14, 15, 18, 19, 20, 58, 67, 68, 83, 91, 104, 126, 127, 147, 154, 220, 409, 410, 411, 412, 417, 422, 423, 424, 425, 429], "synchron": [1, 14, 19, 21, 52, 54, 59, 73, 142, 398, 399, 410, 411, 422], "mode": [1, 6, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 142, 147, 148, 154, 155, 178, 181, 208, 214, 220, 222, 235, 245, 254, 255, 258, 263, 272, 284, 285, 286, 291, 301, 305, 333, 368, 381, 404, 405, 409, 410, 422, 423, 428, 429], "find": [1, 4, 6, 7, 18, 19, 20, 53, 55, 69, 109, 110, 231, 232, 256, 276, 277, 384, 409, 410, 413, 415, 416, 422, 423], "folder": [1, 2, 52, 54, 59, 73, 158, 410], "variou": [1, 2, 3, 254, 258, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 342, 348, 370, 398, 399, 409, 410, 411, 413, 414, 415, 416, 418, 422, 423, 426, 429], "machin": [1, 2, 7, 18, 19, 20, 46, 88, 133, 422, 423, 428], "wonder": 1, "why": [1, 2, 3, 229, 422, 424, 429], "instead": [1, 2, 4, 7, 8, 12, 14, 15, 16, 25, 27, 38, 46, 56, 57, 61, 66, 70, 89, 125, 129, 135, 147, 148, 154, 155, 185, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 315, 317, 318, 320, 323, 324, 325, 331, 332, 335, 336, 337, 338, 348, 350, 354, 358, 400, 405, 413, 414, 415, 419, 424, 426, 429], "lower": [1, 2, 3, 21, 27, 28, 175, 220, 280, 281, 308, 411, 422, 424], "io": [1, 11, 83, 89, 134, 135, 142, 145, 146, 156, 157, 256, 257, 413], "footprint": [1, 2, 426], "commun": [1, 2, 3, 147, 154, 403, 411, 429], "yet": [1, 121, 122, 134, 425], "plai": [1, 3, 149, 150, 155, 172, 410, 411, 416, 426, 429], "role": [1, 3, 140, 410, 416, 429], "opposit": [1, 422], "direct": [1, 2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 252, 256, 333, 410, 416], "faster": [1, 2, 4, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 90, 91, 142, 350, 351, 352, 353, 412, 413, 422, 423], "share": [1, 3, 6, 8, 23, 52, 54, 58, 59, 67, 68, 71, 73, 94, 96, 97, 98, 102, 104, 105, 109, 111, 113, 117, 126, 147, 154, 212, 220, 254, 258, 264, 265, 293, 294, 295, 315, 316, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 400, 402, 404, 411, 413, 419, 421, 422, 423, 428, 429], "among": [1, 3, 149, 150, 212, 324, 338, 422, 423], "prohibit": [1, 3, 115], "slow": [1, 3, 4, 11, 52, 54, 59, 73], "compar": [1, 3, 89, 115, 316, 318, 331, 336, 338, 340, 341, 381, 405, 409, 411, 413, 415, 416, 422, 423, 426, 429], "gpu": [1, 7, 8, 27, 38, 46, 56, 57, 61, 66, 96, 97, 117, 125, 129, 130, 133, 147, 148, 154, 155, 222, 409, 411, 412, 422, 423, 429], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 67, 71, 73, 83, 101, 102, 109, 110, 115, 121, 122, 129, 155, 168, 191, 212, 220, 231, 232, 233, 234, 245, 248, 252, 254, 256, 258, 261, 274, 275, 284, 285, 301, 305, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 404, 405, 409, 410, 411, 413, 415, 422, 423, 424, 426, 429], "keyword": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 101, 102, 104, 107, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 168, 169, 173, 175, 176, 179, 195, 203, 204, 209, 211, 212, 213, 214, 215, 216, 218, 222, 231, 232, 233, 236, 250, 254, 258, 262, 263, 264, 265, 276, 277, 292, 296, 297, 300, 301, 302, 304, 305, 308, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 343, 348, 350, 351, 352, 353, 354, 358, 368, 377, 386, 397, 409, 410, 411, 413, 415, 418, 422, 423, 426, 428, 429], "build": [1, 2, 3, 7, 23, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 130, 131, 134, 135, 139, 140, 142, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 200, 220, 222, 234, 254, 258, 261, 299, 301, 305, 386, 393, 394, 395, 404, 406, 411, 412, 413, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429], "mani": [1, 2, 3, 4, 58, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 142, 143, 151, 315, 317, 324, 332, 335, 404, 409, 410, 411, 413, 414, 415, 417, 419, 422, 423, 424, 426, 428, 429], "eg": [1, 2, 3, 12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 97, 98, 111, 113, 117, 123, 124, 125, 128, 129, 130, 131, 133, 147, 148, 151, 154, 155, 180, 207, 214, 264, 296, 370], "gymnasium": [1, 2, 3, 5, 12, 66, 125, 128, 129, 130, 136, 137, 147, 148, 154, 155, 161, 164, 183, 204, 207, 219, 410, 411, 413, 424, 428], "warn": [1, 3, 57, 61, 231, 232, 250, 276, 277, 410], "quickli": [1, 3, 410, 422, 423, 429], "becom": [1, 2, 3, 4, 21, 252, 256, 422, 423, 429], "quit": [1, 3, 11, 83, 125, 129, 147, 148, 154, 155, 409, 410, 411, 413, 415, 422, 423, 429], "annoi": [1, 3], "By": [1, 2, 3, 31, 32, 39, 50, 63, 123, 124, 125, 128, 129, 130, 131, 139, 140, 147, 148, 149, 150, 151, 154, 155, 158, 159, 288, 305, 333, 381, 400, 405, 409, 412, 422, 425, 426, 429], "filter": [1, 2, 3, 4, 72, 102, 109, 110, 315, 316, 318, 319, 323, 324, 331, 335, 336, 338, 414], "out": [1, 2, 3, 4, 5, 9, 21, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 85, 89, 94, 102, 109, 110, 125, 129, 147, 148, 149, 150, 154, 155, 209, 222, 224, 231, 252, 253, 256, 262, 263, 266, 267, 268, 277, 292, 296, 297, 298, 301, 302, 303, 304, 305, 333, 346, 347, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 422, 423, 424, 426, 428, 429], "still": [1, 2, 3, 9, 56, 66, 74, 89, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 212, 232, 276, 332, 333, 409, 410, 412, 421, 424, 426, 429], "wish": [1, 3, 11, 14, 15, 17, 89, 164, 416, 426], "displai": [1, 3, 7, 125, 129, 147, 148, 154, 155, 386, 406, 409, 410, 423, 424], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 172, 173, 176, 178, 181, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 197, 198, 200, 202, 203, 204, 207, 209, 211, 212, 213, 214, 215, 216, 218, 220, 222, 224, 229, 230, 232, 233, 234, 236, 237, 238, 240, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 348, 350, 351, 352, 353, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 377, 380, 381, 383, 384, 386, 400, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "central": [2, 264, 265, 266, 409, 410, 414, 422, 423, 426], "part": [2, 3, 4, 8, 27, 38, 46, 56, 57, 60, 61, 66, 73, 83, 86, 87, 89, 90, 91, 121, 125, 129, 134, 145, 147, 148, 154, 155, 171, 191, 200, 203, 222, 229, 254, 258, 309, 378, 400, 409, 411, 412, 413, 419, 422, 424, 429], "algorithm": [2, 3, 8, 9, 141, 165, 315, 335, 336, 338, 402, 405, 406, 409, 410, 411, 412, 413, 415, 416, 417, 418, 422, 423, 425, 426, 428], "implement": [2, 3, 9, 12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 99, 111, 112, 125, 129, 141, 142, 147, 148, 154, 155, 169, 176, 178, 179, 183, 186, 189, 197, 198, 204, 207, 213, 214, 220, 222, 235, 237, 252, 253, 254, 255, 256, 257, 258, 284, 285, 286, 315, 316, 318, 321, 322, 323, 329, 331, 333, 334, 335, 337, 338, 340, 368, 378, 391, 404, 406, 409, 410, 411, 412, 413, 422, 423, 424, 428], "wide": [2, 3, 5, 428], "give": [2, 3, 7, 67, 86, 125, 129, 141, 147, 148, 154, 155, 172, 403, 405, 409, 410, 413, 422, 423, 424, 425, 428], "abil": [2, 333, 424, 426], "panel": [2, 411], "usag": [2, 3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 85, 91, 94, 115, 169, 172, 182, 235, 254, 258, 318, 323, 331, 338, 342, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "includ": [2, 3, 4, 7, 9, 21, 27, 38, 46, 56, 57, 61, 66, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 111, 113, 117, 125, 129, 141, 145, 146, 147, 148, 154, 155, 208, 212, 214, 220, 222, 254, 258, 315, 318, 333, 338, 389, 404, 406, 409, 410, 411, 412, 413, 422, 423, 424, 426, 429], "almost": [2, 263, 412], "physic": [2, 6, 7, 94, 147, 148, 151, 406, 409, 422, 423, 424], "theori": 2, "crude": 2, "made": [2, 3, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 111, 113, 117, 125, 128, 129, 130, 147, 148, 154, 155, 209, 222, 266, 276, 277, 320, 333, 348, 409, 410, 412, 422, 423, 425, 426, 428], "liststorag": [2, 41, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 426], "veri": [2, 3, 134, 135, 410, 414, 417, 422, 424, 426, 428, 429], "ineffici": [2, 4], "allow": [2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 50, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 73, 83, 89, 102, 104, 107, 109, 110, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 168, 169, 198, 222, 229, 259, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 344, 348, 404, 406, 409, 411, 412, 413, 414, 415, 416, 422, 423, 424, 426, 428, 429], "complex": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 409, 410, 414, 415], "tensor": [2, 3, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 107, 109, 110, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 166, 168, 169, 171, 172, 173, 176, 178, 180, 181, 182, 183, 185, 188, 191, 193, 195, 196, 197, 198, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 227, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 313, 315, 316, 318, 319, 320, 322, 323, 324, 327, 328, 331, 333, 335, 336, 337, 338, 340, 341, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 428, 429], "contigu": [2, 3, 8, 28, 31, 38, 74, 86, 89, 90, 125, 129, 147, 148, 154, 155, 209, 227, 411, 412, 422, 423, 424, 426, 428, 429], "tensorstorag": [2, 58, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 115, 118, 417, 426], "lazymemmapstorag": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 109, 110, 171, 172, 409, 410, 412, 417, 422, 425, 426], "citizen": 2, "pytre": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 118], "tupl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 102, 104, 109, 113, 115, 123, 124, 125, 128, 129, 130, 147, 148, 154, 155, 189, 191, 222, 236, 240, 246, 247, 254, 257, 258, 259, 266, 269, 274, 278, 279, 297, 298, 302, 303, 308, 315, 316, 318, 319, 323, 324, 326, 331, 333, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 381, 384, 393, 423, 426, 428], "dictionari": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 102, 107, 109, 110, 125, 128, 129, 130, 139, 140, 147, 148, 154, 155, 158, 159, 209, 212, 214, 222, 301, 305, 318, 338, 340, 381, 398, 399, 400, 406, 410, 411, 414, 416, 422, 424, 429], "nest": [2, 3, 23, 27, 31, 32, 35, 37, 38, 39, 46, 47, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 73, 79, 96, 97, 100, 104, 117, 125, 128, 129, 130, 147, 148, 154, 155, 172, 207, 210, 212, 222, 230, 300, 350, 351, 352, 353, 354, 368, 406, 410, 411, 413, 423, 424, 426, 428], "construct": [2, 3, 5, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 104, 125, 126, 128, 129, 147, 148, 149, 154, 155, 178, 181, 222, 224, 254, 258, 281, 305, 386, 404, 410, 411, 412, 415, 422, 424, 426, 429], "ram": [2, 128, 130, 418, 426, 429], "prealloc": [2, 3, 147, 154, 424], "ve": [2, 60, 409, 412, 419], "been": [2, 3, 5, 7, 8, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 104, 108, 125, 129, 133, 139, 140, 147, 148, 154, 155, 189, 207, 208, 213, 232, 252, 254, 256, 258, 266, 277, 300, 315, 333, 335, 337, 409, 410, 411, 412, 421, 422, 423, 424, 426, 428, 429], "here": [2, 3, 4, 7, 8, 9, 10, 14, 15, 90, 91, 115, 123, 124, 125, 129, 133, 147, 148, 149, 150, 154, 155, 172, 212, 266, 377, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 419, 422, 423, 424, 426, 428, 429], "start": [2, 3, 4, 5, 14, 21, 24, 41, 71, 72, 83, 91, 102, 109, 110, 125, 126, 129, 138, 147, 148, 154, 155, 177, 229, 382, 408, 409, 410, 413, 420, 423, 424, 426, 427, 429], "replay_buff": [2, 8, 14, 15, 16, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 383, 396, 409, 410, 411, 417, 422, 423, 426], "import": [2, 3, 4, 6, 10, 11, 12, 14, 15, 16, 17, 21, 22, 23, 35, 41, 46, 50, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 164, 165, 166, 168, 169, 171, 172, 175, 182, 183, 188, 189, 191, 193, 195, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 212, 213, 218, 220, 222, 223, 227, 229, 230, 234, 236, 240, 241, 242, 243, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 269, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 368, 370, 380, 381, 396, 404, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "rb": [2, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 172, 200, 222, 410, 412, 413, 417, 419, 423, 425, 426, 428], "10": [2, 3, 7, 22, 23, 25, 26, 27, 30, 34, 42, 46, 53, 58, 60, 66, 67, 68, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 104, 109, 110, 115, 117, 121, 122, 125, 126, 129, 134, 135, 141, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 165, 166, 169, 171, 172, 208, 210, 211, 222, 234, 236, 239, 240, 242, 244, 246, 250, 252, 253, 254, 256, 257, 258, 261, 263, 274, 276, 277, 288, 301, 308, 312, 316, 320, 322, 329, 335, 336, 337, 341, 348, 350, 351, 352, 353, 356, 370, 378, 406, 409, 410, 411, 412, 413, 414, 415, 419, 422, 423, 424, 426, 428, 429], "add": [2, 3, 4, 6, 21, 27, 31, 32, 38, 39, 46, 53, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 104, 105, 115, 116, 119, 120, 125, 129, 147, 148, 154, 155, 172, 189, 214, 222, 254, 258, 267, 299, 315, 382, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 426, 428], "string": [2, 18, 19, 20, 27, 38, 46, 55, 56, 57, 61, 66, 72, 73, 92, 125, 129, 139, 145, 147, 148, 154, 155, 164, 195, 207, 218, 222, 254, 258, 297, 300, 301, 302, 314, 369, 385, 405, 409, 411, 412, 426], "element": [2, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 41, 42, 44, 50, 53, 58, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 101, 102, 104, 109, 110, 115, 117, 144, 147, 154, 165, 172, 196, 205, 208, 209, 231, 232, 237, 238, 252, 253, 256, 291, 292, 297, 300, 304, 305, 309, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 378, 405, 409, 411, 415, 417, 426, 429], "30": [2, 3, 58, 66, 87, 109, 110, 168, 190, 280, 281, 368, 372, 408, 409, 410, 411, 412, 417, 422, 423, 424, 426, 427], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 109, 110, 111, 113, 115, 117, 125, 126, 128, 129, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 276, 277, 278, 279, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 381, 382, 383, 384, 385, 386, 390, 391, 392, 396, 398, 399, 400, 404, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 426, 428, 429], "int": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 109, 110, 111, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 154, 155, 158, 159, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 180, 185, 186, 190, 191, 193, 195, 196, 199, 206, 207, 210, 214, 215, 216, 218, 222, 224, 227, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 296, 297, 298, 300, 301, 303, 304, 305, 315, 316, 317, 324, 326, 327, 332, 333, 334, 335, 336, 340, 341, 350, 352, 353, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 378, 379, 380, 381, 383, 386, 388, 394, 398, 399, 400, 413, 424, 426], "entri": [2, 3, 14, 15, 17, 23, 27, 31, 32, 35, 38, 39, 41, 46, 52, 54, 55, 56, 57, 59, 61, 63, 64, 66, 72, 73, 80, 85, 86, 87, 88, 90, 91, 109, 110, 123, 124, 125, 128, 129, 130, 131, 139, 140, 147, 148, 151, 154, 155, 158, 159, 168, 172, 174, 175, 177, 178, 179, 181, 182, 185, 188, 191, 193, 195, 198, 200, 203, 205, 207, 208, 209, 212, 215, 218, 220, 222, 229, 230, 254, 262, 263, 296, 297, 300, 302, 303, 316, 318, 338, 350, 351, 352, 353, 404, 409, 411, 412, 414, 415, 416, 418, 422, 423, 424, 425, 426, 428, 429], "onto": [2, 8, 50, 52, 54, 59, 73, 179, 227, 231, 232, 276, 277, 292, 297, 298, 301, 302, 303, 304, 305, 412, 424], "__setitem__": 2, "indic": [2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 101, 102, 104, 105, 107, 108, 109, 110, 115, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 142, 143, 147, 148, 151, 154, 155, 158, 159, 165, 172, 173, 207, 208, 209, 210, 214, 222, 230, 237, 238, 259, 262, 263, 265, 276, 277, 300, 302, 303, 311, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 390, 400, 403, 406, 411, 412, 413, 417, 418, 419, 423, 424, 426, 429], "without": [2, 3, 7, 9, 14, 15, 16, 27, 38, 46, 52, 54, 56, 57, 59, 60, 61, 66, 71, 73, 83, 85, 89, 109, 110, 125, 129, 147, 148, 154, 155, 158, 159, 166, 168, 178, 181, 211, 222, 252, 253, 256, 257, 294, 295, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 349, 350, 351, 352, 353, 354, 396, 403, 404, 409, 410, 411, 413, 414, 415, 416, 417, 422, 423, 424, 426, 429], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 52, 53, 54, 56, 57, 59, 60, 61, 66, 67, 73, 101, 102, 125, 129, 141, 147, 148, 149, 150, 154, 155, 156, 157, 166, 168, 169, 178, 180, 181, 197, 207, 208, 212, 214, 217, 220, 222, 230, 231, 232, 234, 235, 250, 252, 254, 258, 261, 266, 276, 277, 301, 302, 303, 304, 305, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 348, 350, 351, 352, 353, 354, 381, 386, 388, 391, 392, 395, 396, 406, 410, 411, 412, 413, 416, 419, 422, 423, 424, 426, 429], "length": [2, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 55, 56, 60, 62, 63, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 92, 102, 109, 110, 113, 125, 129, 134, 135, 147, 148, 154, 155, 165, 196, 220, 234, 237, 238, 240, 242, 244, 252, 256, 259, 261, 264, 265, 292, 304, 309, 378, 383, 409, 411, 412, 417, 419, 424, 426, 429], "cursor": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "afterward": [2, 27, 38, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 422, 429], "tell": [2, 3, 4, 7, 149, 150, 212, 409, 412, 417, 422, 423], "our": [2, 3, 7, 8, 11, 18, 41, 58, 172, 370, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 428], "far": [2, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 255, 285, 286, 419, 424, 429], "restrict": [2, 3, 410, 425, 426, 429], "empti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 104, 125, 129, 135, 144, 147, 148, 154, 155, 178, 181, 195, 197, 210, 214, 216, 218, 222, 227, 374, 409, 424], "64": [2, 3, 52, 54, 59, 73, 83, 89, 104, 172, 199, 240, 241, 249, 254, 258, 265, 266, 278, 348, 409, 410, 411, 412, 413, 415, 419, 421, 424, 426, 428, 429], "dtype": [2, 3, 14, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 109, 110, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 166, 169, 170, 176, 178, 179, 180, 181, 182, 183, 189, 191, 193, 195, 197, 198, 200, 204, 207, 209, 211, 213, 214, 216, 218, 222, 224, 227, 229, 230, 234, 236, 246, 247, 252, 253, 254, 256, 257, 258, 261, 267, 268, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 356, 404, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "unit8": 2, "img": 2, "randint": [2, 72, 104, 211, 413, 426], "255": [2, 104, 211, 413, 424, 426], "uint8": [2, 3, 31, 52, 54, 59, 73, 83, 89, 123, 124, 139, 140, 182, 193, 211, 410, 418, 425, 426, 429], "next": [2, 3, 4, 8, 14, 15, 16, 23, 31, 32, 35, 37, 39, 41, 46, 53, 58, 60, 63, 64, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 139, 140, 141, 145, 146, 147, 148, 152, 153, 154, 155, 156, 158, 159, 165, 168, 169, 171, 172, 178, 181, 182, 183, 188, 189, 193, 197, 198, 200, 203, 204, 207, 209, 212, 219, 220, 222, 227, 229, 234, 253, 254, 257, 258, 261, 281, 300, 310, 312, 315, 316, 318, 319, 320, 322, 323, 324, 325, 331, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 370, 381, 384, 410, 412, 413, 415, 418, 419, 421, 424, 425, 428, 429], "ask": [2, 8, 83, 89, 102, 109, 110, 370, 411, 412, 414, 415, 422, 423, 425, 429], "automat": [2, 3, 5, 28, 41, 71, 74, 91, 96, 97, 104, 110, 117, 125, 128, 129, 130, 147, 148, 149, 150, 154, 155, 168, 178, 181, 191, 209, 219, 237, 254, 258, 292, 300, 301, 368, 404, 409, 411, 414, 415, 422, 423, 424, 426, 428], "hand": [2, 3, 7, 21, 31, 422, 423, 424], "look": [2, 3, 5, 7, 8, 27, 38, 46, 56, 57, 61, 66, 102, 125, 129, 138, 147, 148, 149, 150, 154, 155, 195, 196, 216, 222, 235, 301, 305, 306, 307, 405, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 429], "assum": [2, 3, 6, 14, 15, 16, 31, 50, 60, 61, 67, 68, 85, 87, 89, 90, 91, 93, 94, 100, 109, 125, 129, 147, 148, 154, 155, 171, 174, 177, 185, 195, 196, 203, 209, 214, 216, 218, 227, 236, 254, 258, 288, 291, 308, 320, 324, 325, 338, 348, 359, 360, 361, 362, 364, 365, 366, 367, 370, 409, 411, 421, 424], "lead": [2, 3, 4, 8, 10, 12, 23, 31, 32, 39, 46, 53, 58, 63, 67, 68, 73, 85, 108, 123, 124, 125, 128, 130, 131, 209, 255, 278, 285, 286, 291, 409, 412, 413, 422, 423, 424, 426, 428], "leav": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 204, 224, 230, 409, 417, 426], "match": [2, 3, 6, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 104, 113, 123, 124, 125, 126, 128, 129, 130, 131, 147, 148, 154, 155, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 237, 238, 245, 254, 258, 259, 264, 265, 284, 292, 296, 297, 301, 302, 304, 305, 308, 309, 316, 318, 324, 332, 334, 336, 338, 383, 388, 404, 409, 411, 413, 421, 423, 424, 426, 429], "don": [2, 3, 4, 6, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 172, 410, 411, 413, 417, 426, 428, 429], "throw": [2, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 222, 429], "rb_td": 2, "batch_siz": [2, 3, 8, 14, 15, 16, 23, 31, 35, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 102, 103, 104, 109, 110, 115, 117, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 169, 171, 172, 176, 178, 181, 182, 183, 193, 197, 198, 200, 204, 207, 209, 213, 214, 222, 229, 230, 234, 236, 244, 245, 246, 247, 250, 254, 258, 261, 276, 277, 278, 279, 287, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 370, 378, 383, 404, 409, 410, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "max": [2, 23, 50, 54, 67, 72, 92, 101, 102, 115, 135, 180, 210, 276, 277, 316, 317, 318, 324, 334, 336, 338, 409, 411, 412, 413, 419], "label": [2, 54, 55, 60, 72, 409, 422, 426], "100": [2, 14, 15, 16, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 175, 182, 191, 200, 205, 207, 222, 263, 264, 298, 300, 370, 379, 396, 410, 411, 412, 413, 414, 416, 419, 421, 422, 423, 424, 425, 426, 428, 429], "rb_pytre": 2, "randn": [2, 53, 56, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 102, 104, 109, 110, 117, 171, 191, 227, 236, 239, 240, 244, 246, 247, 252, 253, 256, 257, 262, 263, 264, 269, 272, 274, 279, 292, 293, 294, 295, 296, 297, 301, 302, 304, 307, 308, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 385, 404, 413, 426, 428, 429], "c": [2, 3, 6, 7, 31, 52, 54, 56, 58, 59, 66, 67, 68, 73, 88, 191, 211, 256, 257, 410, 426], "zero": [2, 3, 4, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 109, 110, 115, 117, 125, 129, 147, 148, 154, 155, 169, 171, 173, 178, 180, 181, 191, 197, 200, 222, 227, 229, 233, 234, 241, 242, 243, 249, 250, 252, 253, 254, 256, 257, 258, 262, 263, 265, 266, 276, 277, 278, 287, 303, 311, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 356, 412, 413, 426, 428, 429], "assert": [2, 3, 6, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 125, 129, 132, 147, 148, 154, 155, 164, 165, 169, 172, 175, 178, 181, 189, 198, 205, 220, 224, 227, 236, 265, 269, 288, 350, 351, 352, 353, 378, 385, 417, 421, 426, 429], "len": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 117, 193, 237, 238, 259, 265, 409, 413, 417, 419, 422, 424, 425, 426, 428], "ambigu": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "signatur": [2, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 113, 125, 129, 147, 148, 154, 155, 169, 176, 195, 209, 213, 214, 216, 218, 222, 304, 405, 409, 413, 414, 424], "deal": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 333, 405, 409, 411, 423, 426], "interpret": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 410], "put": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 129, 139, 140, 155, 158, 159, 220, 377, 400, 404, 410, 411, 412, 414, 422, 424], "solv": [2, 4, 9, 10, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 403, 409, 410, 411, 417, 419, 422, 423, 424, 426], "clear": [2, 3, 11, 27, 31, 32, 38, 39, 40, 46, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 133, 147, 148, 154, 155, 222, 379, 414, 417], "cut": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "distinct": [2, 3, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 169, 416, 421], "view": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 166, 222, 247, 252, 256, 259, 414, 424, 426, 428, 429], "through": [2, 3, 4, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 31, 32, 39, 53, 57, 58, 61, 63, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 128, 129, 130, 133, 134, 135, 138, 147, 148, 149, 150, 154, 155, 168, 178, 181, 196, 236, 259, 278, 300, 301, 305, 306, 307, 311, 333, 350, 351, 352, 353, 404, 405, 409, 410, 411, 414, 416, 421, 422, 423, 424, 425, 426, 429], "collate_fn": [2, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 426, 428], "__init__": [2, 3, 7, 125, 141, 156, 164, 166, 169, 178, 181, 197, 234, 245, 247, 252, 256, 261, 309, 316, 318, 319, 324, 331, 336, 338, 340, 341, 406, 424, 429], "major": 2, "worri": [2, 69], "even": [2, 3, 4, 8, 11, 15, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 96, 97, 98, 102, 109, 111, 113, 117, 125, 126, 129, 133, 147, 148, 154, 155, 168, 230, 409, 411, 414, 422, 423, 424, 429], "though": [2, 4, 11, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 259, 411, 422, 423], "too": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 56, 60, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 190, 209, 255, 285, 286, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 410, 415, 418, 424, 426, 429], "latter": [2, 18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 85, 125, 129, 147, 148, 154, 155, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 335, 398, 399], "inv": [2, 3, 175, 180, 183, 193, 200, 205, 215, 424], "obvious": [2, 413], "ignor": [2, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 61, 62, 63, 66, 69, 71, 74, 75, 76, 77, 78, 94, 125, 129, 147, 148, 154, 155, 180, 183, 204, 211, 222, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 262, 263, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 350, 426], "multithread": [2, 3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 142, 143, 417, 426], "thread": [2, 14, 15, 17, 52, 54, 59, 73, 121, 122, 134, 135, 147, 154], "prefetch": [2, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 409, 410, 412, 426], "advis": [2, 11, 86, 418, 429], "benchmark": [2, 3, 9, 121, 122, 134, 135], "techniqu": [2, 8, 147, 154, 410, 413, 417, 426], "real": [2, 5, 89, 305, 405, 412, 413, 424], "life": [2, 182], "adopt": [2, 3, 5, 409, 429], "throughput": [2, 9, 135, 409], "constant": [2, 11, 33, 172, 191, 208, 406, 409, 411, 412, 429], "throughout": [2, 3, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 411, 422, 429], "further": [2, 3, 5, 24, 409, 411, 413, 414], "refin": [2, 89, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348], "coupl": [2, 412, 415, 416, 424, 426], "get": [2, 3, 4, 6, 7, 8, 9, 31, 32, 39, 41, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 73, 83, 85, 89, 96, 97, 102, 109, 110, 111, 113, 115, 117, 125, 126, 129, 147, 148, 154, 155, 166, 171, 173, 178, 180, 181, 189, 191, 196, 208, 209, 211, 214, 220, 250, 292, 301, 302, 305, 312, 350, 351, 352, 353, 354, 370, 374, 404, 408, 409, 410, 411, 412, 413, 420, 422, 423, 424, 426, 427, 428, 429], "first_elt": 2, "128": [2, 83, 85, 89, 110, 121, 122, 134, 135, 241, 244, 410, 412, 413, 419, 422, 424, 425, 426], "wa": [2, 3, 5, 7, 31, 32, 39, 53, 56, 58, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 108, 109, 125, 129, 147, 148, 154, 155, 214, 224, 230, 256, 315, 317, 330, 332, 335, 337, 339, 356, 405, 410, 411, 414, 415, 421, 422, 426, 428], "print": [2, 3, 6, 7, 14, 15, 16, 21, 22, 23, 25, 27, 31, 32, 35, 38, 39, 41, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 104, 109, 110, 115, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 161, 164, 165, 168, 169, 172, 173, 178, 179, 180, 181, 188, 191, 197, 198, 200, 203, 207, 209, 210, 211, 220, 222, 227, 229, 230, 237, 238, 240, 241, 242, 243, 244, 247, 249, 250, 254, 258, 259, 262, 263, 264, 265, 269, 272, 275, 276, 277, 279, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 307, 309, 312, 333, 368, 396, 404, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 173], "larger": [2, 4, 66, 254, 258, 323, 331, 428], "volum": 2, "due": [2, 3, 5, 23, 416, 425, 426, 429], "memorymappedtensor": [2, 35, 52, 54, 64, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 372, 417, 425], "well": [2, 3, 8, 12, 21, 23, 27, 38, 46, 53, 55, 56, 57, 58, 61, 66, 67, 68, 71, 102, 107, 111, 118, 125, 129, 147, 148, 154, 155, 214, 222, 235, 240, 256, 280, 281, 333, 340, 354, 404, 409, 410, 412, 413, 414, 415, 416, 418, 425, 426, 428, 429], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 139, 140, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 177, 178, 179, 181, 203, 206, 208, 215, 222, 234, 256, 304, 305, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 377, 404, 409, 411, 412, 413, 417, 422], "file": [2, 6, 7, 8, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 94, 158, 369, 370, 372, 386, 406, 408, 410, 413, 422, 423, 426, 427], "locat": [2, 7, 52, 54, 59, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 147, 148, 154, 155, 177, 182, 191, 202, 255, 269, 285, 286, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 409, 410, 411, 418, 422, 423, 426], "improv": [2, 4, 11, 186, 315, 405, 413, 422, 423, 426], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 147, 154, 411, 422, 426], "found": [2, 3, 6, 7, 10, 14, 15, 16, 17, 21, 23, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 72, 73, 83, 85, 86, 87, 89, 90, 91, 109, 110, 123, 124, 125, 128, 129, 130, 133, 147, 148, 154, 155, 166, 172, 200, 203, 210, 220, 222, 230, 250, 264, 265, 301, 305, 332, 333, 335, 409, 410, 412, 413, 414, 416, 418, 424, 426, 428], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 55, 62, 63, 71, 74, 75, 76, 77, 78, 96, 102, 145, 146, 180, 212, 233, 256, 257, 323, 412, 413, 417, 426], "sharabl": [2, 147, 154], "collabor": [2, 89], "rather": [2, 4, 113, 145, 146, 198, 404, 409, 410, 411, 414, 416, 422, 423, 426], "incur": [2, 121, 122, 134, 135], "transmiss": 2, "overhead": [2, 121, 122, 134, 135, 147, 154], "content": [2, 8, 16, 31, 32, 39, 52, 53, 54, 58, 59, 63, 67, 68, 73, 108, 125, 128, 129, 130, 142, 147, 148, 154, 155, 197, 237, 238, 259, 264, 265, 301, 333, 411, 424, 428], "map": [2, 3, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 125, 129, 138, 139, 140, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 160, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 191, 193, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 222, 227, 247, 269, 292, 293, 294, 295, 297, 301, 302, 304, 305, 307, 308, 309, 310, 318, 338, 348, 381, 402, 404, 405, 409, 410, 411, 412, 415, 416, 425], "writer": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 102, 104, 105, 109, 115, 116, 117, 120, 411, 426], "tensordictroundrobinwrit": [2, 104], "goe": [2, 4, 73, 149, 150, 409, 411, 422, 423, 429], "prioritizedsampl": [2, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 102, 104, 320, 325, 348, 409, 426], "access": [2, 3, 7, 8, 11, 27, 38, 46, 53, 56, 57, 61, 66, 86, 88, 125, 129, 147, 148, 154, 155, 195, 216, 222, 400, 403, 409, 414, 422, 423, 424, 426, 428], "tensordictreplaybuff": [2, 53, 58, 67, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 109, 110, 115, 171, 172, 383, 396, 402, 409, 410, 412, 426], "mp": [2, 18, 19, 20, 83, 84, 85, 86, 87, 88, 89, 90, 91, 126, 220], "def": [2, 3, 12, 22, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 141, 147, 148, 154, 155, 164, 166, 168, 169, 178, 181, 197, 212, 214, 222, 234, 247, 252, 253, 256, 257, 261, 266, 300, 301, 309, 316, 318, 319, 324, 331, 333, 336, 338, 340, 341, 368, 406, 409, 410, 413, 421, 422, 423, 424, 426, 428, 429], "td": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 52, 53, 54, 56, 58, 59, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 115, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 136, 137, 145, 146, 147, 148, 154, 155, 156, 157, 166, 169, 171, 173, 178, 179, 180, 181, 188, 189, 191, 200, 203, 209, 211, 214, 220, 223, 229, 234, 236, 246, 247, 250, 254, 258, 260, 261, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 301, 302, 304, 307, 309, 348, 351, 352, 353, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 369, 378, 385, 404, 405, 409, 412, 423, 424, 428], "__name__": [2, 3, 14, 15, 22, 126, 368, 410, 428], "__main__": [2, 3, 14, 15, 22, 126, 368, 428], "21": [2, 89, 90, 109, 110, 147, 149, 150, 154, 408, 409, 410, 411, 417, 421, 424, 427], "proc": 2, "target": [2, 4, 8, 21, 24, 27, 38, 46, 56, 57, 61, 66, 125, 126, 129, 147, 148, 154, 155, 208, 213, 222, 275, 304, 305, 315, 316, 317, 318, 319, 320, 322, 324, 325, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 352, 353, 354, 389, 395, 396, 405, 406, 412, 413, 419, 422, 424], "arg": [2, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 102, 104, 109, 110, 111, 113, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 166, 167, 176, 195, 197, 206, 209, 212, 213, 214, 215, 217, 218, 222, 231, 232, 234, 236, 237, 238, 245, 246, 250, 251, 254, 258, 259, 260, 261, 276, 277, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 377, 380, 383, 386, 400, 410, 413], "join": [2, 126, 402, 410, 411, 413, 422], "now": [2, 3, 7, 53, 58, 67, 68, 104, 145, 146, 147, 172, 204, 265, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 425, 426, 429], "20": [2, 66, 72, 90, 109, 110, 115, 125, 129, 133, 145, 146, 147, 148, 154, 155, 208, 222, 249, 252, 253, 256, 257, 275, 296, 378, 409, 410, 411, 412, 413, 422, 424, 426, 428, 429], "_data": [2, 424], "It": [2, 3, 4, 7, 23, 27, 31, 32, 38, 39, 46, 55, 56, 57, 60, 61, 63, 66, 67, 69, 72, 85, 91, 104, 107, 115, 120, 125, 129, 131, 141, 142, 147, 148, 149, 150, 154, 155, 158, 159, 169, 171, 182, 189, 191, 196, 208, 212, 214, 219, 222, 224, 231, 240, 242, 248, 250, 264, 265, 275, 276, 277, 278, 280, 281, 287, 288, 298, 300, 303, 305, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 341, 348, 349, 350, 368, 377, 381, 403, 404, 405, 409, 410, 412, 413, 414, 422, 423, 424, 425, 426, 428, 429], "difficult": [2, 4, 147, 418], "pai": [2, 8, 409, 412], "word": [2, 3, 11, 60, 83, 85, 87, 89, 90, 91, 333, 409, 417, 424, 429], "1m": [2, 83, 89, 389, 409, 411, 412], "doe": [2, 3, 18, 52, 53, 54, 59, 67, 72, 73, 83, 85, 89, 93, 94, 100, 101, 102, 109, 111, 113, 120, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 220, 235, 244, 245, 252, 253, 254, 256, 257, 258, 267, 275, 288, 296, 306, 307, 315, 317, 325, 332, 333, 335, 349, 386, 406, 409, 410, 411, 412, 414, 417, 422, 424, 426, 429], "howev": [2, 3, 5, 7, 27, 38, 46, 56, 57, 61, 66, 109, 110, 125, 129, 147, 148, 154, 155, 172, 203, 208, 212, 214, 222, 315, 317, 318, 332, 335, 337, 338, 404, 409, 410, 412, 413, 416, 424, 426, 429], "capac": [2, 53, 58, 67, 68, 96, 97, 101, 109, 117, 411, 417], "There": [2, 10, 104, 235, 254, 258, 315, 335, 404, 406, 411, 412, 413, 415, 417, 422, 423, 424, 426, 428, 429], "circumv": 2, "account": [2, 96, 97, 117, 125, 128, 129, 130, 147, 148, 154, 155, 168, 172, 262, 263, 404, 410, 412, 426, 429], "save": [2, 3, 8, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 64, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 104, 111, 112, 113, 117, 118, 125, 129, 147, 148, 154, 155, 219, 222, 369, 370, 372, 377, 386, 406, 413, 417, 418, 419, 422, 423], "convent": [2, 3, 83, 85, 86, 87, 88, 89, 90, 91, 125, 129, 147, 148, 154, 155, 158, 159, 405, 409, 412, 422, 423, 424], "overridden": [2, 3, 27, 38, 56, 57, 61, 66, 83, 86, 87, 89, 90, 91, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 350, 352, 353, 412, 422], "dim_extend": [2, 53, 58, 67, 68], "obtain": [2, 7, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 60, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 147, 148, 154, 155, 171, 195, 208, 218, 234, 236, 275, 278, 383, 409, 411, 414, 415, 416, 422, 423], "counterpart": 2, "desir": [2, 3, 11, 27, 30, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 167, 169, 176, 191, 193, 195, 196, 209, 213, 214, 216, 218, 222, 228, 237, 238, 245, 259, 265, 292, 297, 298, 301, 302, 303, 304, 305, 404, 409, 413, 422, 423, 424, 426], "diversifi": 2, "offer": [2, 3, 7, 121, 122, 125, 129, 134, 135, 139, 140, 147, 148, 154, 155, 212, 368, 404, 409, 410, 413, 414, 416, 417, 422, 424, 426, 429], "accomplish": [2, 125, 129, 147, 148, 154, 155, 224, 414], "__especially__": 2, "offlin": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 83, 84, 86, 125, 129, 147, 148, 154, 155, 172, 224, 316, 322, 323, 331, 340, 377, 406, 414, 425, 426], "docstr": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 414, 415], "extens": [2, 53, 58, 67, 68, 110, 235, 406, 426], "detail": [2, 3, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 149, 150, 154, 155, 211, 214, 222, 235, 247, 252, 256, 266, 275, 298, 315, 325, 333, 335, 403, 406, 410, 413, 417, 421, 426], "note": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 125, 129, 147, 148, 154, 155, 178, 181, 212, 220, 222, 230, 235, 252, 254, 256, 258, 276, 277, 301, 305, 325, 410, 413, 415, 421, 422, 423, 429], "happi": [2, 413], "concaten": [2, 8, 14, 15, 21, 41, 42, 44, 89, 172, 173, 191, 213, 256, 259, 307, 409, 410, 415, 422, 423, 424, 426, 429], "schedul": [2, 4, 7, 60, 381, 411, 424], "transformedenv": [2, 3, 11, 46, 125, 126, 129, 147, 148, 154, 155, 165, 166, 169, 172, 175, 176, 178, 181, 182, 183, 185, 188, 189, 190, 191, 193, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 212, 213, 220, 222, 254, 258, 300, 370, 409, 410, 411, 412, 413, 414, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "stepcount": [2, 41, 46, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 212, 213, 222, 236, 409, 410, 411, 412, 413, 414, 419, 422, 423, 428], "gymenv": [2, 3, 5, 11, 14, 15, 16, 17, 21, 22, 35, 41, 46, 64, 66, 115, 125, 126, 129, 131, 147, 148, 154, 155, 165, 168, 169, 172, 175, 176, 182, 188, 189, 191, 193, 198, 199, 200, 203, 205, 208, 209, 210, 212, 213, 214, 220, 222, 236, 254, 258, 300, 368, 370, 396, 402, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 425, 426, 428, 429], "randompolici": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 172, 200, 402, 417, 426], "cartpol": [2, 3, 11, 35, 46, 64, 66, 123, 124, 125, 126, 129, 147, 148, 154, 155, 168, 169, 172, 203, 208, 220, 222, 300, 368, 410, 412, 415, 417, 418, 419, 426, 429], "v1": [2, 3, 11, 14, 15, 16, 17, 21, 22, 35, 46, 64, 66, 85, 87, 115, 125, 126, 128, 129, 130, 134, 135, 142, 147, 148, 154, 155, 168, 169, 172, 175, 183, 188, 189, 191, 198, 200, 203, 204, 205, 207, 208, 209, 210, 212, 213, 220, 222, 236, 254, 258, 300, 344, 359, 360, 361, 362, 364, 365, 366, 367, 368, 404, 410, 412, 414, 415, 416, 417, 418, 419, 424, 426, 428, 429], "action_spec": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 46, 121, 122, 125, 129, 134, 135, 141, 147, 148, 149, 150, 154, 155, 165, 166, 169, 172, 178, 181, 189, 197, 200, 223, 234, 247, 261, 279, 281, 292, 297, 301, 302, 316, 318, 320, 322, 336, 338, 340, 341, 396, 404, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 428, 429], "8": [2, 3, 6, 7, 46, 52, 54, 58, 59, 66, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 109, 110, 121, 122, 123, 124, 125, 129, 145, 146, 147, 148, 154, 155, 156, 165, 168, 208, 237, 238, 240, 241, 249, 259, 293, 294, 295, 301, 304, 307, 331, 408, 409, 410, 413, 417, 422, 424, 425, 426, 427, 428], "traj_kei": [2, 102, 109, 110, 426], "truncated_kei": [2, 102, 109, 110, 200, 207], "strict_length": [2, 83, 89, 102, 109, 110, 370], "i": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 35, 38, 39, 46, 53, 56, 57, 58, 61, 63, 64, 66, 68, 69, 96, 97, 101, 102, 109, 110, 117, 125, 129, 147, 148, 154, 155, 177, 195, 200, 203, 212, 214, 218, 222, 253, 257, 269, 279, 291, 298, 300, 301, 303, 304, 305, 315, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 378, 389, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 422, 423, 424, 426, 428, 429], "enumer": [2, 14, 15, 16, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 58, 61, 62, 63, 64, 66, 68, 71, 74, 75, 76, 77, 78, 110, 125, 129, 147, 148, 154, 155, 222, 342, 405, 409, 410, 411, 412, 419, 422, 426, 428], "break": [2, 5, 14, 15, 16, 21, 27, 38, 46, 56, 57, 58, 61, 66, 68, 83, 86, 87, 89, 90, 91, 92, 102, 109, 110, 115, 125, 129, 147, 148, 154, 155, 169, 172, 200, 220, 222, 254, 258, 285, 370, 410, 413, 417, 419, 426, 428], "step_count": [2, 14, 15, 16, 46, 125, 129, 134, 135, 147, 148, 154, 155, 207, 222, 411, 412, 413, 414, 419], "32": [2, 22, 31, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 135, 152, 153, 158, 159, 237, 238, 239, 240, 241, 243, 244, 249, 259, 264, 265, 270, 271, 274, 278, 287, 348, 368, 409, 410, 412, 413, 415, 416, 424, 425, 426, 428, 429], "33": [2, 27, 31, 38, 46, 56, 57, 61, 66, 104, 125, 129, 147, 148, 154, 155, 222, 237, 238, 259, 408, 410, 412, 424, 427, 429], "34": [2, 237, 238, 259, 408, 409, 410, 411, 423, 424, 427], "35": [2, 237, 238, 259, 410, 424, 425], "36": [2, 409, 410, 412, 424, 426], "37": [2, 171, 409, 410, 424, 425], "38": [2, 7, 409, 410, 424], "39": [2, 87, 134, 135, 409, 410, 422, 424, 425], "40": [2, 66, 134, 135, 408, 409, 410, 411, 413, 422, 424, 427], "41": [2, 109, 410, 424, 426], "11": [2, 10, 23, 50, 66, 72, 96, 97, 101, 110, 117, 126, 165, 211, 222, 234, 261, 409, 410, 411, 422, 424, 426], "12": [2, 10, 41, 66, 90, 96, 97, 110, 117, 134, 135, 147, 152, 153, 154, 222, 409, 410, 412, 422, 424, 425, 426], "13": [2, 5, 12, 66, 109, 110, 151, 219, 222, 409, 410, 424, 426], "14": [2, 6, 12, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 125, 129, 147, 148, 154, 155, 191, 222, 408, 409, 410, 411, 418, 422, 424, 425, 426, 427], "15": [2, 23, 83, 84, 85, 86, 87, 88, 89, 90, 91, 110, 125, 129, 147, 148, 154, 155, 222, 276, 277, 296, 326, 408, 409, 410, 411, 412, 422, 424, 426, 427], "16": [2, 3, 27, 38, 46, 56, 57, 61, 66, 90, 102, 110, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 172, 222, 409, 410, 411, 412, 422, 424, 425, 426], "17": [2, 11, 90, 109, 110, 129, 147, 165, 222, 409, 410, 411, 422, 424], "could": [2, 3, 4, 6, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 410, 411, 418, 422, 423, 425, 429], "sai": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 264, 422, 425, 429], "interleav": 2, "cannot": [2, 3, 4, 7, 22, 31, 32, 39, 44, 50, 58, 63, 97, 98, 102, 105, 109, 110, 117, 125, 128, 129, 130, 133, 147, 148, 154, 155, 178, 181, 196, 203, 212, 264, 265, 302, 315, 318, 335, 410, 411, 412, 413, 422, 423, 424], "handl": [2, 3, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 219, 220, 222, 258, 259, 315, 333, 335, 386, 398, 399, 409, 410, 411, 412, 414, 416, 423, 426], "suggest": [2, 348, 409, 423], "serialenv": [2, 3, 125, 129, 147, 148, 155, 209, 222, 236, 300, 402, 428, 429], "squeez": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 168, 169, 172, 206, 208, 237, 238, 282, 283, 409, 413, 424, 426], "6": [2, 3, 7, 14, 15, 16, 17, 23, 41, 46, 58, 61, 66, 83, 90, 91, 102, 110, 123, 124, 129, 147, 152, 153, 165, 168, 191, 193, 208, 212, 236, 237, 238, 240, 241, 242, 245, 249, 253, 259, 264, 265, 266, 270, 284, 300, 301, 309, 408, 409, 410, 413, 417, 422, 424, 426, 427, 428, 429], "5": [2, 3, 14, 15, 23, 31, 32, 39, 42, 43, 44, 45, 46, 50, 53, 58, 61, 63, 66, 67, 68, 83, 104, 109, 110, 115, 125, 126, 129, 134, 135, 139, 140, 142, 147, 148, 152, 153, 154, 155, 158, 159, 165, 168, 169, 171, 200, 207, 208, 212, 222, 233, 234, 235, 236, 237, 238, 240, 241, 246, 247, 248, 249, 252, 255, 256, 259, 261, 264, 265, 270, 275, 279, 285, 286, 296, 297, 300, 302, 308, 332, 335, 337, 340, 341, 368, 404, 408, 409, 410, 413, 415, 417, 419, 422, 423, 424, 426, 427, 428, 429], "7": [2, 3, 6, 10, 46, 50, 53, 58, 66, 67, 102, 110, 125, 129, 139, 140, 147, 148, 154, 155, 165, 168, 208, 234, 236, 237, 238, 241, 259, 261, 264, 356, 408, 409, 410, 412, 413, 417, 422, 424, 426, 427, 428], "9": [2, 3, 7, 23, 27, 41, 46, 53, 58, 66, 67, 90, 91, 102, 110, 115, 123, 124, 138, 149, 150, 155, 165, 168, 208, 220, 222, 263, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 348, 405, 408, 409, 410, 411, 413, 417, 422, 423, 424, 425, 426, 427], "18": [2, 41, 90, 109, 110, 152, 153, 158, 159, 212, 222, 265, 409, 410, 412, 422, 423, 424, 425, 429], "19": [2, 90, 109, 110, 115, 222, 408, 409, 410, 411, 424, 427], "independ": [2, 14, 15, 16, 17, 18, 19, 20, 21, 86, 147, 154, 209, 213, 215, 235, 265, 291, 315, 335, 405, 406, 409, 410, 423, 426, 428], "congruent": 2, "name": [2, 3, 6, 7, 12, 16, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 83, 86, 88, 91, 92, 121, 123, 125, 129, 134, 138, 139, 140, 142, 145, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 179, 180, 183, 198, 203, 204, 207, 212, 214, 216, 219, 222, 230, 254, 258, 297, 302, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 350, 352, 353, 354, 368, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 406, 409, 410, 411, 412, 413, 416, 418, 422, 423, 424, 429], "randomcroptensordict": [2, 409], "unlik": [2, 25, 108, 129, 139, 140, 158, 159, 233, 235, 300, 325, 335, 370, 404, 410, 413, 415, 417, 428], "stop": [2, 3, 16, 21, 60, 91, 102, 109, 110, 125, 129, 147, 148, 154, 155, 411, 417, 422, 423, 428, 429], "signal": [2, 3, 14, 15, 16, 17, 23, 83, 85, 87, 89, 90, 91, 102, 109, 110, 115, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 172, 182, 207, 210, 230, 405, 409, 411, 422, 423, 426, 429], "disk": [2, 3, 41, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 386, 406, 409, 410, 412, 413, 417, 418, 422, 426], "dump": [2, 3, 11, 35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 113, 117, 368, 369, 370, 418, 419, 422], "load": [2, 6, 7, 14, 15, 16, 17, 27, 35, 38, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 104, 111, 112, 113, 117, 118, 124, 125, 129, 147, 148, 154, 155, 156, 164, 220, 222, 386, 400, 406, 409, 411, 413, 426], "json": 2, "metadata": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 85, 125, 126, 129, 147, 148, 154, 155, 318, 340, 411, 414, 416, 417, 422, 423, 429], "anticip": [2, 178, 181], "compli": [2, 89, 235, 404], "back": [2, 24, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 71, 74, 75, 76, 77, 78, 85, 125, 129, 147, 148, 154, 155, 219, 224, 266, 292, 297, 298, 301, 302, 303, 304, 305, 411, 413, 422, 423, 424, 426], "exact": [2, 3, 23, 147, 256], "statu": [2, 3, 125], "prioriti": [2, 4, 53, 67, 68, 96, 97, 98, 101, 102, 111, 113, 117, 318, 319, 320, 322, 323, 324, 325, 331, 336, 338, 340, 341, 348, 406, 409, 410, 426], "heap": 2, "under": [2, 3, 4, 21, 27, 38, 46, 56, 57, 60, 61, 66, 83, 85, 86, 87, 89, 90, 91, 123, 124, 125, 128, 129, 130, 131, 147, 148, 151, 154, 155, 222, 235, 292, 297, 298, 301, 302, 303, 304, 305, 333, 350, 351, 352, 353, 354, 370, 405, 409, 410, 415, 422, 424, 429], "hood": [2, 21, 83, 125, 129, 147, 148, 154, 155, 235, 424], "naiv": [2, 216, 414], "just": [2, 3, 4, 12, 113, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 138, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 168, 175, 230, 265, 378, 406, 409, 410, 411, 412, 413, 414, 415, 417, 422, 423, 424, 426, 428, 429], "public": [2, 88, 112, 195, 218], "serializ": 2, "consum": [2, 108, 110, 300, 410, 411, 417, 423, 426], "much": [2, 8, 14, 15, 17, 53, 67, 89, 101, 102, 147, 154, 332, 335, 411, 413, 414, 418, 422, 423, 424, 426, 429], "duplic": [2, 27, 38, 46, 56, 57, 61, 66, 108, 125, 129, 147, 148, 154, 155, 222, 316, 318, 320, 325, 331, 333, 336, 338, 340, 341, 348], "observ": [2, 3, 8, 14, 15, 16, 17, 21, 24, 35, 41, 46, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 229, 236, 239, 240, 241, 242, 243, 244, 247, 250, 254, 258, 264, 270, 271, 274, 275, 276, 277, 279, 280, 292, 293, 294, 295, 296, 297, 300, 301, 302, 309, 310, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 331, 332, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 368, 370, 396, 404, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429], "plu": [2, 14, 15, 17, 60, 147, 154, 424], "enabl": [2, 7, 8, 85, 96, 97, 108, 117, 169, 254, 258, 276, 277, 300, 368, 370, 381, 411, 414, 422, 423, 424, 426], "three": [2, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 56, 92, 318, 404, 406, 411, 413, 414, 415, 422, 423, 424, 426, 429], "flatstoragecheckpoint": 2, "discard": [2, 3, 72, 85, 87, 129, 216, 229, 369, 426, 429], "compress": 2, "At": [2, 250, 260, 410, 411, 412, 417, 421, 424, 425], "correct": [2, 4, 52, 54, 59, 73, 125, 129, 147, 148, 154, 155, 189, 389, 411, 412], "addit": [2, 3, 4, 27, 38, 46, 56, 57, 61, 66, 85, 125, 126, 129, 147, 148, 154, 155, 158, 176, 195, 209, 213, 214, 216, 218, 222, 231, 232, 252, 296, 300, 304, 314, 333, 350, 368, 405, 409, 410, 413, 414, 422, 423, 426], "nestedstoragecheckpoint": 2, "represent": [2, 27, 38, 46, 56, 57, 61, 62, 63, 66, 125, 129, 147, 148, 154, 155, 195, 216, 218, 222, 315, 335, 409, 424, 425, 429], "appar": [2, 3, 380], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 93, 94, 100, 125, 128, 129, 130, 147, 148, 154, 155, 165, 175, 180, 209, 227, 231, 232, 238, 244, 247, 264, 271, 276, 277, 279, 292, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 312, 315, 320, 322, 323, 324, 335, 340, 341, 348, 404, 410, 411, 412, 413, 414, 415, 416, 422, 423, 424, 428, 429], "assumpt": [2, 3, 71, 424, 426], "accur": [2, 7, 85, 91, 410, 424, 426], "truncat": [2, 3, 14, 15, 16, 17, 35, 37, 41, 46, 47, 55, 64, 66, 69, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 102, 109, 110, 123, 124, 125, 128, 129, 130, 139, 140, 147, 148, 149, 150, 154, 155, 156, 158, 159, 165, 182, 183, 190, 197, 200, 204, 207, 209, 214, 222, 230, 254, 258, 286, 300, 356, 409, 411, 412, 414, 415, 417, 418, 421, 422, 425, 426, 428, 429], "marl": [2, 138, 160, 172, 210, 264, 265, 266, 324, 338, 414, 422, 423], "extra": [2, 10, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 172, 220, 222, 229, 377, 404, 411, 412, 426], "fail": [2, 7, 22, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 166, 224], "concret": [2, 409, 411], "set_se": [2, 3, 14, 15, 16, 17, 21, 35, 41, 46, 64, 66, 121, 122, 125, 129, 134, 135, 141, 147, 148, 154, 155, 168, 191, 198, 203, 208, 210, 214, 222, 413, 417, 419, 424, 428, 429], "manual_se": [2, 3, 25, 35, 42, 43, 53, 58, 64, 66, 67, 68, 86, 90, 91, 109, 110, 121, 122, 125, 129, 147, 148, 154, 155, 166, 168, 180, 191, 200, 203, 208, 210, 222, 250, 262, 263, 272, 275, 276, 277, 292, 298, 308, 315, 316, 318, 319, 323, 331, 338, 413, 417, 419, 422, 423, 424, 428, 429], "200": [2, 14, 15, 16, 21, 27, 35, 38, 46, 56, 57, 61, 64, 66, 83, 125, 128, 129, 130, 147, 148, 154, 155, 158, 159, 200, 222, 240, 241, 248, 280, 281, 368, 370, 409, 412, 413, 417, 419, 424, 426], "22": [2, 89, 109, 110, 219, 408, 409, 410, 419, 422, 424, 425, 427], "rb_test": 2, "_storag": [2, 425, 426], "max_siz": [2, 53, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 109, 110, 111, 115, 117, 411, 417], "102": [2, 424], "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 30, 52, 54, 59, 73, 142, 212, 244, 262, 263, 264, 314, 318, 368, 409, 411, 413, 422, 423], "state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 212, 214, 220, 222, 264, 265, 318, 338, 400, 406, 409, 410, 429], "load_state_dict": [2, 14, 15, 16, 17, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 212, 214, 220, 222, 318, 338, 406, 409], "drawback": 2, "struggl": 2, "big": [2, 411, 417, 426, 429], "sequenti": [2, 9, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 171, 189, 222, 291, 293, 294, 295, 301, 306, 307, 312, 315, 316, 318, 324, 331, 335, 336, 337, 338, 340, 404, 411, 412, 415, 423, 424, 425, 428, 429], "known": [2, 3, 5, 7, 8, 66, 129, 209, 357, 358, 409, 410, 414], "seamless": [2, 259], "integr": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 243, 254, 258, 261, 304, 404, 414, 415, 417, 422, 423, 424, 425], "indiffer": 2, "particularli": [2, 413, 428], "heavili": [2, 11], "smooth": [2, 233, 409, 410, 416], "essenti": [2, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 410, 414, 422, 424, 426], "understand": [2, 3, 8, 409, 410, 413, 414, 415, 422, 423], "purpos": [2, 3, 7, 11, 125, 129, 147, 148, 154, 155, 172, 252, 315, 317, 329, 332, 335, 337, 396, 409, 411, 412, 413, 416, 418, 422, 423, 425, 429], "guid": [2, 11, 149, 150, 152, 153, 208, 403, 409, 423, 428], "explan": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 235], "effect": [2, 3, 27, 31, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 89, 102, 104, 107, 109, 110, 125, 129, 147, 148, 154, 155, 168, 172, 214, 222, 235, 386, 404, 409, 415, 422, 426, 429], "realm": [2, 415], "As": [2, 3, 4, 46, 58, 67, 68, 71, 83, 104, 125, 129, 138, 147, 148, 149, 150, 154, 155, 200, 245, 305, 350, 404, 409, 410, 411, 412, 413, 414, 416, 417, 422, 423, 424, 425, 426, 428, 429], "practition": 2, "often": [2, 3, 8, 266, 330, 333, 386, 409, 410, 414, 416, 424, 426, 429], "encount": [2, 4, 89, 300, 403, 410, 415, 424], "situat": [2, 139, 140], "sometim": [2, 3, 71, 412, 429], "variabl": [2, 3, 4, 7, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 61, 62, 63, 71, 74, 75, 76, 77, 78, 83, 86, 87, 90, 91, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 139, 140, 143, 144, 145, 146, 151, 156, 157, 158, 159, 252, 253, 254, 256, 257, 258, 261, 293, 294, 295, 333, 336, 406, 410], "immedi": [2, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 147, 148, 154, 155, 222, 349, 422, 423], "199": [2, 409, 424], "info": [2, 3, 14, 15, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 107, 109, 110, 123, 124, 125, 128, 129, 130, 131, 139, 140, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 216, 219, 221, 377, 414, 419, 422, 423, 426, 428], "glanc": [2, 414], "seem": [2, 409, 412, 414], "togeth": [2, 3, 11, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 60, 62, 63, 125, 129, 138, 147, 148, 149, 150, 154, 155, 172, 196, 252, 254, 256, 258, 287, 293, 294, 295, 310, 404, 410, 412, 414, 422], "less": [2, 142, 288, 398, 399, 405, 411, 412, 426, 428], "omit": [2, 382, 411, 416, 424, 426], "proper": [2, 3, 4, 6, 7, 350, 351, 352, 353, 410, 411, 422, 423, 426], "imposs": [2, 3, 115, 125, 129, 147, 148, 154, 155, 224, 315, 317, 332, 335, 337], "determin": [2, 41, 53, 67, 73, 85, 101, 102, 125, 129, 147, 148, 154, 155, 158, 159, 195, 218, 264, 276, 277, 318, 410, 415, 422, 423], "complic": [2, 56, 66, 424, 426, 429], "matter": [2, 33, 417], "inconsist": [2, 429], "miss": [2, 3, 4, 6, 7, 12, 27, 31, 38, 41, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 229, 306, 307, 315, 318, 338, 403, 409, 412], "primari": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 417], "elimin": [2, 3, 414], "upon": [2, 3, 8, 422, 424], "canon": 2, "definit": [2, 50, 111, 264], "markov": [2, 3, 414, 429], "mdp": [2, 414, 424], "context": [2, 3, 5, 8, 27, 38, 46, 56, 57, 61, 66, 110, 125, 126, 129, 144, 147, 148, 154, 155, 209, 215, 222, 235, 254, 258, 265, 267, 291, 296, 346, 347, 350, 351, 352, 353, 355, 363, 370, 381, 404, 405, 409, 410, 411, 412, 413, 422, 423, 424, 425, 426, 428], "condit": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 72, 74, 75, 76, 77, 78, 208, 220, 297, 298, 300, 302, 303, 314, 409, 422, 424, 426], "complet": [2, 7, 9, 108, 125, 128, 129, 130, 147, 148, 154, 155, 172, 207, 403, 405, 409, 411, 414, 421], "termin": [2, 3, 7, 14, 15, 16, 17, 35, 37, 41, 46, 47, 60, 64, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 109, 123, 124, 125, 128, 129, 130, 134, 135, 139, 140, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 168, 169, 182, 197, 209, 222, 230, 234, 254, 258, 261, 300, 306, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 409, 410, 411, 412, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "reward": [2, 3, 14, 15, 16, 33, 35, 37, 41, 46, 47, 52, 59, 60, 64, 66, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 115, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159, 165, 166, 169, 170, 175, 176, 178, 179, 181, 182, 183, 189, 193, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 213, 214, 215, 217, 218, 220, 222, 227, 229, 234, 254, 261, 296, 300, 310, 315, 316, 318, 319, 320, 322, 323, 324, 327, 331, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 380, 381, 384, 400, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "imit": [2, 3, 329], "inform": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 89, 125, 126, 129, 132, 135, 147, 148, 154, 155, 222, 236, 237, 238, 259, 265, 404, 405, 406, 409, 410, 411, 412, 413, 414, 422, 423, 424, 426, 428], "stateless": [2, 3, 41, 125, 129, 147, 148, 154, 155, 169, 213, 333, 368, 409, 414, 424, 429], "simul": [2, 3, 5, 7, 8, 71, 121, 122, 131, 134, 135, 151, 158, 159, 163, 234, 261, 404, 409, 411, 413, 414, 418, 422, 423], "furthermor": [2, 422, 423], "certain": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 125, 129, 147, 148, 154, 155, 164, 186, 207, 214, 222, 250, 253, 257, 332, 409, 410, 411, 413, 419, 422, 423, 429], "composit": [2, 3, 25, 26, 28, 29, 30, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 80, 107, 113, 120, 125, 127, 129, 141, 147, 148, 154, 155, 166, 169, 178, 179, 180, 181, 183, 189, 197, 198, 204, 207, 209, 212, 213, 222, 227, 230, 231, 232, 234, 261, 292, 301, 307, 308, 312, 315, 335, 402, 409, 411, 412, 415, 422, 423, 424, 429], "accommod": [2, 3, 414, 415], "uniform": [2, 53, 67, 101, 102, 422], "unambigu": 2, "distinguish": [2, 139, 140, 158, 159], "happen": [2, 3, 12, 125, 129, 147, 148, 154, 155, 232, 276, 410, 413, 416, 417, 418, 425, 429], "everyth": [2, 410, 411, 412, 418, 419], "belong": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 89, 219, 220, 409, 417, 423], "rule": [2, 66, 147, 178, 181, 305, 404, 411], "field": [2, 3, 14, 15, 16, 17, 23, 27, 31, 35, 38, 46, 52, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 169, 178, 181, 182, 183, 193, 197, 198, 200, 204, 207, 209, 212, 214, 222, 229, 234, 236, 246, 247, 254, 258, 261, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 390, 403, 404, 410, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "taken": [2, 3, 25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 125, 129, 147, 148, 154, 155, 165, 199, 262, 263, 405, 409, 411, 412, 415, 422, 423, 424], "is_shar": [2, 3, 14, 15, 16, 23, 31, 35, 52, 54, 55, 56, 59, 60, 64, 66, 67, 68, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 101, 109, 117, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 165, 169, 178, 181, 182, 183, 193, 197, 198, 200, 204, 207, 209, 220, 229, 234, 236, 246, 247, 254, 258, 261, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 309, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 404, 411, 412, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "brought": [2, 411, 412, 415], "step_mdp": [2, 3, 125, 129, 147, 148, 154, 155, 254, 258, 402, 412, 414, 424, 428, 429], "count": [2, 3, 46, 73, 125, 126, 207, 212, 276, 277, 381, 386, 389, 409, 410, 411, 412, 426, 429], "trigger": [2, 7, 56, 66], "partial": [2, 3, 125, 129, 147, 148, 154, 155, 171, 172, 208, 209, 210, 301, 386, 412], "turn": [2, 18, 19, 20, 21, 52, 54, 57, 59, 61, 73, 135, 155, 187, 215, 219, 297, 368, 381, 405, 409, 410, 412, 415, 424, 425], "retain": 2, "regard": [2, 85, 91, 247, 298, 315, 325, 335, 409, 411, 424], "twice": [2, 8, 110], "feasibl": 2, "mostli": [2, 3, 17, 275, 370, 405, 418, 426, 429], "eas": [2, 3, 422, 423], "flat": [2, 115], "manner": [2, 129, 195, 216, 404, 409, 410, 411, 417, 421, 424, 426], "ted2flat": [2, 35, 402], "flat2t": [2, 402], "unflatten": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 169, 300], "deseri": [2, 3, 35], "posit": [2, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 123, 124, 125, 129, 147, 148, 154, 155, 185, 186, 206, 207, 210, 212, 214, 215, 222, 269, 318, 338, 405, 411, 422, 423, 424, 426], "both": [2, 3, 7, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 89, 125, 126, 128, 129, 139, 140, 147, 148, 149, 150, 154, 155, 156, 165, 172, 198, 212, 214, 222, 230, 237, 238, 254, 257, 258, 259, 264, 265, 293, 294, 295, 298, 303, 315, 317, 318, 319, 323, 324, 331, 332, 333, 335, 336, 337, 338, 340, 341, 381, 404, 409, 411, 413, 414, 416, 422, 423, 424, 425, 426, 429], "mark": [2, 3, 16, 91, 125, 129, 147, 148, 154, 155, 254, 258, 350, 352, 353, 417, 426], "identifi": [2, 55, 125, 129, 147, 148, 154, 155], "abov": [2, 3, 7, 27, 38, 46, 56, 57, 61, 66, 74, 125, 129, 147, 148, 154, 155, 222, 255, 285, 286, 314, 405, 406, 409, 411, 413, 414, 415, 422, 423, 424, 429], "output": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 71, 83, 85, 86, 87, 88, 89, 90, 91, 102, 109, 110, 123, 124, 125, 128, 129, 130, 131, 135, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 169, 170, 172, 175, 176, 177, 178, 179, 181, 183, 189, 191, 195, 197, 198, 203, 204, 207, 210, 213, 214, 216, 218, 219, 222, 224, 230, 231, 232, 237, 238, 239, 240, 241, 244, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 264, 265, 269, 273, 275, 276, 277, 279, 288, 292, 293, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 368, 370, 378, 404, 405, 409, 410, 411, 412, 413, 414, 415, 418, 421, 422, 423, 424, 425, 428, 429], "typic": [2, 3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 182, 208, 222, 273, 275, 301, 316, 318, 333, 335, 338, 404, 405, 406, 411, 413, 414, 416, 417, 422, 423, 424], "adjust": [2, 11, 209, 409, 422, 423, 424], "grumodul": [2, 171, 209, 291, 312, 412], "lstmmodul": [2, 254, 291, 412, 413], "skip": [2, 3, 27, 38, 46, 56, 57, 61, 66, 83, 125, 129, 147, 148, 154, 155, 186, 212, 214, 222, 224, 301, 305, 318, 333, 338, 350, 351, 352, 353, 369, 370, 380, 381, 409, 410, 424], "accumul": [2, 8, 222], "upcom": [2, 333, 359, 360, 361, 362, 364, 365, 366, 367, 409], "popular": [2, 3, 404, 412, 416, 423], "rainbow": 2, "multistep": [2, 14, 15, 16, 17, 18, 19, 20, 21, 222, 402, 410], "shift": [2, 35, 37, 46, 47, 64, 93, 94, 100, 311, 350, 351, 352, 353, 411], "approxim": [2, 423, 429], "would": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 147, 148, 154, 155, 222, 252, 254, 256, 258, 259, 264, 406, 410, 411, 412, 414, 416, 417, 424, 426, 428, 429], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 14, 17, 172, 244, 274, 315, 321, 334, 335, 378, 400, 411, 412, 423, 426], "2x": 2, "small": [2, 110, 216, 233, 409, 411, 413, 422, 423, 429], "clearer": [2, 413, 415], "lazi": [2, 62, 63, 80, 81, 125, 129, 147, 148, 154, 155, 158, 159, 195, 216, 237, 264, 267, 306, 307, 409, 410, 415, 417, 421, 426, 429], "certainli": 2, "benefici": 2, "welcom": [2, 414], "wrapper": [2, 3, 12, 17, 52, 54, 59, 60, 67, 68, 73, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 219, 223, 232, 235, 236, 251, 269, 277, 288, 296, 300, 305, 310, 350, 375, 376, 377, 400, 402, 411, 412, 414, 422, 423, 425, 428, 429], "around": [2, 5, 7, 17, 67, 68, 141, 223, 235, 275, 300, 305, 350, 409, 410, 423, 429], "selecttransform": [2, 125, 129, 147, 148, 154, 155], "excludetransform": [2, 90, 204, 426], "promptli": 2, "virtual": [2, 3, 128], "instal": [2, 3, 5, 10, 18, 19, 20, 57, 66, 85, 88, 125, 129, 147, 148, 149, 150, 152, 153, 154, 155, 372, 386, 403, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 429], "respons": [2, 3, 8, 102, 109, 125, 129, 147, 148, 154, 155, 386, 416, 417, 429], "d4rl": [2, 85, 91], "repositori": [2, 7, 86, 87, 88, 91, 159, 422, 423], "wheel": [2, 411], "publish": 2, "openml": [2, 88, 144], "scikit": [2, 88, 144], "panda": [2, 88], "raw": [2, 3, 4, 60, 255, 285, 286, 410, 413, 417, 424], "go": [2, 3, 7, 48, 138, 147, 196, 200, 296, 356, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "natur": [2, 3, 409, 415, 416, 417, 426], "modifi": [2, 3, 7, 8, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 125, 129, 147, 148, 154, 155, 169, 176, 185, 189, 195, 209, 213, 214, 216, 218, 222, 266, 276, 277, 296, 304, 389, 405, 409, 410, 411, 413, 414, 422, 423, 424], "fly": [2, 220, 332, 405, 411, 424, 426, 429], "least": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 102, 109, 125, 129, 147, 148, 154, 155, 175, 418, 429], "pre": [2, 7, 22, 27, 38, 46, 56, 57, 61, 66, 72, 89, 97, 125, 129, 147, 148, 154, 155, 195, 216, 218, 222, 429], "appli": [2, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 166, 168, 169, 171, 172, 173, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 194, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 212, 213, 214, 216, 217, 219, 220, 222, 235, 252, 256, 266, 285, 297, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 334, 335, 336, 337, 338, 340, 341, 350, 368, 382, 406, 409, 410, 411, 417, 422, 424, 428, 429], "conisder": 2, "per": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 86, 102, 109, 115, 133, 134, 135, 147, 149, 150, 175, 203, 237, 238, 248, 250, 264, 265, 300, 372, 386, 398, 399, 409, 410, 411, 412, 413, 415, 416, 419, 422, 423, 426, 428], "pipelin": [2, 3, 7, 404, 411], "replac": [2, 3, 6, 7, 31, 32, 39, 46, 63, 83, 89, 102, 109, 110, 168, 180, 182, 188, 229, 250, 404, 422, 426, 428], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 89, 104, 125, 129, 147, 148, 154, 155, 168, 200, 214, 222, 231, 232, 276, 277, 300, 384, 404, 406, 410, 411, 412, 415, 418, 424, 426, 429], "produc": [2, 41, 109, 165, 168, 169, 237, 238, 259, 265, 272, 293, 295, 296, 370, 411, 412, 413, 414, 415, 417, 426, 429], "unless": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 89, 93, 108, 125, 129, 147, 148, 149, 150, 154, 155, 212, 214, 222, 235, 315, 316, 318, 331, 333, 335, 336, 337, 338, 340, 341, 411], "download": [2, 7, 10, 83, 85, 86, 87, 89, 90, 91, 133, 195, 218, 370, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "forc": [2, 3, 6, 7, 14, 15, 17, 18, 19, 20, 21, 83, 86, 87, 89, 90, 91, 148, 410, 422, 423, 424], "robosetexperiencereplai": [2, 109, 110], "fk1": [2, 90], "v4": [2, 90, 129, 147, 165, 199, 359, 360, 361, 362, 364, 365, 366, 367, 409, 411, 425, 428], "expert": [2, 90], "fk1_microopenrandom_v2d": [2, 90], "func": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 221], "obs_norm": 2, "norm": [2, 4, 8, 121, 122, 233, 386, 409, 410, 411, 422, 423, 424], "num_work": [2, 52, 54, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 142, 147, 154, 409, 410], "os": [2, 54, 72, 92, 410], "cpu_count": [2, 54, 72, 92], "num_chunk": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91], "1000": [2, 4, 58, 66, 96, 101, 109, 110, 125, 129, 147, 148, 154, 155, 172, 220, 231, 250, 275, 276, 277, 301, 305, 330, 409, 410, 411, 412, 413, 415, 417, 419, 425, 426], "mp_start_method": [2, 83, 84, 85, 86, 87, 88, 89, 90, 91, 147, 154, 212, 410, 428], "fork": [2, 5, 83, 84, 85, 86, 87, 88, 89, 90, 91, 409, 410, 411, 412, 422, 423, 425, 428], "recreat": [2, 424], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 24, 58, 67, 68, 102, 104, 109, 125, 129, 147, 148, 154, 155, 169, 189, 413, 417, 425], "grain": [2, 3, 58, 67, 68, 102, 104, 109, 125, 129, 147, 148, 154, 155, 169], "nomenclatur": 2, "compact": [2, 41, 64, 93, 94, 100], "propos": [2, 172, 182, 235, 260, 330, 339, 404, 412, 426], "replaybufferensembl": [2, 83, 107, 113, 120], "primit": [2, 3, 4, 89, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341], "individu": [2, 4, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 72, 102, 104, 115, 125, 129, 139, 140, 147, 148, 154, 155, 222, 409, 423], "dummi": [2, 3, 155, 368, 409, 413, 417, 429], "semant": [2, 62, 63, 128, 130], "ident": [2, 3, 14, 15, 16, 46, 52, 54, 58, 59, 66, 67, 68, 73, 96, 104, 109, 125, 128, 129, 130, 142, 147, 148, 154, 155, 182, 233, 264, 265, 316, 318, 331, 336, 338, 340, 341, 350, 351, 352, 353, 398, 399, 410, 414, 422, 423], "another_kei": [2, 104], "renam": [2, 3, 52, 54, 59, 73, 104, 198, 200, 229, 409], "resiz": [2, 3, 91, 104, 172, 410, 412, 413, 414, 426, 429], "imag": [2, 3, 4, 7, 11, 89, 174, 177, 195, 211, 218, 259, 368, 370, 409, 410, 413, 414, 418, 423, 425, 429], "comops": 2, "totensorimag": [2, 3, 91, 104, 172, 199, 410, 412, 413, 426, 428, 429], "renametransform": [2, 3, 104, 125, 129, 147, 148, 154, 155], "rb0": [2, 104], "in_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 141, 147, 148, 154, 155, 162, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 185, 187, 189, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 213, 214, 215, 216, 218, 220, 234, 236, 246, 254, 258, 261, 278, 287, 288, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 307, 308, 309, 312, 315, 316, 317, 318, 319, 320, 322, 323, 324, 329, 331, 332, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 369, 370, 396, 404, 409, 410, 411, 412, 413, 415, 416, 419, 421, 422, 423, 424, 425, 426, 428, 429], "pixel": [2, 3, 7, 31, 91, 104, 123, 124, 128, 130, 131, 151, 172, 174, 177, 182, 185, 187, 191, 193, 195, 199, 211, 216, 218, 240, 270, 271, 368, 370, 409, 410, 412, 413, 418, 422, 425, 426, 428, 429], "rb1": [2, 104], "out_kei": [2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 56, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 125, 129, 141, 147, 148, 154, 155, 162, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 185, 187, 189, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 215, 216, 218, 220, 234, 236, 246, 247, 254, 258, 261, 278, 279, 287, 288, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 315, 316, 317, 318, 323, 324, 329, 331, 332, 335, 336, 337, 338, 340, 348, 350, 351, 352, 353, 368, 370, 381, 396, 404, 409, 410, 411, 412, 413, 415, 419, 421, 422, 423, 424, 425, 426, 428, 429], "pixels33": [2, 104], "data0": [2, 104], "244": [2, 104, 195, 218, 424], "data1": [2, 104, 428], "_": [2, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 126, 133, 158, 159, 173, 178, 180, 181, 189, 191, 198, 211, 220, 222, 275, 292, 304, 309, 314, 315, 316, 318, 319, 323, 324, 331, 335, 336, 338, 340, 341, 350, 351, 352, 353, 372, 409, 410, 411, 412, 413, 419, 422, 423, 424, 426, 428], "rang": [2, 3, 4, 8, 12, 53, 58, 60, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 104, 115, 125, 126, 129, 139, 140, 147, 148, 154, 155, 200, 211, 220, 222, 253, 257, 275, 332, 340, 341, 405, 406, 409, 411, 412, 413, 416, 417, 419, 422, 423, 424, 426, 428], "parent": [2, 3, 21, 31, 32, 37, 39, 63, 71, 84, 104, 113, 120, 125, 129, 147, 148, 154, 155, 165, 169, 172, 173, 176, 179, 182, 185, 186, 191, 195, 203, 207, 208, 209, 210, 212, 213, 215, 216, 222, 254, 258, 293, 312, 333, 335, 354, 368, 370, 409, 417, 424, 428, 429], "basic": [2, 141, 404, 411, 416, 417, 419, 422, 428, 429], "properti": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 141, 147, 148, 154, 155, 168, 212, 213, 214, 220, 222, 245, 255, 263, 267, 272, 284, 285, 286, 300, 315, 318, 333, 335, 337, 338, 415, 417, 424, 426], "input": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 76, 77, 78, 112, 118, 125, 129, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 229, 230, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 247, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 267, 268, 276, 277, 279, 280, 281, 282, 283, 285, 288, 292, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 384, 389, 396, 404, 405, 406, 409, 410, 411, 412, 413, 414, 422, 423, 424, 428, 429], "send": [2, 3, 8, 377, 428], "receiv": [2, 3, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 147, 148, 154, 155, 213, 214, 222, 259, 356, 405, 409, 411, 416, 421, 423, 424], "spawn": [2, 3, 4, 18, 22, 133, 142, 147, 154, 212, 410, 422, 423], "check_env_spec": [2, 3, 125, 129, 147, 148, 154, 155, 165, 197, 368, 402, 411, 422, 423, 424], "saniti": [2, 3, 7, 125, 129, 147, 148, 154, 155, 224, 411], "automati": 2, "make_composite_from_td": [2, 71, 402, 424], "fall": [2, 4, 85], "categori": [2, 31, 86, 404, 406], "bound": [2, 3, 4, 21, 27, 29, 31, 38, 46, 56, 57, 61, 66, 74, 125, 129, 147, 148, 154, 155, 175, 190, 220, 222, 223, 231, 250, 276, 277, 280, 281, 292, 297, 298, 301, 302, 303, 304, 305, 308, 315, 316, 318, 319, 331, 335, 336, 338, 340, 341, 402, 404, 409, 410, 411, 413, 422, 424, 428, 429], "unbound": [2, 3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 58, 59, 62, 63, 67, 68, 71, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 141, 147, 148, 154, 155, 166, 169, 178, 181, 197, 209, 227, 234, 261, 292, 304, 307, 309, 337, 402, 424, 426], "boundeddiscret": [2, 28, 31, 411], "boundedcontinu": [2, 22, 28, 31, 125, 129, 147, 148, 154, 155, 411, 422, 423, 424, 428, 429], "unboundeddiscret": [2, 74, 148, 402, 424, 429], "unboundedcontinu": [2, 74, 125, 129, 147, 148, 154, 155, 197, 209, 227, 307, 312, 402, 411, 412, 422, 423, 424, 429], "implicitli": 2, "onehot": [2, 25, 26, 30, 34, 44, 45, 51, 121, 122, 128, 130, 131, 134, 135, 142, 143, 145, 146, 151, 156, 157, 247, 279, 297, 302, 320, 322, 323, 324, 348, 402, 404, 415], "multionehot": [2, 42, 43, 45, 320, 323, 324, 348, 402], "multicategor": [2, 43, 44, 45, 402], "binari": [2, 3, 7, 26, 27, 50, 156, 166, 170, 247, 279, 297, 298, 302, 303, 320, 323, 324, 348, 402], "concept": [2, 125, 129, 147, 148, 154, 155, 275, 410, 426], "arbitrari": [2, 3, 25, 50, 58, 125, 129, 135, 147, 148, 154, 155, 168, 409, 410, 424, 426], "combin": [2, 4, 36, 57, 213, 340, 410, 413, 418, 426, 428], "relat": [2, 3, 4, 10, 53, 147, 185, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 410, 419, 424], "nevertheless": [2, 3, 411, 414, 426], "expand": [2, 8, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 96, 109, 110, 169, 209, 245, 304, 307, 316, 318, 331, 333, 336, 338, 340, 341, 413, 422, 423, 424, 426, 428], "otherwis": [2, 12, 14, 15, 16, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 109, 110, 121, 122, 125, 128, 129, 130, 131, 134, 135, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 172, 173, 180, 191, 208, 209, 210, 212, 214, 220, 222, 233, 235, 252, 255, 256, 264, 265, 285, 286, 291, 297, 302, 308, 316, 318, 327, 333, 334, 338, 350, 352, 353, 381, 383, 406, 409, 410, 411, 412, 424, 429], "similarli": [2, 21, 27, 38, 46, 56, 57, 61, 66, 108, 113, 125, 129, 147, 148, 154, 155, 222, 264, 306, 307, 323, 331, 429], "possess": [2, 71, 85], "unsqueez": [2, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 102, 166, 169, 172, 173, 211, 215, 227, 409, 412, 413, 422, 423, 424], "move": [2, 4, 27, 38, 46, 56, 57, 61, 66, 71, 91, 125, 129, 130, 147, 148, 154, 155, 165, 176, 179, 195, 209, 213, 214, 216, 218, 220, 222, 229, 259, 304, 384, 409, 410, 412, 414, 429], "unbind": [2, 52, 53, 54, 58, 59, 67, 68, 73, 254, 258, 413], "said": [2, 411], "neg": [2, 8, 14, 15, 16, 17, 18, 19, 20, 21, 53, 56, 67, 71, 101, 102, 172, 185, 196, 215, 326, 350, 352, 353, 405, 411, 422, 423, 424], "seen": [2, 18, 19, 20, 21, 31, 32, 39, 63, 125, 129, 147, 148, 154, 155, 179, 405, 409, 410, 412, 416, 422, 423, 426], "predict": [2, 3, 46, 60, 246, 248, 260, 261, 296, 310, 315, 317, 322, 325, 327, 328, 332, 335, 337, 349, 409, 410, 416], "deprec": [2, 23, 26, 27, 29, 32, 34, 38, 39, 40, 43, 45, 46, 49, 51, 56, 57, 61, 66, 76, 78, 125, 129, 147, 148, 154, 155, 212, 214, 222, 251, 254, 258, 315, 317, 318, 320, 323, 324, 325, 331, 332, 335, 336, 337, 338, 348, 350, 351, 352, 353, 358, 429], "mont": [2, 315, 317, 332, 335, 409], "carlo": [2, 315, 317, 332, 335, 409], "mct": [2, 41], "act": [2, 3, 4, 109, 110, 149, 150, 214, 246, 265, 316, 318, 319, 331, 336, 338, 340, 341, 412, 413, 422, 423, 426, 428], "tradit": [2, 416, 422], "integ": [2, 14, 15, 16, 17, 23, 38, 42, 44, 46, 50, 56, 57, 60, 61, 102, 109, 110, 111, 125, 129, 147, 148, 154, 155, 165, 168, 182, 186, 191, 207, 237, 238, 259, 264, 265, 318, 323, 331, 338, 413, 423, 426], "advanc": [2, 3, 21, 53, 58, 67, 68, 129, 414, 417, 426], "rebuild": [2, 41], "initi": [2, 4, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 34, 38, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 66, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 115, 125, 129, 145, 146, 147, 148, 154, 155, 156, 171, 191, 195, 209, 213, 214, 216, 221, 222, 231, 232, 233, 234, 250, 252, 253, 256, 257, 261, 264, 265, 266, 267, 268, 276, 277, 300, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 400, 404, 405, 409, 410, 412, 414, 415, 417, 422, 424, 429], "pair": [2, 3, 46, 52, 54, 56, 59, 66, 73, 85, 123, 124, 125, 129, 147, 148, 154, 155, 200, 209, 212, 254, 293, 301, 305, 333, 350, 351, 352, 353, 354, 404, 405, 409, 410, 411, 415, 416, 421, 424, 429], "term": [2, 60, 189, 256, 257, 267, 268, 314, 315, 324, 388, 410, 411, 414, 415, 423], "pseudocod": 2, "next_stat": [2, 405], "associ": [2, 3, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 125, 129, 147, 148, 154, 155, 212, 222, 280, 400, 409, 426], "sens": [2, 4, 52, 54, 59, 73, 417, 424], "hard": [2, 3, 7, 115, 123, 124, 147, 330, 410, 429], "let": [2, 3, 6, 7, 11, 23, 27, 38, 41, 46, 53, 56, 57, 58, 61, 66, 67, 68, 69, 125, 129, 147, 148, 149, 150, 154, 155, 172, 222, 254, 258, 264, 265, 297, 381, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "know": [2, 3, 4, 9, 53, 58, 67, 68, 128, 130, 231, 232, 333, 336, 381, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 423, 426], "next_td": 2, "Of": [2, 3, 7, 403, 424, 429], "cours": [2, 3, 4, 403, 424, 429], "handi": [2, 3, 125, 129, 147, 148, 154, 155, 418], "undertaken": [2, 424], "link": [2, 6, 7, 125, 410, 419], "hash": [2, 38, 56, 57, 61, 66, 73], "past": [2, 4, 300, 410, 426], "node_map": [2, 41], "_index": [2, 56, 66], "Then": [2, 7, 14, 15, 16, 17, 18, 19, 20, 21, 219, 411, 421], "track": [2, 3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 68, 101, 102, 108, 203, 220, 222, 276, 277, 300, 375, 380, 410, 412, 414, 417, 423, 424, 426], "next_data": 2, "data_map": [2, 41], "obtrain": 2, "form": [2, 14, 15, 17, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 100, 125, 129, 147, 148, 154, 155, 220, 222, 252, 254, 256, 258, 314, 315, 317, 332, 335, 386, 404, 415, 423], "figur": [2, 3, 409, 411, 412, 423, 424, 429], "flowchart": 2, "o": [2, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 257], "get_tre": [2, 41], "vertex": [2, 73], "longer": [2, 12, 73, 410, 419, 422, 423, 426], "vertic": [2, 73], "branch": [2, 41], "repeat": [2, 73, 121, 122, 123, 124, 128, 130, 131, 134, 135, 142, 143, 151, 234, 245, 411, 422, 423, 424], "depth": [2, 58, 71, 125, 129, 141, 147, 148, 151, 154, 155, 234, 237, 238, 240, 241, 242, 243, 248, 249, 259, 261, 264, 265, 266, 270, 271, 297, 404, 410, 414, 416, 417, 421, 422, 423, 426], "until": [2, 3, 7, 21, 135, 210, 213, 222, 411, 412, 419, 422, 423], "anymor": [2, 52, 54, 59, 73, 214, 304], "utmost": 2, "commonli": [2, 102, 109, 110, 429], "emploi": [2, 268], "languag": [2, 24, 60], "scarc": 2, "address": [2, 426], "subdomain": 2, "facilit": [2, 3, 7, 194, 195, 209, 216, 218, 293, 294, 295, 404, 409, 412, 415, 424], "extern": [2, 3, 178, 181, 422, 429], "token": [2, 54, 55, 60, 69, 72, 92], "dm": [3, 409, 429], "base": [3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 61, 62, 63, 67, 68, 71, 72, 74, 75, 76, 77, 78, 89, 106, 112, 115, 116, 118, 119, 121, 122, 125, 129, 133, 134, 135, 141, 142, 143, 147, 148, 154, 155, 158, 179, 200, 216, 217, 254, 258, 264, 266, 293, 299, 315, 316, 318, 319, 320, 322, 323, 324, 326, 331, 335, 336, 337, 338, 340, 341, 351, 352, 377, 386, 404, 405, 406, 409, 410, 412, 414, 415, 416, 418, 422, 423, 424, 426, 429], "abl": [3, 41, 138, 149, 150, 254, 258, 409, 411, 412, 415, 421, 422, 423, 424, 426], "experi": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 101, 102, 125, 129, 147, 148, 154, 155, 224, 372, 373, 374, 375, 376, 377, 403, 410, 411, 413, 417, 418, 422, 423, 426], "box": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 128, 130, 266, 333], "lib": [3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 21, 22, 125, 126, 129, 139, 140, 147, 148, 149, 150, 152, 153, 154, 155, 172, 175, 182, 188, 189, 191, 193, 198, 200, 203, 209, 213, 219, 220, 222, 368, 396, 409, 410, 411, 412, 413, 421, 423, 425, 426, 428, 429], "hope": [3, 11], "nn": [3, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 121, 122, 125, 129, 141, 147, 148, 154, 155, 176, 180, 182, 189, 195, 209, 213, 214, 216, 218, 222, 225, 234, 236, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 263, 264, 265, 266, 269, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 305, 306, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 396, 404, 405, 409, 410, 411, 412, 413, 415, 416, 419, 421, 422, 423, 424, 425, 428], "subclass": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 38, 56, 57, 61, 66, 74, 104, 125, 129, 147, 148, 154, 155, 167, 168, 213, 219, 224, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 304, 305, 306, 308, 311, 333, 335, 410, 412, 417, 424, 426], "organis": [3, 90, 125, 129, 147, 148, 154, 155, 214, 410], "attribut": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 89, 125, 128, 129, 130, 135, 147, 148, 154, 155, 165, 182, 195, 216, 220, 222, 254, 258, 305, 315, 316, 318, 319, 320, 322, 324, 325, 326, 329, 331, 333, 335, 336, 337, 338, 340, 341, 348, 409, 412, 424], "live": [3, 13, 14, 15, 16, 17, 19, 20, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 141, 147, 148, 154, 155, 182, 222], "actual": [3, 4, 7, 52, 54, 59, 73, 83, 85, 86, 87, 89, 90, 91, 125, 129, 147, 148, 154, 155, 219, 389, 405, 409, 411, 413, 422, 423, 424], "retriev": [3, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 107, 125, 128, 129, 130, 147, 148, 154, 155, 173, 179, 182, 191, 229, 234, 237, 261, 300, 301, 305, 308, 312, 315, 316, 317, 318, 320, 332, 335, 336, 338, 340, 341, 348, 350, 351, 352, 353, 400, 406, 410, 411, 415, 424, 429], "care": [3, 8, 27, 38, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 213, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 370, 409, 411, 413, 422, 423, 424, 426], "parametr": [3, 268, 305, 316, 318, 323, 331, 338, 409, 411], "hardwar": [3, 413], "observation_spec": [3, 41, 125, 129, 141, 147, 148, 154, 155, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 187, 188, 189, 191, 193, 195, 197, 199, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 222, 234, 254, 258, 261, 390, 396, 409, 411, 416, 421, 422, 423, 424, 429], "state_spec": [3, 125, 129, 141, 147, 148, 154, 155, 166, 234, 261, 424, 429], "reward_spec": [3, 125, 129, 141, 147, 148, 154, 155, 166, 169, 170, 175, 176, 178, 179, 181, 197, 201, 202, 203, 205, 213, 215, 222, 234, 261, 411, 422, 423, 424, 429], "done_spec": [3, 125, 129, 147, 148, 154, 155, 178, 179, 181, 182, 197, 213, 222, 230, 422, 423, 424, 429], "flag": [3, 8, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 139, 140, 147, 148, 154, 155, 158, 159, 188, 276, 277, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 404, 422, 423, 424, 425], "input_spec": [3, 125, 129, 141, 147, 148, 154, 155, 165, 169, 176, 178, 179, 180, 191, 193, 197, 198, 203, 204, 207, 208, 209, 213, 214, 215, 217, 222, 411, 424], "full_action_spec": [3, 125, 129, 145, 146, 147, 148, 154, 155, 156, 157, 165, 234, 261, 411, 422, 423], "full_state_spec": [3, 41, 125, 129, 147, 148, 154, 155, 165, 234, 261, 411], "lock": [3, 31, 32, 39, 52, 54, 59, 63, 73, 125, 129, 135, 147, 148, 154, 155, 169, 209, 220, 424], "output_spec": [3, 125, 129, 147, 148, 154, 155, 169, 176, 178, 179, 183, 189, 197, 198, 204, 207, 213, 214, 222, 424], "full_observation_spec": [3, 125, 129, 147, 148, 154, 155, 234, 261], "full_reward_spec": [3, 125, 129, 147, 148, 154, 155, 169, 179, 197, 422, 423], "full_done_spec": [3, 125, 129, 147, 148, 154, 155, 169, 179, 197, 230, 422, 423], "carri": [3, 21, 44, 72, 125, 129, 147, 148, 154, 155, 209, 333, 410, 412, 422, 423, 424, 426], "nontensorspec": [3, 402], "importantli": [3, 301, 305], "action_s": 3, "help": [3, 4, 27, 38, 46, 56, 57, 61, 66, 71, 125, 129, 147, 148, 154, 155, 182, 222, 315, 317, 332, 335, 337, 403, 405, 409, 410, 411, 412, 422, 423], "With": [3, 134, 135, 138, 208, 406, 410, 421, 422, 423, 426, 429], "necessarili": [3, 125, 129, 147, 148, 154, 155, 429], "present": [3, 27, 38, 46, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 108, 125, 128, 129, 147, 148, 154, 155, 183, 200, 204, 209, 212, 214, 222, 229, 230, 238, 239, 240, 241, 242, 243, 249, 254, 256, 258, 268, 274, 276, 277, 300, 304, 305, 306, 307, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 400, 406, 409, 419, 421, 422, 423, 426, 428], "0s": [3, 83, 89, 209, 412], "step_and_maybe_reset": [3, 125, 129, 147, 148, 154, 155, 414], "done_kei": [3, 23, 35, 37, 41, 47, 64, 93, 94, 100, 109, 125, 129, 147, 148, 154, 155, 168, 172, 182, 200, 207, 222, 229, 422, 423], "assign": [3, 4, 14, 15, 17, 27, 28, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 74, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 319, 320, 322, 338, 411, 415, 422, 423, 426], "_reset": [3, 125, 129, 141, 147, 148, 154, 155, 166, 168, 169, 172, 178, 181, 188, 197, 230, 234, 261, 422], "data_": [3, 125, 129, 147, 148, 154, 155], "append": [3, 8, 11, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 147, 148, 154, 155, 168, 175, 176, 200, 209, 214, 219, 253, 254, 257, 258, 297, 302, 409, 410, 411, 412, 413, 422, 423, 424, 425, 426, 428], "seed": [3, 14, 15, 16, 17, 21, 58, 67, 68, 90, 104, 125, 129, 141, 147, 148, 149, 150, 154, 155, 158, 159, 166, 169, 178, 181, 197, 214, 224, 368, 386, 422], "determinist": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 228, 239, 248, 270, 281, 292, 301, 304, 305, 308, 316, 333, 381, 404, 409, 410, 411, 412, 413, 415, 416, 419, 422, 424, 428, 429], "preced": [3, 46, 412], "risk": [3, 196], "overlap": [3, 67, 115], "reproduc": [3, 57, 61, 125, 129, 147, 148, 154, 155, 172, 224, 409, 411, 413, 423], "maximum": [3, 4, 14, 15, 16, 17, 18, 19, 20, 21, 25, 46, 52, 54, 55, 60, 66, 69, 72, 74, 92, 96, 97, 98, 101, 102, 117, 125, 129, 147, 148, 154, 155, 180, 201, 207, 208, 210, 233, 284, 285, 286, 308, 316, 318, 323, 324, 331, 333, 334, 338, 370, 383, 404, 409, 410, 411, 412, 415, 422, 423, 426], "max_step": [3, 11, 115, 125, 129, 139, 140, 141, 147, 148, 154, 155, 158, 159, 207, 212, 222, 368, 414, 415, 416, 418, 419, 422, 423, 428, 429], "tensordictmodul": [3, 14, 15, 16, 17, 18, 19, 20, 21, 56, 60, 66, 121, 122, 125, 129, 141, 147, 148, 154, 155, 171, 189, 232, 236, 247, 254, 258, 261, 277, 278, 279, 287, 288, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 316, 318, 319, 323, 324, 326, 327, 328, 329, 331, 333, 336, 338, 340, 341, 348, 349, 350, 351, 352, 353, 381, 396, 402, 409, 411, 412, 416, 419, 421, 422, 423, 424, 425, 429], "trail": [3, 220], "treat": [3, 46, 405, 415, 416], "brief": [3, 411, 414, 416, 426], "deliveri": 3, "design": [3, 27, 38, 46, 50, 56, 57, 61, 66, 107, 113, 120, 125, 129, 139, 140, 147, 148, 154, 155, 165, 172, 196, 212, 214, 222, 296, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 409, 410, 411, 412, 414, 415, 416, 421, 422, 423, 424, 426, 428, 429], "metaclass": 3, "everi": [3, 8, 27, 31, 32, 38, 39, 46, 50, 53, 56, 57, 58, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 111, 125, 129, 147, 148, 154, 155, 207, 208, 220, 222, 227, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 264, 265, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 333, 386, 406, 409, 410, 411, 412, 414, 415, 422, 423, 424], "flank": [3, 412], "dual": 3, "strictli": [3, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338, 409, 411], "refer": [3, 7, 8, 9, 11, 21, 24, 27, 38, 46, 56, 57, 60, 61, 66, 125, 128, 129, 130, 147, 148, 154, 155, 212, 214, 220, 222, 234, 247, 248, 261, 262, 263, 264, 265, 266, 270, 271, 280, 281, 295, 298, 315, 318, 325, 326, 327, 328, 335, 338, 350, 355, 363, 408, 409, 411, 413, 415, 416, 417, 418, 422, 423, 426], "union": [3, 12, 14, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 101, 102, 109, 125, 129, 147, 148, 154, 155, 176, 191, 195, 200, 202, 209, 214, 216, 218, 220, 222, 229, 237, 238, 239, 240, 241, 242, 243, 245, 249, 259, 262, 263, 264, 265, 267, 268, 272, 274, 278, 284, 285, 286, 287, 291, 304, 322, 324, 330, 336, 339, 363, 381, 383, 386, 391, 392, 394, 396, 397, 398, 399, 400], "assess": [3, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 39, 63, 139, 140, 160, 409], "split_trajectori": [3, 14, 15, 16, 17, 18, 19, 20, 21, 83, 89, 102, 109, 110, 402], "adjac": [3, 23, 185, 300], "junction": 3, "inittrack": [3, 254, 258, 300, 409, 412], "tutori": [3, 148, 401, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429], "scratch": [3, 8, 410, 424], "gym3": 3, "envpool": [3, 142, 143], "interfac": [3, 132, 144, 259, 267, 404, 405, 409, 411, 413, 418, 424, 426], "simultan": [3, 20, 135, 142, 143, 147, 154, 424], "advantag": [3, 8, 249, 315, 317, 332, 335, 337, 350, 351, 352, 353, 354, 355, 357, 359, 361, 363, 364, 366, 405, 406, 409, 410, 411, 412, 423, 424, 429], "scale": [3, 4, 24, 85, 125, 129, 147, 148, 154, 155, 172, 189, 191, 202, 208, 211, 220, 233, 248, 255, 269, 280, 281, 285, 286, 293, 294, 295, 301, 305, 307, 315, 316, 318, 331, 335, 336, 337, 338, 384, 390, 400, 404, 409, 410, 411, 412, 415, 423, 428], "varieti": [3, 11], "inherit": [3, 125, 129, 147, 148, 154, 155, 260, 264, 265, 333, 406, 411, 422, 423], "from_pixel": [3, 11, 121, 122, 123, 124, 128, 130, 131, 134, 135, 151, 172, 199, 368, 370, 409, 410, 412, 414, 418, 419, 425, 426, 428, 429], "81": [3, 109, 410, 424], "simpli": [3, 6, 52, 54, 59, 72, 73, 113, 115, 120, 183, 204, 219, 333, 350, 404, 405, 409, 411, 416, 422, 423, 429], "d": [3, 53, 56, 58, 66, 67, 68, 86, 88, 90, 91, 92, 101, 102, 233, 252, 256, 301, 305, 428], "privat": [3, 125, 129, 147, 148, 154, 155, 219, 424, 429], "absenc": 3, "total": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 42, 44, 50, 52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 110, 115, 317, 332, 335, 378, 380, 381, 386, 389, 390, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "accord": [3, 14, 15, 16, 17, 18, 19, 20, 21, 52, 54, 59, 60, 73, 104, 107, 156, 157, 191, 202, 255, 267, 280, 285, 286, 348, 404, 415, 416, 422, 424, 426], "inner": [3, 125, 129, 147, 148, 154, 155, 180, 406, 410, 411, 423, 429], "logic": [3, 422], "kept": [3, 23, 108, 110, 125, 129, 147, 148, 154, 155, 180, 204, 213, 224, 229, 255, 285, 286, 416, 422], "mind": [3, 83, 89, 102, 109, 110, 125, 129, 147, 148, 154, 155, 422, 423], "desig": 3, "wherev": 3, "expos": [3, 151, 178, 181, 306, 410], "modif": [3, 5, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 147, 148, 154, 155, 185, 222, 230, 333, 405, 411, 424], "lost": [3, 8, 219], "eras": [3, 25, 26, 28, 29, 30, 34, 42, 43, 44, 45, 48, 49, 50, 51, 71, 74, 75, 76, 77, 78, 102, 109, 125, 129, 147, 148, 154, 155, 214], "intern": [3, 70, 407], "face": [3, 5, 8, 9, 414, 429], "NOT": [3, 93, 94, 100, 110, 196], "outsid": [3, 16, 179, 212, 405, 418, 422, 423, 424], "right": [3, 6, 7, 23, 60, 102, 109, 410, 411, 413, 423, 424, 429], "preliminari": 3, "warranti": 3, "affect": [3, 8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 213, 214, 222, 224, 350, 351, 352, 353, 422], "preclud": 3, "presenc": [3, 56, 66, 416], "annihil": 3, "reason": [3, 4, 8, 27, 38, 46, 56, 57, 61, 66, 89, 125, 129, 147, 148, 149, 150, 154, 155, 195, 216, 222, 258, 405, 409, 410, 411, 416, 417, 422, 424, 426], "superse": 3, "pettingzoowrapp": [3, 402], "group": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 56, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 138, 139, 140, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 345, 404, 410, 415, 417, 423, 426], "environemtn": 3, "__not__": [3, 301, 316, 318, 331, 336, 338, 340, 341], "constrain": [3, 189, 254, 258, 335], "li": 3, "fact": [3, 7, 8, 409, 411, 414, 422, 423, 424, 425, 426, 429], "meaning": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "perfectli": [3, 406, 409, 413, 424], "meaningless": 3, "val": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 413, 416, 428], "agent0": [3, 413], "agent1": 3, "overrid": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 58, 62, 63, 71, 74, 75, 76, 77, 78, 83, 125, 129, 147, 148, 154, 155, 168, 245, 400, 404], "bool": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 104, 105, 107, 108, 109, 110, 111, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 172, 173, 178, 180, 181, 182, 183, 185, 189, 190, 191, 193, 195, 197, 198, 200, 202, 203, 204, 207, 209, 211, 212, 214, 215, 216, 218, 220, 222, 224, 227, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 277, 284, 285, 286, 291, 292, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 348, 350, 351, 352, 353, 356, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 377, 380, 381, 383, 384, 386, 400, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "500": [3, 409, 410, 424, 429], "launch": [3, 14, 15, 17, 18, 19, 20, 22, 83, 86, 147, 154], "bottleneck": [3, 8, 102, 109, 110], "great": [3, 7, 8, 413, 422, 428], "speedup": [3, 8, 422, 429], "precis": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 178, 181, 229, 253, 257, 409, 411], "misspecifi": 3, "caus": [3, 7, 8, 96, 97, 117, 125, 129, 133, 147, 148, 154, 155, 196, 429], "breakag": 3, "rais": [3, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 89, 96, 125, 129, 147, 148, 154, 155, 156, 160, 172, 184, 190, 200, 208, 209, 210, 212, 214, 222, 224, 231, 232, 250, 276, 277, 318, 333, 338, 409, 411, 422, 423, 426], "mismatch": [3, 56, 410], "subprocess": [3, 14, 15, 17, 126, 147, 154], "multithreadedenv": [3, 402], "underneath": 3, "higher": [3, 4, 102, 175, 308, 409, 410, 411, 422, 426, 429], "flexibl": [3, 9, 142, 342, 405, 406, 409, 413, 426, 429], "cover": [3, 128, 130, 403, 411, 414, 417, 418, 424, 428], "type": [3, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 31, 32, 38, 39, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 71, 72, 73, 74, 91, 92, 104, 125, 129, 138, 141, 144, 147, 148, 149, 150, 154, 155, 169, 176, 178, 179, 182, 183, 189, 195, 197, 198, 204, 207, 209, 212, 213, 214, 216, 218, 220, 222, 225, 228, 231, 232, 237, 238, 259, 264, 265, 268, 278, 287, 289, 297, 301, 304, 305, 312, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 343, 345, 348, 356, 368, 398, 402, 404, 409, 410, 411, 413, 417, 422, 423, 424, 426, 429], "atari": [3, 4, 83, 172, 238, 370, 413, 418, 429], "classic": [3, 141, 150, 410], "benchmark_batched_env": 3, "seamlessli": [3, 424], "infrastructur": [3, 422, 423], "world": [3, 5, 141, 310, 327, 413, 418, 422, 423, 424, 429], "paradigm": [3, 17, 423], "decpodp": 3, "game": [3, 4, 5, 83, 139, 140, 145, 146, 238, 370, 413, 418], "thank": [3, 409, 413, 414, 428], "carrier": [3, 411, 412, 414, 426], "particular": [3, 27, 38, 46, 56, 57, 61, 66, 72, 85, 86, 125, 129, 147, 148, 154, 155, 214, 222, 405, 406, 410, 412, 414, 421, 423, 426], "thu": [3, 332, 423], "vma": [3, 158, 159, 368, 422, 423], "robot": [3, 5, 7, 89, 195, 216, 218, 413, 423], "vmasenv": [3, 368, 402, 422, 423], "balanc": [3, 123, 124, 409, 410, 429], "num_env": [3, 21, 128, 132, 143, 158, 159, 368, 422, 423], "n_agent": [3, 158, 159, 264, 265, 266, 278, 287, 348, 368, 422, 423], "ground_rew": 3, "pos_rew": [3, 423], "style": [3, 53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91], "vari": [3, 128, 130, 131, 149, 150, 151, 158, 196, 413, 423], "creation": [3, 147, 154, 429], "info_spec": [3, 147], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 25, 26, 34, 44, 45, 50, 51, 121, 122, 125, 128, 129, 130, 131, 134, 135, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 165, 166, 182, 197, 230, 247, 272, 275, 279, 297, 298, 301, 302, 303, 320, 323, 324, 348, 402, 412, 422, 423, 429], "simpl": [3, 9, 27, 38, 46, 50, 56, 57, 61, 66, 71, 125, 129, 147, 148, 154, 155, 222, 240, 300, 305, 320, 322, 333, 337, 405, 409, 410, 411, 414, 415, 416, 422, 423, 426, 429], "prefix": [3, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 72, 73, 125, 129, 147, 148, 154, 155, 212, 214, 222, 301, 318, 333, 338, 369, 412, 416, 429], "exactli": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 131, 147, 148, 154, 155, 212, 214, 222, 252, 256, 272, 318, 338, 409, 412, 417, 422, 423], "action_kei": [3, 14, 15, 16, 17, 18, 19, 20, 21, 41, 125, 129, 147, 148, 154, 155, 165, 166, 180, 223, 229, 231, 232, 234, 250, 260, 261, 276, 277, 300, 422, 423], "reward_kei": [3, 35, 37, 41, 47, 64, 93, 94, 100, 125, 129, 147, 148, 154, 155, 222, 229, 234, 261, 384, 422, 423], "set_kei": [3, 182, 315, 317, 318, 320, 323, 324, 325, 331, 332, 333, 335, 336, 337, 338, 348, 354, 409, 422, 423], "awai": [3, 411, 414, 422, 423, 428], "leaf": [3, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 42, 43, 44, 45, 48, 49, 50, 51, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 188, 207, 305], "full": [3, 125, 129, 147, 148, 154, 155, 235, 254, 258, 298, 378, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "autoresettransform": 3, "invalid": [3, 27, 38, 46, 56, 57, 61, 66, 115, 125, 129, 147, 148, 154, 155, 160, 222, 262, 263], "nan": [3, 168, 219], "auto_reset": [3, 41, 125, 129, 135, 147, 148, 154, 155, 168, 222, 424], "auto_reset_replac": [3, 168], "placehold": [3, 131, 182, 214], "set_gym_backend": [3, 125, 128, 129, 147, 148, 154, 155, 161, 168, 402, 414, 428], "autoresettinggymenv": [3, 168], "_step": [3, 125, 129, 147, 148, 154, 155, 166, 168, 169, 178, 181, 185, 197, 198], "self": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 31, 32, 38, 39, 46, 52, 54, 56, 57, 59, 61, 63, 66, 73, 125, 129, 141, 147, 148, 154, 155, 166, 168, 169, 176, 178, 181, 195, 197, 209, 213, 214, 216, 218, 222, 231, 232, 234, 247, 250, 254, 258, 261, 264, 265, 278, 287, 301, 304, 309, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 406, 409, 413, 423, 424, 428], "super": [3, 141, 166, 168, 169, 178, 181, 197, 234, 247, 261, 309, 316, 318, 319, 324, 331, 336, 338, 340, 341, 409, 424, 428], "td_reset": [3, 168], "exclud": [3, 8, 41, 66, 85, 90, 125, 129, 147, 148, 154, 155, 168, 172, 183, 229, 278, 317, 335, 422, 423, 426], "r": [3, 4, 41, 46, 165, 166, 168, 175, 191, 205, 212, 220, 233, 236, 253, 305, 314, 349, 368, 410, 424, 429], "break_when_any_don": [3, 125, 129, 147, 148, 154, 155, 168, 212, 222, 236, 300, 423], "3633e": [3, 168], "02": [3, 125, 129, 147, 148, 154, 155, 168, 408, 409, 410, 411, 412, 419, 422, 424, 425, 427], "4877e": [3, 168], "01": [3, 168, 191, 233, 276, 277, 311, 315, 317, 332, 335, 408, 409, 410, 412, 424, 425, 427], "2849e": [3, 168], "7584e": [3, 168], "6609e": [3, 168], "6166e": [3, 168], "8366e": [3, 168], "2761e": [3, 168], "5685e": [3, 168], "4102e": [3, 168], "8111e": [3, 168], "9959e": [3, 168], "0865e": [3, 168], "5644e": [3, 168], "2119e": [3, 168], "2542e": [3, 168], "03": [3, 125, 129, 147, 148, 154, 155, 168, 191, 408, 409, 410, 424, 425, 427], "9952e": [3, 168], "4059e": [3, 168], "2094e": [3, 168], "9009e": [3, 168], "5140e": [3, 168], "3554e": [3, 168], "2920e": [3, 168], "7893e": [3, 168], "6429e": [3, 168], "3057e": [3, 168], "2867e": [3, 168], "6963e": [3, 168], "3818e": [3, 168], "2576e": [3, 168], "2679e": [3, 168], "1640e": [3, 168], "00": [3, 121, 122, 168, 408, 409, 410, 411, 412, 422, 424, 425, 427], "6972e": [3, 168], "0212e": [3, 168], "5959e": [3, 168], "4637e": [3, 168], "3121e": [3, 168], "2168e": [3, 168], "5232e": [3, 168], "7704e": [3, 168], "7457e": [3, 168], "4127e": [3, 168], "1064e": [3, 168], "0854e": [3, 168], "5712e": [3, 168], "2189e": [3, 168], "5235e": [3, 168], "8289e": [3, 168], "0009e": [3, 168], "0257e": [3, 168], "8893e": [3, 168], "5872e": [3, 168], "9405e": [3, 168], "7766e": [3, 168], "0403e": [3, 168], "0626e": [3, 168], "2959e": [3, 168], "7263e": [3, 168], "2775e": [3, 168], "9564e": [3, 168], "0411e": [3, 168], "6769e": [3, 168], "6354e": [3, 168], "8698e": [3, 168], "1765e": [3, 168], "6292e": [3, 168], "5375e": [3, 168], "1820e": [3, 168], "7023e": [3, 168], "5836e": [3, 168], "9016e": [3, 168], "4826e": [3, 168], "6191e": [3, 168], "6387e": [3, 168], "8667e": [3, 168], "2056e": [3, 168], "1147e": [3, 168], "5991e": [3, 168], "0278e": [3, 168], "5219e": [3, 168], "3067e": [3, 168], "6617e": [3, 168], "3322e": [3, 168], "2629e": [3, 168], "4599e": [3, 168], "7298e": [3, 168], "5848e": [3, 168], "0148e": [3, 168], "5745e": [3, 168], "6982e": [3, 168], "7877e": [3, 168], "3527e": [3, 168], "7285e": [3, 168], "6668e": [3, 168], "0583e": [3, 168], "6956e": [3, 168], "3962e": [3, 168], "9845e": [3, 168], "5015e": [3, 168], "5903e": [3, 168], "9993e": [3, 168], "9418e": [3, 168], "0196e": [3, 168], "6557e": [3, 168], "2109e": [3, 168], "8997e": [3, 168], "1507e": [3, 168], "7363e": [3, 168], "0310e": [3, 168], "9574e": [3, 168], "8980e": [3, 168], "0090e": [3, 168], "forecast": 3, "awar": [3, 7, 96, 97, 98, 111, 113, 117, 254, 258, 410, 412], "detect": [3, 91, 333, 405], "return_contigu": [3, 125, 129, 147, 148, 154, 155, 224, 421], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 125, 127, 129, 147, 148, 154, 155, 166, 168, 169, 171, 172, 173, 176, 178, 179, 182, 183, 184, 185, 188, 189, 194, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 212, 213, 214, 219, 220, 222, 224, 229, 230, 231, 232, 234, 250, 254, 258, 260, 261, 276, 277, 296, 298, 300, 303, 304, 305, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 352, 353, 354, 386, 409, 422, 424], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 14, 15, 17, 24, 27, 28, 31, 33, 38, 46, 50, 53, 56, 57, 60, 61, 66, 67, 74, 89, 101, 102, 104, 125, 129, 147, 148, 154, 155, 165, 168, 172, 176, 178, 181, 189, 191, 195, 200, 201, 202, 208, 209, 211, 213, 214, 216, 218, 220, 222, 231, 232, 233, 235, 236, 245, 248, 252, 255, 256, 259, 262, 263, 267, 268, 275, 280, 281, 284, 286, 304, 308, 311, 313, 314, 315, 316, 317, 318, 322, 323, 324, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 384, 409, 410, 426, 429], "_set_se": [3, 166, 169, 178, 181, 197, 424], "lazystackedtensordict": [3, 41, 63, 83, 125, 129, 141, 147, 148, 154, 155, 421], "float32": [3, 14, 15, 16, 28, 31, 35, 52, 53, 54, 56, 59, 60, 64, 66, 67, 68, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 101, 102, 109, 117, 121, 122, 125, 128, 129, 130, 134, 135, 141, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 158, 159, 165, 169, 178, 181, 182, 183, 191, 193, 197, 198, 200, 204, 207, 209, 211, 227, 229, 234, 236, 246, 247, 254, 258, 261, 276, 277, 278, 279, 287, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 307, 309, 312, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 348, 404, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429], "exclusive_field": [3, 83, 421], "stack_dim": [3, 83, 421], "dramat": 3, "carefulli": [3, 422, 423, 429], "against": [3, 5, 7, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 222, 224, 292, 297, 298, 301, 302, 303, 304, 305, 316, 318, 331, 336, 338, 340, 341, 411, 422, 423], "plain": [3, 8, 414], "larg": [3, 4, 30, 52, 54, 59, 73, 110, 178, 181, 216, 315, 317, 332, 335, 337, 410, 411, 422, 423, 426], "expens": [3, 102, 109, 110, 368, 426], "absent": [3, 31, 32, 39, 63, 66, 85, 125, 129, 147, 148, 154, 155, 204, 214], "torchvis": [3, 11, 195, 218, 372, 422, 428, 429], "base_env": [3, 122, 125, 129, 130, 135, 146, 147, 148, 154, 155, 157, 165, 166, 169, 175, 178, 180, 181, 189, 193, 197, 199, 205, 207, 209, 210, 212, 214, 222, 370, 409, 410, 411, 413, 422, 425, 428, 429], "callabl": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 126, 129, 141, 147, 148, 154, 155, 164, 167, 169, 176, 182, 209, 214, 222, 237, 238, 259, 266, 314, 333, 368, 391, 392, 398, 399, 400, 410, 426], "bring": [3, 411, 414, 429], "signific": [3, 5, 8, 411, 428, 429], "kind": [3, 58, 71, 229, 416, 422, 426], "consult": 3, "interest": [3, 301, 305, 404, 410, 411, 414, 423, 424, 429], "resize_par": 3, "easi": [3, 5, 11, 83, 88, 123, 124, 125, 129, 134, 135, 147, 148, 154, 155, 231, 232, 250, 276, 277, 404, 405, 409, 410, 411, 423, 425, 426, 428, 429], "revers": [3, 256], "order": [3, 11, 16, 27, 38, 46, 50, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 108, 110, 125, 129, 147, 148, 154, 155, 173, 178, 181, 193, 212, 214, 222, 275, 292, 297, 304, 306, 307, 309, 315, 316, 318, 319, 323, 324, 331, 335, 336, 337, 338, 340, 341, 410, 422, 423], "chain": [3, 52, 53, 54, 58, 59, 67, 68, 73, 83, 85, 86, 87, 88, 89, 90, 91, 176, 180, 237, 238, 307, 429], "in_keys_inv": [3, 162, 175, 178, 179, 181, 191, 192, 193, 197, 198, 200, 205, 213, 215, 409, 421, 424, 429], "append_transform": [3, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 162, 165, 171, 195, 209, 212, 214, 216, 220, 236, 254, 258, 368, 409, 412, 422, 424, 426, 428, 429], "doubletofloat": [3, 409, 411, 421], "float64": [3, 27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 124, 125, 129, 139, 140, 147, 148, 154, 155, 165, 176, 178, 181, 195, 209, 213, 214, 216, 218, 222, 304, 421, 429], "constrast": 3, "out_keys_inv": [3, 162, 175, 178, 179, 181, 191, 192, 193, 197, 198, 205, 213, 215, 424], "chang": [3, 5, 7, 11, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 96, 97, 98, 102, 108, 109, 111, 113, 117, 125, 129, 147, 148, 154, 155, 169, 176, 178, 179, 181, 183, 189, 197, 198, 204, 207, 213, 214, 220, 222, 256, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 405, 409, 412, 422, 423, 424, 425, 426, 429], "regist": [3, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 66, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 128, 129, 130, 147, 148, 154, 155, 156, 157, 178, 181, 182, 203, 212, 214, 222, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 368, 370, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 406, 409, 411, 414, 426], "manipul": [3, 4, 8, 123, 124, 195, 216, 429], "third_transform": 3, "unexpect": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 413, 429], "behviour": 3, "fortun": [3, 412, 413, 414, 415, 418], "alreadi": [3, 8, 12, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 83, 96, 125, 129, 147, 148, 154, 155, 209, 222, 230, 305, 350, 351, 352, 353, 409, 411, 418, 422, 423], "catfram": [3, 300, 410], "hold": [3, 346, 347, 424, 426], "notic": [3, 115, 172, 411, 419, 424], "parenthood": 3, "henc": [3, 53, 196, 230, 264, 409, 411, 422, 423, 424], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 147, 154, 368, 424], "discret": [3, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 128, 129, 130, 139, 140, 147, 148, 149, 150, 154, 155, 158, 159, 165, 180, 272, 275, 279, 322, 323, 324, 325, 404, 410, 411, 415, 422, 423, 424, 429], "might": [3, 52, 54, 55, 59, 73, 374, 403, 409, 414, 429], "action_mask": [3, 134, 135, 149, 150, 152, 153, 166], "unavail": [3, 149, 150], "probabl": [3, 4, 8, 60, 104, 107, 235, 236, 245, 247, 250, 252, 254, 256, 258, 259, 262, 263, 272, 285, 286, 301, 305, 318, 404, 410, 413, 415, 428], "probabilistictensordictmodul": [3, 189, 305, 306, 428], "tensordictsequenti": [3, 56, 66, 236, 250, 254, 258, 276, 297, 300, 306, 312, 404, 409, 410, 412, 413, 415, 419, 421, 422, 425, 428], "maskedcategor": [3, 263, 402], "linear": [3, 14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 141, 147, 148, 154, 155, 176, 189, 195, 209, 213, 214, 216, 218, 222, 234, 236, 237, 238, 240, 241, 242, 243, 247, 249, 250, 259, 261, 264, 265, 267, 268, 269, 276, 277, 279, 280, 281, 292, 293, 294, 295, 299, 300, 301, 302, 304, 307, 309, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 396, 404, 410, 413, 421, 425, 428], "in_feat": 3, "out_feat": 3, "logit": [3, 54, 60, 246, 262, 263, 272, 275, 298, 301, 323, 324, 404], "dist": [3, 10, 262, 263, 272, 415], "distribution_class": [3, 189, 293, 294, 295, 296, 301, 305, 307, 315, 316, 318, 323, 324, 331, 335, 336, 337, 338, 404, 409, 411, 415, 422, 423, 428], "wrap": [3, 5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 33, 38, 46, 56, 57, 60, 61, 66, 87, 121, 122, 125, 129, 130, 134, 135, 140, 143, 145, 146, 147, 148, 149, 150, 154, 155, 157, 159, 212, 222, 224, 232, 254, 258, 277, 288, 293, 294, 295, 300, 302, 310, 333, 348, 404, 409, 410, 411, 412, 416, 419, 422, 423, 429], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 23, 166, 196, 222], "enviorn": [3, 139, 149, 150, 158, 159], "itself": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 161, 168, 222, 333, 340, 411, 414], "ey": 3, "report": [3, 121, 122, 134, 135, 418], "foremost": 3, "callback": [3, 125, 129, 147, 148, 154, 155, 423], "ad": [3, 4, 16, 23, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 125, 129, 147, 148, 154, 155, 203, 212, 214, 222, 233, 267, 268, 276, 277, 315, 317, 318, 320, 325, 332, 335, 338, 348, 410, 412, 413, 415, 422, 426, 428, 429], "tensordictrecord": [3, 402], "videorecord": [3, 11, 368, 402, 411, 418, 419, 422], "csvlogger": [3, 11, 368, 370, 402, 410, 418, 419, 422], "wandblogg": [3, 402, 418], "tensorboardlogg": [3, 396, 402, 418], "tag": [3, 7, 11, 368, 370, 372, 375, 400, 418, 419, 422], "mp4": [3, 368, 370, 372, 419, 422], "video_format": [3, 368, 370, 372, 419, 422], "whc": 3, "cwh": 3, "exp": [3, 269, 314], "al": [3, 24, 128, 130, 182, 193, 234, 413, 429], "pong": [3, 83, 143, 193, 413, 429], "v5": [3, 128, 130, 143, 182, 193, 413, 429], "cach": [3, 52, 54, 72, 83, 85, 86, 87, 89, 90, 91, 92, 102, 109, 125, 129, 147, 148, 154, 155, 168, 178, 181, 195, 214, 218, 229, 235, 379, 425], "grow": 3, "dumpi": 3, "tediou": [3, 414], "workspac": [3, 125, 129, 147, 148, 154, 155], "pixelrendertransform": [3, 402, 422], "stream": [3, 89], "alik": [3, 368], "envcreat": [3, 16, 22, 147, 154, 212, 368, 396, 397, 400, 402, 409, 410, 428, 429], "render_mod": [3, 368, 424], "rgb_arrai": [3, 368, 422, 423, 424], "uncom": [3, 418], "line": [3, 7, 27, 38, 46, 56, 57, 61, 66, 83, 125, 129, 147, 148, 154, 155, 222, 410, 413, 418, 422, 423], "comment": [3, 406, 410, 428], "pixels_record": [3, 368], "close": [3, 16, 129, 142, 189, 315, 317, 332, 335, 368, 409, 410, 414, 421, 422, 424, 428], "mission": 3, "irrespect": [3, 304, 305], "dmcontrol": [3, 125, 129, 147, 148, 154, 155], "jumanji": [3, 125, 129, 134, 135, 147, 148, 154, 155], "special": [3, 75, 77, 402, 409, 412, 413, 429], "framework": [3, 4, 9, 22, 121, 122, 125, 129, 134, 135, 141, 147, 148, 154, 155, 252, 428, 429], "Its": [3, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 220, 222, 304, 354], "success": [3, 83, 84, 85, 86, 87, 88, 89, 90, 91, 172, 213, 250, 318, 340, 410, 417, 419, 424, 426, 428], "foundat": [3, 5, 149, 150, 411, 423], "inspir": [3, 413, 424], "gone": [3, 4, 5, 300], "prefer": [3, 14, 15, 17, 20, 23, 24, 53, 58, 67, 68, 196, 204, 335, 340, 383, 404, 411, 422, 423, 426, 428], "maintain": [3, 5, 9, 33, 424], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 410, 411, 412, 417, 422, 423, 424, 426, 429], "decor": [3, 8, 12, 164, 254, 258, 291, 333, 350, 351, 352, 353, 412, 428], "relev": [3, 60, 350, 351, 352, 353, 354, 377, 413, 424], "gym_backend": [3, 164, 402], "env1": [3, 236, 421], "venv": 3, "python3": [3, 6, 7, 10, 413], "site": [3, 6, 7, 90, 164, 413], "env2": [3, 421], "_env": [3, 6, 128, 429], "classic_control": 3, "pendulumenv": [3, 41, 402, 424], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 137, 161], "side": [3, 4, 429], "v0": [3, 14, 15, 52, 54, 59, 73, 125, 129, 131, 134, 135, 136, 137, 147, 148, 154, 155, 176, 214, 220, 396], "26": [3, 110, 125, 129, 147, 148, 154, 155, 408, 409, 410, 411, 416, 422, 424, 425, 427], "fun": [3, 12, 164, 411, 422, 423], "reveal": 4, "bug": 4, "curv": 4, "exploit": [4, 415], "cv": 4, "flip": [4, 135], "correspondingli": 4, "invers": [4, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 172, 178, 181, 183, 191, 198, 200, 222, 313, 323, 331, 402, 424], "prescript": 4, "tune": [4, 24, 189, 422, 423, 425], "coeffici": [4, 24, 33, 60, 189, 423], "bonu": [4, 315, 317, 332, 335], "beta": [4, 53, 67, 101, 102, 323, 331, 332, 409, 410, 426, 428], "reduc": [4, 6, 30, 115, 208, 233, 235, 285, 402, 410, 422], "downstream": [4, 405, 409], "formul": [4, 422, 423], "ob": [4, 8, 23, 31, 32, 39, 53, 58, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 104, 109, 110, 115, 125, 129, 147, 148, 154, 155, 166, 168, 178, 179, 181, 191, 205, 211, 227, 229, 240, 241, 242, 243, 264, 265, 266, 302, 309, 316, 318, 319, 324, 331, 336, 338, 340, 341, 350, 351, 352, 353, 410, 413, 421, 422, 424, 426, 428, 429], "rate": [4, 11, 83, 220, 349, 410, 411, 422, 423], "gradient": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 235, 255, 263, 268, 272, 285, 286, 315, 317, 318, 319, 323, 324, 329, 331, 332, 333, 335, 336, 337, 338, 340, 341, 349, 350, 351, 352, 353, 386, 409, 411, 422, 423, 424], "easier": [4, 57, 404, 409, 428], "local": [4, 7, 10, 16, 21, 27, 38, 46, 56, 57, 61, 66, 102, 109, 125, 129, 147, 148, 154, 155, 214, 222, 264, 265, 278, 287, 348, 375, 377, 413, 418, 419, 422, 423], "optima": 4, "product": [4, 9, 252, 253, 256, 257, 398, 399], "sum": [4, 21, 27, 44, 50, 66, 115, 121, 122, 123, 124, 128, 130, 131, 134, 135, 142, 143, 151, 171, 203, 262, 263, 285, 287, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 331, 332, 334, 335, 336, 337, 338, 340, 341, 349, 356, 405, 409, 410, 411, 412, 413, 416, 419, 422, 423, 424, 429], "stat": [4, 191, 220, 390, 400, 410, 411], "w": [4, 104, 145, 146, 172, 174, 177, 199, 211, 252, 276, 277, 370, 410, 412, 426], "yield": [4, 14, 15, 16, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333, 409, 416], "insight": [4, 413], "auxiliari": [4, 416], "credit": 4, "futur": [4, 23, 27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 93, 94, 100, 125, 129, 147, 148, 154, 155, 195, 212, 214, 218, 222, 259, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 403], "spars": [4, 412], "intermedi": [4, 14, 15, 41, 56, 66, 171, 236, 254, 258, 298, 409, 413, 425], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 409], "discov": 4, "score": [4, 60, 273, 275], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 53, 56, 58, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 139, 140, 149, 150, 158, 159, 166, 168, 169, 171, 172, 173, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 212, 213, 216, 217, 219, 220, 222, 223, 234, 254, 258, 297, 302, 385, 404, 409, 413, 414, 422, 426], "explicit": [4, 12, 72, 104, 426], "mechan": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 410, 416, 424], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 24, 125, 129, 147, 148, 154, 155, 256, 323, 331, 411, 423], "addition": [4, 245], "timestep": [4, 60, 85, 200, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 422, 423], "realli": 4, "huge": [4, 265, 412], "std": [4, 191, 220, 231, 232, 269, 274, 409, 429], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 408, 412, 414, 416, 417, 418, 419, 420, 421, 425, 426, 427], "estim": [4, 83, 102, 109, 110, 182, 189, 240, 285, 293, 294, 295, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "unseen": 4, "extrins": 4, "wrong": [4, 102, 109], "bonus": 4, "denser": 4, "prior": [4, 61, 281, 327, 423], "freshli": 4, "drop": [4, 108, 110, 229], "meant": [4, 46, 141], "encourag": [4, 147, 275, 409, 410, 426], "measur": [4, 96, 97, 117, 121, 122, 134, 135, 411, 417], "novelti": 4, "revisit": 4, "previous": [4, 411, 429], "diminish": 4, "decreas": [4, 24, 415], "ideal": [4, 191, 424], "down": [4, 14, 15, 16, 17, 405, 412, 414], "anyth": [4, 14, 15, 16, 17, 18, 19, 20, 21], "distil": 4, "nois": [4, 221, 268, 276, 277, 290, 336, 340, 341, 381, 400, 409, 422], "exploratori": [4, 315, 317, 332, 335], "misalign": 4, "trade": [4, 415], "unavoid": 4, "divers": [4, 147, 154], "bootstrap": [4, 325, 351, 357, 358, 409, 412], "noisi": [4, 267, 268, 290, 404], "unstabl": [4, 255, 285, 286], "inher": [4, 315, 335], "stochast": [4, 189, 248, 268, 270, 281, 316, 318, 321, 323, 324, 329, 331, 334, 336, 338, 404, 411, 415, 423], "enemi": 4, "pomdp": [4, 426], "loos": [4, 404, 410, 411], "nonexist": 4, "architectur": [4, 244, 416, 422, 423, 428], "sequenc": [4, 14, 15, 16, 17, 24, 31, 32, 39, 42, 44, 53, 55, 56, 58, 60, 63, 66, 69, 72, 89, 92, 95, 104, 105, 107, 113, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 142, 143, 147, 148, 151, 154, 155, 162, 170, 171, 172, 173, 174, 177, 178, 180, 181, 185, 187, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 208, 210, 211, 213, 220, 237, 238, 245, 247, 252, 256, 259, 262, 263, 264, 265, 272, 279, 283, 296, 306, 307, 321, 369, 370, 381, 382, 383, 385, 386, 404, 409, 411, 412, 413, 421, 422, 423, 429], "lstm": [4, 209, 257, 258, 269, 413], "rel": [4, 104, 209, 245, 284, 409, 410, 422, 423, 426], "tend": 4, "stabl": [4, 9, 10, 144], "compens": 4, "descent": [4, 268], "minimum": [4, 74, 147, 154, 201, 248, 269, 284, 285, 286, 308, 311, 314, 316, 318, 324, 333, 334, 338, 378, 409, 411, 419, 422, 423], "manual": [4, 11, 18, 20, 21, 41, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 129, 130, 409, 412, 426], "deviat": [4, 191, 220, 231, 232, 234, 248, 261, 267, 268, 274, 275, 335, 340, 341, 409, 415, 423], "radic": 4, "begin": [4, 14, 15, 16, 17, 18, 19, 20, 21, 102, 109, 168, 252, 253, 256, 257, 413, 414, 415, 416, 417, 418, 419], "stabil": [4, 186, 235, 315, 317, 332, 335, 337], "stage": [4, 409, 424], "never": [4, 14, 15, 17, 28, 74, 102, 417, 428], "prevent": [4, 25, 26, 30, 31, 32, 34, 39, 42, 43, 44, 45, 50, 51, 63, 94, 220, 255, 285, 286, 315, 317, 332, 335, 337, 384, 418, 426], "entir": [4, 89, 125, 129, 147, 148, 154, 155, 264, 411, 414, 424, 426], "submit": [4, 128, 169, 403, 428], "system": [4, 5, 94, 411, 422, 423, 424], "adequ": [4, 125, 129, 147, 148, 154, 155, 224, 411, 422, 423], "infeas": 4, "allevi": [4, 404], "prune": 4, "fire": [4, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "illeg": 4, "chess": [4, 145, 146], "grasp": 4, "top": [4, 115, 121, 122, 134, 135, 177, 234, 261, 415], "wherein": 4, "cumul": [4, 203, 208, 234, 356, 411], "q": [4, 9, 125, 129, 147, 148, 154, 155, 240, 241, 242, 243, 246, 247, 249, 278, 279, 287, 295, 298, 302, 303, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 336, 338, 340, 341, 348, 402, 409, 416], "flow": [4, 409, 411, 422, 423, 424, 426], "reparameter": [4, 245, 263, 272], "soft": [4, 330, 338, 339, 422], "critic": [4, 8, 293, 299, 315, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 409, 416], "clip": [4, 60, 175, 201, 315, 317, 332, 335, 337, 340, 341, 386, 411, 423, 424], "oppos": [4, 72], "incorrect": [4, 109], "thought": [4, 125, 129, 147, 148, 154, 155], "region": 4, "squash": [4, 412, 428], "tanh": [4, 237, 238, 252, 253, 255, 256, 257, 259, 265, 284, 285, 286, 308, 411, 413, 415, 422, 423, 424, 425, 428], "prob": [4, 262, 263, 272, 275, 411, 423], "rememb": [4, 422], "remap": 4, "origin": [4, 8, 52, 54, 56, 59, 60, 66, 73, 133, 179, 180, 189, 195, 214, 218, 222, 252, 301, 304, 305, 316, 318, 330, 331, 333, 335, 336, 338, 340, 341, 409, 413, 421, 424, 429], "histor": 5, "ceas": 5, "farama": [5, 87, 136, 137, 149, 150, 411, 424], "best": [5, 9, 133, 254, 258, 422, 423, 426, 428], "gymwrapp": [5, 125, 129, 147, 148, 154, 155, 183, 204, 207, 219, 402, 411, 428], "feel": [5, 403, 419, 428], "free": [5, 7, 178, 181, 315, 327, 335, 406, 411, 419, 423, 428], "gladli": 5, "prepar": [6, 37, 86, 411], "conda": [6, 7, 403], "cmake": 6, "activ": [6, 7, 9, 237, 238, 244, 248, 259, 264, 265, 317, 332, 335, 404, 413, 424, 428], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 86, 403], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 131], "y": [6, 7, 56, 58, 66, 144, 249, 264, 288, 409, 423, 426], "facebookresearch": [6, 86, 131], "subdirectori": 6, "verbos": [6, 419], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 80, 125, 129, 147, 148, 154, 155, 197, 206, 222, 333, 422, 423, 428, 429], "command": [6, 7, 10, 155, 411, 422, 423, 424, 429], "readm": [6, 7, 158, 428], "md": [6, 7], "habitatenv": [6, 402], "_has_habitat": 6, "available_env": [6, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 429], "startswith": [6, 236, 405, 409, 416], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 126, 333, 409], "env_nam": [6, 121, 123, 125, 126, 128, 129, 131, 134, 136, 142, 147, 148, 151, 154, 155, 409, 411, 429], "llvmlite": 6, "config": [6, 7, 195, 218, 239, 244, 274, 390, 391, 392, 394, 397], "var": [6, 7, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 333, 338], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 297, 333], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 333, 338, 413, 426], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 85, 413], "stand": [7, 36, 123, 124, 147, 154, 421, 424, 429], "joint": [7, 410], "contact": [7, 55, 422], "engin": [7, 151, 424], "biomechan": 7, "graphic": 7, "anim": [7, 423], "area": 7, "demand": [7, 418, 429], "fast": [7, 9, 121, 122, 198, 229, 336, 409, 410, 411, 428], "articul": 7, "acquir": [7, 411], "deepmind": [7, 8, 9, 89, 123, 124, 125, 129, 139, 140, 145, 146, 147, 148, 154, 155, 182, 411, 414], "whomev": 7, "licenc": 7, "incorpor": [7, 125, 129, 147, 148, 154, 155, 231, 232, 250, 276, 277, 340, 412, 415, 424], "relianc": 7, "obsolet": 7, "legaci": [7, 23], "pro": [7, 403], "tip": [7, 403], "glfw": [7, 409], "osmesa": 7, "egl": 7, "advic": [7, 89, 429], "sudo": [7, 403], "apt": [7, 423], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 293, 294, 295], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 409, 411, 412, 422, 423, 426], "roboti": 7, "html": [7, 14, 15, 142, 144, 145, 146], "wget": 7, "mujoco210": 7, "tar": [7, 86], "gz": 7, "xf": 7, "charg": [7, 14, 15, 17, 147, 154], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 52, 54, 72, 92], "bin": [7, 247, 275, 298, 404], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 243, 301, 305, 409, 411, 413, 426], "nvidia": [7, 133, 413], "older": [7, 12], "hack": [7, 409], "adatp": 7, "script": [7, 86, 125, 129, 147, 148, 154, 155, 224, 396, 400, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "unnot": [7, 196], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 94, 410, 426], "troubleshoot": 7, "gl": 7, "h": [7, 104, 172, 174, 177, 199, 211, 252, 253, 254, 256, 257, 258, 261, 370, 410, 412, 426], "eglshim": 7, "fatal": 7, "No": [7, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 30, 34, 44, 45, 50, 51], "directori": [7, 52, 54, 59, 72, 73, 83, 85, 86, 87, 89, 90, 91, 96, 375, 377, 406, 409, 415, 418, 422], "devel": 7, "ubuntu": [7, 133], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 410, 412, 421], "libstdc": 7, "glibcxx_3": 7, "29": [7, 109, 110, 410, 424, 425], "compil": [7, 12, 14, 15, 16, 23, 27, 38, 46, 56, 57, 58, 61, 66, 95, 96, 97, 98, 102, 105, 109, 110, 111, 116, 117, 119, 125, 129, 147, 148, 154, 155, 222, 252, 253, 256, 257, 285, 350], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 125, 129, 147, 148, 154, 155, 190, 212, 214, 222, 318, 338, 405, 429], "job": [7, 18, 19, 20, 22, 58, 67, 68, 104, 426, 428], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 109, 121, 122, 408, 410, 412, 414, 415, 424, 425, 427], "114": [7, 413, 424], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 424], "offscreenopenglcontext": 7, "opengl": [7, 422, 423], "global": [7, 27, 38, 46, 56, 57, 58, 61, 66, 67, 68, 104, 125, 129, 147, 148, 149, 150, 154, 155, 212, 222, 278, 287, 301, 305, 348, 406, 409, 422, 423], "cuda_visible_devic": 7, "id": [7, 23, 60, 73, 102, 104, 109, 110, 125, 128, 129, 147, 148, 154, 155, 156, 157, 276, 277, 318, 336, 373, 377, 417, 426], "slurm_step_gpu": 7, "enviro": [7, 10], "black": [7, 422], "onscreen": 7, "101": [7, 424], "correctli": [7, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "lgl": 7, "libegl": 7, "x11": [7, 423], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 406], "n_training_step": 8, "datapoint": [8, 72, 426], "n_data_per_train": 8, "no_grad": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 189, 222, 235, 252, 253, 256, 257, 350, 351, 352, 353, 411, 412, 413, 423], "loss_fn": [8, 412, 416, 417, 428], "zero_grad": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 275, 406, 409, 411, 412, 413, 416, 419, 422, 423, 424], "backpropag": [8, 121, 122, 134, 135, 147, 315, 316, 317, 323, 324, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 341, 348, 416, 423, 424], "differenti": [8, 72, 121, 122, 189, 318, 340, 350, 351, 352, 353, 412, 415, 416, 422, 423, 424], "denomin": 8, "artifact": 8, "numer": [8, 58, 129, 220, 255, 285, 286, 292, 297, 298, 301, 302, 303, 304, 305, 384, 411, 426, 429], "misconcept": 8, "freed": 8, "appear": [8, 11, 28, 50, 73, 74, 83, 89, 102, 109, 110, 424, 426], "compuat": 8, "fix": [8, 33, 147, 209, 316, 318, 334, 338, 410, 419, 424, 429], "retain_graph": [8, 121, 122], "discuss": [8, 9, 417, 422, 423], "inplac": [8, 27, 38, 41, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 222, 409, 413], "forward": [8, 14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 125, 129, 147, 148, 154, 155, 166, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 194, 195, 196, 197, 198, 200, 203, 204, 207, 208, 209, 210, 212, 213, 216, 217, 219, 220, 222, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 274, 276, 277, 278, 280, 281, 283, 287, 288, 296, 298, 300, 301, 303, 304, 305, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 353, 354, 402, 405, 412, 413, 424, 428], "submodul": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 161, 209, 222, 254, 258, 312, 333], "param": [8, 27, 38, 46, 56, 57, 60, 61, 66, 125, 129, 141, 147, 148, 154, 155, 169, 176, 178, 179, 183, 189, 197, 198, 204, 207, 213, 222, 245, 247, 264, 265, 266, 284, 296, 301, 304, 307, 333, 343, 347, 350, 351, 352, 353, 354, 409, 413, 419, 422, 423, 424, 425, 428], "grad": [8, 27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 147, 148, 154, 155, 222, 409, 411], "whose": [8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 57, 60, 61, 62, 63, 66, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 149, 150, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 269, 278, 304], "factor": [8, 11, 24, 46, 200, 222, 231, 232, 233, 250, 255, 268, 276, 277, 285, 286, 316, 322, 325, 326, 328, 339, 356, 409, 410, 413, 415, 419, 422, 423, 426, 429], "fit": [8, 12, 57, 191, 209, 405, 406, 409], "bottlneck": 8, "brax": [8, 121, 122, 125, 129, 147, 148, 154, 155, 198, 414, 429], "jax": [8, 12, 121, 122, 134, 135], "improperli": 8, "underli": [8, 125, 126, 129, 147, 148, 154, 155, 333, 412, 414, 416, 418, 424], "tedeiou": 8, "priorit": [8, 53, 67, 101, 102, 318, 319, 320, 322, 323, 324, 331, 336, 338, 340, 341, 409, 410, 417, 428], "amount": [8, 276, 277, 410, 426], "costli": [8, 424], "constitut": [8, 410, 423, 424], "profil": 8, "frequent": [8, 426], "program": [8, 323, 331, 413, 429], "functorch": [8, 10], "incl": 8, "suit": [8, 124, 411, 414, 428, 429], "mujoco_instal": 8, "valueerror": [8, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 108, 193, 413, 428, 429], "idea": [9, 336, 406, 412, 415, 422, 423], "introductori": 9, "intro": [9, 411, 412], "dai": [9, 428], "2022": [9, 10, 235, 424, 428], "spin": [9, 123, 124, 429], "deep": [9, 172, 240, 241, 242, 243, 246, 276, 277, 315, 318, 330, 338, 339, 409, 422], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 415], "summari": [9, 191, 220, 409, 410, 411, 412], "reddit": 9, "reagent": 9, "orient": [9, 91, 429], "baselines3": 9, "tf": 9, "bandit": [9, 144], "tensorflow": [9, 262, 263], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 413, 419], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 428], "grade": 9, "factori": [9, 69, 409], "cherri": 9, "jaxrl": 9, "mbrl": [9, 141, 404], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 424], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 411, 412, 422, 423], "notebook": [10, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "24": [10, 90, 110, 128, 142, 143, 275, 300, 409, 410, 412, 422, 424], "pip3": [10, 409, 411, 412, 422, 423], "url": [10, 131], "org": [10, 14, 15, 24, 53, 86, 87, 89, 91, 101, 102, 121, 122, 123, 124, 131, 134, 135, 139, 140, 142, 143, 144, 151, 158, 159, 172, 195, 216, 233, 239, 240, 241, 242, 243, 244, 247, 248, 249, 256, 261, 262, 263, 268, 270, 271, 275, 276, 277, 278, 280, 281, 287, 298, 315, 316, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335, 337, 338, 339, 340, 350, 355, 363, 401, 420, 425], "whl": 10, "u": [10, 88, 252, 253, 256, 257, 424], "upgrad": 10, "relas": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 411, 422, 423, 424, 426], "power": [11, 410], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 204, 402], "ultim": [11, 255, 285, 286], "ffmpeg": 11, "whatev": [11, 405, 409], "fed": [11, 423, 426], "feed": [11, 195, 218, 333, 404, 409, 422, 423, 426], "suppos": [11, 147, 381, 406, 429], "snippet": [11, 195, 216, 409], "gave": 11, "extrem": [11, 147, 154, 315, 317, 332, 335, 337], "blurri": [11, 413], "stitch": 11, "exp_nam": [11, 370, 371, 372, 375, 376, 377, 396, 410, 418, 419], "my_exp": [11, 418], "pixels_onli": [11, 123, 124, 128, 130, 131, 151, 409, 410, 418, 419, 428, 429], "my_video": [11, 418], "record_env": [11, 418, 419], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 295, 404], "module_nam": [12, 333], "str": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 102, 104, 115, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 168, 172, 182, 188, 189, 195, 199, 207, 208, 212, 214, 216, 218, 219, 220, 222, 228, 230, 234, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 254, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 274, 278, 279, 287, 292, 297, 298, 301, 302, 303, 304, 308, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 348, 349, 350, 351, 352, 353, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 394, 400, 410, 411, 413], "from_vers": 12, "to_vers": 12, "class_method": 12, "intersect": [12, 41], "vs": [12, 254, 258], "x": [12, 23, 46, 56, 57, 58, 60, 61, 66, 89, 110, 189, 211, 233, 235, 236, 238, 247, 249, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 288, 297, 301, 302, 311, 314, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 386, 409, 413, 422, 424, 426, 428], "23": [12, 90, 110, 409, 410, 411, 422, 424], "import_modul": 12, "get_class_that_defined_method": 12, "f": [12, 90, 121, 122, 129, 134, 135, 257, 314, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 409, 410, 411, 412, 413, 419, 422, 423, 424, 426, 429], "classmethod": [12, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 216, 238, 239, 274], "module_set": 12, "setters_dict": 12, "dict": [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 46, 48, 49, 52, 54, 56, 57, 58, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 90, 94, 102, 109, 110, 125, 126, 127, 128, 129, 130, 139, 140, 142, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 189, 209, 212, 214, 219, 220, 222, 237, 238, 239, 240, 241, 242, 243, 244, 249, 259, 274, 301, 305, 318, 338, 340, 374, 375, 381, 386, 391, 392, 398, 399, 400, 404, 409, 410, 411, 426, 428, 429], "setter": 12, "setter_dict": 12, "policy_weight": [13, 14, 15, 16, 17, 19, 20], "udpdat": [13, 14, 15, 16, 17, 19, 20], "create_env_fn": [14, 15, 16, 17, 18, 19, 20, 21, 126, 147, 154, 409, 428], "env_devic": [14, 15, 16, 17, 18, 19, 20, 21, 410], "create_env_kwarg": [14, 15, 16, 17, 21, 126, 142, 147, 154, 212, 409, 429], "postproc": [14, 15, 16, 17, 18, 19, 20, 21, 46, 200, 410, 426], "interactiontyp": [14, 16, 17, 18, 19, 20, 21, 225, 228, 301, 305, 381], "preemptive_threshold": [14, 15, 17], "num_thread": [14, 15, 17, 52, 54, 59, 73, 147, 154], "num_sub_thread": [14, 15, 17, 147, 154], "set_trunc": [14, 15, 16, 17, 125, 129, 147, 148, 154, 155], "use_buff": [14, 15, 16, 147, 154], "replay_buffer_chunk": 14, "trust_polici": [14, 15, 16, 125, 129, 147, 148, 154, 155], "compile_polici": [14, 15, 16], "cudagraph_polici": [14, 15, 16], "datacollector": [14, 15, 16, 17, 46, 305, 335, 411, 417, 426], "recept": 14, "safe": [14, 15, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 102, 109, 231, 232, 276, 277, 284, 285, 292, 297, 298, 301, 302, 303, 304, 305, 307, 404, 428], "sota": [14, 15, 141, 186, 337, 378, 391, 409, 410, 428], "guard": [14, 15], "doc": [14, 15, 69, 131, 134, 135, 144, 151, 377, 410, 413, 422, 423, 426], "env_mak": [14, 15, 16, 21, 396, 429], "2000": [14, 15, 16, 46, 72, 132, 275, 370, 411, 426], "50": [14, 15, 16, 21, 55, 60, 83, 91, 109, 110, 139, 140, 222, 408, 410, 411, 412, 421, 422, 424, 426, 427], "shutdown": [14, 15, 16, 17, 21, 169, 409, 428], "del": [14, 15, 16, 409, 410, 411, 421, 422, 428, 429], "int64": [14, 15, 16, 23, 25, 26, 30, 34, 35, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 59, 60, 64, 67, 69, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 109, 125, 129, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 165, 169, 182, 193, 200, 207, 247, 276, 277, 279, 297, 298, 301, 302, 303, 404, 411, 412, 413, 414, 415, 417, 418, 424, 426, 428, 429], "tensordictmodulebas": [14, 15, 16, 17, 18, 19, 20, 21, 56, 66, 171, 288, 297, 300, 302, 412], "undergon": [14, 15, 16, 17, 18, 19, 20, 21, 72], "env_obs_kei": [14, 15, 16, 17, 18, 19, 20, 21], "lifespan": [14, 15, 16, 17, 18, 19, 20, 410], "divis": [14, 15, 16, 17, 18, 19, 20, 27, 83, 89, 102, 109, 110, 233, 423], "endless": [14, 15, 16, 17, 18, 19, 20], "fill": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 83, 129, 168, 209, 219, 258, 412, 424, 425], "sit": [14, 15, 16, 17, 18, 19, 20, 21, 388, 410], "cast": [14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 66, 71, 73, 74, 75, 76, 77, 78, 92, 121, 122, 123, 124, 125, 128, 129, 130, 134, 135, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 176, 178, 181, 189, 195, 209, 213, 214, 216, 218, 220, 222, 304, 422, 429], "span": [14, 15, 16, 17, 18, 19, 20, 21, 89, 102, 109, 110], "n_step": [14, 15, 16, 17, 18, 19, 20, 21, 46, 222, 300, 410, 411, 422, 423], "mainli": [14, 15, 16, 17, 18, 19, 20, 21, 60, 377, 404, 422, 423, 424], "round": [14, 15, 16, 17, 18, 19, 20, 21, 83], "closest": [14, 15, 16, 17, 18, 19, 20, 21], "post": [14, 15, 16, 17, 18, 19, 20, 21, 27, 38, 46, 56, 57, 61, 66, 87, 125, 129, 147, 148, 154, 155, 222], "explorationtyp": [14, 15, 16, 17, 18, 19, 20, 21, 301, 333, 381, 404, 409, 410, 411, 412, 415, 422, 428], "boolm": [14, 15, 17], "update_policy_weight_": [14, 15, 17], "async": [14, 15, 17, 18, 19, 20, 21, 219], "ratio": [14, 15, 17, 60, 409, 411], "finish": [14, 15, 17, 21, 129, 200, 429], "rest": [14, 15, 17, 235, 404, 411, 412, 422, 424, 428], "earli": [14, 15, 17, 46, 129, 207, 428], "safeti": [14, 15, 17, 141, 147, 154], "harm": [14, 15, 17, 147, 154], "exclus": [14, 15, 79, 80, 83, 89, 102, 109, 110, 169, 183, 185, 252, 254, 256, 258, 262, 263, 297, 298, 302, 303, 339, 340, 341, 350, 351, 352, 353, 354, 377, 400, 404], "add_truncated_kei": [14, 15, 16, 17, 125, 129, 147, 148, 154, 155, 214], "trust": [14, 15, 16, 125, 129, 139, 140, 147, 148, 154, 155, 258], "cudagraphmodul": [14, 15, 16, 125, 129, 147, 148, 154, 155], "behaviour": [14, 15, 16, 56, 66, 412, 413, 428], "kwarg": [14, 15, 16, 17, 21, 26, 27, 28, 29, 31, 32, 34, 38, 39, 40, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 104, 109, 110, 111, 113, 115, 117, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 166, 167, 169, 176, 195, 197, 206, 209, 212, 213, 214, 215, 217, 218, 221, 222, 231, 232, 234, 236, 237, 238, 240, 241, 242, 243, 246, 249, 250, 251, 254, 255, 258, 259, 260, 261, 264, 265, 266, 272, 276, 277, 286, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343, 348, 349, 350, 351, 352, 353, 354, 368, 370, 374, 375, 377, 380, 386, 391, 392, 397, 398, 399, 405, 411, 413, 423], "ordereddict": [14, 15, 16, 17, 21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 220, 222, 318, 338, 410], "worker0": [14, 15, 17], "state_dict0": [14, 15, 17], "worker1": [14, 15, 17], "state_dict1": [14, 15, 17], "reset_idx": [14, 15, 17], "static_se": [14, 15, 16, 17, 21, 125, 129, 147, 148, 154, 155, 214], "increment": [14, 15, 16, 17, 125, 129, 147, 148, 154, 155, 191, 332], "env_fn": [14, 15, 16, 17, 126, 398, 399], "env_fn_parallel": [14, 15, 16, 17], "300": [14, 15, 16, 17, 109, 110, 242, 243, 424], "out_se": [14, 15, 16, 17, 429], "shut": [14, 15, 16, 17], "irrevers": [14, 15, 17], "return_same_td": 16, "interruptor": 16, "cautious": [16, 335], "whole": [16, 27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 72, 125, 129, 147, 148, 154, 155, 212, 214, 222, 301, 318, 338, 378, 409, 411], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": [16, 413, 415], "policy_state_dict": 16, "env_state_dict": 16, "mere": [17, 413], "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 70, 245, 386], "respect": [18, 19, 20, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 170, 176, 178, 181, 195, 196, 205, 209, 213, 214, 216, 218, 222, 252, 256, 264, 281, 304, 309, 315, 317, 332, 335, 337, 350, 352, 353, 382, 411, 412, 422, 423], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 403, 410, 411, 413, 415, 418, 421, 426, 428], "fashion": [18, 20, 21, 52, 54, 59, 73, 110], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 41, 83, 86, 87, 89, 90, 91, 125, 129, 147, 148, 154, 155, 185], "submitit_delai": [18, 22], "former": [18, 19, 20, 23, 27, 38, 53, 56, 57, 58, 61, 66, 67, 68, 85, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311, 409], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 424], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22, 156], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 275, 409], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 23, 50, 83, 301, 305], "tensorpiperpcbackendopt": 20, "_td": [21, 126], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 398, 399, 409, 410], "coordin": [21, 177], "init": [21, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222, 264, 265, 266, 377, 410, 411], "autodetect": 21, "num_cpu": 21, "num_gpu": 21, "1024": [21, 244, 410, 413, 426], "equat": [21, 56, 73, 89, 129, 220, 276, 277, 314, 317, 339, 411, 414, 424], "exce": [21, 426], "indefinit": [21, 82], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 233, 386, 409, 411, 412], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": [22, 340, 416], "jump": [22, 414], "host": [22, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 239, 244, 274, 296], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "_nestedkei": [23, 102, 109, 110], "nestedkei": [23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 56, 59, 62, 63, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 102, 109, 110, 125, 129, 147, 148, 154, 155, 162, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 220, 222, 223, 229, 230, 231, 232, 236, 247, 250, 276, 277, 279, 296, 300, 305, 320, 348, 368, 370], "as_nest": 23, "durat": [23, 423], "meta": [23, 52, 54, 59, 71, 73, 85, 127, 131, 315, 317, 332, 335, 337, 406, 411, 422, 423, 426], "aren": [23, 208, 412], "eventu": [23, 278, 412, 424], "supersed": 23, "recov": [23, 85, 87, 89, 90, 91, 109, 110, 232, 277, 306, 323, 331, 421], "layout": [23, 413], "to_padded_tensor": 23, "nested_tensor": [23, 128, 130], "stride": [23, 27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 237, 238, 240, 241, 249, 264, 410, 413, 422, 428], "jag": 23, "focu": [23, 409, 410, 411, 413, 415, 416, 417, 422], "team": [23, 422, 423, 428], "cat": [23, 41, 309, 316, 318, 319, 331, 336, 338, 340, 341, 422, 426, 428], "arang": [23, 50, 102, 109, 110, 165, 247, 263, 297, 378, 404, 426], "obs_": 23, "trajectory_id": 23, "int32": [23, 27, 28, 68, 74, 83, 89, 109, 134, 135, 145, 146, 155, 227, 300, 426], "data_split": 23, "got": [23, 413, 417], "init_kl_coef": 24, "horizon": [24, 139, 140, 158, 159, 234, 261, 411], "kl": [24, 33, 60, 189, 327, 332], "describ": [24, 71, 173, 213, 223, 284, 285, 320, 373, 405, 409, 411, 422, 423, 424, 429], "ziegler": 24, "et": [24, 234], "relax": [24, 368], "penalti": [24, 60, 329, 332], "strai": [24, 60], "greater": [24, 83, 102, 109, 110, 254, 258, 318, 409, 410], "increas": [24, 94, 210, 235, 276, 277, 422, 423], "pull": [24, 426], "toward": [24, 218], "aggress": 24, "kl_coef": [24, 33, 60], "arxiv": [24, 53, 86, 89, 91, 101, 102, 121, 122, 123, 124, 134, 135, 139, 140, 142, 143, 151, 158, 159, 172, 195, 216, 233, 239, 240, 241, 242, 243, 244, 247, 248, 249, 256, 261, 268, 270, 271, 275, 276, 277, 278, 280, 281, 287, 298, 315, 316, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335, 338, 339, 340, 350, 355, 363, 425], "pdf": [24, 172, 239, 240, 241, 242, 243, 247, 275, 276, 277, 298, 318, 325, 329, 336, 339, 340, 350, 355, 363], "1909": 24, "08593": 24, "lm": 24, "blob": 24, "master": [24, 422, 423], "lm_human_prefer": 24, "train_polici": 24, "kl_valu": 24, "coef": [24, 189], "newest": 24, "int8": [25, 125, 138, 149, 150, 170], "encod": [25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 121, 122, 125, 128, 130, 131, 134, 135, 142, 143, 145, 146, 151, 156, 157, 165, 180, 271, 272, 275, 280, 314, 410, 411, 412, 415, 424, 426], "null": [25, 28, 29, 31, 32, 39, 40, 48, 49, 53, 62, 63, 67, 71, 74, 75, 76, 77, 78, 101, 102, 170], "denot": [25, 423], "nmber": 25, "clariti": [25, 41], "rand": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 58, 62, 63, 67, 68, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 121, 122, 134, 135, 141, 145, 146, 156, 157, 166, 169, 178, 181, 197, 223, 234, 261, 301, 315, 316, 318, 319, 320, 322, 323, 324, 331, 333, 335, 336, 338, 340, 341, 413, 424, 428, 429], "assert_is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "clear_device_": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "is_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 429], "ndarrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 129, 276, 277, 308, 368, 413, 422, 423], "ignore_devic": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "arrai": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 53, 60, 62, 63, 71, 74, 75, 76, 77, 78, 101, 125, 129, 130, 147, 148, 154, 155, 182, 252, 253, 256, 257, 409, 422, 426], "np": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 129, 308, 368, 413, 422, 424], "broadcast": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 245, 324, 338], "compliant": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "singleton": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 237, 238, 259, 282, 283], "start_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "end_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "implements_for_spec": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "torch_funct": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "tensor_to_index": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "make_neg_dim": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "convert": [25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 121, 122, 125, 128, 129, 130, 131, 134, 135, 142, 143, 145, 146, 147, 148, 151, 154, 155, 156, 157, 176, 178, 181, 195, 209, 213, 214, 216, 218, 220, 222, 304, 314, 333, 409, 410, 411, 424, 426], "shortcut": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 424, 429], "ndimens": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 409], "violat": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 404], "proxi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 59, 62, 63, 71, 73, 74, 75, 76, 77, 78, 263, 272, 301, 405], "project": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 57, 62, 63, 71, 74, 75, 76, 77, 78, 180, 231, 232, 256, 276, 277, 292, 297, 298, 301, 302, 303, 304, 305, 377, 404, 428, 429], "uniformli": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 103, 333, 429], "normal": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155, 191, 220, 231, 232, 233, 237, 238, 255, 259, 262, 263, 269, 285, 286, 301, 305, 317, 318, 332, 335, 381, 384, 400, 404, 406, 412, 415, 423, 429], "drawn": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 209, 250, 301, 305, 411, 422, 423], "dest": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 66, 71, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 195, 216, 218, 304], "to_categor": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_categorical_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "to_numpi": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 125, 129, 147, 148, 154, 155], "transformed_in": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78, 213, 214, 269, 284, 400], "check_spec_encod": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "to_one_hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "hot": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 121, 122, 128, 130, 131, 134, 135, 139, 140, 142, 143, 145, 146, 149, 150, 151, 156, 157, 158, 159, 165, 166, 180, 247, 272, 273, 279, 297, 298, 302, 303, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 412], "categ": [25, 26, 30, 34, 44, 45, 301], "categ_sampl": [25, 26, 30, 34, 44, 45, 50, 51], "onehot_sampl": [25, 26, 30, 34, 44, 45], "to_one_hot_spec": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "categoricalbox": [25, 26, 30, 34, 44, 45, 50, 51, 148, 415, 422, 423, 429], "type_check": [25, 26, 28, 29, 30, 31, 32, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 62, 63, 71, 74, 75, 76, 77, 78], "update_mask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "outcom": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51, 245, 263, 284, 333, 422], "disabl": [25, 26, 27, 30, 34, 38, 42, 43, 44, 45, 46, 50, 51, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 255, 286, 368, 409, 422], "unmask": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "ts": [25, 26, 30, 34, 42, 43, 44, 45, 50, 51], "num_bit": 27, "convert_to_binari": 27, "decim": 27, "1001": 27, "bit": [27, 411, 412, 414, 422, 423, 426], "heavysid": 27, "binary_to_decim": 27, "add_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "child": [27, 38, 41, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 410], "fn": [27, 38, 46, 55, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 147, 148, 154, 155, 222, 269, 398, 399], "recurs": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 79, 80, 125, 129, 147, 148, 154, 155, 222, 333, 413], "children": [27, 31, 32, 38, 39, 46, 56, 57, 61, 63, 66, 73, 125, 129, 147, 148, 154, 155, 222], "init_weight": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "m": [27, 38, 42, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 180, 222, 236, 305, 410, 424], "fill_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 410, 412], "net": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 241, 243, 246, 249, 265, 315, 316, 318, 324, 331, 335, 336, 337, 338, 396, 410, 424, 425, 428], "in_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 237, 238, 240, 241, 242, 243, 249, 259, 264, 265, 267, 268, 293, 304, 312, 320, 322, 413, 415, 416, 428], "out_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 141, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 234, 237, 238, 240, 241, 242, 243, 248, 249, 254, 258, 259, 261, 264, 265, 267, 268, 293, 297, 304, 312, 320, 322, 404, 409, 412, 413, 415, 416, 419, 428], "bia": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 212, 213, 214, 216, 218, 222, 233, 237, 238, 240, 241, 242, 243, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 265, 267, 268, 269, 276, 277, 304, 311, 313, 314, 318, 333, 338, 405, 409, 410, 411, 412, 413, 423, 428], "requires_grad": [27, 38, 46, 56, 57, 61, 66, 121, 122, 125, 129, 147, 148, 154, 155, 189, 212, 214, 222, 275, 318, 338], "bfloat16": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "datatyp": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 426], "member": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333, 370], "xdoctest": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 212, 213, 214, 216, 218, 222, 304, 318, 333, 338], "buf": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "20l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333], "1l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333], "5l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333], "__call__": [27, 38, 46, 55, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 305, 406], "doubl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 178, 179, 181, 195, 209, 213, 214, 216, 218, 222, 304, 320, 325, 330, 336, 339, 348, 409, 410, 411, 412, 429], "eval": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 220, 222, 235, 404, 409, 410, 411], "evalu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 130, 139, 140, 147, 148, 154, 155, 214, 222, 235, 245, 262, 263, 272, 286, 336, 391, 392, 410, 411, 419], "dropout": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 235, 236, 252, 254, 256, 258, 259, 404, 412], "batchnorm": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 233], "comparison": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 214, 222, 333, 409, 410], "similar": [27, 38, 46, 52, 54, 56, 57, 58, 59, 61, 66, 73, 89, 125, 129, 147, 148, 149, 150, 154, 155, 176, 195, 209, 213, 214, 216, 217, 218, 220, 222, 293, 295, 301, 304, 305, 405, 409, 410, 411, 412, 413, 415, 416, 417, 418, 424, 426, 428, 429], "extra_repr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "recip": [27, 38, 55, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311], "silent": [27, 38, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 266, 269, 270, 271, 274, 276, 277, 280, 281, 283, 288, 296, 298, 300, 303, 308, 311], "get_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "get_submodul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "qualifi": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "referenc": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "attributeerror": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "resolv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "someth": [27, 38, 46, 56, 57, 61, 66, 125, 129, 138, 147, 148, 154, 155, 222, 403, 410, 411, 424, 429], "get_extra_st": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222], "set_extra_st": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222], "picklabl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222], "pickl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222], "get_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "net_b": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "net_c": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "conv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 237, 238, 410, 413], "conv2d": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 238, 240, 241, 249, 264, 413, 428], "kernel_s": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 237, 238, 240, 241, 249, 264, 270, 410, 428], "diagram": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "degre": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "named_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "half": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 409], "ipu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "strict": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338, 413], "descend": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "get_swap_module_params_on_convers": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "persist": [27, 36, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 229, 318, 338], "enforc": [27, 38, 46, 56, 57, 61, 66, 108, 125, 129, 147, 148, 154, 155, 212, 214, 222, 306, 318, 338, 424], "preserv": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "missing_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "unexpected_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "namedtupl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "l": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 252, 256, 349, 411, 424], "idx": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 423], "mtia": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "named_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "remove_dupl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333], "prepend": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 333, 413], "running_var": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "named_children": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "conv4": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "conv5": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "memo": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "named_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 189, 222, 333], "register_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "removablehandl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "favor": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 411], "register_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_buff": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "running_mean": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "alongsid": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 418], "num_featur": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 233], "register_forward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 247, 279], "with_kwarg": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "always_cal": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_module_forward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "regardless": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 317, 332, 335], "register_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "invok": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "And": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 416], "forward_pr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_module_forward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "grad_input": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "grad_output": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "subsequ": [27, 38, 46, 56, 57, 61, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 147, 148, 154, 155, 168, 222, 412, 422], "technic": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 410, 412, 413, 415], "caller": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_module_full_backward_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "backward_pr": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_module_full_backward_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_load_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "incompatible_kei": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "thrown": [27, 38, 46, 56, 57, 61, 62, 66, 125, 129, 147, 148, 154, 155, 222, 426], "register_load_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "local_metadata": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "error_msg": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "noqa": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "b950": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_modul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 406], "alia": [27, 38, 46, 53, 56, 57, 58, 61, 66, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 104, 111, 113, 117, 125, 129, 147, 148, 154, 155, 222], "register_paramet": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_state_dict_post_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "register_state_dict_pre_hook": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "keep_var": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "requires_grad_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 413], "autograd": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338], "freez": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 220, 222], "finetun": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "gan": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "set_submodul": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "overid": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "share_memori": [27, 38, 46, 56, 57, 61, 66, 125, 126, 129, 147, 148, 154, 155, 222, 409], "share_memory_": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222, 428], "destin": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 171, 178, 179, 181, 212, 214, 216, 220, 222, 229, 318, 338, 370], "averag": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 220, 222, 276, 277, 318, 326, 327, 338, 384, 409, 411], "shallow": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 338, 412], "pleas": [27, 38, 46, 56, 57, 61, 66, 70, 87, 125, 128, 129, 147, 148, 149, 150, 154, 155, 169, 172, 210, 212, 214, 222, 264, 265, 266, 318, 338, 403], "detach": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 212, 214, 222, 318, 329, 333, 338, 340, 350, 351, 352, 353, 409], "non_block": [27, 38, 46, 52, 54, 56, 57, 59, 61, 66, 73, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 412], "memory_format": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "channels_last": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "unchang": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 180, 195, 209, 213, 214, 216, 218, 222, 250, 304, 383, 409, 426], "tri": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 418], "pin": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "4d": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "ignore_w": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "1913": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "3420": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "5113": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "2325": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "torch_doctest_cuda1": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "gpu1": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "1914": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "5112": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 424], "2324": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "float16": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 253, 257, 304], "cdoubl": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "3741": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "j": [27, 38, 46, 53, 56, 57, 61, 66, 101, 102, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 406, 416], "2382": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "5593": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304, 424], "4443": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "complex128": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "6122": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "1150": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 176, 195, 209, 213, 214, 216, 218, 222, 304], "to_empti": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "dst_type": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "xpu": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "set_to_non": [27, 38, 46, 56, 57, 61, 66, 125, 129, 147, 148, 154, 155, 222], "upper": [28, 107, 190], "continuousbox": [28, 31, 74, 125, 129, 147, 148, 154, 155, 209, 227, 411, 412, 422, 423, 424, 428, 429], "inst": 30, "descript": [31, 158, 168, 410, 411], "akin": 31, "unnam": 31, "compositespec": [31, 402, 424, 429], "constraint": [31, 141, 285, 411, 422, 423], "pixels_spec": 31, "observation_vector_spec": 31, "composite_spec": 31, "observation_vector": [31, 173, 409], "_nodefault": [31, 32, 39, 52, 54, 59, 63, 73], "is_empti": [31, 32, 39, 63, 424], "include_nest": [31, 32, 39, 63], "leaves_onli": [31, 32, 39, 63], "is_leaf": [31, 32, 39, 63], "_compositespecitemsview": [31, 32, 39, 63], "_compositespeckeysview": [31, 32, 39, 63], "reflect": [31, 32, 39, 63, 130, 149, 150, 219, 229, 333, 389, 410, 411, 412, 423], "lock_": [31, 32, 39, 63], "succeed": [31, 32, 39, 63], "pop": [31, 32, 39, 63], "keyerror": [31, 32, 39, 63, 214], "extract": [31, 32, 39, 63, 86, 168, 299, 409, 411, 428], "selected_kei": [31, 32, 39, 63, 204, 409], "unlock_": [31, 32, 39, 63], "unlock": [31, 32, 39, 52, 54, 59, 63, 73], "_compositespecvaluesview": [31, 32, 39, 63], "multipli": [33, 235, 252, 256, 315, 316, 317, 318, 324, 332, 334, 335, 336, 338, 384, 409, 422], "calcul": [33, 60, 200, 252, 315, 317, 322, 332, 335, 337, 340], "shift_kei": [35, 37, 47, 64], "is_full_kei": [35, 37, 47, 64], "is_ful": [35, 37, 47, 64], "tempfil": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 396, 409, 410, 413, 422, 426], "register_save_hook": [35, 53, 58, 64, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "temporarydirectori": [35, 52, 53, 54, 58, 59, 64, 67, 68, 72, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 409, 410, 413, 422, 426], "tmpdir": [35, 53, 58, 64, 67, 68, 72, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 409, 410, 413, 422], "rb_load": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "register_load_hook": [35, 53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "filesystem": [36, 426], "ted2nest": [37, 402], "stackedcomposit": [39, 402], "tensordictmap": [41, 402], "observation_kei": [41, 125, 129, 147, 148, 154, 155], "consolid": [41, 66, 80, 97], "lazili": [41, 265, 424], "from_tensordict_pair": [41, 66], "todo": [41, 57], "get_keys_from_env": 41, "cattensor": [41, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 129, 147, 148, 154, 155, 409, 421, 424, 429], "unsqueezetransform": [41, 172, 424, 426], "oracl": 41, "obs_kei": 41, "state_kei": [41, 125, 129, 147, 148, 154, 155], "reset_st": 41, "rollout0": 41, "rollout1": 41, "rollout1b": 41, "collaps": 41, "max_length": [41, 52, 54, 55, 69, 72, 92, 413, 419], "valid_path": 41, "assert_clos": [41, 254, 258], "subtre": [41, 73], "Or": [41, 152, 153, 264], "rollout_from_path": 41, "plot": [41, 409, 411, 412, 422, 423, 424], "nvec": [42, 44], "remove_singleton": 42, "cardin": [42, 44, 247, 279, 297, 298, 303, 411], "ax": [42, 267, 268, 422], "Not": [42, 43, 58, 121, 122, 134, 212, 254, 258], "neither": [42, 43, 44, 45, 89, 156, 424], "use_regist": [44, 50], "mone_hot": [44, 45], "boxlist": [44, 45], "gamma": [46, 200, 222, 261, 315, 316, 318, 319, 320, 322, 324, 325, 326, 328, 331, 333, 335, 336, 337, 338, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 396, 405, 409, 410, 411, 422, 423, 428], "sutton": [46, 405, 422, 423], "1988": 46, "tempor": [46, 254, 258, 261, 351, 352, 357, 358], "44": [46, 109, 410, 424, 425], "discount": [46, 89, 126, 200, 222, 316, 322, 325, 326, 328, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 405, 410, 411, 422, 423], "ahead": [46, 222, 429], "bias": [46, 252, 253, 256, 257, 311, 405, 409], "mitig": 46, "multisteptransform": [46, 402], "99": [46, 200, 220, 261, 328, 343, 349, 356, 396, 409, 410, 411, 413, 416, 419, 422, 423, 424, 428], "nontermin": 46, "original_reward": 46, "newli": [46, 125, 129, 147, 148, 154, 155], "OR": 46, "row": [47, 65, 134, 135], "shae": 48, "nontensordata": [48, 83, 89, 145, 146, 368], "nontensor": [49, 402], "unidimension": 50, "action_valu": [50, 246, 247, 279, 297, 298, 302, 303, 318, 324, 333, 348, 404, 412, 413, 415, 419], "keepdim": 50, "chosen_action_valu": [50, 278, 279, 287, 302, 303, 348, 404, 412, 413, 415], "priori": 50, "uniqu": [50, 73, 109, 110, 139, 140, 172, 182, 208, 209, 210, 212, 300, 377, 417, 426], "tensor_spec": [50, 71, 166, 223, 230, 323, 324, 335, 337, 423], "one_hot": [50, 51, 247, 263, 279], "one_hot_sampl": [50, 51], "chosen_data": [52, 92], "rewarddata": [52, 92, 402], "rejected_data": [52, 92], "from_dataset": [52, 54, 92], "dataset_nam": [52, 54, 60, 72, 92, 144], "550": [52, 54, 60, 72, 92, 109, 110, 424], "root_dir": [52, 54, 72, 92], "from_disk": [52, 54, 72, 92], "carperai": [52, 54, 60, 72], "openai_summarize_comparison": [52, 54, 72], "sequen": [52, 54], "load_from_disk": [52, 54, 72, 92], "load_dataset": [52, 54, 72, 92], "attention_mask": [52, 54, 55, 59, 60, 69, 72, 92], "92534": 52, "input_id": [52, 54, 55, 59, 60, 69, 72, 92], "end_scor": [52, 59, 60, 92], "sub_data": [52, 54], "from_tensordict": [52, 54, 59, 73], "non_tensordict": [52, 54, 59, 73], "getattr": [52, 54, 59, 73], "tensorclass": [52, 54, 59, 73, 92, 96, 97, 117], "pathlib": [52, 54, 59, 73, 96, 413], "load_memmap": [52, 54, 59, 73], "load_": [52, 54, 59, 73], "load_memmap_": [52, 54, 59, 73], "fetch": [52, 54, 59, 73, 121, 122, 123, 124, 189, 415, 425, 426, 429], "fromkei": [52, 54, 59, 73], "memmap": [52, 54, 59, 73, 96, 147, 154, 220, 370, 372, 383, 426], "saved_td": [52, 54, 59, 73], "td_load": [52, 54, 59, 73], "fake": [52, 54, 59, 73, 125, 129, 147, 148, 154, 155, 409, 410, 413], "_subclass": [52, 54, 59, 73], "faketensormod": [52, 54, 59, 73], "faketensor": [52, 54, 59, 73], "from_flatten": [52, 54, 59, 73], "attemptedli": [52, 54, 59, 73], "copy_exist": [52, 54, 59, 73], "return_earli": [52, 54, 59, 73], "share_non_tensor": [52, 54, 59, 73], "existsok": [52, 54, 59, 73, 96], "mimic": [52, 54, 59, 73, 125, 129, 147, 148, 154, 155], "cross": [52, 54, 59, 73, 234], "tensordictfutur": [52, 54, 59, 73], "serialis": [52, 54, 59, 73], "deepli": [52, 54, 59, 73], "insid": [52, 54, 59, 73, 147, 429], "memmap_": [52, 54, 59, 73, 220], "memmap_lik": [52, 54, 59, 73], "contentless": [52, 54, 59, 73], "1_000_000": [52, 53, 54, 58, 59, 67, 68, 73, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 109, 409, 412, 422], "alloc": [52, 54, 59, 73, 97, 245, 262, 263, 409], "memmap_refresh_": [52, 54, 59, 73], "refresh": [52, 54, 59, 73, 419, 422, 423], "saved_path": [52, 54, 59, 73], "setattr": [52, 54, 59, 73], "tent": [52, 54, 59, 72, 73], "to_tensordict": [52, 54, 59, 73, 412], "retain_non": [52, 54, 59, 73], "discrard": [52, 54, 59, 73], "switch": [52, 54, 59, 73, 255, 286, 368], "alpha": [53, 67, 101, 102, 237, 238, 240, 241, 242, 243, 249, 264, 316, 318, 324, 334, 336, 338, 340, 409, 426, 428], "ep": [53, 67, 101, 102, 191, 220, 233, 276, 277, 317, 339, 384, 409, 410, 412, 413, 416, 419], "1e": [53, 67, 101, 102, 191, 220, 233, 245, 248, 269, 284, 409, 410, 411, 423], "08": [53, 67, 101, 102, 410, 422, 424], "pin_memori": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 194, 409, 413, 428], "schaul": [53, 101, 102], "quan": [53, 101, 102], "antonogl": [53, 101, 102], "silver": [53, 101, 102], "2015": [53, 101, 102], "ab": [53, 86, 89, 91, 101, 102, 121, 122, 123, 124, 134, 135, 139, 140, 142, 143, 151, 158, 159, 171, 195, 216, 220, 233, 239, 244, 248, 249, 256, 261, 268, 270, 271, 278, 280, 281, 287, 315, 316, 320, 321, 322, 323, 326, 327, 328, 330, 331, 334, 335, 338, 425], "1511": [53, 101, 102, 249], "05952": [53, 101, 102], "expon": [53, 67, 101, 102], "\u03b1": [53, 67, 101, 102], "delta": [53, 67, 101, 102, 252, 256, 284, 301, 305, 402, 405, 422], "1_000": [53, 58, 67, 68, 422, 426], "merg": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 424], "mini": [53, 58, 67, 68, 83, 85, 86, 87, 88, 89, 90, 91, 423], "decid": [53, 58, 67, 68, 422, 428], "meth": [53, 58, 67, 68, 254, 258, 333, 424], "incompat": [53, 58, 67, 68, 337, 426], "drop_last": [53, 58, 67, 68, 108, 110], "notion": [53, 58, 67, 68, 275], "caution": [53, 58, 67, 68, 108, 125, 129, 147, 148, 154, 155, 224, 429], "codebas": [53, 58, 67, 68, 424], "approach": [53, 58, 67, 68, 191, 233, 264, 265, 340, 409, 411, 416, 417, 422, 429], "return_info": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 104, 426], "tensordictprioritizedreplaybuff": [53, 402, 428], "simplifi": [53, 415, 424, 426], "_weight": [53, 67, 101, 102, 426, 428], "update_prior": [53, 101, 102, 383, 406, 410, 426, 428], "36278465": 53, "invert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 313, 411], "tqdm": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 386, 409, 411, 412, 422, 423, 424], "randomsampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 409, 422], "td_error": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 318, 319, 320, 322, 323, 324, 325, 331, 333, 336, 338, 340, 341, 348, 409, 416, 426, 428], "update_tensordict_prior": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 409, 426, 428], "insert_transform": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 167, 214], "insert": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 104, 105, 115, 116, 119, 120, 167, 176, 214, 215], "set_sampl": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_storag": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "set_writ": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "write_count": [53, 58, 67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104], "prompt_rindex": [54, 55, 60], "promptdatatldr": 54, "116722": 54, "prompt": [55, 60], "return_tensordict": [55, 69], "text": [55, 60, 69, 87, 252, 253, 256, 257, 276, 277, 411], "tensodict": [55, 69], "orign": [55, 56, 66, 69], "valid_sampl": 55, "eough": 55, "toknen": 55, "meet": 55, "criterion": 55, "autotoken": [55, 69, 72], "from_pretrain": [55, 60, 69], "gpt2": [55, 60, 69, 72, 239, 244, 274], "pad_token": [55, 69], "eos_token": 55, "enough": [55, 426], "inde": [55, 180, 411, 413, 424], "index_kei": [56, 66], "hash_kei": 56, "_hash": 56, "hash_modul": [56, 61, 66], "siphash": [56, 57, 66], "hash_to_int": 56, "hashtoint": 56, "query_modul": [56, 66], "key1": [56, 66, 173, 378, 385, 428], "key2": [56, 66, 173, 378, 385, 428], "write_hash": 56, "is_tdmodule_compat": [56, 66], "reset_out_kei": [56, 66], "mod": [56, 66, 189, 236, 254, 258, 300, 308, 412, 413, 419], "select_out_kei": [56, 66, 315, 316, 318, 319, 323, 324, 331, 335, 336, 338, 340, 341, 413], "reset_parameters_recurs": [56, 66, 333], "relu": [56, 66, 141, 234, 244, 261, 269, 314, 413], "old_param": [56, 66], "bork": [56, 66], "dork": [56, 66], "reset_paramet": [56, 66, 266], "from_modul": [56, 66, 247, 304, 307, 428], "rid": [56, 66], "out_keys_sourc": [56, 66], "rubric": [56, 66, 191, 307], "revert": [56, 66, 125, 129, 147, 148, 154, 155, 224, 415, 426], "seq": [56, 66, 236, 252, 254, 256, 258, 300, 412, 413, 419, 421], "z": [56, 66, 253], "n_compon": 57, "dtype_cast": 57, "as_tensor": [57, 61, 413], "init_method": 57, "emb": [57, 412], "sklearn": [57, 88, 144], "byte": [57, 61], "builtin": [57, 61], "pythonhashse": [57, 61], "storagecheckpointerbas": [58, 111], "roundrobinwrit": [58, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "_pytre": [58, 426], "tree_map": [58, 426], "did": [58, 219, 356, 410, 411, 417, 426, 429], "assert0": [58, 426], "ref_model": 60, "reward_model": [60, 310], "max_new_token": 60, "score_clip": 60, "kl_schedul": 60, "klcontrollerbas": 60, "num_step": [60, 413], "causal": 60, "sentenc": 60, "frozen": [60, 189, 220], "gpt2rewardmodel": 60, "get_dataload": [60, 402], "promptdata": [60, 402], "gpt2lmheadmodel": 60, "dl": 60, "block_siz": [60, 92], "tensorclass_typ": [60, 92], "openai_summarize_tldr": 60, "config_class": 60, "model_path": 60, "rollout_from_model": 60, "rollout_from_data": 60, "600": [60, 418, 424, 426], "reward_kl": [60, 189], "reward_raw": 60, "sample_log_prob": [60, 293, 294, 295, 301, 305, 307, 335, 411, 415, 423, 428], "create_rollout_td": 60, "log_prob": [60, 245, 262, 263, 272, 275, 286, 305, 318], "log_ratio": 60, "replic": [60, 405], "rindex": 60, "eo": 60, "generation_config": 60, "generationconfig": 60, "ti": [60, 359, 360, 361, 362, 364, 365, 366, 367, 410], "log_probs_gen": 60, "logprobs_of_label": 60, "hash_a": 61, "4669941682990263259": 61, "3778166555168484291": 61, "9122128731510687521": 61, "hash_b": 61, "heterogen": [62, 63, 125, 129, 138, 147, 148, 149, 150, 154, 155, 224, 264, 265, 409, 410], "220": [64, 409, 424], "resembl": 66, "querymodul": 66, "tensormap": 66, "collat": [66, 104], "subtyp": 66, "embedding_storag": 66, "tensor_dict_storag": 66, "new_index": 66, "key3": 66, "retrieve_valu": 66, "storage_constructor": 66, "write_fn": 66, "tensordictstorag": 66, "thumb": [66, 147, 411], "lazydynamicstorag": 66, "fixedstorag": 66, "randomprojectionhash": 66, "priority_kei": [67, 68, 84, 101, 318, 320, 323, 324, 325, 331, 333, 336, 338, 340, 341, 348, 426, 428], "reduct": [67, 101, 102, 115, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 334, 335, 336, 337, 338, 340, 341], "prioritizedreplaybuff": [67, 402, 428], "min": [67, 101, 102, 115, 276, 277, 316, 317, 318, 324, 334, 336, 338, 410, 411], "median": [67, 101, 102, 115, 134, 135, 165, 301, 305], "include_info": [67, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91], "huggingfac": [69, 86, 91, 299], "co": [69, 182, 424], "pad_trunc": 69, "am": 69, "me": 69, "reassur": 69, "ok": 69, "primarili": [71, 196, 415], "dataclass": [71, 333], "educ": 71, "guess": 71, "knowledg": [71, 125, 129, 147, 148, 154, 155, 416, 418], "tokenizer_fn": 72, "tensordicttoken": [72, 402], "pre_tokenization_hook": 72, "valid_s": 72, "tokenizer_class": 72, "tokenizer_model_nam": 72, "tokein": 72, "elementwis": 72, "vocabulari": 72, "loader": [72, 411], "185068": 72, "dataset_to_tensordict": 72, "data_dir": 72, "batch_dim": [72, 125, 129, 147, 148, 154, 155, 400], "valid_mask_kei": 72, "conver": 72, "batch_dimens": 72, "filder": 72, "from_dict": 72, "data_memmap": 72, "node_id": 73, "get_vertex_by_hash": 73, "get_vertex_by_id": 73, "is_termin": 73, "num_children": 73, "num_vertic": 73, "count_repeat": 73, "key_typ": 73, "liter": [73, 291], "recurse_through_entri": 80, "recurse_through_stack": 80, "dataset_id": [83, 85, 86, 87, 89, 90, 91], "num_proc": 83, "slice_len": [83, 89, 102, 109, 110, 370], "strict_len": 83, "arari": 83, "2600": 83, "million": [83, 412], "consequ": [83, 94, 256, 417], "50x10": 83, "available_dataset": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110], "ataridqn": 83, "immutabledatasetwrit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "shorter": [83, 89, 102, 109, 110], "Be": [83, 89, 102, 109, 110], "game_nam": 83, "krull": 83, "1d": [83, 101, 102, 109, 110, 115], "cheapli": 83, "invalid_rang": 83, "999998": 83, "999999": 83, "add_count": 83, "84": [83, 109, 199, 409, 410, 412, 413, 424], "valueestim": [83, 315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 343, 348, 402, 405, 409, 422, 423], "convolut": [83, 237, 238, 240, 241, 264, 282, 413, 415], "2657628": 83, "2657629": 83, "2657630": 83, "2657631": 83, "2657632": 83, "2657633": 83, "2657634": 83, "2657635": 83, "2657636": 83, "2657637": 83, "2657638": 83, "2657639": 83, "2657640": 83, "2657641": 83, "2657642": 83, "2657643": 83, "2657644": 83, "2657645": 83, "2657646": 83, "2657647": 83, "2657648": 83, "2657649": 83, "2657650": 83, "2657651": 83, "2657652": 83, "2657653": 83, "2657654": 83, "2657655": 83, "2657656": 83, "2657657": 83, "2657658": 83, "2657659": 83, "2657660": 83, "2657661": 83, "2657662": 83, "2657663": 83, "2657664": 83, "2657665": 83, "2657666": 83, "2657667": 83, "2657668": 83, "2657669": 83, "2657670": 83, "2657671": 83, "2657672": 83, "2657673": 83, "2657674": 83, "2657675": 83, "2657676": 83, "2657677": 83, "2657678": 83, "2657679": 83, "2657680": 83, "2657681": 83, "2657682": 83, "2657683": 83, "2657684": 83, "2657685": 83, "2657686": 83, "2657687": 83, "2657688": 83, "2657689": 83, "2657690": 83, "2657691": 83, "1995687": 83, "1995688": 83, "1995689": 83, "1995690": 83, "1995691": 83, "1995692": 83, "1995693": 83, "1995694": 83, "1995695": 83, "1995696": 83, "1995697": 83, "1995698": 83, "1995699": 83, "1995700": 83, "1995701": 83, "1995702": 83, "1995703": 83, "1995704": 83, "1995705": 83, "1995706": 83, "1995707": 83, "1995708": 83, "1995709": 83, "1995710": 83, "1995711": 83, "1995712": 83, "1995713": 83, "1995714": 83, "1995715": 83, "1995716": 83, "1995717": 83, "1995718": 83, "1995719": 83, "1995720": 83, "1995721": 83, "1995722": 83, "1995723": 83, "1995724": 83, "1995725": 83, "1995726": 83, "1995727": 83, "1995728": 83, "1995729": 83, "1995730": 83, "1995731": 83, "1995732": 83, "1995733": 83, "1995734": 83, "1995735": 83, "1995736": 83, "1995737": 83, "1995738": 83, "1995739": 83, "1995740": 83, "1995741": 83, "1995742": 83, "1995743": 83, "1995744": 83, "1995745": 83, "1995746": 83, "1995747": 83, "1995748": 83, "1995749": 83, "1995750": 83, "left": [83, 85, 89, 102, 109, 169, 176, 177, 178, 179, 183, 189, 195, 197, 198, 204, 207, 210, 213, 216, 218, 222, 250, 264, 410, 411, 413, 417, 418], "untouch": [83, 89, 169, 176, 178, 179, 183, 189, 197, 198, 204, 207, 213, 222], "_max_run": 83, "dataset_asterix": 83, "asterix": 83, "dataset_pong": 83, "sample_from_al": [83, 104, 107], "buffer_id": [83, 107, 113], "hidden": [83, 147, 154, 171, 240, 248, 252, 253, 254, 256, 257, 258, 270, 271, 280, 281, 293, 294, 295, 296, 304, 307, 317, 332, 335, 404, 412, 421, 428], "data_path": [83, 84, 85, 86, 87, 88, 89, 90, 91], "data_path_root": [83, 84, 85, 86, 87, 88, 89, 90, 91], "delet": [83, 84, 85, 86, 87, 88, 89, 90, 91, 173, 377], "chunksiz": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pool": [83, 84, 85, 86, 87, 88, 89, 90, 91, 210], "max_tasks_per_child": [83, 84, 85, 86, 87, 88, 89, 90, 91], "worker_thread": [83, 84, 85, 86, 87, 88, 89, 90, 91], "index_with_gener": [83, 84, 85, 86, 87, 88, 89, 90, 91], "pbar": [83, 84, 85, 86, 87, 88, 89, 90, 91, 409, 411, 412, 422, 423, 424], "num_fram": [83, 84, 85, 86, 87, 88, 89, 90, 91], "unitari": [83, 84, 85, 86, 87, 88, 89, 90, 91, 424], "minariexperiencereplai": [83, 84, 85, 86, 88, 89, 90, 91], "1000000": [83, 84, 85, 86, 87, 88, 89, 90, 91], "distance_from_origin": [83, 84, 85, 86, 87, 88, 89, 90, 91], "forward_reward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qpo": [83, 84, 85, 86, 87, 88, 89, 90, 91], "qvel": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_ctrl": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 147], "reward_forward": [83, 84, 85, 86, 87, 88, 89, 90, 91], "reward_surv": [83, 84, 85, 86, 87, 88, 89, 90, 91], "x_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 147], "x_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 147], "y_posit": [83, 84, 85, 86, 87, 88, 89, 90, 91], "y_veloc": [83, 84, 85, 86, 87, 88, 89, 90, 91], "achieved_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "desired_go": [83, 84, 85, 86, 87, 88, 89, 90, 91], "27": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 110, 121, 122, 147, 154, 408, 410, 424, 427, 428], "_collate_id": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x120e21dc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "cat_next_tensor": [83, 84, 85, 86, 87, 88, 89, 90, 91], "new_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "31": [83, 84, 85, 86, 87, 88, 89, 90, 91, 109, 134, 135, 409, 410, 412, 424], "full_storag": [83, 84, 85, 86, 87, 88, 89, 90, 91], "0x168406fc0": [83, 84, 85, 86, 87, 88, 89, 90, 91], "from_env": 85, "use_truncated_as_don": 85, "direct_download": 85, "terminate_on_end": 85, "env_kwarg": [85, 90, 91, 169, 398, 399, 409], "reconstruct": [85, 109, 110, 327, 409, 429], "get_dataset": 85, "qlearning_dataset": 85, "fewer": [85, 102, 109], "unexpectedli": 85, "traj_split": 85, "observationnorm": [85, 220, 400, 409, 410, 411, 412, 428], "maze2d": 85, "umaz": 85, "loc": [85, 125, 129, 147, 148, 154, 155, 189, 191, 202, 220, 255, 269, 285, 286, 293, 294, 295, 301, 305, 307, 315, 316, 318, 331, 335, 336, 337, 338, 390, 400, 404, 409, 410, 411, 412, 415, 423, 428], "gen": 86, "dgrl": 86, "accompani": [86, 169, 207], "gap": 86, "2312": 86, "05742": 86, "gen_dgrl": 86, "procgen": 86, "bigfish": 86, "bossfight": 86, "1m_e": 86, "1m_": 86, "comma": [86, 413], "npy": 86, "mmap": [86, 90, 91], "minut": [86, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "internet": [86, 91], "connect": [86, 91, 156], "minari": 87, "websit": [87, 89], "currenrtli": 87, "minari_data": 87, "door": 87, "torchrl_logg": [87, 419], "28": [87, 109, 110, 264, 408, 410, 411, 424, 427], "door_body_po": 87, "dua": 88, "graff": 88, "2017": 88, "uci": 88, "archiv": 88, "ic": 88, "edu": 88, "ml": [88, 156, 157], "adult_num": [88, 144], "adult_onehot": [88, 144], "mushroom_num": [88, 144], "mushroom_onehot": [88, 144], "covertyp": [88, 144], "shuttl": [88, 144], "magic": [88, 144, 413, 414], "shuffl": [89, 108, 110, 423], "embodi": [89, 425], "institut": 89, "demonstr": [89, 411, 413, 417, 422, 423, 424, 426, 429], "527": [89, 424], "skill": 89, "160266": 89, "googl": [89, 90, 121, 122, 139, 140, 145, 146, 233, 411, 412, 422, 423], "open_x_embodi": 89, "2310": [89, 151], "08864": 89, "language_instruct": 89, "get_non_tensor": 89, "nor": [89, 156], "insuffici": 89, "chosen": [89, 158, 159, 208, 209, 278, 279, 287, 303, 370, 404, 418], "openx": 89, "__will": 89, "change__": 89, "randomli": [89, 108, 155, 190, 191, 209, 250, 301, 305, 415, 422, 423, 424, 426], "crop": [89, 174, 196, 370], "modal": [89, 409], "cmu_stretch": [89, 370], "is_init": [89, 91, 171, 188, 254, 258, 276, 277, 300, 312, 412, 413], "language_embed": 89, "512": [89, 249, 410, 413, 424], "lift": 89, "green": [89, 422], "garbag": 89, "lid": 89, "roboset": 90, "h5": [90, 91, 94], "roboh": [90, 151], "concis": [90, 416], "75": [90, 109, 409, 410, 412, 422, 424], "totensor": 91, "image_s": 91, "v": [91, 220, 252, 253, 256, 257, 293, 323, 331, 338, 409, 410], "npz": 91, "2206": [91, 142, 143], "04779": [91, 316, 322], "vd4rl": 91, "squar": [91, 174, 177, 255, 285, 286, 370], "rectangular": [91, 237, 238], "walker_walk": 91, "64px": 91, "height": [91, 174, 177, 199], "veloc": [91, 123, 124, 125, 129, 147, 148, 154, 155, 172, 422, 423, 424, 429], "infinit": [92, 139, 140, 158, 159, 417, 426], "block": [92, 95, 120, 404, 409, 412, 413, 416, 417, 422, 426], "pairwisedataset": [92, 402], "256": [92, 139, 140, 244, 410, 411, 413, 422, 423, 424], "checkpoint_fil": 94, "h5_kwarg": 94, "iff": 94, "suffix": [94, 381], "h5py": 94, "create_dataset": 94, "temporarili": [94, 125, 129, 147, 148, 154, 155, 224, 417, 426], "immut": [95, 125, 129, 147, 154, 198, 214], "piec": [95, 105, 116, 119, 120, 409, 410, 411, 418, 422, 423, 424, 426], "scratch_dir": [96, 409, 426], "sent": [96, 97, 117, 220], "mistak": [96, 97, 117], "overewritten": 96, "tensorstoragecheckpoint": 96, "main_ckpt_dir": 96, "rb_memmap": 96, "10_000_000": 96, "myclass": [96, 97, 117], "foo": [96, 97, 117, 296, 426, 429], "bar": [96, 97, 117, 296, 380, 381, 386, 406, 410], "attach": [96, 97, 98, 111, 113, 117, 410], "entiti": [96, 97, 98, 111, 113, 117], "expans": [97, 333], "zero_": [97, 117, 227], "unlimit": 98, "liststoag": 99, "max_capac": [101, 102, 409, 426], "max_priority_within_buff": [101, 102], "data_0": 101, "data_1": 101, "smoothen": 101, "tdrb": 101, "pack": [101, 252, 256, 411, 414, 429], "nd": [101, 102], "sum_tre": [101, 102], "min_tre": [101, 102], "end_kei": [102, 109, 110], "cache_valu": [102, 109, 110], "closer": [102, 428], "readili": [102, 109, 110], "conjunct": [102, 109, 110, 410], "Will": [102, 109, 142, 370], "buffer0": [102, 109], "immutablewrit": [102, 109], "buffer1": [102, 109], "other_sampl": [102, 109], "short": [102, 109, 110, 121, 122, 125, 129, 134, 135, 147, 148, 154, 155, 224, 256, 257, 410, 411, 414, 415, 423, 426], "tolist": 102, "120110917137936e": 102, "06": [102, 245, 284, 409, 410, 424], "storageensembl": [104, 107], "samplerensembl": 104, "writerensembl": [104, 113], "num_buffer_sampl": [104, 107], "ensembl": [104, 107, 113, 114, 120, 304, 336], "forbidden": 104, "0x13a2ef430": 104, "0x13a2f9310": 104, "interpol": [104, 199, 410, 412, 413], "interpolationmod": [104, 412], "bilinear": [104, 199, 412], "0x13a2f9220": 104, "0x13a2f9f70": 104, "0x13a2d9b50": 104, "0x13a2f95b0": 104, "0x128648260": 104, "roundrobin": [105, 116], "incomplet": [108, 110], "fresh": 108, "haven": [108, 425], "remain": [108, 171, 179, 180, 189, 208, 268, 416], "draw": [108, 250], "slicesamplerwithoutreplac": [109, 426], "ep_1": [109, 110], "ep_2": [109, 110], "73": [109, 410, 424], "74": [109, 409, 410, 424, 425], "76": [109, 409, 410, 424, 425], "77": [109, 410, 424, 425], "42": [109, 259, 275, 315, 316, 318, 319, 323, 331, 338, 410, 424], "43": [109, 410, 412, 424, 425], "45": [109, 410, 424], "67": [109, 409, 410, 421, 424, 426], "68": [109, 410, 424, 425], "69": [109, 410, 424, 425], "70": [109, 410, 411, 422, 424, 425], "71": [109, 409, 410, 424, 425], "80": [109, 121, 122, 409, 410, 411, 422, 424, 426], "82": [109, 409, 410, 424, 425], "83": [109, 410, 424, 425], "78": [109, 409, 410, 424, 425], "79": [109, 410, 424, 425], "320": [109, 110, 123, 124, 410, 424, 429], "700": [109, 110], "dataid": [109, 110], "counter": [110, 212, 300, 380, 406, 413], "request": [110, 169, 196], "51": [110, 408, 409, 410, 424, 425, 427], "__len__": 111, "rank_kei": 115, "rank": [115, 234], "samplerwithoutreplac": [115, 411, 423, 426], "get_insert_index": 115, "convers": [121, 122, 134, 135, 405], "2106": [121, 122, 321, 340], "13281": [121, 122], "categorical_action_encod": [121, 122, 125, 128, 129, 130, 131, 134, 135, 142, 143, 147, 148, 151, 154, 155, 413], "frame_skip": [121, 122, 123, 124, 128, 129, 130, 131, 134, 135, 136, 137, 142, 143, 151, 186, 380, 381, 389, 406, 409, 410, 411, 428], "allow_done_after_reset": [121, 122, 123, 124, 125, 128, 130, 131, 134, 135, 142, 143, 145, 146, 151, 156, 157], "toler": [121, 122, 123, 124, 128, 130, 131, 134, 135, 142, 143, 145, 146, 151, 156, 157, 245, 284], "availalb": [121, 122, 134, 135], "is_avail": [121, 122, 409, 410, 411, 412, 422, 423, 425], "els": [121, 122, 169, 252, 253, 256, 257, 270, 404, 406, 409, 410, 411, 412, 422, 423, 424, 425], "ant": [121, 122, 125, 129, 132, 147, 148, 154, 155, 425], "87": [121, 122, 410, 422, 424], "acrobot": [121, 122, 123, 124, 429], "advant": [121, 122, 134, 135], "timer": [121, 122, 134, 135], "timeit": [121, 122, 134, 135, 413], "310": [121, 122, 424], "ms": [121, 122, 134, 135], "268": [121, 122, 409, 424], "433": [121, 122, 424], "213": [121, 122, 424], "8605": [121, 122], "pipelineenv": 122, "get_environ": 122, "dm_control": [123, 124, 409, 421, 429], "2006": [123, 124, 316, 322, 424], "12983": [123, 124], "task_nam": [123, 125, 129, 147, 148, 154, 155], "cheetah": [123, 124, 125, 129, 147, 148, 154, 155, 370, 409, 429], "240": [123, 124, 424, 428, 429], "swingup": [123, 124, 429], "swingup_spars": [123, 124, 429], "ball_in_cup": [123, 124, 429], "catch": [123, 124, 413, 429], "balance_spars": [123, 124, 429], "three_pol": [123, 124, 429], "two_pol": [123, 124, 429], "finger": [123, 124, 429], "turn_easi": [123, 124, 429], "turn_hard": [123, 124, 429], "fish": [123, 124, 429], "upright": [123, 124, 410, 429], "swim": [123, 124, 429], "hopper": [123, 124, 429], "hop": [123, 124, 429], "humanoid": [123, 124, 147, 154, 421, 429], "walk": [123, 124, 147, 154, 410, 421, 429], "run_pure_st": [123, 124, 429], "bring_bal": [123, 124, 429], "bring_peg": [123, 124, 429], "insert_bal": [123, 124, 429], "insert_peg": [123, 124, 429], "point_mass": [123, 124, 429], "reacher": [123, 124, 429], "swimmer": [123, 124, 429], "swimmer6": [123, 124, 429], "swimmer15": [123, 124, 429], "walker": [123, 124, 429], "dog": [123, 124, 429], "trot": [123, 124, 429], "humanoid_cmu": [123, 124, 429], "lqr": [123, 124, 429], "lqr_2_1": [123, 124, 429], "lqr_6_2": [123, 124, 429], "quadrup": [123, 124, 429], "escap": [123, 124, 429], "stacker": [123, 124, 429], "stack_2": [123, 124, 413, 429], "stack_4": [123, 124, 413, 429], "deviceless": 125, "run_type_check": [125, 141], "counterenv": 125, "discretebox": [125, 129, 147, 148, 154, 155], "sort": [125, 129, 147, 148, 154, 155, 173, 276, 277], "another_act": [125, 129, 147, 148, 154, 155], "mutabl": [125, 129, 147, 148, 154, 155], "action_spec_unbatch": [125, 129, 147, 148, 154, 155, 411, 423], "had": [125, 129, 147, 148, 154, 155, 415, 417], "_callabletransform": [125, 129, 147, 148, 154, 155], "auto_specs_": [125, 129, 147, 148, 154, 155], "batch_lock": [125, 127, 129, 147, 154, 169, 209, 214, 424], "check_dtyp": [125, 129, 147, 148, 154, 155, 224], "discrep": [125, 129, 147, 148, 154, 155, 224, 315, 317, 319, 320, 332, 335, 337, 348], "broken": [125, 129, 147, 148, 154, 155, 224], "rng": [125, 129, 147, 148, 154, 155, 224, 424], "done_keys_group": [125, 129, 147, 148, 154, 155], "outer": [125, 129, 147, 148, 154, 155, 406, 409, 410, 429], "another_don": [125, 129, 147, 148, 154, 155], "done_spec_unbatch": [125, 129, 147, 148, 154, 155], "empty_cach": [125, 129, 147, 148, 154, 155, 214], "fake_tensordict": [125, 129, 147, 148, 154, 155, 410, 413], "braxenv": [125, 129, 147, 148, 154, 155, 198, 402, 414], "envnam": [125, 129, 147, 148, 154, 155], "full_action_spec_unbatch": [125, 129, 147, 148, 154, 155, 422], "full_done_spec_unbatch": [125, 129, 147, 148, 154, 155], "full_observation_spec_unbatch": [125, 129, 147, 148, 154, 155], "full_reward_spec_unbatch": [125, 129, 147, 148, 154, 155], "pipeline_st": [125, 129, 147, 148, 154, 155], "full_state_spec_unbatch": [125, 129, 147, 148, 154, 155], "attibut": [125, 129, 147, 148, 154, 155], "input_spec_unbatch": [125, 129, 147, 148, 154, 155], "maybe_reset": [125, 129, 147, 148, 154, 155], "speak": [125, 129, 147, 148, 154, 155, 409], "observation_spec_unbatch": [125, 129, 147, 148, 154, 155], "output_spec_unbatch": [125, 129, 147, 148, 154, 155], "rand_act": [125, 129, 138, 147, 148, 149, 150, 154, 155, 169, 414], "register_gym": [125, 129, 147, 148, 154, 155, 414], "entry_point": [125, 129, 147, 148, 154, 155], "info_kei": [125, 129, 147, 148, 154, 155], "reward_threshold": [125, 129, 147, 148, 154, 155], "nondeterminist": [125, 129, 147, 148, 154, 155], "max_episode_step": [125, 128, 129, 130, 147, 148, 154, 155], "order_enforc": [125, 129, 147, 148, 154, 155], "autoreset": [125, 129, 147, 148, 154, 155], "disable_env_check": [125, 128, 129, 142, 143, 147, 148, 154, 155], "apply_api_compat": [125, 129, 147, 148, 154, 155], "nasium": [125, 129, 147, 148, 154, 155], "scope": [125, 129, 147, 148, 154, 155, 413, 429], "dmcontrolenv": [125, 129, 147, 148, 154, 155, 370, 402, 409, 414, 421, 429], "dmc": [125, 129, 147, 148, 154, 155], "removeemptyspec": [125, 129, 147, 148, 154, 155], "threshold": [125, 129, 147, 148, 154, 155, 250, 316, 317, 411], "learnt": [125, 129, 147, 148, 154, 155, 396], "checker": [125, 128, 129, 142, 143, 147, 148, 154, 155], "stepapicompat": [125, 129, 147, 148, 154, 155], "deem": [125, 129, 139, 140, 147, 148, 154, 155, 158, 159], "envgym": [125, 129, 147, 148, 154, 155], "0855": [125, 129, 147, 148, 154, 155], "0215": [125, 129, 147, 148, 154, 155], "0881": [125, 129, 147, 148, 154, 155], "0412": [125, 129, 147, 148, 154, 155], "1101": [125, 129, 147, 148, 154, 155], "0080": [125, 129, 147, 148, 154, 155], "0254": [125, 129, 147, 148, 154, 155], "0424": [125, 129, 147, 148, 154, 155], "9609e": [125, 129, 147, 148, 154, 155], "9776e": [125, 129, 147, 148, 154, 155], "04": [125, 129, 133, 147, 148, 154, 155, 409, 410, 411, 412, 424, 425], "6347e": [125, 129, 147, 148, 154, 155], "3842e": [125, 129, 147, 148, 154, 155], "5338e": [125, 129, 147, 148, 154, 155], "3064e": [125, 129, 147, 148, 154, 155], "0381e": [125, 129, 147, 148, 154, 155], "6656e": [125, 129, 147, 148, 154, 155], "05": [125, 129, 147, 148, 154, 155, 233, 409, 410, 422, 424], "0204e": [125, 129, 147, 148, 154, 155], "action_spac": [125, 129, 147, 148, 154, 155, 182, 247, 279, 297, 298, 302, 303, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 412, 413, 415, 419], "0833": [125, 129, 147, 148, 154, 155], "0275": [125, 129, 147, 148, 154, 155], "0612": [125, 129, 147, 148, 154, 155], "0770": [125, 129, 147, 148, 154, 155, 424], "1256": [125, 129, 147, 148, 154, 155, 424], "0082": [125, 129, 147, 148, 154, 155], "0186": [125, 129, 147, 148, 154, 155], "0476": [125, 129, 147, 148, 154, 155], "2221": [125, 129, 147, 148, 154, 155], "2256": [125, 129, 147, 148, 154, 155], "5930": [125, 129, 147, 148, 154, 155], "6937": [125, 129, 147, 148, 154, 155], "5865": [125, 129, 147, 148, 154, 155], "5479": [125, 129, 147, 148, 154, 155], "0187": [125, 129, 147, 148, 154, 155], "6825": [125, 129, 147, 148, 154, 155, 424], "5224": [125, 129, 147, 148, 154, 155], "0018": [125, 129, 147, 148, 154, 155, 424], "1005": [125, 129, 147, 148, 154, 155], "0335": [125, 129, 147, 148, 154, 155], "0268": [125, 129, 147, 148, 154, 155, 424], "0133": [125, 129, 147, 148, 154, 155], "0627": [125, 129, 147, 148, 154, 155], "0074": [125, 129, 147, 148, 154, 155, 424], "0488": [125, 129, 147, 148, 154, 155, 424], "0353": [125, 129, 147, 148, 154, 155], "0075": [125, 129, 147, 148, 154, 155, 424], "0069": [125, 129, 147, 148, 154, 155, 424], "0098": [125, 129, 147, 148, 154, 155, 424], "0058": [125, 129, 147, 148, 154, 155, 424], "0033": [125, 129, 147, 148, 154, 155, 424], "0157": [125, 129, 147, 148, 154, 155], "0004": [125, 129, 147, 148, 154, 155, 412, 424], "0381": [125, 129, 147, 148, 154, 155], "0452": [125, 129, 147, 148, 154, 155], "11355747": [125, 129, 147, 148, 154, 155], "04257728": [125, 129, 147, 148, 154, 155], "00408397": [125, 129, 147, 148, 154, 155], "04155852": [125, 129, 147, 148, 154, 155], "0389733": [125, 129, 147, 148, 154, 155], "01409826": [125, 129, 147, 148, 154, 155], "0978704": [125, 129, 147, 148, 154, 155], "08808327": [125, 129, 147, 148, 154, 155], "03970837": [125, 129, 147, 148, 154, 155], "00535434": [125, 129, 147, 148, 154, 155], "02353762": [125, 129, 147, 148, 154, 155], "05116226": [125, 129, 147, 148, 154, 155], "02788907": [125, 129, 147, 148, 154, 155], "06848346": [125, 129, 147, 148, 154, 155], "05154399": [125, 129, 147, 148, 154, 155], "0371798": [125, 129, 147, 148, 154, 155], "05128025": [125, 129, 147, 148, 154, 155], "dydact": [125, 129, 147, 148, 154, 155], "gym_env": [125, 129, 147, 148, 154, 155, 428], "reset_kei": [125, 129, 147, 148, 154, 155, 172, 203, 208, 209, 210, 422], "multitask": [125, 129, 147, 148, 154, 155], "multiag": [125, 129, 138, 147, 148, 149, 150, 154, 155, 230, 265, 278, 287, 348], "another_reward": [125, 129, 147, 148, 154, 155], "reward_spec_unbatch": [125, 129, 147, 148, 154, 155], "auto_cast_to_devic": [125, 129, 147, 148, 154, 155, 423], "break_when_all_don": [125, 129, 135, 147, 148, 154, 155], "soon": [125, 129, 147, 148, 149, 150, 154, 155], "__sort": [125, 129, 147, 148, 154, 155], "as__": [125, 129, 147, 148, 154, 155], "argmaxmodul": [125, 129, 147, 148, 154, 155], "argmax": [125, 129, 147, 148, 154, 155, 247, 279, 298, 303, 413, 415], "n_ob": [125, 129, 147, 148, 154, 155, 189, 300, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 416], "n_act": [125, 129, 147, 148, 154, 155, 189, 315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 416], "ourselv": [125, 129, 147, 148, 154, 155, 411, 429], "emul": [125, 129, 147, 148, 154, 155], "epoch": [125, 129, 147, 148, 154, 155, 386, 411, 422, 423], "input_td": [125, 129, 147, 148, 154, 155], "rollout_td": [125, 129, 147, 148, 154, 155], "state_spec_unbatch": [125, 129, 147, 148, 154, 155], "prevail": [125, 129, 147, 148, 154, 155, 173, 203, 230], "creator": [126, 391, 392, 398, 399, 400], "substitut": [126, 208, 220, 415], "vecnorm": [126, 400], "env_creat": [126, 409], "test_env1": 126, "observation_count": [126, 429], "test_env2": 126, "sleep": [126, 429], "ps": 126, "p1": 126, "p2": 126, "9934": 126, "make_vari": [126, 212], "variant": [126, 212, 235, 404], "trajcount": 126, "env_creator_pendulum": 126, "env_creator_cartpol": 126, "env_str": 127, "device_map": 127, "accross": [128, 130], "registri": [128, 156], "asyncvectorenv": 128, "involv": [128, 130, 131, 139, 140, 151, 169, 212, 254, 258, 414, 416], "pixel_observ": [128, 130, 131, 151], "pixelobservationwrapp": [128, 130, 131, 151], "adventur": [128, 130, 429], "airraid": [128, 130, 429], "alien": [128, 130, 429], "time_limit": 128, "timelimit": [128, 139, 140, 158, 159], "default_info_dict_read": [128, 129, 130, 147], "reader": [128, 129, 130, 147, 410], "set_info_dict_read": [128, 129, 130, 147, 414], "info_dict": [128, 129, 130, 147], "auto_register_info_dict": [128, 129, 130, 147], "multibinari": [128, 130], "multidiscret": [128, 130], "rag": [128, 130], "gym_conversion_exampl": [128, 130], "info_dict_read": [129, 147], "ignore_priv": 129, "baseinfodictread": 129, "tensordictprim": [129, 147, 236, 254, 258, 312, 404, 412], "succe": [129, 147], "underscor": 129, "primer": [129, 209, 236, 254, 258, 312, 412], "halfcheetah": [129, 147, 165, 199, 409, 428], "reward_run": [129, 147], "read_act": 129, "read_don": 129, "nonsens": 129, "fallback": 129, "read_ob": 129, "dictat": [129, 301, 305, 335, 409, 424], "read_reward": 129, "hoc": [129, 147, 415], "dict_read": 129, "my_info_kei": 129, "some_env": 129, "vecenv": 130, "vectorenv": 130, "convert_actions_to_numpi": 130, "isaaclab": 130, "secur": 131, "habitat3": 131, "ai": [131, 425], "habitatrenderpick": 131, "isaacgym": [132, 133], "isaacgymwrapp": [132, 402], "isaacgymenv": [133, 402], "webpag": 133, "isaac": 133, "essenc": [133, 414], "instadeepai": [134, 135], "2306": [134, 135], "09884": [134, 135], "snake": [134, 135], "grid": [134, 135, 370], "bodi": [134, 135], "body_st": [134, 135], "fruit_posit": [134, 135], "col": [134, 135], "head_posit": [134, 135], "tail": [134, 135], "game2048": [134, 135], "maze": [134, 135], "cleaner": [134, 135], "cvrp": [134, 135], "multicvrp": [134, 135], "minesweep": [134, 135], "rubikscub": [134, 135], "knapsack": [134, 135], "sudoku": [134, 135], "tsp": [134, 135], "connector": [134, 135], "v2": [134, 135, 152, 153, 344, 359, 360, 361, 362, 364, 365, 366, 367, 412], "mmst": [134, 135], "graphcolor": [134, 135], "partli": [134, 135], "scrambl": [134, 135], "robotwarehous": [134, 135], "tetri": [134, 135], "binpack": [134, 135], "jobshop": [134, 135], "0x1fca91910": 134, "122": [134, 135, 424, 429], "0x1ff9baee0": 134, "134": [134, 135, 424], "0x1ff9ba7c0": 134, "172": [134, 135, 424, 426], "jit": 135, "eager": 135, "tdreset": [135, 222, 421], "whichev": 135, "drastic": [135, 147, 426], "mo": [136, 137], "minecart": [136, 137], "mo_gym": 137, "qualnam": 138, "leverag": [138, 149, 150, 409, 423, 429], "neural": [138, 149, 150, 237, 238, 273, 275, 282, 304, 404, 410, 411, 412, 415, 422, 423, 424, 429], "group_map": [138, 139, 140, 145, 146, 149, 150, 156, 157, 158, 159, 160, 422], "constructiuon": [138, 149, 150], "premad": [138, 139, 140, 149, 150, 158, 159, 348], "all_in_one_group": [138, 145, 146, 160], "agent_0": [138, 149, 150, 156, 160, 422], "agent_1": [138, 149, 150, 156, 160], "agent_2": [138, 149, 150, 156, 160], "agent_3": [138, 156], "one_group_per_ag": [138, 149, 150], "meltingpot": [139, 140], "2211": [139, 140], "13746": [139, 140], "melt": [139, 140], "pot": [139, 140], "novel": [139, 140, 416], "social": [139, 140], "familiar": [139, 140, 410, 423, 429], "unfamiliar": [139, 140], "broad": [139, 140], "cooper": [139, 140, 422, 423], "decept": [139, 140], "reciproc": [139, 140], "stubborn": [139, 140], "substrat": [139, 140], "ml_collect": 139, "config_dict": 139, "configdict": 139, "categorical_act": [139, 140, 145, 146, 149, 150, 152, 153, 156, 157, 158, 159], "marlgroupmaptyp": [139, 140, 145, 146, 149, 150, 156, 157, 158, 159, 160, 402, 422], "agent_nam": [139, 140, 158, 159, 160], "agent_names_to_indices_map": [139, 140, 158, 159], "env_torchrl": [139, 140], "commons_harvest__open": [139, 140], "rgb": [139, 140], "144": [139, 140, 424], "192": [139, 140, 410, 424], "collective_reward": [139, 140], "ready_to_shoot": [139, 140], "88": [139, 140, 152, 153, 409, 410, 424, 425], "substrate_config": 140, "get_config": 140, "mp_env": 140, "build_from_config": 140, "default_player_rol": 140, "environn": 141, "mymbenv": [141, 234, 261], "world_model": [141, 234, 261, 327], "hidden_observ": [141, 234, 261], "mlp": [141, 234, 237, 238, 240, 241, 242, 243, 249, 254, 258, 261, 265, 266, 293, 297, 312, 320, 322, 404, 410, 413, 415, 416, 419, 421, 425, 428], "worldmodelwrapp": [141, 234, 261], "activation_class": [141, 234, 237, 238, 240, 241, 242, 243, 248, 249, 259, 261, 264, 265, 410, 415, 422, 423, 428], "activate_last_lay": [141, 234, 243, 259, 261], "sail": [142, 143], "sg": [142, 143], "10558": [142, 143], "readthedoc": [142, 145, 146], "en": [142, 145, 146], "python_interfac": 142, "envpoolmixin": 143, "env_bas": 143, "task_id": 143, "env_typ": 143, "gym_reset_return_info": 143, "envpool_env": 143, "www": [144, 262, 263], "fetch_openml": 144, "106": [144, 424], "openspiel": [145, 146], "open_spiel": [145, 146], "game_str": 145, "return_st": [145, 146, 149, 150], "4672": [145, 146, 410, 424], "current_play": [145, 146], "fen": [145, 146], "rnbqkbnr": [145, 146], "pppppppp": [145, 146], "kqkq": [145, 146], "674": [145, 424], "2048": [145, 146, 410, 425], "add_nois": [145, 146], "amazon": [145, 146], "backgammon": [145, 146], "restor": [145, 146], "td_restor": [145, 146], "pyspiel": 146, "load_gam": 146, "new_initial_st": 146, "3009": 146, "my_env_fun": [147, 154], "custom_attribute_list": [147, 154], "custom_attribut": [147, 154], "custom_method_list": [147, 154], "custom_method": [147, 154], "deploi": [147, 154, 169, 413], "slight": [147, 154, 410], "share_individual_td": [147, 154], "shared_memori": [147, 154], "policy_proof": [147, 154], "ll": [147, 154, 252, 253, 256, 257, 409, 410, 411, 412, 414, 415, 416, 417, 419, 423, 429], "serial_for_singl": [147, 154, 410], "circular": [147, 154, 409], "list_of_kwarg": [147, 154], "com_veloc": [147, 154], "head_height": [147, 154], "joint_angl": [147, 154], "torso_vert": [147, 154], "stringent": [147, 411, 422, 423], "inter": 147, "penv": [147, 212], "env_fix": 147, "influenc": 147, "myenv": [147, 169, 178, 181], "pipe": 147, "update_kwarg": [147, 154], "th": [148, 185, 215, 252, 256, 424], "thdot": [148, 424], "max_spe": [148, 424], "max_torqu": [148, 424], "gen_param": [148, 424], "gravit": [148, 424], "torqu": [148, 424], "pettingzoo": [149, 150, 422, 423], "pet": [149, 150], "zoo": [149, 150], "__": [149, 150], "aecenv": [149, 150], "use_mask": [149, 150], "dead": [149, 150], "done_on_ani": [149, 150, 422], "compulsori": [149, 150], "adversary_0": [149, 150, 422], "adversari": [149, 150, 329, 422], "sisl": 149, "multiwalker_v9": 149, "aec": [149, 150], "n_piston": [149, 150], "pistonball_v6": [149, 150], "piston": [149, 150], "piston_0": [149, 150], "piston_1": [149, 150], "piston_20": [149, 150], "tictactoe_v3": [149, 150], "player": [149, 150, 155], "player_1": [149, 150], "player_2": [149, 150], "butterfli": 150, "parallel_env": [150, 409, 428, 429], "vikashplu": 151, "wiki": 151, "06828": 151, "from_depth": 151, "smacv2": [152, 153], "starcraft": [152, 153], "challeng": [152, 153, 414, 424, 425], "10gen_terran": [152, 153], "10gen_zerg": [152, 153], "10gen_protoss": [152, 153], "3m": [152, 153], "8m": [152, 153], "25m": [152, 153], "5m_vs_6m": [152, 153], "8m_vs_9m": [152, 153], "10m_vs_11m": [152, 153], "27m_vs_30m": [152, 153], "mmm": [152, 153], "mmm2": [152, 153], "2s3z": [152, 153], "3s5z": [152, 153], "3s5z_vs_3s6z": [152, 153], "3s_vs_3z": [152, 153], "3s_vs_4z": [152, 153], "3s_vs_5z": [152, 153], "1c3s5z": [152, 153], "2m_vs_1z": [152, 153], "corridor": [152, 153], "6h_vs_8z": [152, 153], "2s_vs_1sc": [152, 153], "so_many_banel": [152, 153], "bane_vs_ban": [152, 153], "2c_vs_64zg": [152, 153], "old": [152, 153, 332, 429], "smac": [152, 153], "map_nam": [152, 153], "176": [152, 153, 424], "battle_won": [152, 153], "dead_al": [152, 153], "dead_enemi": [152, 153], "episode_limit": [152, 153], "322": [152, 153, 408, 409, 414, 415, 424, 427], "procedur": [152, 153], "distribution_config": [152, 153], "n_unit": [152, 153], "n_enemi": [152, 153], "team_gen": [152, 153], "dist_typ": [152, 153], "weighted_team": [152, 153], "unit_typ": [152, 153], "marin": [152, 153], "maraud": [152, 153], "medivac": [152, 153], "exception_unit_typ": [152, 153], "start_posit": [152, 153], "surrounded_and_reflect": [152, 153], "map_x": [152, 153], "map_i": [152, 153], "capability_config": [152, 153], "131": [152, 153, 424], "starcraft2env": 153, "tic": 155, "tac": 155, "toe": 155, "single_play": 155, "player1": 155, "desired_batch_s": 155, "board": 155, "player0": 155, "uniti": [156, 157], "technolog": [156, 157], "llapi": [156, 157], "mlagents_env": [156, 157], "unityenviron": [156, 157], "file_nam": 156, "registered_nam": 156, "localhost": 156, "3dball": 156, "group_0": 156, "vectorsensor_size8": 156, "continuous_act": [156, 158, 159, 368, 422, 423], "agent_10": 156, "agent_11": 156, "agent_4": 156, "agent_5": 156, "agent_6": 156, "agent_7": 156, "agent_8": 156, "agent_9": 156, "group_reward": 156, "proroklab": [158, 159], "vectorizedmultiagentsimul": [158, 159], "2207": [158, 159], "03530": [158, 159], "basescenario": 158, "perfrom": [158, 159], "defaultt": 158, "repositiori": 158, "sparsiti": 158, "unbatched_action_spec": [158, 159], "unbatched_observation_spec": [158, 159], "unbatched_reward_spec": [158, 159], "het_spec": [158, 159], "het_specs_map": [158, 159], "flock": [158, 159, 368], "agent_collision_rew": [158, 159], "agent_distance_rew": [158, 159], "ca": 160, "environment4": 160, "get_group_map": 160, "sumbodul": 161, "model_bas": [162, 163, 234, 261], "decod": [162, 270], "model_based_env": [162, 326], "dreamerenv": [162, 326, 402], "model_based_env_ev": 162, "num_interv": 165, "out_action_kei": 165, "samplingstrategi": 165, "optino": 165, "intenum": 165, "interv": [165, 369, 370, 379, 388, 410, 424], "action_disc": 165, "transform_input_spec": [165, 169, 176, 178, 179, 180, 191, 193, 197, 198, 203, 207, 208, 209, 213, 215, 217, 222], "masker": 166, "maskedenv": 166, "ones_lik": 166, "scatter": 166, "fill_float": 168, "fill_int": 168, "fill_bool": 168, "someenvclass": 168, "autoresetenv": 168, "argumet": 168, "fooenv": 168, "sign": [168, 205, 350, 422], "envtyp": 168, "reshape_fn": [169, 413], "reset_func": 169, "environmt": 169, "tensordict_batch_s": 169, "tensordict_reset": [169, 424], "transform_env_batch_s": [169, 176, 213, 222], "transform_output_spec": [169, 176, 178, 179, 183, 189, 197, 198, 204, 207, 213, 222], "transform_observation_spec": [169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 187, 188, 189, 191, 193, 197, 198, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 222, 424], "transform_reward_spec": [169, 170, 175, 176, 178, 179, 183, 189, 197, 198, 201, 202, 203, 204, 205, 207, 213, 215, 222], "transformfull_done_spec": [169, 176, 178, 179, 183, 189, 197, 198, 204, 207, 213, 222], "biner": 170, "burn_in": 171, "burn": 171, "date": [171, 373], "retur": 171, "burnt": 171, "gru_modul": [171, 254, 312], "input_s": [171, 209, 252, 253, 254, 256, 257, 258, 312, 412, 413], "hidden_s": [171, 209, 252, 253, 254, 256, 257, 258, 312, 412, 413], "default_recurrent_mod": [171, 254, 258], "burn_in_transform": 171, "gru": [171, 209, 253, 254, 312, 413], "num_lay": [171, 252, 254, 256, 258, 270, 271, 312, 413], "86": [171, 410, 413, 424], "3008": [171, 410], "0344": 171, "padding_valu": [172, 262, 263], "as_invers": 172, "movement": 172, "1312": [172, 410], "5602": 172, "consumpt": [172, 402], "followin": 172, "pictur": 172, "pixels_trsf": [172, 426], "grayscal": [172, 410, 412, 413, 426, 429], "data_exclud": [172, 426], "del_kei": [173, 216, 421, 424], "unsqueeze_if_oor": 173, "observation_posit": 173, "observation_veloc": 173, "center": [174, 275, 370], "width": [174, 177, 199], "scalar": [175, 201, 231, 232, 241, 243, 250, 267, 268, 276, 277, 311, 315, 316, 317, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 348, 350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 404, 410, 416, 424], "permit": [175, 185, 215, 315, 317, 332, 335, 337], "rewardsc": [176, 214, 409, 410, 412], "rewardclip": 176, "transformed_env": [176, 213, 214, 414], "transform_env_devic": [176, 179, 213, 222], "dtype_in": 178, "dtype_out": 178, "scan": [178, 181, 306, 307], "resp": [178, 181], "not_transform": [178, 181], "constructedw": [178, 181], "orig_devic": 179, "unspecifi": 179, "transform_done_spec": [179, 213, 222], "num_actions_effect": 180, "max_act": 180, "include_forward": 180, "num_act": [180, 238, 324, 413, 415], "action_out": 180, "_call": [180, 185, 424], "eol_kei": 182, "lives_kei": 182, "eol_attribut": 182, "unwrap": 182, "breakout": 182, "210": [182, 193, 413, 424, 429], "160": [182, 193, 410, 413, 424, 429], "eol_transform": 182, "eol": 182, "dqnloss": [182, 315, 316, 318, 319, 322, 324, 325, 326, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 348, 393, 402, 405, 410, 412, 413, 419], "register_kei": 182, "loss_or_advantag": 182, "lossmodul": [182, 386, 395, 396, 402, 405], "valueestimatorbas": [182, 333, 402], "excluded_kei": 183, "finit": [184, 275, 415, 426], "first_dim": 185, "last_dim": 185, "allow_positive_dim": [185, 215], "frameskip": 185, "repeatedli": [186, 411, 423], "init_kei": [188, 300], "tracker": 188, "pi_curr": 189, "pi_0": 189, "overfit": 189, "probabilist": [189, 225, 301, 315, 335, 402, 411, 428], "get_dist": [189, 305, 306], "normalparamextractor": [189, 293, 294, 295, 301, 307, 315, 316, 318, 324, 331, 335, 336, 337, 338, 340, 341, 404, 411, 415, 423, 428], "probabilisticactor": [189, 293, 294, 295, 296, 315, 316, 318, 321, 323, 324, 331, 334, 335, 336, 337, 338, 340, 341, 404, 409, 411, 415, 422, 423], "tanhnorm": [189, 293, 294, 295, 301, 307, 315, 316, 318, 331, 335, 336, 337, 338, 340, 341, 402, 411, 423, 428], "return_log_prob": [189, 293, 294, 295, 301, 305, 307, 337, 404, 411, 415, 422, 423, 428], "apply_": 189, "copy_": [189, 409], "formulat": 189, "diverg": [189, 254, 258, 301, 305, 327, 332], "noop": [190, 428], "trial": 190, "standard_norm": [191, 202, 220, 409, 410, 412], "affin": [191, 202, 220], "layer": [191, 220, 233, 237, 238, 240, 241, 246, 248, 252, 253, 254, 256, 257, 258, 259, 264, 265, 267, 268, 270, 271, 282, 283, 290, 299, 308, 404, 410, 411, 412, 413, 415, 422, 425], "epsilon": [191, 231, 232, 250, 251, 276, 277, 339, 384, 410, 411, 412, 415], "recover": 191, "set_default_tensor_typ": 191, "doubletensor": 191, "isclos": 191, "next_ob": [191, 350, 351, 352, 353, 428], "init_stat": [191, 409, 410, 411, 412], "3752e": 191, "5087e": 191, "9294e": 191, "9636": 191, "5608": 191, "6408": 191, "num_it": [191, 410, 411], "reduce_dim": [191, 409, 410, 411, 412], "cat_dim": [191, 409, 410, 411, 412], "keep_dim": [191, 410, 412], "statist": [191, 220, 233, 337, 400, 409, 410, 411, 429], "gaussian": [191, 209, 231, 232, 234, 261, 267, 268, 274, 411, 413, 422], "empir": [191, 234, 261, 301, 305, 409, 411, 423], "3d": [191, 237], "reorder": 193, "in_keys_in": [193, 215], "channel": [193, 211, 264, 270, 271, 410], "r3m": [195, 425], "resnet": [195, 216, 218], "visual": [195, 216, 218, 370, 411, 422, 424], "embed": [195, 216, 217, 218, 240, 278, 292, 293, 294, 295, 304, 309, 425], "ego4d": [195, 216, 218], "univers": [195, 216, 218, 414], "suraj": [195, 216], "nair": [195, 216], "aravind": [195, 216], "rajeswaran": [195, 216], "vikash": [195, 216, 218], "kumar": [195, 216, 218], "chelsea": [195, 216], "finn": [195, 216], "abhinav": [195, 216], "gupta": [195, 216], "2203": [195, 216, 261, 425], "12601": [195, 216, 425], "_init": [195, 216, 409], "resnet50": [195, 218, 425], "model_nam": [195, 216, 218, 373], "resnet34": 195, "resnet18": 195, "r3m_vec": [195, 425], "stack_imag": [195, 218], "tread": [195, 218], "separet": [195, 218], "hub": [195, 218, 414, 425], "resnet50_weight": [195, 218], "imagenet1k_v1": [195, 218], "download_path": [195, 218], "tensor_pixels_kei": [195, 218], "sub_seq_len": 196, "sample_dim": [196, 409], "hesit": 196, "robust": [196, 233], "mix": [196, 278, 287, 348, 409, 422, 423], "improp": 196, "dummyenv": 197, "another_oth": 197, "other_reward": 197, "create_copi": 198, "stuff": [198, 417], "newnam": 198, "r2g": 200, "reward_to_go": 200, "bernoulli_": 200, "9010": 200, "9404": [200, 356], "9701": [200, 356], "9900": [200, 356], "0000": [200, 210, 250, 275, 308, 356, 411, 412, 424, 428], "crash": 200, "clamp_min": 201, "clamp_max": 201, "clip_min": 201, "clip_max": 201, "episode_": 203, "reward1": 203, "reward2": 203, "episode_reward": [203, 422, 423], "keep_reward": 204, "keep_don": 204, "logical_or": 205, "step_count_kei": 207, "update_don": 207, "disjunct": 207, "recognis": 207, "target_return": 208, "subtract": 208, "default_valu": [209, 312, 412], "unit": [209, 234, 248, 252, 253, 270, 271, 280, 281, 411], "mykei": 209, "__unless": 209, "exists__": 209, "get_primers_from_modul": [209, 236, 254, 258, 402], "recurrent_st": [209, 254, 258, 312, 412], "10th": 210, "0216": 210, "1149": 210, "1990": 210, "2749": 210, "3281": 210, "9290": 210, "3702": 210, "8978": 210, "from_int": 211, "shape_toler": 211, "permuat": 211, "ri": 211, "traj_count": 212, "traj": 212, "countingenv": 212, "mocking_class": 212, "make_env_c0": 212, "make_env_c1": 212, "principl": 213, "cattransform": 213, "notabl": 213, "rewardsum": [213, 222, 229, 422, 423], "smoothli": [214, 233], "add_1": [214, 413], "cache_spec": 214, "set_missing_toler": 214, "danger": 215, "vc1": 216, "vc1_vec": 216, "untrain": 216, "make_noload_model": 216, "vip": [217, 218, 425], "implicit": [218, 323, 331, 426], "jason": 218, "ma": 218, "shagun": 218, "sodhani": 218, "dinesh": 218, "jayaraman": 218, "osbert": 218, "bastani": 218, "ami": 218, "zhang": 218, "vip_vec": 218, "final_nam": 219, "sb3": 219, "terminal_obs_read": 219, "truli": [219, 428], "till": 219, "shared_td": 220, "decai": [220, 231, 232, 250, 339, 384, 409, 410, 412, 429], "9999": [220, 424], "0001": [220, 248, 269, 411, 424], "to_observation_norm": 220, "frozen_copi": 220, "race": 220, "underflow": [220, 384], "build_td_for_shared_vecnorm": 220, "memmori": 220, "queue": [220, 426, 428], "td_share": 220, "unfreez": 220, "train_env": 220, "eval_env": 220, "state_dim": [221, 239, 244, 274, 280, 281, 296], "action_dim": [221, 239, 240, 242, 244, 274, 296, 409, 421], "gsde": [221, 336, 400], "gsdemodul": 221, "rb_transform": 222, "resist": 222, "insensit": 222, "sensit": [222, 410, 412], "_orig": 222, "95": [222, 261, 343, 410, 411, 412, 424, 426], "window": [222, 300, 422, 426, 428], "edit": [222, 417], "cube": 223, "unsqueeze_null_shap": 227, "probabilistictdmodul": [228, 259, 301, 305, 349, 381], "next_tensordict": 229, "keep_oth": [229, 424], "exclude_reward": 229, "exclude_don": 229, "exclude_act": 229, "next_": 229, "funtion": 229, "_stepmdp": 229, "write_full_fals": 230, "_terminated_or_trunc": 230, "po": [231, 232, 251], "sigma_init": [231, 232, 422], "sigma_end": [231, 232, 422], "annealing_num_step": [231, 232, 250, 276, 277, 409, 410, 412, 413, 415, 419, 422], "sigma": [231, 232, 252, 253, 255, 256, 257, 276, 277, 285, 286, 411, 422], "captur": [231, 232, 250, 276, 277, 413], "omiss": [231, 232, 250, 276, 277], "ommit": [231, 232, 250, 276, 277], "momentum": 233, "max_r": 233, "max_d": 233, "warmup_step": 233, "batchrenorm": 233, "1702": 233, "03275": 233, "corenet": 233, "enhanc": 233, "warmup": 233, "phase": [233, 235, 423, 426], "outlier": 233, "period": 233, "varianc": [233, 234, 235, 255, 269, 285, 286, 405, 409, 411, 423], "warm": 233, "renorm": 233, "entropi": [234, 272, 315, 316, 317, 318, 323, 324, 331, 332, 334, 335, 336, 338, 340, 341, 423], "botev": 234, "2013": 234, "cem": 234, "plan": [234, 260, 261], "k": [234, 236, 252, 253, 256, 257], "maximis": [234, 240, 242, 261, 410, 411, 423], "modelbasedenv": [234, 261], "planning_horizon": [234, 261], "optim_step": [234, 261, 410, 413, 419], "mpc": [234, 260, 261], "num_candid": [234, 261], "candid": [234, 261], "top_k": [234, 261], "modelbasedenvbas": [234, 260, 261, 402], "safemodul": [234, 260, 293, 295, 305, 315, 316, 318, 323, 324, 331, 335, 336, 337, 338, 340, 341, 391, 392, 396, 402, 428], "hausknecht": 235, "wagen": 235, "reus": [235, 240, 377], "consistentdropoutmodul": [235, 404], "capit": 235, "themselv": [235, 410], "conceptu": 235, "devianc": 235, "set_exploration_typ": [235, 333, 381, 402, 404, 411, 412, 413, 415, 422, 428], "_main_async_collector": 235, "asyncdatacollector": [235, 402], "ditto": 235, "consistentdropout": 236, "input_shap": 236, "batcht": 236, "make_tensordict_prim": [236, 254, 258, 412], "input_dtyp": 236, "pase": 236, "get_default_dtyp": [236, 384], "mask_6127171760": 236, "env0": [236, 429], "num_cel": [237, 238, 240, 241, 242, 243, 248, 249, 254, 258, 259, 264, 265, 293, 312, 410, 411, 412, 413, 415, 416, 419, 422, 423, 428], "elu": [237, 238, 240, 241, 242, 243, 248, 249, 264, 410, 428], "activation_kwarg": [237, 238, 259], "norm_class": [237, 238, 240, 241, 259], "norm_kwarg": [237, 238, 259], "bias_last_lay": [237, 238, 240, 241, 242, 243, 249, 259], "aggregator_class": [237, 238, 240, 241, 410, 412, 428], "squashdim": [237, 238, 240, 249, 264, 428], "aggregator_kwarg": [237, 238, 240, 241, 410, 412], "squeeze_output": [237, 238, 240, 241, 410, 412], "cell": [237, 238, 252, 253, 254, 256, 257, 258, 259, 264, 265, 411, 413, 414, 415, 416, 417, 418, 419], "kernel": [237, 238, 264], "cnet": [237, 238], "conv3d": 237, "lazyconv2d": [238, 240, 241, 249, 264, 428], "default_atari_dqn": [238, 413], "semin": 238, "transformer_config": [239, 274, 296], "dtconfig": [239, 244, 274], "2202": [239, 244, 334], "05607": [239, 244, 334], "decisiontransform": [239, 274], "return_to_go": [239, 244, 274, 296], "conv_net_kwarg": [240, 241], "mlp_net_kwarg": [240, 241, 242], "use_avg_pool": [240, 241], "WITH": [240, 241, 242, 243, 276, 277, 339], "1509": [240, 241, 242, 243, 261, 276, 277, 320, 330, 339, 424], "02971": [240, 241, 242, 243, 276, 277, 339], "convnet": [240, 241, 249, 264, 412, 413, 415, 428], "ndims_in": [240, 413], "avgpool": [240, 241], "lazylinear": [240, 241, 242, 243, 249, 259, 404, 411, 415, 424, 425, 428], "2304": [240, 410], "adaptiveavgpool2d": [241, 410, 412], "output_s": [241, 410, 412], "squeeze2dlay": 241, "400": [242, 243, 418, 423, 424, 426], "mlp_net_kwargs_net1": 243, "mlp_net_kwargs_net2": 243, "mlp1": 243, "mlp2": 243, "decion": 244, "desdescrib": 244, "n_embd": 244, "n_layer": [244, 252, 256], "n_head": 244, "n_inner": 244, "n_posit": 244, "resid_pdrop": 244, "attn_pdrop": 244, "gpt2config": 244, "atol": [245, 284], "rtol": [245, 284], "batch_shap": [245, 272, 284], "event_shap": [245, 284], "absolut": [245, 284, 409], "_instanc": 245, "densiti": [245, 262, 263, 272, 286], "mass": [245, 262, 263, 272, 286, 424], "rsampl": [245, 263, 272, 305], "sample_shap": [245, 262, 263, 272], "softmax": [246, 263, 272, 297, 298], "var_num": [247, 279, 297, 298, 303], "action_value_kei": [247, 279, 297, 298, 302, 303, 318, 333, 348], "action_mask_kei": [247, 250, 279, 297, 298, 302, 303], "perspect": [247, 298, 325, 411, 413], "1707": [247, 298, 325, 335], "06887": [247, 298, 325], "mult": [247, 265, 279, 297, 298, 302, 303], "tensordict_modul": [247, 252, 253, 256, 257, 279, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 318, 319, 323, 324, 331, 335, 336, 337, 338, 340, 341, 404, 413], "nbin": [247, 297, 404], "customdistributionalqv": 247, "log_softmax": [247, 297], "qvalue_actor": [247, 279, 297, 302, 404], "to_modul": [247, 304, 307, 409, 428], "std_bia": 248, "std_min_val": 248, "belief": [248, 270, 280, 281], "1912": [248, 326, 327, 328], "01603": [248, 326, 327, 328], "softplu": [248, 269, 311, 313, 314], "out_features_valu": 249, "cnn_kwarg": [249, 410], "mlp_kwarg": [249, 410], "duel": 249, "cnn": [249, 264, 410, 413, 415, 428], "06581": 249, "greedi": [250, 251, 279, 298, 303, 410, 412, 413, 415], "eps_init": [250, 276, 277, 410, 412, 413, 415, 419], "eps_end": [250, 276, 277, 410], "explorative_polici": [250, 276, 277], "9055": [250, 424], "9277": 250, "6295": 250, "2532": 250, "grad_fn": [250, 292, 428], "addbackward0": 250, "batch_first": [252, 254, 256, 258, 412], "bidirect": [252, 256, 412], "cudnn": [252, 253, 254, 256, 257, 258, 412, 413], "rnn": [252, 253, 254, 256, 257, 258, 291, 324, 338, 412, 413, 415], "device_count": [252, 253, 256, 257, 429], "n_in": [252, 253, 256, 257], "n_out": [252, 253, 256, 257], "h0": [252, 253, 256, 257], "h1": [252, 253, 256, 257], "vectoris": [252, 253, 256, 257], "call_gru": [252, 253], "h_out": [252, 253, 256, 257], "batched_cal": [252, 253, 256, 257], "gate": [252, 253, 256], "r_t": 252, "w_": [252, 253, 256, 257], "ir": [252, 253], "x_t": [252, 256], "b_": [252, 253, 256, 257], "hr": [252, 253, 256], "h_": [252, 253, 256], "z_t": 252, "iz": [252, 253], "hz": [252, 253], "n_t": 252, "odot": [252, 253, 256, 257], "hn": [252, 253, 256], "h_t": [252, 256], "sigmoid": [252, 253, 256, 257, 413], "hadamard": [252, 253, 256, 257], "multilay": [252, 256], "_t": [252, 256, 423, 424], "ge": [252, 256], "bernoulli": [252, 256], "b_ih": [252, 253, 256, 257, 258], "b_hh": [252, 253, 256, 257, 258], "h_0": [252, 256, 257], "unbatch": [252, 256], "pack_padded_sequ": [252, 256], "pack_sequ": [252, 256], "num": [252, 256, 419], "_layer": [252, 256], "_size": [252, 253, 256, 257, 423], "h_n": [252, 256], "packedsequ": [252, 256], "weight_ih_l": [252, 256], "learnabl": [252, 253, 256, 257], "w_ir": 252, "w_iz": 252, "w_in": 252, "num_direct": [252, 256], "weight_hh_l": [252, 256], "w_hr": 252, "w_hz": 252, "w_hn": 252, "bias_ih_l": [252, 256], "b_ir": 252, "b_iz": 252, "b_in": 252, "bias_hh_l": [252, 256], "b_hr": 252, "b_hz": 252, "b_hn": 252, "mathcal": [252, 253, 256, 257], "sqrt": [252, 253, 256, 257, 276, 277], "frac": [252, 253, 256, 257, 411], "seq_len": [252, 256], "subtli": 252, "matrix": [252, 256, 267, 268], "contrast": [252, 275, 330, 426], "hx": [252, 253, 256, 257, 413], "lstmcell": [253, 258, 413], "gru_cel": 253, "weight_ih": [253, 257], "weight_hh": [253, 257], "bias_ih": [253, 257], "bias_hh": [253, 257], "rocm": [253, 257], "embedd": [254, 258], "grucel": [254, 304], "python_bas": [254, 258], "custom_kei": [254, 258], "hasn": [254, 258], "set_recurrent_mod": [254, 258, 412], "recurrent_mod": [254, 258, 291], "rs": [254, 409], "gru_module_train": 254, "policy_train": [254, 258], "traj_td": [254, 258], "make_cudnn_bas": [254, 258], "make_python_bas": [254, 258, 413], "supplementari": [254, 258, 411, 429], "That": [254, 258, 411, 422], "dealt": [254, 258], "poorli": [254, 258], "data_collector": [254, 258, 410], "policy_infer": [254, 258], "td_inf": [254, 258], "upscal": [255, 285, 286], "tanh_loc": [255, 285, 286], "event_dim": [255, 284, 285], "poor": [255, 285, 286], "explos": [255, 285, 286], "formula": [255, 285, 286, 315, 317, 332, 335, 405, 411], "proj_siz": 256, "c0": [256, 257], "c1": [256, 257], "call_lstm": [256, 257], "c_out": [256, 257], "i_t": 256, "ii": [256, 257], "hi": [256, 257], "f_t": 256, "hf": [256, 257], "g_t": 256, "ig": [256, 257], "hg": [256, 257], "o_t": 256, "ho": [256, 257], "c_t": 256, "c_": 256, "forget": 256, "1402": 256, "1128": 256, "c_0": [256, 257], "proj": 256, "c_n": 256, "w_ii": 256, "w_if": 256, "w_ig": 256, "w_io": 256, "w_hi": 256, "w_hf": 256, "w_hg": 256, "w_ho": 256, "b_ii": 256, "b_if": 256, "b_ig": 256, "b_io": 256, "b_hi": 256, "b_hf": 256, "b_hg": 256, "b_ho": 256, "weight_hr_l": 256, "_revers": 256, "analog": [256, 415], "cn": 256, "lstm_cell": 257, "h_1": 257, "c_1": 257, "time_step": [257, 300], "cx": 257, "correspont": 258, "recurrent_state_h": [258, 412], "recurrent_state_c": [258, 412], "triplet": [258, 302, 303], "lstm_modul": 258, "rs_h": 258, "rs_c": 258, "hidden0": [258, 413], "hidden1": [258, 413], "single_bias_last_lay": 259, "layer_class": 259, "layer_kwarg": 259, "perceptron": [259, 415], "aslo": 259, "noisylinear": [259, 267, 402, 410], "noisylazylinear": [259, 402], "mpcplanner": 260, "tensordict_out": [260, 429], "mppi": 261, "covari": 261, "william": [261, 337], "aldrich": 261, "theodor": 261, "01149": 261, "hansen": 261, "wang": 261, "su": 261, "04955": 261, "valueoper": [261, 293, 294, 295, 315, 316, 317, 318, 319, 324, 331, 332, 335, 336, 337, 338, 340, 341, 396, 404, 409, 411, 416], "tdlambdaestim": [261, 402, 409], "value_net": [261, 320, 322, 337, 350, 351, 352, 353, 411, 413, 415, 416, 419], "adv": 261, "lmbda": [261, 343, 350, 353, 355, 361, 362, 363, 366, 367, 405, 409, 411, 423], "value_network": [261, 319, 320, 322, 323, 325, 331, 338, 350, 351, 352, 353, 405, 409, 411, 413, 416, 419, 422], "temperatur": [261, 316, 323, 331], "neg_inf": [262, 263], "inf": [262, 263], "api_doc": [262, 263], "tf_agent": [262, 263], "event": [262, 263, 272, 359, 360, 361, 362, 364, 365, 366, 367, 426], "unnorm": [262, 263, 272], "sparse_mask": [262, 263], "dens": [262, 263], "0831": [262, 263], "1203": [262, 263], "0928": [262, 263], "1972": [262, 263], "grad_method": [263, 272], "reparamgradientstrategi": [263, 272], "passthrough": [263, 272], "relaxedonehot": [263, 272], "sample_non_valid": 263, "zeros_lik": [263, 424], "share_param": [264, 265, 266, 422, 423], "use_td_param": [264, 265, 266], "get_stateful_net": [264, 265, 266, 333, 404, 405], "from_stateful_net": [264, 265, 266, 333, 405], "homogen": [264, 265, 422, 423], "tensordictparam": [264, 265], "_empty_net": [264, 265], "roughli": [264, 265, 428], "agent_network": [264, 265], "modulelist": [264, 265, 428], "2592": [264, 410], "decentr": 264, "n_agent_input": [265, 266, 422, 423], "n_agent_output": [265, 266, 422, 423], "toech": 265, "centalis": 265, "shown": [265, 404, 413, 421, 422, 423, 426], "agent_dim": 266, "vmap_random": [266, 333, 405], "stateful_net": [266, 333], "Such": [266, 333], "multiagentmlp": [266, 422, 423], "snet": 266, "hasattr": [266, 409], "kaiming_normal_": 266, "std_init": [267, 268], "device_typ": [267, 268], "initialize_paramet": 267, "isol": [267, 333, 413], "1706": [268, 287], "10295v3": 268, "induc": 268, "aid": 268, "scale_map": 269, "biased_softplus_1": 269, "scale_lb": [269, 280, 281], "module_norm": 269, "1803": [270, 271, 278], "10122": [270, 271], "rnn_hidden": 270, "latent": 271, "ordin": [273, 402], "parametris": [273, 275], "inres": 274, "mu": [274, 276, 277, 411], "impos": [275, 404], "proxim": [275, 335, 411, 423], "atom": 275, "tang": 275, "agraw": 275, "2020": 275, "1901": 275, "10500": 275, "discretis": 275, "num_atom": 275, "num_sampl": 275, "middl": 275, "adam": [275, 285, 409, 410, 411, 412, 413, 416, 419, 422, 423, 424], "lr": [275, 409, 410, 411, 412, 419, 422, 423, 424], "optimis": [275, 422, 423], "minimis": 275, "penalis": 275, "0308": 275, "1586": 275, "4727": 275, "2260": 275, "1120": [275, 410], "histogram": 275, "return_typ": 275, "hist": [275, 426], "158": [275, 424], "478": [275, 424], "228": [275, 424], "112": [275, 424], "bin_edg": 275, "8000": [275, 409, 411], "6000": [275, 411], "4000": [275, 409, 410, 411], "ornstein": [276, 277, 409, 413], "uhlenbeck": [276, 277, 409, 413], "ou": [276, 277, 409], "correl": [276, 277], "noise_t": [276, 277], "noise_": [276, 277], "theta": [276, 277, 411, 424], "sigma_t": [276, 277], "sigma_": [276, 277], "anneal": [276, 277, 410, 415, 422], "ou_prev_nois": [276, 277], "ou_step": [276, 277], "x0": [276, 277], "sigma_min": [276, 277], "n_steps_ann": [276, 277], "is_init_kei": [276, 277], "_ou_prev_nois": [276, 277], "_ou_step": [276, 277], "state_shap": [278, 348], "mixing_embed_dim": [278, 348], "qmix": [278, 422, 423], "mixer": [278, 287, 348], "monoton": 278, "hyper": 278, "11485": 278, "qmixerloss": [278, 287], "qmix_vdn": [278, 287], "vdn": [278, 287], "hidden_dim": [280, 281], "posterior": [280, 327], "rssm": [280, 281, 327], "1811": [280, 281], "04551": [280, 281], "obs_embed": 280, "rnn_hidden_dim": 281, "dream": 281, "safe_tanh": 285, "tanhtransform": 285, "overflow": [285, 292, 297, 298, 301, 302, 303, 304, 305], "get_mod": 285, "decomposit": 287, "05296": 287, "hide": [288, 411, 422, 423], "satisfi": [288, 404], "vmap_dim": 288, "lam": 288, "sample_in": 288, "sample_in_td": 288, "vm": 288, "translat": [292, 301], "character": [292, 297, 301, 302, 304, 426], "td_modul": [292, 293, 294, 295, 301, 304, 305, 307, 309, 415, 428], "3635": 292, "0340": 292, "1476": 292, "3911": [292, 424], "1664": [292, 410, 424], "5455": 292, "2247": [292, 412], "4583": 292, "2916": 292, "2160": 292, "5337": 292, "5193": 292, "addmmbackward0": 292, "actorvalueoper": [293, 317, 332, 335, 404, 415], "get_policy_oper": [293, 294, 295, 317, 332, 335, 404], "standalon": [293, 294, 295, 413, 415], "tdmodul": [293, 294, 295, 396], "get_critic_oper": 293, "common_oper": [293, 295], "policy_oper": [293, 294, 295], "value_oper": [293, 294, 295], "module_hidden": [293, 295], "td_module_hidden": [293, 295], "module_act": [293, 295], "td_module_act": [293, 294, 295], "module_valu": [293, 294, 295], "td_module_valu": [293, 294, 295], "state_action_valu": [293, 309, 316, 318, 323, 331, 338, 349, 396, 404, 409, 422, 428], "td_clone": [293, 294, 295], "tensordictmodulewrapp": [293, 391, 392, 396], "get_policy_head": [293, 294, 295], "safesequenti": [293, 294, 295, 348], "head": [293, 295, 312, 317, 332, 335], "get_value_head": [293, 294, 295], "get_value_oper": [293, 294, 295, 317, 332, 335], "action_modul": 294, "state_valu": [294, 295, 309, 317, 323, 331, 332, 335, 336, 338, 350, 351, 352, 353, 355, 357, 359, 361, 363, 364, 366, 404, 409, 411, 423], "actorcriticoper": [295, 404, 415], "actorcriticwrapp": [295, 404, 409], "inferec": 296, "set_tensor_kei": 296, "dt_inference_wrapp": 296, "baz": 296, "inference_context": 296, "obs_dim": 296, "tanhdelta": [296, 402, 409, 422], "dtactor": 296, "actor_modul": [296, 428], "dist_class": 296, "dist_kwarg": 296, "distribution_kwarg": [296, 301, 305, 411, 422, 423], "inference_actor": 296, "sequence_length": 296, "mask_context": 296, "out_act": 296, "qvaluemodul": [297, 302, 348, 412, 413, 415, 419], "distributionaldqnnet": 297, "make_log_softmax": 297, "my_action_valu": [298, 303], "chanc": 298, "thid": 298, "lmheadmodel": 299, "actor_head": [299, 317, 332, 335], "base_model": 299, "lm_head": 299, "macro": 300, "lookahead": 300, "n_action": [300, 316, 318, 320, 322, 334, 338], "reshape_cat": 300, "actor_bas": 300, "obs_cat": 300, "obs_cat_reshap": 300, "action_orig": 300, "default_interaction_typ": [301, 305, 415], "interaction_typ": [301, 305], "datacollectorbas": [301, 388, 391, 392, 396, 402], "set_interaction_typ": [301, 305], "compositedistribut": [301, 315, 335, 415], "distribution_map": 301, "name_map": 301, "cache_dist": [301, 305], "n_empirical_estim": [301, 305], "compound": [301, 415], "chose": 303, "functionalmodul": 304, "functionalmodulewithbuff": 304, "td_fmodul": 304, "td_function": 304, "td_state": 304, "params_repeat": 304, "td_vmap": [304, 307], "random_sampl": [304, 305], "suppli": 305, "fist": 305, "log_prob_kei": [305, 423], "probabilistictensordictsequenti": [306, 315, 317, 332, 335, 337, 391, 392, 428], "partial_toler": [306, 307, 421], "who": [306, 307], "AND": [306, 307, 318], "tensordictsequenci": 307, "tensordictsequ": 307, "safeprobabilisticmodul": [307, 404], "spec1": 307, "net1": 307, "module1": 307, "td_module1": 307, "spec2": 307, "module2": 307, "td_module2": 307, "clamp": [308, 327, 386, 422, 424], "boundari": [308, 411, 413, 422, 423], "resolut": 308, "9944": 308, "9991": 308, "3020": 308, "2299": [308, 424], "5418": 308, "2989": [308, 413], "6849": 308, "3169": 308, "2690": 308, "9649": [308, 424], "5686": 308, "8602": 308, "0315": 308, "8455": [308, 424], "6027": 308, "4746": 308, "7843": 308, "7782": 308, "2111": 308, "5115": 308, "4687": 308, "5760": 308, "custommodul": 309, "imaginari": 310, "imagin": 310, "transition_model": 310, "get_reward_oper": 310, "get_transition_model_oper": 310, "min_val": [311, 314], "_bia": 311, "surject": 314, "expln": 314, "biased_softplu": [314, 402], "beggin": 314, "biased_softplus_": 314, "syntax": [314, 409], "met": [314, 422, 424], "1602": 315, "01783v2": 315, "actor_network": [315, 316, 317, 318, 319, 321, 323, 324, 331, 332, 334, 335, 336, 337, 338, 340, 341, 405, 409, 411, 416, 422, 423], "critic_network": [315, 317, 332, 335, 337, 411, 423], "entropy_bonu": [315, 317, 332, 335, 411], "favour": [315, 317, 332, 335], "samples_mc_entropi": [315, 317, 332, 334, 335], "entropy_coef": [315, 317, 332, 335, 411, 423], "critic_coef": [315, 317, 332, 335, 411], "loss_critic_typ": [315, 317, 332, 335, 337, 411], "l1": [315, 317, 319, 320, 324, 332, 335, 336, 337, 340, 341, 344, 348, 404, 409], "l2": [315, 317, 319, 320, 321, 322, 324, 327, 328, 332, 335, 336, 337, 340, 341, 344, 348, 409, 422], "smooth_l1": [315, 316, 317, 318, 319, 320, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 344, 348, 411], "separate_loss": [315, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341], "propag": [315, 317, 318, 319, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 411, 422, 423], "advantage_kei": [315, 317, 332, 335, 337, 350, 351, 352, 353], "value_target_kei": [315, 317, 332, 335, 337, 350, 351, 352, 353], "value_target": [315, 317, 332, 335, 337, 350, 351, 352, 353, 411, 423], "ddp": [315, 317, 332, 335, 337], "fsdp": [315, 317, 332, 335, 337], "divid": [315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 332, 334, 335, 336, 337, 338, 340, 341, 389, 409, 422, 423, 424], "clip_valu": [315, 317, 332, 335, 337], "loss_crit": [315, 335, 411, 423], "loss_entropi": [315, 335, 411, 423], "loss_object": [315, 335, 411, 423], "recur": [315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353, 354, 415], "next_reward": [315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353], "next_don": [315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353], "next_termin": [315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 350, 351, 352, 353], "loss_obj": 315, "next_observ": [315, 316, 318, 319, 320, 322, 323, 324, 331, 335, 336, 337, 338, 340, 341, 421], "sacloss": [315, 330, 339, 402], "fraction": 315, "make_value_estim": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 348, 405, 409, 410, 422, 423, 428], "value_typ": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 343, 348, 409], "hyperparam": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 409], "enum": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 343, 348, 409], "default_value_estim": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 409, 428], "default_value_kwarg": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 402, 409], "dqn_loss": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 342, 348], "td1": [315, 316, 318, 319, 320, 322, 324, 325, 326, 331, 333, 335, 336, 337, 338, 340, 341, 348, 409], "conserv": [316, 322], "qvalue_network": [316, 318, 323, 324, 331, 336, 338, 340, 341], "unti": [316, 318, 331, 336, 338, 340, 341], "loss_funct": [316, 318, 319, 320, 321, 322, 323, 324, 331, 336, 338, 340, 341, 344, 348, 409, 422], "alpha_init": [316, 318, 324, 334, 336, 338], "min_alpha": [316, 318, 324, 334, 336, 338], "max_alpha": [316, 318, 324, 334, 336, 338], "fixed_alpha": [316, 318, 324, 334, 336, 338], "target_entropi": [316, 318, 324, 334, 336, 338], "prod": [316, 318, 334, 338], "delay_actor": [316, 319, 338, 340, 341], "delay_qvalu": [316, 324, 336, 338, 340, 341], "min_q_weight": 316, "max_q_backup": 316, "backup": 316, "deterministic_backup": 316, "num_random": 316, "with_lagrang": 316, "lagrang": 316, "lagrange_thresh": 316, "valueclass": [316, 318, 319, 324, 336, 338, 340, 341], "qvalu": [316, 318, 323, 324, 331, 336, 338, 340, 341], "loss_actor": [316, 318, 319, 323, 324, 331, 336, 337, 338, 340, 341, 382, 409, 416, 422, 428], "loss_actor_bc": 316, "loss_alpha": [316, 318, 324, 336, 338], "loss_cql": [316, 322], "loss_qvalu": [316, 318, 322, 323, 324, 331, 336, 338, 340, 341], "loss_alpha_prim": 316, "clip_epsilon": [317, 411, 423], "normalize_advantag": [317, 332, 335, 423], "value_kei": [317, 332, 335, 350, 351, 352, 353, 409], "somemodul": [317, 332, 335], "someactor": [317, 332, 335], "value_head": [317, 332, 335], "somevalu": [317, 332, 335], "loss_modul": [317, 330, 332, 333, 335, 339, 386, 395, 396, 405, 406, 409, 410, 411, 422, 423, 426], "IN": 318, "FOR": 318, "simplic": [318, 410, 411, 417, 425, 426, 428], "openreview": [318, 336], "pczqttstix": 318, "qvalue_loss": [318, 340], "actor_loss": [318, 340], "alpha_loss": 318, "num_qvalue_net": [318, 323, 324, 331, 336, 338, 340, 341], "maybe_init_target_entropi": 318, "fault_toler": 318, "target_entropy_buff": 318, "delay_valu": [319, 320, 322, 325, 337, 338, 348, 410, 412, 413, 419, 422], "loss_valu": [319, 323, 331, 337, 338, 409, 411, 416, 422, 423, 428], "pred_valu": [319, 322, 340, 341, 409, 416, 428], "pred_value_max": [319, 409, 416, 428], "target_valu": [319, 322, 336, 340, 341, 349, 405, 409, 416, 428], "target_value_max": [319, 409, 416, 428], "qvalueactor": [320, 322, 348, 410, 412], "double_dqn": 320, "06461": [320, 330], "mult_one_hot": [320, 323, 324, 348], "loss_val": [320, 322, 405, 409, 411, 412, 413, 416, 417, 419, 422, 423, 426], "01345": 321, "distanc": [322, 332, 344, 349, 350, 423], "dcql_loss": 322, "2110": [323, 331], "06169": [323, 331], "expectil": [323, 331], "tau": [323, 331, 339, 409, 410, 422], "antmaz": [323, 331], "sticht": [323, 331], "onehotcategor": [323, 324, 402], "target_entropy_weight": 324, "skip_done_st": [324, 338], "disctount": 325, "distributionalqvalueactor": [325, 404], "input_tensordict": [325, 409], "actor_model": 326, "value_model": [326, 328], "imagination_horizon": 326, "unrol": [326, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367], "discount_loss": [326, 328], "lambda_kl": 327, "lambda_reco": 327, "lambda_reward": 327, "reco_loss": 327, "reward_loss": 327, "free_nat": 327, "nat": 327, "delayed_clamp": 327, "global_averag": 327, "value_loss": 328, "fake_data": 328, "1606": 329, "03476": 329, "discriminator_network": 329, "use_grad_penalti": 329, "gp_lambda": 329, "discrimin": 329, "ddpgloss": [330, 339, 396, 402, 409, 416, 422, 428], "td3loss": [330, 339, 402], "value_network_update_interv": 330, "qvalueclass": 331, "loss_value_diff": 331, "diff": 331, "old_polici": 332, "new_polici": 332, "apart": [332, 423], "dtarg": 332, "samples_mc_kl": 332, "analyt": 332, "decrement": 332, "loss_": [333, 382, 405, 409, 416], "equip": [333, 412, 413, 415], "gh": 333, "_acceptedkei": 333, "_forward_value_estimator_kei": 333, "alter": [333, 404], "value_estim": [333, 350, 351, 352, 353, 354, 405, 409, 423], "myloss": 333, "action2": 333, "augment": [333, 417, 419, 426], "deterministic_sampling_mod": 333, "convert_to_funct": [333, 409], "expand_dim": 333, "create_target_param": [333, 409], "compare_against": [333, 409], "_param": 333, "resampl": 333, "_target_param": 333, "network_nam": 333, "blend": 333, "add_random_modul": [333, 405], "flavor": [335, 409, 422, 423, 428], "clipppoloss": [335, 402, 411, 423], "klpenppoloss": [335, 402], "06347": 335, "gae": [335, 402, 405, 409, 411, 423], "ppo_loss": 335, "tdlambda": [335, 343, 405, 409], "base_lay": 335, "randn_lik": 335, "samplelogprob": 335, "ay8zfzm0tdd": 336, "sub_sample_len": 336, "subsampl": [336, 378, 406], "action_log_prob_actor": 336, "state_action_value_actor": [336, 340, 341], "connectionist": 337, "1992": 337, "doi": 337, "1007": 337, "bf00992696": 337, "actor_net": [337, 409, 411], "1801": 338, "01290": 338, "applic": [338, 348, 414, 415, 424], "1812": 338, "05905": 338, "redqloss": [339, 402], "math": 339, "theta_t": [339, 424], "theta_": [339, 424], "polyak": 339, "minimalist": 340, "06860": 340, "policy_nois": [340, 341], "noise_clip": [340, 341], "td3_bc": 340, "bc_loss": 340, "lmbd": 340, "next_state_valu": [340, 341, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 402], "td0": [342, 409, 422], "strict_shap": 344, "view_a": 344, "qmixer": [348, 402], "local_valu": 348, "visibl": [348, 423], "dafault": 348, "acceptedkei": 348, "global_valu": 348, "penultim": 348, "local_value_network": 348, "mixer_network": 348, "value_modul": [348, 411, 428], "qnet": [348, 409], "next_val_kei": 349, "pred_next_v": 349, "usus": 349, "mse": 349, "q_valu": 349, "n_steps_to_next": 349, "value_next_st": 349, "1506": [350, 355, 363], "02438": [350, 355, 363], "exponenti": [350, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 384], "average_ga": [350, 411], "skip_exist": [350, 351, 352, 353], "get_default_devic": [350, 351, 352, 353, 354], "time_dim": [350, 352, 353, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367], "gradient_mod": 350, "value_error": [350, 351, 352, 353, 354], "target_param": [350, 351, 352, 353, 354, 409, 423], "98": [350, 351, 352, 353, 409, 410, 424, 425], "94": [350, 353, 410, 424, 425], "unpack": [350, 351, 352, 353], "tensor_kei": [350, 351, 352, 353, 354], "next_valu": [350, 351, 352, 353, 354], "aka": [351, 410, 422], "average_reward": [351, 352, 353], "tdestim": [351, 352, 354], "infti": 352, "valuefunctionbas": 354, "old_stat": [355, 357, 359, 361, 363, 364, 366], "new_stat": [355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "rolling_gamma": [359, 360, 361, 362, 364, 365, 366, 367], "g1": [359, 360, 361, 362, 364, 365, 366, 367], "g2": [359, 360, 361, 362, 364, 365, 366, 367], "g3": [359, 360, 361, 362, 364, 365, 366, 367], "g4": [359, 360, 361, 362, 364, 365, 366, 367], "v3": [359, 360, 361, 362, 364, 365, 366, 367], "preproc": [368, 413, 422], "as_non_tensor": [368, 422], "render_method": 368, "pass_tensordict": 368, "syntat": 368, "sugar": 368, "out_file_bas": 369, "skip_reset": 369, "center_crop": 370, "make_grid": 370, "csv": [370, 372, 374, 410, 418, 419], "wandb": [370, 374, 377, 418, 428], "tensorboard": [370, 374, 376, 418, 428], "log_dir": [370, 371, 372, 374, 376, 377, 410, 419], "cheetah_video": 370, "run_video": 370, "openxexperiencereplai": 370, "run_video_0": 370, "templat": 371, "pt": [372, 406, 425], "video_fp": 372, "minim": [372, 426], "dependeci": 372, "cur_dir": 372, "csv_log": 372, "add_video": 372, "video_": 372, "experiment_nam": [373, 374], "uuid": [373, 410, 429], "logger_typ": 374, "logger_nam": 374, "mlflow": [374, 375], "wandb_kwarg": 374, "mlflow_kwarg": 374, "tracking_uri": 375, "uri": 375, "datastor": 375, "tb_log": 376, "tensoarboard": 376, "td_log": 376, "save_dir": 377, "resum": 377, "uncategor": 377, "sub_traj_len": 378, "min_sub_traj_len": 378, "register_op": [378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 406, 410], "process_optim_batch": [378, 383, 384, 406], "td_out": [378, 385], "_process_optim_batch_hook": [378, 406], "batch_subsampl": 378, "clear_cuda": 379, "pre_optim_step": [379, 406], "log_pbar": [380, 381, 384, 406, 410], "progress": [380, 381, 386, 406, 410, 412, 429], "count_fram": 380, "pre_steps_log": [380, 406], "count_frames_log": 380, "record_interv": [381, 409, 410], "record_fram": [381, 389, 409, 410], "policy_explor": [381, 396, 409, 410, 413, 415, 419], "log_kei": [381, 410], "underestim": 381, "r_evalu": [381, 409], "loss_compon": 382, "appl": 382, "optimizer_hook": 382, "flatten_tensordict": [383, 410], "max_dim": 383, "rb_trainer": 383, "batch_process": [383, 384, 385, 406], "post_loss": [383, 406], "999": [384, 410], "jitter": 384, "finfo": 384, "default_dtyp": 384, "reward_norm": 384, "update_reward_stat": 384, "normalize_reward": 384, "make_train": [385, 402], "_process_batch_hook": [385, 406], "select_kei": [385, 406], "versatil": [386, 414], "optim_steps_per_batch": [386, 406, 410], "clip_grad_norm": 386, "clip_norm": 386, "progress_bar": 386, "save_trainer_interv": 386, "log_interv": [386, 410], "save_trainer_fil": [386, 406], "load_from_fil": [386, 406], "update_weights_interv": [388, 410], "update_weight": 388, "post_step": [388, 406, 410], "cfg": [389, 390, 391, 392, 393, 394, 395, 396, 397, 400], "dictconfig": [389, 390, 391, 392, 394, 395, 396, 397, 400], "unknowingli": 389, "annealing_fram": [389, 409], "init_env_step": [389, 390, 409], "proof_environ": [390, 409], "sta": 390, "ot": 390, "actor_model_explor": [391, 392, 409], "make_env_kwarg": [391, 392], "targetnetupdat": [393, 395, 396], "replayargsconfig": 394, "target_net_updat": [396, 409, 410], "constitu": 396, "egreedywrapp": 396, "env_proof": 396, "obs_spec": 396, "net_valu": 396, "dir": [396, 406, 410], "gettempdir": 396, "argpars": [397, 400], "namespac": [397, 400], "parser": [397, 400], "transformed_env_constructor": [397, 402], "num_env_per_collector": [398, 399], "video_tag": 400, "norm_obs_onli": 400, "use_env_cr": 400, "custom_env_mak": 400, "custom_env": 400, "return_transformed_env": 400, "action_dim_gsd": 400, "state_dim_gsd": 400, "obs_norm_state_dict": 400, "wheter": 400, "maker": [400, 410], "distributedsyncdatacollector": 402, "submitit_delayed_launch": 402, "raycollector": 402, "rational": 402, "footnot": 402, "binarydiscretetensorspec": 402, "boundedtensorspec": 402, "discretetensorspec": 402, "lazystackedcompositespec": 402, "lazystackedtensorspec": 402, "multidiscretetensorspec": 402, "multionehotdiscretetensorspec": 402, "onehotdiscretetensorspec": 402, "unboundedcontinuoustensorspec": 402, "unboundeddiscretetensorspec": 402, "mctsforest": 402, "prompttensordicttoken": 402, "rolloutfrommodel": 402, "tokenizeddatasetload": 402, "create_infinite_iter": 402, "constantklcontrol": 402, "adaptiveklcontrol": 402, "consolidate_spec": 402, "check_no_exclusive_kei": 402, "contains_lazy_spec": 402, "nested2t": 402, "h5combin": 402, "h5split": 402, "tictactoeenv": 402, "check_marl_group": 402, "get_available_librari": 402, "terminated_or_trunc": 402, "dreamerdecod": 402, "braxwrapp": 402, "dmcontrolwrapp": 402, "jumanjienv": 402, "jumanjiwrapp": 402, "meltingpotenv": 402, "meltingpotwrapp": 402, "mogymenv": 402, "mogymwrapp": 402, "multithreadedenvwrapp": 402, "openmlenv": 402, "openspielwrapp": 402, "openspielenv": 402, "pettingzooenv": [402, 422], "robohiveenv": 402, "smacv2env": 402, "smacv2wrapp": 402, "unitymlagentsenv": 402, "unitymlagentswrapp": 402, "vmaswrapp": 402, "qvaluehook": 402, "distributionalqvaluehook": 402, "reset_nois": 402, "cemplann": 402, "mpcplannerbas": 402, "mppiplann": 402, "independentnorm": 402, "normalparamwrapp": 402, "truncatednorm": 402, "maskedonehotcategor": 402, "onehotordin": 402, "inv_softplu": 402, "vmapmodul": 402, "distributionaldqnloss": [402, 410], "discretesacloss": 402, "crossqloss": 402, "iqlloss": 402, "discreteiqlloss": 402, "cqlloss": 402, "discretecqlloss": 402, "gailloss": 402, "dtloss": 402, "onlinedtloss": 402, "td3bcloss": 402, "ppoloss": 402, "a2closs": 402, "reinforceloss": 402, "dreameractorloss": 402, "dreamermodelloss": 402, "dreamervalueloss": 402, "td0estim": [402, 409], "td1estim": [402, 409], "td0_return_estim": 402, "td0_advantage_estim": 402, "td1_return_estim": 402, "vec_td1_return_estim": 402, "td1_advantage_estim": 402, "vec_td1_advantage_estim": 402, "td_lambda_return_estim": 402, "vec_td_lambda_return_estim": 402, "td_lambda_advantage_estim": 402, "vec_td_lambda_advantage_estim": 402, "generalized_advantage_estim": 402, "vec_generalized_advantage_estim": 402, "reward2go": 402, "hardupd": [402, 409, 416], "softupd": [402, 409, 410, 412, 413, 416, 419, 422], "distance_loss": [402, 409], "group_optim": 402, "hold_out_net": 402, "hold_out_param": [402, 409], "batchsubsampl": [402, 406], "clearcudacach": 402, "countframeslog": 402, "optimizerhook": [402, 410], "logvalidationreward": [402, 406, 409, 410], "replaybuffertrain": [402, 406, 410], "rewardnorm": 402, "selectkei": [402, 406], "trainerhookbas": [402, 406, 410], "updateweight": [402, 406, 410], "make_collector_offpolici": 402, "make_collector_onpolici": 402, "make_dqn_loss": 402, "make_replay_buff": [402, 409], "make_target_updat": 402, "parallel_env_constructor": [402, 409], "sync_async_collector": 402, "sync_sync_collector": 402, "correct_for_frame_skip": 402, "get_stats_random_rollout": 402, "mlflowlogg": 402, "get_logg": 402, "generate_exp_nam": 402, "journei": 403, "textbook": 403, "highlight": [403, 422], "ever": [403, 423], "bump": 403, "think": [403, 411, 422, 423, 429], "benefit": [403, 414, 422, 423, 426], "pr": 403, "ground": [404, 409, 424], "recycl": [404, 426], "noisier": 404, "Their": [404, 422, 423], "sd": [404, 429], "prob_modul": 404, "uncertainti": 404, "soften": 404, "backbon": [404, 412, 415, 421, 428], "make_actor": 404, "make_valu": 404, "shared_param": 404, "make_common": 404, "reusabl": [405, 409, 426], "swappabl": [405, 409], "characterist": [405, 409, 424], "trainabl": [405, 409, 416, 425], "smth": [405, 409], "metric": [405, 409], "plenti": [405, 413], "amort": [405, 410, 411], "told": [405, 411], "pseudo": [405, 417, 424], "buri": 405, "str_valu": 405, "nutshel": [405, 409], "barto": [405, 422, 423], "chapter": [405, 418], "significantli": [405, 409, 410, 416, 423], "value_net_loss": 405, "pow": [405, 409], "room": 405, "signifi": [405, 422, 423], "underperform": 405, "thin": 405, "intric": [405, 415], "believ": 406, "scheme": [406, 429], "substenti": 406, "_pre_steps_log_hook": 406, "_pre_optim_hook": 406, "sub_batch": 406, "_post_loss_hook": 406, "_post_optim_hook": 406, "post_optim": [406, 410], "_post_optim_log": 406, "post_optim_log": 406, "_post_steps_hook": 406, "_post_steps_log_hook": 406, "post_steps_log": 406, "logscal": 406, "reserv": 406, "logginghook": 406, "logging_hook": 406, "save_dict": 406, "some_valu": 406, "torchsnapshot": 406, "ckpt_backend": 406, "filepath": 406, "save_train": 406, "796": [408, 427], "galleri": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "mem": [408, 427], "mb": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429], "torchrl_env": [408, 427, 429], "290": [408, 424, 427, 429], "343": [408, 424, 427, 429], "dqn_with_rnn": [408, 412, 427], "071": [408, 412, 427], "2246": [408, 427], "rb_tutori": [408, 426, 427], "55": [408, 410, 424, 426, 427], "362": [408, 424, 426, 427], "459": [408, 424, 427], "48": [408, 409, 410, 412, 424, 425, 427], "083": [408, 424, 427], "coding_dqn": [408, 410, 427], "734": [408, 410, 427], "1104": [408, 427], "torchrl_demo": [408, 427, 428], "321": [408, 424, 427, 428], "333": [408, 409, 424, 427], "coding_ddpg": [408, 409, 427], "52": [408, 409, 410, 424, 427], "718": [408, 409, 427], "multiagent_competitive_ddpg": [408, 422, 427], "757": [408, 422, 424, 427], "325": [408, 409, 411, 417, 424, 427], "coding_ppo": [408, 411, 427], "622": [408, 411, 424, 427], "324": [408, 421, 424, 427], "pretrained_model": [408, 425, 427], "802": [408, 425, 427], "4112": [408, 427], "multi_task": [408, 421, 427], "934": [408, 421, 427], "323": [408, 424, 427], "156": [408, 415, 424, 427], "018": [408, 414, 427], "506": [408, 413, 424, 427], "4657": [408, 413, 427], "multiagent_ppo": [408, 423, 427], "394": [408, 423, 424, 427], "4641": [408, 424, 427], "697": [408, 416, 427], "816": [408, 419, 427], "327": [408, 419, 424, 427], "849": [408, 417, 427], "665": [408, 418, 424, 427], "352": [408, 410, 424, 427], "author": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 426, 429], "vincent": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 426, 429], "moen": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 424, 426, 429], "assembl": 409, "focus": [409, 416], "straightforward": [409, 410, 414, 415, 416, 417, 426], "maxim": [409, 416, 424], "transpar": [409, 412], "illustr": [409, 410, 415, 426], "bash": 409, "is_fork": [409, 410, 411, 412, 422, 423, 425], "get_start_method": [409, 410, 411, 412, 422, 423, 425], "collector_devic": 409, "loss_dict": 409, "oblivi": [409, 411, 426], "elementari": 409, "didact": [409, 413], "dilut": 409, "pessimist": [409, 410, 411], "target_actor_network_param": 409, "actor_in_kei": 409, "actor_crit": 409, "noth": [409, 411], "compromis": 409, "hp": 409, "_value_estim": 409, "elif": [409, 410], "notimplementederror": 409, "unknown": 409, "_loss_actor": 409, "td_copi": 409, "actor_network_param": [409, 422], "value_network_param": [409, 422], "_loss_valu": 409, "pred_val": 409, "target_value_network_param": 409, "glue": 409, "_forward": 409, "remaind": 409, "env_librari": 409, "env_task": 409, "env_arg": [409, 410], "friendli": 409, "torchr": 409, "rescal": 409, "presum": 409, "make_transformed_env": 409, "reward_sc": 409, "marker": 409, "env_per_collector": 409, "transform_state_dict": 409, "make_t_env": 409, "cheat": 409, "10m": 409, "cautiou": 409, "magnitud": [409, 422], "thousand": [409, 412], "get_env_stat": 409, "proof_env": 409, "5000": [409, 410, 411, 413, 419], "recal": [409, 411, 426], "ddpgmlpactor": 409, "ddpgmlpqnet": 409, "materi": 409, "ornsteinuhlenbeckprocessmodul": [409, 415], "make_ddpg_actor": 409, "q_net": 409, "tight": 409, "decoupl": [409, 416, 428], "10_000": [409, 411], "traj_len": [409, 412], "make_record": 409, "recorder_obj": 409, "pick": [409, 410, 415], "buffer_s": [409, 410], "random_crop_len": 409, "prb": 409, "buffer_scratch_dir": 409, "temporari": 409, "25": [409, 410, 412, 422, 424], "dataflow": 409, "ceil_div": 409, "utd": [409, 412], "update_to_data": 409, "realiz": 409, "_must_": 409, "001": [409, 424], "outdat": 409, "trick": [409, 410], "despit": 409, "optimizer_actor": 409, "weight_decai": [409, 410], "optimizer_valu": 409, "total_collection_step": 409, "pretti": [409, 414, 418, 426], "rewards_ev": 409, "collected_fram": 409, "r0": 409, "numel": [409, 411, 412, 413, 419, 422, 425, 426], "current_fram": [409, 422], "sampled_tensordict": 409, "gn1": 409, "clip_grad_norm_": [409, 411, 422, 423, 424], "gn2": 409, "gn": [409, 424], "td_record": 409, "rn": 409, "set_descript": [409, 411, 412, 422, 423, 424], "2f": 409, "800": [409, 410], "2675": 409, "01it": [409, 410], "1600": [409, 410], "783": [409, 413], "89it": [409, 410], "2400": [409, 410], "1136": 409, "06it": [409, 410, 412, 424], "3200": [409, 410], "1444": 409, "26it": [409, 410], "1693": 409, "37it": [409, 410], "4800": [409, 410, 424], "1897": 409, "43it": [409, 410, 424], "56": [409, 410, 424, 425], "5600": 409, "2074": 409, "58it": [409, 410], "63": [409, 410, 424], "458": [409, 424], "6400": [409, 428], "838": 409, "19it": [409, 410], "89": [409, 410, 424], "140": [409, 424], "07": [409, 410, 411, 424], "72": [409, 410, 424, 426], "7200": 409, "598": [409, 424], "34it": [409, 410], "57": [409, 410, 424, 425, 426], "152": [409, 424], "406": [409, 424], "58": [409, 410, 424], "09": [409, 410, 411, 424], "496": [409, 424], "41it": [409, 410, 424], "237": [409, 424], "61": [409, 410, 424, 425, 426], "8800": 409, "443": [409, 424], "64it": [409, 410, 424], "97": [409, 410, 424], "190": [409, 424], "241": [409, 424], "96": [409, 410, 422, 424, 425], "9600": 409, "350": [409, 424], "30it": [409, 410, 411], "10400it": 409, "72it": [409, 412, 424], "212": [409, 424], "mention": [409, 412, 426, 429], "matplotlib": [409, 411, 412, 413, 422, 423, 424, 426, 429], "pyplot": [409, 411, 412, 413, 422, 423, 424, 426, 429], "plt": [409, 411, 412, 413, 422, 423, 424, 426, 429], "zip": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "legend": [409, 422], "xlabel": [409, 412, 423, 424], "ylabel": [409, 423], "tight_layout": 409, "takeawai": [409, 410, 413], "distpatch": 409, "jupyt": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "ipynb": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429], "sphinx": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429], "road": 410, "aspect": [410, 416], "highest": [410, 415], "prerequisit": [410, 412], "lookup": 410, "cart": 410, "pole": 410, "un": 410, "actuat": 410, "frictionless": 410, "duelingcnndqnet": 410, "egreedymodul": [410, 412, 413, 415, 419], "logscalar": 410, "is_notebook": 410, "shell": 410, "get_ipython": 410, "__class__": 410, "zmqinteractiveshel": 410, "qtconsol": 410, "terminalinteractiveshel": 410, "ipython": [410, 423, 424], "nameerror": [410, 422], "umbrella": 410, "misplac": 410, "misus": 410, "orchestr": [410, 416, 418], "five": 410, "64x64": 410, "motion": [410, 424], "obs_norm_sd": 410, "mp_context": 410, "simpler": [410, 414], "get_norm_stat": 410, "test_env": 410, "mathbb": 410, "rightarrow": 410, "make_model": 410, "dummy_env": 410, "init_bia": 410, "exploration_modul": [410, 412, 413, 415, 419], "eps_greedy_v": 410, "eps_greedy_val_env": 410, "actor_explor": 410, "get_replay_buff": 410, "n_optim": [410, 416, 417], "parametriz": 410, "get_collector": 410, "cl": 410, "bunch": 410, "ubiquit": [410, 414], "get_loss_modul": 410, "target_updat": [410, 422], "995": [410, 424], "hopefulli": 410, "variat": 410, "2e": [410, 424], "wd": 410, "upd": 410, "harder": [410, 428], "5_000": 410, "500000": 410, "100000": 410, "005": [410, 422], "mandatori": [410, 411, 423, 424], "fairer": 410, "budget": 410, "dqn_exp_": 410, "uuid1": [410, 429], "9895": 410, "0737": 410, "registr": 410, "cumbersom": 410, "buffer_hook": 410, "weight_updat": 410, "aliv": 410, "total_reward": 410, "log_reward": 410, "12it": 410, "r_train": 410, "3869": 410, "3699": 410, "38it": [410, 424], "4173": 410, "93it": [410, 424], "3991": 410, "81it": [410, 424], "3566": 410, "77it": [410, 424], "3444": 410, "224": [410, 424], "49": [410, 422, 424], "39it": [410, 424], "85it": [410, 412, 424], "3688": [410, 424], "288": [410, 424], "49it": 410, "82it": [410, 424], "384": [410, 424], "59": [410, 422, 424], "63it": 410, "3718": 410, "416": [410, 424], "448": [410, 424], "54it": 410, "3657": [410, 424], "480": [410, 424, 425], "53": [410, 424, 425], "18it": [410, 412], "13it": 410, "3475": 410, "544": [410, 424], "50it": [410, 411], "576": [410, 424], "22it": 410, "3778": 410, "608": [410, 424], "57it": 410, "640": 410, "4295": [410, 424], "672": 410, "80it": [410, 424], "704": 410, "91": [410, 424], "3172": 410, "736": 410, "3293": 410, "768": [410, 413], "93": [410, 424, 425], "05it": [410, 424], "832": 410, "92": [410, 424, 425], "95it": 410, "864": 410, "896": 410, "16it": 410, "928": 410, "960": 410, "992": [410, 424], "90": [410, 411, 422, 424], "1056": 410, "09it": 410, "4082": [410, 424], "1088": 410, "27it": [410, 424], "3505": 410, "14it": 410, "1152": 410, "79it": [410, 424], "1184": 410, "1216": 410, "70it": [410, 411, 424], "1248": 410, "1280": 410, "04it": 410, "1344": 410, "59it": 410, "1376": 410, "23it": [410, 424], "1408": 410, "1440": 410, "99it": 410, "1472": 410, "36it": 410, "1504": 410, "35it": 410, "1536": 410, "96it": [410, 424], "1568": 410, "32it": 410, "69it": [410, 424], "1632": 410, "66it": [410, 424], "1696": 410, "1728": 410, "1760": 410, "1792": 410, "1824": 410, "97it": 410, "1856": 410, "25it": 410, "1888": 410, "47it": 410, "3808": 410, "1920": 410, "1952": 410, "78it": [410, 424], "1984": 410, "2016": 410, "74it": [410, 411, 424], "2080": 410, "2112": [410, 424], "2144": 410, "2176": 410, "84it": [410, 424], "2208": 410, "65it": 410, "2240": 410, "2272": 410, "10it": 410, "90it": 410, "47": [410, 412, 424], "2336": 410, "2368": 410, "20it": [410, 411], "2432": 410, "28it": 410, "2464": 410, "33it": 410, "2496": 410, "2528": [410, 424], "53it": 410, "4021": 410, "2560": 410, "24it": 410, "2624": 410, "2656": [410, 424], "54": [410, 424], "2688": 410, "2720": [410, 424], "52it": 410, "2752": 410, "2784": 410, "2816": 410, "45it": 410, "2848": 410, "98it": 410, "2880": 410, "29it": 410, "2912": 410, "92it": 410, "2944": [410, 424], "60": [410, 411, 422, 423, 424, 428], "2976": [410, 424], "3040": 410, "3072": 410, "62": [410, 424], "3104": 410, "3136": [410, 413], "3168": 410, "65": [410, 424, 425], "3232": [410, 424], "2500": 410, "3264": 410, "66": [410, 424, 425], "3296": 410, "3328": 410, "3360": 410, "87it": [410, 411, 424], "3392": 410, "3424": 410, "3456": [410, 424], "61it": [410, 424], "3488": 410, "60it": [410, 424], "3520": 410, "3552": 410, "3584": 410, "3616": 410, "3648": 410, "3680": 410, "85": [410, 424, 425], "3712": 410, "73it": [410, 424], "3744": 410, "48it": 410, "3776": 410, "88it": 410, "71it": [410, 411, 424], "3840": 410, "3872": 410, "3904": 410, "21it": 410, "3936": 410, "3968": 410, "40it": 410, "4032": 410, "4064": 410, "08it": 410, "4096": 410, "4128": [410, 424], "4160": 410, "4192": 410, "4224": 410, "4256": [410, 424], "4288": [410, 424], "68it": 410, "4320": 410, "4352": 410, "4384": 410, "4416": 410, "4448": 410, "4480": 410, "4512": 410, "4544": 410, "4576": 410, "4608": 410, "4640": 410, "4704": 410, "75it": [410, 424], "4736": 410, "4768": 410, "62it": 410, "4832": 410, "4864": 410, "4896": 410, "4928": 410, "4960": 410, "4992": 410, "5024it": 410, "print_csv_files_in_fold": 410, "folder_path": 410, "csv_file": 410, "output_str": 410, "dirpath": 410, "endswith": 410, "strip": 410, "tmp": [410, 426], "tmprcz48nt9": 410, "dqn_exp_932edd48": 410, "b189": 410, "11ef": [410, 429], "a177": [410, 429], "0242ac110002": [410, 429], "3475184738636017": 410, "39912933111190796": 410, "3869387209415436": 410, "41726210713386536": 410, "42945271730422974": 410, "39912936091423035": 410, "2747083902359009": 410, "218069389462471": 410, "2322148233652115": 410, "2904927730560303": 410, "40076321363449097": 410, "23288214206695557": 410, "32138824462890625": 410, "2524225413799286": 410, "38673803210258484": 410, "grad_norm_0": 410, "840660810470581": 410, "064739942550659": 410, "7321724891662598": 410, "6345951557159424": 410, "282639503479004": 410, "8450088500976562": 410, "255608558654785": 410, "4538235664367676": 410, "422636985778809": 410, "10000000894069672": 410, "250000476837158": 410, "qvaluenetwork": 410, "worst": 410, "accuraci": 410, "fanci": [410, 417], "1105": 410, "talk": 411, "repetit": [411, 414, 417], "six": 411, "sophist": [411, 423], "invent": 411, "overview": [411, 413, 416, 422, 423, 428], "theta_k": 411, "pi_": 411, "exceed": 411, "discourag": [411, 424], "indispens": 411, "analyz": 411, "lingua": 411, "franca": 411, "defaultdict": [411, 424], "3e": [411, 412, 422, 423], "max_grad_norm": [411, 422, 423], "sub_batch_s": 411, "num_epoch": [411, 423], "entropy_ep": [411, 423], "charact": [411, 413], "inverteddoublependulum": 411, "transmit": 411, "stai": 411, "confid": [411, 422, 423], "ran": 411, "f_": 411, "mu_": 411, "difficulti": [411, 429], "d_ob": 411, "d_action": 411, "policy_modul": [411, 422, 423], "briefli": [411, 422, 423], "refil": [411, 423], "easiest": [411, 416, 422, 423], "mathemat": [411, 422, 423], "tradeoff": [411, 423], "advantage_modul": 411, "lr_schedul": [411, 424], "cosineannealinglr": [411, 424], "eval_str": 411, "tensordict_data": [411, 423], "data_view": [411, 423], "subdata": [411, 422, 423], "cum_reward_str": 411, "4f": [411, 412, 424], "stepcount_str": 411, "param_group": [411, 422], "lr_str": 411, "eval_rollout": 411, "nice": [411, 414, 417], "414": [411, 424], "110": [411, 424], "6613": 411, "0822": 411, "0003": [411, 424], "1080": 411, "3000": 411, "415": [411, 424], "31it": 411, "1378": [411, 424], "419": [411, 424], "1827": 411, "0002": [411, 424], "420": [411, 424], "1940": 411, "421": [411, 424], "2143": 411, "7000": 411, "07it": 411, "2184": [411, 424], "2326": 411, "9000": 411, "412": [411, 424], "2418": 411, "417": [411, 424], "2415": 411, "cap": [411, 426], "figsiz": [411, 424], "subplot": [411, 422, 424, 429], "titl": [411, 412, 413, 423, 424], "84x84": [412, 413], "accessori": 412, "stamp": 412, "assist": 412, "n_cell": 412, "customiz": 412, "wouldn": 412, "qval": 412, "stoch_polici": 412, "opportun": [412, 422], "uniniti": 412, "again": [412, 413, 414, 415, 417, 423, 425, 426, 429], "redund": 412, "strongli": 412, "sake": [412, 425, 426], "20_000": [412, 424], "longest": 412, "npai": 412, "action_spread": 412, "135": [412, 424, 426], "0008": [412, 424], "0006": [412, 424], "150": [412, 424], "0005": 412, "rom": 413, "licens": 413, "strong": 413, "impress": 413, "edg": 413, "arduino": 413, "raspberri": 413, "pi": [413, 422, 423, 424], "alon": 413, "examplifi": 413, "ship": 413, "stick": 413, "nearest": 413, "value_mlp": [413, 419], "100_000": [413, 419], "init_rand_step": [413, 419], "total_count": [413, 419], "total_episod": [413, 419], "t0": [413, 419], "screen": [413, 422], "color": [413, 422], "unblock": 413, "policy_transform": 413, "fake_td": 413, "exported_polici": 413, "div": 413, "graph_modul": 413, "print_read": 413, "graphmodul": 413, "p_module_1_module_0_module_0_module_0_0_weight": 413, "f32": 413, "p_module_1_module_0_module_0_module_0_0_bia": 413, "p_module_1_module_0_module_0_module_0_2_weight": 413, "p_module_1_module_0_module_0_module_0_2_bia": 413, "p_module_1_module_0_module_0_module_0_4_weight": 413, "p_module_1_module_0_module_0_module_0_4_bia": 413, "p_module_1_module_0_module_0_module_1_0_weight": 413, "p_module_1_module_0_module_0_module_1_0_bia": 413, "p_module_1_module_0_module_0_module_1_2_weight": 413, "p_module_1_module_0_module_0_module_1_2_bia": 413, "b_module_1_module_1_eps_init": 413, "b_module_1_module_1_eps_end": 413, "b_module_1_module_1_ep": 413, "kwargs_pixel": 413, "u8": 413, "308": [413, 424], "_apply_transform": [413, 424, 429], "aten": 413, "upsample_nearest2d": 413, "vec": 413, "getitem": 413, "getitem_1": 413, "getitem_2": 413, "mul": 413, "mul_1": 413, "587": [413, 424], "mul_2": 413, "to_1": 413, "unsqueeze_1": 413, "554": [413, 424], "_conv_forward": 413, "133": [413, 424], "conv2d_1": 413, "relu_1": 413, "conv2d_2": 413, "relu_2": 413, "using_int": 413, "125": [413, 424], "relu_3": 413, "linear_1": 413, "616": [413, 424], "action_func_map": 413, "i64": 413, "to_2": 413, "621": [413, 424], "action_value_func": 413, "unsqueeze_2": 413, "group0": 413, "group0_agent0_ob": 413, "collid": [413, 423], "group0_agent0": 413, "agent0_ob": 413, "digress": 413, "exported_stochastic_polici": 413, "cond": 413, "action_tensordict": 413, "lt": 413, "b8": 413, "162": [413, 424], "expand_as_right": 413, "186": [413, 424], "to_3": 413, "dtype_layout": 413, "trace": 413, "batchsizetransform": 413, "recurrent_polici": 413, "fake_ob": 413, "fake_hidden0": 413, "fake_hidden1": 413, "fake_is_init": 413, "exported_recurrent_polici": 413, "p_module_1_lstm_weight_ih_l0": 413, "p_module_1_lstm_weight_hh_l0": 413, "p_module_1_lstm_bias_ih_l0": 413, "p_module_1_lstm_bias_hh_l0": 413, "p_module_1_lstm_weight_ih_l1": 413, "p_module_1_lstm_weight_hh_l1": 413, "p_module_1_lstm_bias_ih_l1": 413, "p_module_1_lstm_bias_hh_l1": 413, "p_module_2_module_0_weight": 413, "p_module_2_module_0_bia": 413, "p_module_2_module_2_weight": 413, "p_module_2_module_2_bia": 413, "p_module_2_module_4_weight": 413, "p_module_2_module_4_bia": 413, "kwargs_observ": 413, "kwargs_hidden0": 413, "kwargs_hidden1": 413, "kwargs_is_init": 413, "485": [413, 424], "tensordict_exec": 413, "_run_modul": 413, "unsqueeze_3": 413, "738": 413, "tensordict_shap": 413, "unsqueeze_4": 413, "unsqueeze_5": 413, "unsqueeze_6": 413, "unsqueeze_7": 413, "740": 413, "767": 413, "is_init_expand": 413, "unsqueeze_8": 413, "unsqueeze_9": 413, "unsqueeze_10": 413, "scalarself": 413, "769": 413, "where_1": 413, "770": 413, "_lstm": 413, "slice_1": 413, "9223372036854775807": 413, "slice_2": 413, "select_1": 413, "transpos": 413, "transpose_1": 413, "317": [413, 424], "unbind_1": 413, "getitem_3": 413, "unbind_2": 413, "getitem_4": 413, "getitem_5": 413, "getitem_6": 413, "getitem_7": 413, "getitem_8": 413, "sigmoid_1": 413, "sigmoid_2": 413, "tanh_1": 413, "linear_2": 413, "linear_3": 413, "add_2": 413, "chunk_1": 413, "getitem_9": 413, "getitem_10": 413, "getitem_11": 413, "getitem_12": 413, "sigmoid_3": 413, "sigmoid_4": 413, "tanh_2": 413, "sigmoid_5": 413, "mul_3": 413, "mul_4": 413, "add_3": 413, "tanh_3": 413, "mul_5": 413, "stack_1": 413, "transpose_2": 413, "transpose_3": 413, "stack_3": 413, "reshape_1": 413, "reshape_2": 413, "reshape_3": 413, "reshape_4": 413, "linear_4": 413, "392": [413, 424], "tanh_4": 413, "linear_5": 413, "tanh_5": 413, "linear_6": 413, "squeeze_1": 413, "squeeze_2": 413, "squeeze_3": 413, "squeeze_4": 413, "squeeze_5": 413, "squeeze_6": 413, "platform": [413, 428], "aoti": 413, "_inductor": 413, "aoti_compile_and_packag": 413, "aoti_load_packag": 413, "pt2": 413, "pkg_path": 413, "package_path": 413, "compiled_modul": 413, "traceback": [413, 423], "344": [413, 424], "typeerror": 413, "onnxruntim": 413, "showcas": [413, 424], "web": 413, "explain": [413, 425], "tensorrt": 413, "android": 413, "ale_pi": 413, "aleinterfac": 413, "loadrom": 413, "reset_gam": 413, "screen_ob": 413, "getscreenrgb": 413, "tick_param": 413, "bottom": 413, "labelleft": 413, "labelbottom": 413, "imshow": [413, 429], "dynamo_export": 413, "onnx_policy_export": 413, "onnx_file_path": 413, "ort_sess": 413, "inferencesess": 413, "cpuexecutionprovid": 413, "onnxruntime_input": 413, "get_input": 413, "onnx_polici": 413, "lightweight": [413, 418], "onnxruntime_output": 413, "deploy": 413, "topic": [414, 415, 416], "straight": 414, "backtrack": 414, "encapsul": [414, 415, 416], "reset_with_act": 414, "0323": 414, "tp": 414, "stepped_data": 414, "spatial": 414, "useless": 414, "policyless": 414, "appreci": 414, "monitor": 414, "examin": [414, 422], "tackl": 415, "delv": 415, "bypass": 415, "extractor": 415, "palliat": 415, "additivegaussianmodul": [415, 422], "exploration_polici": [415, 422], "greedili": 415, "2d": [415, 422, 423], "innov": [415, 416], "rollout_explor": 415, "sole": 416, "supervis": [416, 417, 426, 429], "n_collect": 416, "get_next_batch": 416, "ddpg_loss": 416, "total_loss": 416, "prove": 416, "reliev": 416, "concern": 416, "326": [416, 422, 424], "accustom": 417, "surprisingli": 417, "fundament": 417, "art": [417, 422, 423], "countless": 417, "yourself": [417, 422, 423], "portabl": 418, "everywher": 418, "log_scalar": 418, "elaps": 418, "my_scalar": 418, "saw": [418, 424, 426], "excess": 418, "353": [418, 424], "lesson": 419, "voluntarili": 419, "training_loop": 419, "video_record": 419, "arbitrarili": 419, "t1": 419, "conclud": [419, 425], "tutorials_python": 420, "tutorials_jupyt": 420, "env1_obs_kei": 421, "observation_stand": 421, "env2_obs_kei": 421, "observation_walk": 421, "tdreset1": 421, "tdreset2": 421, "lazy_stack": 421, "policy_common": 421, "policy_stand": 421, "policy_walk": 421, "But": 421, "env1_mak": 421, "env2_mak": 421, "_single_task": 421, "td_rollout": 421, "matteo": [422, 423], "bettini": [422, 423], "benchmarl": [422, 423], "simple_tag": 422, "maddpg": [422, 423], "multiagentparticleenviron": 422, "mpe": 422, "centralis": [422, 423], "tie": [422, 423], "iddpg": [422, 423], "typical": 422, "richard": 422, "andrew": 422, "mit": 422, "press": 422, "2018": 422, "mathbf": [422, 423], "decentralis": [422, 423], "literatur": [422, 423], "overcom": [422, 423], "stationari": [422, 423], "concurr": [422, 423], "establish": 422, "gui": [422, 423], "is_sphinx": 422, "__sphinx_build__": 422, "n_iter": [422, 423], "evad": 422, "iteration_when_stop_training_evad": 422, "memory_s": 422, "n_optimiser_step": 422, "train_batch_s": 422, "polyak_tau": 422, "chaser": 422, "red": 422, "circl": [422, 423], "touch": [422, 424], "penal": [422, 423], "acceler": [422, 423], "obstacl": 422, "drag": [422, 423], "elast": [422, 423], "collis": [422, 423], "imped": 422, "n_chaser": 422, "n_evad": 422, "n_obstacl": 422, "use_vma": 422, "simple_tag_v3": 422, "num_good": 422, "num_adversari": 422, "num_obstacl": 422, "max_cycl": 422, "num_vmas_env": [422, 423], "num_good_ag": 422, "num_landmark": 422, "adversary_1": 422, "four": [422, 423, 424], "n_agents_in_that_group": 422, "stress": [422, 423], "paramount": [422, 423], "n_rollout_step": [422, 423], "evolut": [422, 423], "group_nam": 422, "n_agents_in_group": 422, "minor": 422, "agents_exploration_polici": 422, "utilis": [422, 423], "withing": 422, "n_obs_per_ag": [422, 423], "n_actions_per_ag": [422, 423], "share_parameters_polici": [422, 423], "policy_net": [422, 423], "_agent": 422, "grant": [422, 423], "converg": [422, 423], "share_parameters_crit": [422, 423], "obs_act": 422, "cat_modul": 422, "critic_modul": 422, "fantast": [422, 423], "reset_td": 422, "interfer": 422, "subject": [422, 424], "flatten_kei": 422, "process_batch": 422, "group_shap": 422, "get_item_shap": [422, 423], "nested_done_kei": 422, "nested_terminated_kei": 422, "desc": [422, 423], "episode_reward_mean_": 422, "episode_reward_mean_map": 422, "train_group_map": 422, "group_batch": 422, "_group": 422, "loss_nam": 422, "episode_reward_mean": [422, 423], "episode_reward_mean_adversari": 422, "episode_reward_mean_ag": 422, "proce": 422, "fig": 422, "set_ylabel": 422, "axvlin": 422, "orang": 422, "set_xlabel": 422, "video_logg": 422, "vmas_log": 422, "env_with_rend": 422, "vmas_rend": 422, "print_log_dir": 422, "profici": [422, 423], "lidar": 423, "sensor": 423, "mappo": 423, "ippo": 423, "analys": 423, "visualis": 423, "vmas_devic": 423, "6_000": 423, "minibatch_s": 423, "generalis": 423, "simd": 423, "warp": 423, "todai": 423, "surround": 423, "dot": [423, 424], "scenario_nam": 423, "final_rew": 423, "agent_collis": 423, "453": [423, 424], "2340": 423, "__getitem__": 423, "indexed_shap": 423, "_shape_index": 423, "299": [423, 424], "indexerror": 423, "ellipsi": 423, "axi": 423, "critic_net": 423, "minibatch": 423, "episode_reward_mean_list": 423, "critic_network_param": 423, "target_critic_network_param": 423, "xvfb": 423, "pyvirtualdisplai": 423, "1400": [423, 424], "900": 423, "pil": 423, "rendering_callback": 423, "fromarrai": 423, "gif": 423, "save_al": 423, "append_imag": 423, "4642": 423, "freeli": 424, "broader": 424, "wider": 424, "algebra": 424, "acquaint": 424, "avenu": 424, "_apply_to_composit": 424, "default_x": 424, "default_i": 424, "upward": 424, "angular": 424, "sin": 424, "rad": 424, "sec": 424, "angl": 424, "deleg": 424, "new_th": 424, "new_thdot": 424, "g_forc": 424, "angle_norm": 424, "albeit": 424, "high_th": 424, "high_thdot": 424, "low_th": 424, "low_thdot": 424, "trivial": 424, "irrelev": 424, "_make_spec": 424, "td_param": 424, "render_fp": 424, "random_": 424, "_make_step": 424, "staticmethod": 424, "skeleton": 424, "_inv_apply_transform": [424, 429], "subset": [424, 425], "sine": 424, "cosin": 424, "sintransform": 424, "costransform": 424, "t_sin": 424, "t_co": 424, "cat_transform": 424, "simple_rollout": 424, "unexplor": 424, "init_td": 424, "traj_return": 424, "last_reward": 424, "is_ipython": 424, "inlin": 424, "get_backend": 424, "ion": 424, "gcf": 424, "clear_output": 424, "625": 424, "0748": 424, "519": 424, "0499": 424, "4472": 424, "073": 424, "0685": 424, "0408": 424, "552": 424, "76it": 424, "5154": 424, "9086": 424, "9385": 424, "155": 424, "2568": 424, "4981": 424, "223": [424, 426], "8929": 424, "4491": 424, "581": 424, "3233": 424, "0664": 424, "596": 424, "1021": 424, "5263": 424, "9579": 424, "5807": 424, "8075": 424, "2009": 424, "5525": 424, "914": 424, "2894": 424, "0115": 424, "0977": 424, "1845": 424, "1830": 424, "4858": 424, "233": 424, "2863": 424, "0297": 424, "464": 424, "4617": 424, "5997": 424, "904": 424, "1647": 424, "0777": 424, "901": 424, "4709": 424, "6813": 424, "8317": 424, "3221": 424, "5554": 424, "276": 424, "3353": 424, "701": 424, "8570": 424, "6656": 424, "463": 424, "7779": 424, "6911": 424, "875": 424, "0796": 424, "7082": 424, "0421": 424, "1496": 424, "5037": 424, "1755": 424, "5029": 424, "9454": 424, "9330": 424, "2118": 424, "444": 424, "0995": 424, "6294": 424, "3146": 424, "2909": 424, "461": 424, "9720": 424, "1298": 424, "9923": 424, "0345": 424, "3438": 424, "424": 424, "6953": 424, "5233": 424, "411": 424, "8011": 424, "5329": 424, "2677": 424, "6969": 424, "7010": 424, "376": 424, "9352": 424, "7707": 424, "6178": 424, "5646": 424, "348": 424, "7304": 424, "9407": 424, "942": 424, "3882": 424, "7604": 424, "3507": 424, "8928": 424, "258": 424, "6978": 424, "549": 424, "55it": 424, "6047": 424, "5005": 424, "4136": 424, "2993": 424, "3222": 424, "4046": 424, "7314": 424, "275": 424, "6331": 424, "9318": 424, "961": 424, "8331": 424, "1604": 424, "4099": 424, "4761": 424, "4262": 424, "6363": 424, "382": 424, "3593": 424, "7377": 424, "2847": 424, "3443": 424, "867": 424, "3592": 424, "4760": 424, "441": 424, "9950": 424, "8021": 424, "3528": 424, "1214": 424, "708": 424, "4023": 424, "3583": 424, "041": 424, "3801": 424, "0310": 424, "120": 424, "4244": 424, "2039": 424, "4850": 424, "8748": 424, "706": 424, "4897": 424, "9210": 424, "8964": 424, "0832": 424, "3934": 424, "456": 424, "8971": 424, "2933": 424, "3377": 424, "6996": 424, "2274": 424, "8916": 424, "098": 424, "83it": 424, "2660": 424, "9110": 424, "4503": 424, "6956": 424, "9172": 424, "4026": 424, "946": 424, "9229": 424, "5205": 424, "294": 424, "8872": 424, "6637": 424, "019": 424, "9281": 424, "2082": 424, "724": 424, "8561": 424, "6574": 424, "357": 424, "4138": 424, "5230": 424, "385": 424, "4065": 424, "5642": 424, "921": 424, "9786": 424, "4129": 424, "5831": 424, "266": 424, "7723": 424, "4152": 424, "0898": 424, "389": 424, "5155": 424, "5376": 424, "5616": 424, "4094": 424, "283": 424, "5333": 424, "4803": 424, "895": 424, "6566": 424, "2588": 424, "662": 424, "4732": 424, "7503": 424, "068": 424, "0714": 424, "3370": 424, "059": 424, "8612": 424, "1915": 424, "3855": 424, "0349": 424, "9644": 424, "4538": 424, "445": 424, "0392": 424, "4080": 424, "1648": 424, "9599": 424, "143": [424, 426], "4284": 424, "5946": 424, "2590": 424, "9181": 424, "4621": 424, "9075": 424, "1772": 424, "9444": 424, "351": 424, "9391": 424, "5595": 424, "8673": 424, "6240": 424, "5919": 424, "1071": 424, "9127": 424, "251": 424, "9799": 424, "3131": 424, "9612": 424, "9705": 424, "8741": 424, "2230": 424, "0972": 424, "0337": 424, "0350": 424, "0654": 424, "2441": 424, "4596": 424, "103": 424, "4362": 424, "171": 424, "104": 424, "4041": 424, "6907": 424, "105": 424, "4664": 424, "2760": 424, "0299": 424, "9712": 424, "349": 424, "107": 424, "3332": 424, "4479": 424, "772": 424, "108": 424, "4357": 424, "9591": 424, "543": 424, "109": 424, "6216": 424, "1353": 424, "692": 424, "6261": 424, "7086": 424, "111": [424, 426], "7758": 424, "9818": 424, "7772": 424, "5055": 424, "113": 424, "5840": 424, "3180": 424, "2083": 424, "115": 424, "5275": 424, "6873": 424, "116": 424, "4107": 424, "1624": 424, "117": 424, "6372": 424, "2571": 424, "118": 424, "4039": 424, "4428": 424, "119": 424, "4728": 424, "5628": 424, "6767": 424, "2466": 424, "522": 424, "121": [424, 429], "5873": 424, "5072": 424, "6548": 424, "3766": 424, "123": [424, 426], "5134": 424, "1955": 424, "124": 424, "2481": 424, "0591": 424, "4500": 424, "3368": 424, "126": 424, "9708": 424, "7059": 424, "127": [424, 426], "3031": 424, "2534": 424, "843": 424, "3327": 424, "6193": 424, "129": 424, "4831": 424, "1172": 424, "2593": 424, "4219": 424, "962": 424, "8380": 424, "899": 424, "132": 424, "2721": 424, "9048": 424, "166": 424, "2419": 424, "5248": 424, "2139": 424, "4278": 424, "0690": 424, "5140": 424, "136": 424, "1140": 424, "7402": 424, "137": 424, "5356": 424, "1636": 424, "138": [424, 426], "0671": 424, "8798": 424, "139": 424, "8918": 424, "3298": 424, "307": 424, "1779": 424, "141": 424, "1771": 424, "3624": 424, "936": 424, "142": 424, "1683": 424, "4810": 424, "9373": 424, "4435": 424, "4396": 424, "8092": 424, "145": 424, "2572": 424, "146": 424, "4212": 424, "0260": 424, "147": 424, "0939": 424, "6478": 424, "605": 424, "148": 424, "6606": 424, "7289": 424, "149": 424, "9300": 424, "7193": 424, "563": 424, "1166": 424, "8514": 424, "151": 424, "9108": 424, "0672": 424, "292": 424, "8591": 424, "3768": 424, "153": 424, "9976": 424, "154": 424, "0576": 424, "0067": 424, "935": 424, "4199": 424, "1722": 424, "8310": 424, "3466": 424, "157": 424, "8631": 424, "2492": 424, "8763": 424, "1277": 424, "159": 424, "5562": 424, "7446": 424, "1082": 424, "9830": 424, "161": 424, "0946": 424, "5229": 424, "4574": 424, "6900": 424, "163": [424, 425], "2229": 424, "0318": 424, "482": 424, "164": 424, "0543": 424, "0817": 424, "761": 424, "165": 424, "2809": 424, "5118": 424, "366": 424, "1142": 424, "5635": 424, "167": 424, "1949": 424, "2327": 424, "982": 424, "168": 424, "0967": 424, "0387": 424, "457": 424, "169": 424, "0782": 424, "2150": 424, "170": 424, "5222": 424, "3725": 424, "9288": 424, "9837": 424, "1416": 424, "1099": 424, "173": 424, "8620": 424, "8475": 424, "174": 424, "1807": 424, "4375": 424, "175": 424, "1148": 424, "0645": 424, "2751": 424, "8313": 424, "177": 424, "9286": 424, "9770": 424, "178": 424, "5735": 424, "2837": 424, "179": 424, "2926": 424, "9489": 424, "180": 424, "1507": 424, "181": 424, "8724": 424, "3567": 424, "182": 424, "3574": 424, "6140": 424, "183": 424, "7895": 424, "2518": 424, "184": 424, "6146": 424, "185": 424, "8776": 424, "7358": 424, "3722": 424, "8428": 424, "187": 424, "7955": 424, "188": 424, "0092": 424, "7106": 424, "829": 424, "189": 424, "2264": 424, "6919": 424, "1438": 424, "1362": 424, "191": 424, "0618": 424, "8217": 424, "9420": 424, "6765": 424, "193": 424, "7745": 424, "0709": 424, "194": 424, "94it": 424, "9478": 424, "6867": 424, "195": 424, "6507": 424, "6225": 424, "196": 424, "2244": 424, "2195": 424, "197": 424, "5385": 424, "9263": 424, "198": 424, "1878": 424, "2374": 424, "8054": 424, "3504": 424, "557": 424, "0766": 424, "201": 424, "2011": 424, "8393": 424, "202": 424, "0803": 424, "7815": 424, "203": 424, "8363": 424, "2460": 424, "204": 424, "8643": 424, "2191": 424, "593": 424, "205": 424, "0773": 424, "1343": 424, "206": 424, "8657": 424, "207": 424, "9304": 424, "7584": 424, "208": 424, "8752": 424, "2307": 424, "209": 424, "5250": 424, "4869": 424, "7837": 424, "5762": 424, "211": 424, "6661": 424, "8600": 424, "2502": 424, "1752": 424, "3075": 424, "8871": 424, "214": 424, "9406": 424, "8090": 424, "215": 424, "6291": 424, "8923": 424, "876": 424, "216": 424, "9504": 424, "21e": 424, "217": 424, "7431": 424, "7880": 424, "218": 424, "4463": 424, "5432": 424, "219": 424, "3793": 424, "3313": 424, "8843": 424, "0369": 424, "065": 424, "221": 424, "4828": 424, "8391": 424, "222": 424, "6265": 424, "2913": 424, "947": 424, "5541": 424, "1252": 424, "7342": 424, "2396": 424, "225": 424, "5936": 424, "1924": 424, "226": 424, "9975": 424, "2045": 424, "227": 424, "8367": 424, "9540": 424, "7259": 424, "6743": 424, "229": 424, "4827": 424, "7528": 424, "230": 424, "7361": 424, "8756": 424, "231": 424, "7646": 424, "1116": 424, "232": 424, "5426": 424, "8385": 424, "5662": 424, "8585": 424, "234": 424, "8234": 424, "7930": 424, "235": 424, "2648": 424, "9309": 424, "236": 424, "6817": 424, "0943": 424, "1533": 424, "238": 424, "3045": 424, "0483": 424, "239": 424, "6415": 424, "0201": 424, "4437": 424, "4365": 424, "242": 424, "0358": 424, "4943": 424, "243": 424, "1272": 424, "5003": 424, "1180": 424, "2637": 424, "245": 424, "7197": 424, "0873": 424, "246": 424, "2917": 424, "247": 424, "0160": 424, "0738": 424, "248": 424, "3689": 424, "0120": 424, "249": 424, "5570": 424, "0475": 424, "250": 424, "4423": 424, "2220": 424, "6803": 424, "252": 424, "1465": 424, "7214": 424, "253": 424, "8801": 424, "7034": 424, "254": 424, "9136": 424, "4076": 424, "7589": 424, "5013": 424, "8150": 424, "2241": 424, "257": 424, "0753": 424, "8081": 424, "1951": 424, "8314": 424, "259": 424, "0038": 424, "260": 424, "0889": 424, "4616": 424, "261": 424, "0655": 424, "262": 424, "8333": 424, "9476": 424, "263": 424, "7554": 424, "3798": 424, "264": 424, "3717": 424, "3947": 424, "529": 424, "265": 424, "3060": 424, "6495": 424, "7467": 424, "8889": 424, "267": 424, "8457": 424, "591": 424, "7137": 424, "0536": 424, "771": 424, "269": 424, "1651": 424, "388": 424, "270": 424, "8246": 424, "5709": 424, "281": 424, "271": 424, "7502": 424, "0521": 424, "032": 424, "272": 424, "5475": 424, "7253": 424, "273": 424, "2856": 424, "7130": 424, "274": 424, "2778": 424, "4122": 424, "8368": 424, "1841": 424, "9622": 424, "1603": 424, "003e": 424, "277": 424, "0247": 424, "346": 424, "278": 424, "2238": 424, "6418": 424, "279": 424, "0626": 424, "2538": 424, "280": 424, "0149": 424, "7380": 424, "2167": 424, "8911": 424, "282": 424, "8725": 424, "1983": 424, "8142": 424, "3709": 424, "284": 424, "4989": 424, "285": 424, "6464": 424, "6210": 424, "286": 424, "9726": 424, "0820": 424, "287": 424, "6975": 424, "9091": 424, "4926": 424, "4791": 424, "289": 424, "0905": 424, "3500": 424, "2287": 424, "291": 424, "9918": 424, "5543": 424, "9245": 424, "6444": 424, "631": 424, "293": 424, "0448": 424, "4769": 424, "8566": 424, "7208": 424, "295": 424, "0966": 424, "296": 424, "5303": 424, "1537": 424, "023": 424, "297": 424, "2682": 424, "564": 424, "298": 424, "4318": 424, "5063": 424, "7475": 424, "4190": 424, "8186": 424, "5077": 424, "301": 424, "1883": 424, "5291": 424, "472": 424, "302": 424, "3998": 424, "303": 424, "3622": 424, "0930": 424, "626": 424, "304": 424, "9500": 424, "5664": 424, "305": 424, "5697": 424, "3024": 424, "306": 424, "3117": 424, "0052": 424, "006": 424, "0981": 424, "9312": 424, "3873": 424, "309": 424, "0411": 424, "2650": 424, "1656": 424, "0228": 424, "004": 424, "311": 424, "1196": 424, "2478": 424, "312": 424, "7353": 424, "0812": 424, "313": 424, "3022": 424, "758": 424, "314": 424, "1406": 424, "4626": 424, "315": 424, "2156": 424, "851": 424, "316": 424, "1953": 424, "3774": 424, "6385": 424, "9917": 424, "318": 424, "2764": 424, "905": 424, "319": 424, "6391": 424, "9317": 424, "9748": 424, "2679": 424, "8495": 424, "5125": 424, "8177": 424, "6602": 424, "0704": 424, "5776": 424, "9833": [424, 428], "1339": 424, "402": 424, "1238": 424, "9299": 424, "0227": 424, "7727": 424, "1607": 424, "336": 424, "328": 424, "3958": 424, "3223": 424, "763": 424, "329": 424, "4742": 424, "1797": 424, "330": 424, "0144": 424, "0085": 424, "791": 424, "331": 424, "8284": 424, "0428": 424, "332": 424, "7365": 424, "4566": 424, "0781": 424, "086": 424, "334": [424, 428], "3355": 424, "0230": 424, "335": 424, "9346": 424, "0423": 424, "076": 424, "3711": 424, "1335": 424, "6855": 424, "337": 424, "0304": 424, "0023": 424, "8459": 424, "338": 424, "9998": 424, "4399": 424, "339": 424, "2303": 424, "1346": 424, "340": 424, "2915": 424, "7116": 424, "341": 424, "5560": 424, "0487": 424, "342": 424, "5119": 424, "061": 424, "3305": 424, "3705": 424, "957": 424, "6068": 424, "345": 424, "5731": 424, "3897": 424, "0376": 424, "347": 424, "0434": 424, "012": 424, "1300": 424, "1215": 424, "0968": 424, "0885": 424, "1348": 424, "0073": 424, "5052": 424, "4184": 424, "2817": 424, "8887": 424, "4779": 424, "1009": 424, "354": 424, "0604": 424, "599": 424, "355": 424, "4486": 424, "1176": 424, "656": 424, "356": 424, "2436": 424, "0668": 424, "8849": 424, "0012": 424, "358": 424, "7511": 424, "8804": 424, "359": 424, "8870": 424, "6728": 424, "360": 424, "8841": 424, "5508": 424, "361": 424, "5242": 424, "0013": 424, "6185": 424, "363": 424, "0204": 424, "364": 424, "0355": 424, "685": 424, "365": 424, "4884": 424, "0231": 424, "0014": 424, "6793": 424, "367": 424, "9834": 424, "863": 424, "368": 424, "6709": 424, "462": 424, "369": 424, "5199": 424, "9790": 424, "370": 424, "9401": 424, "7802": 424, "371": 424, "6723": 424, "372": 424, "2678": 424, "6201": 424, "373": 424, "7385": 424, "374": 424, "6344": 424, "617": 424, "375": 424, "9945": 424, "0772": 424, "567": 424, "7576": 424, "0398": 424, "377": 424, "3396": 424, "0022": 424, "094": 424, "378": 424, "3073": 424, "4018": 424, "379": 424, "1869": 424, "380": 424, "0481": 424, "1117": 424, "381": 424, "6823": 424, "981": 424, "8305": 424, "0210": 424, "383": 424, "4908": 424, "0272": 424, "538": 424, "3267": 424, "0111": 424, "7965": 424, "1796": 424, "0039": 424, "5396": 424, "386": 424, "3757": 424, "0490": 424, "387": 424, "1394": 424, "4187": 424, "2986": 424, "7954": 424, "1274": 424, "0063": 424, "813": 424, "390": 424, "8706": 424, "0114": 424, "391": 424, "6922": 424, "2423": 424, "9115": 424, "2602": 424, "393": 424, "2449": 424, "0783": 424, "0631": 424, "0057": 424, "7444": 424, "395": 424, "3339": 424, "0167": 424, "396": 424, "4806": 424, "397": 424, "4171": 424, "067": 424, "398": 424, "2618": 424, "5809": 424, "399": 424, "0054": 424, "3364": 424, "8733": 424, "0184": 424, "401": 424, "9137": 424, "0113": 424, "025": 424, "0386": 424, "0625": 424, "403": 424, "1332": 424, "0582": 424, "7816": 424, "404": 424, "8341": 424, "0941": 424, "854": 424, "405": 424, "8615": 424, "588": 424, "3849": 424, "008": 424, "407": 424, "9395": 424, "0765": 424, "055": 424, "408": 424, "2685": 424, "2235": 424, "688": 424, "409": 424, "3052": 424, "4249": 424, "410": 424, "6806": 424, "6383": 424, "3721": 424, "9981": 424, "1862": 424, "822": 424, "413": 424, "9811": 424, "0171": 424, "013": 424, "0252": 424, "0049": 424, "6205": 424, "1108": 424, "4921": 424, "9142": 424, "8130": 424, "1725": 424, "0036": 424, "3196": 424, "418": 424, "7795": 424, "0242": 424, "799": 424, "7737": 424, "0138": 424, "1462": 424, "0053": 424, "9226": 424, "6139": 424, "422": 424, "9889": 424, "0403": 424, "423": 424, "6194": 424, "0032": 424, "3989": 424, "0104": 424, "425": 424, "9960": 424, "0009": 424, "6009": 424, "426": 424, "2697": 424, "0914": 424, "427": 424, "1114": 424, "428": 424, "9862": 424, "1932": 424, "429": 424, "0637": 424, "0623": 424, "082": 424, "430": 424, "9906": 424, "2031": 424, "431": 424, "9948": 424, "0895": 424, "432": 424, "1970": 424, "0256": 424, "4231": 424, "0449": 424, "644": 424, "434": 424, "1039": 424, "1973": 424, "435": 424, "4561": 424, "1225": 424, "436": 424, "0211": 424, "2125": 424, "437": 424, "3866": 424, "0050": 424, "7202": 424, "438": 424, "6388": 424, "0072": 424, "439": 424, "1187": 424, "0015": 424, "5116": 424, "440": 424, "0432": 424, "0025": 424, "7809": 424, "1925": 424, "0103": 424, "442": 424, "9570": 424, "0871": 424, "5601": 424, "0165": 424, "0047": 424, "6061": 424, "2746": 424, "0027": 424, "7887": 424, "446": 424, "1835": 424, "0035": 424, "855": 424, "447": 424, "8420": 424, "548": 424, "2653": 424, "0126": 424, "9736": 424, "449": 424, "0594": 424, "0119": 424, "6196": 424, "450": 424, "4509": 424, "0373": 424, "451": 424, "0620": 424, "452": 424, "6898": 424, "3235": 424, "687": 424, "5879": 424, "454": 424, "8406": 424, "0694": 424, "455": 424, "8259": 424, "0235": 424, "8500": 424, "0024": 424, "4054": 424, "2027": 424, "0894": 424, "5966": 424, "460": [424, 426], "6942": 424, "0016": 424, "4254": 424, "6703": 424, "0145": 424, "8124": 424, "0218": 424, "9196": 424, "0188": 424, "8986": 424, "0884": 424, "0084": 424, "5624": 424, "465": 424, "8862": 424, "5384": 424, "466": 424, "5837": 424, "467": 424, "8954": 424, "0101": 424, "6751": 424, "468": 424, "8063": 424, "0122": 424, "9635": 424, "469": 424, "0692": 424, "4216": 424, "470": 424, "1227": 424, "0586": 424, "162e": 424, "471": 424, "9690": 424, "4166": 424, "6324": 424, "473": 424, "0778": 424, "474": 424, "8548": 424, "0017": 424, "4408": 424, "475": 424, "8125": 424, "1515": 424, "476": 424, "2733": 424, "0044": 424, "2836": 424, "477": 424, "7497": 424, "7681": 424, "8547": 424, "0105": 424, "7212": 424, "479": 424, "9848": 424, "0019": 424, "6498": 424, "1987": 424, "0011": 424, "5473": 424, "481": 424, "8991": 424, "6091": 424, "9189": 424, "5771": 424, "483": 424, "6781": 424, "7542": 424, "484": 424, "5959": 424, "0064": 424, "2547": 424, "486": 424, "0636": 424, "547": 424, "487": 424, "0065": 424, "488": 424, "1694": 424, "0083": 424, "5759": 424, "489": 424, "0493": 424, "0021": 424, "7805": 424, "490": 424, "0950": 424, "497": 424, "491": 424, "9717": 424, "3672": 424, "492": 424, "0207": 424, "493": 424, "8266": 424, "5365": 424, "494": 424, "2623": 424, "5078": 424, "495": 424, "4545": 424, "09636": 424, "8754": 424, "0010": 424, "498": 424, "0031": 424, "8269": 424, "499": 424, "6642": 424, "2284": 424, "501": 424, "9130": 424, "502": 424, "503": 424, "7624": 424, "0056": 424, "3858": 424, "504": 424, "0890": 424, "0042": 424, "505": 424, "7505": 424, "2157": 424, "8394": 424, "3413": 424, "507": 424, "9609": 424, "0041": 424, "6905": 424, "508": 424, "86it": 424, "8467": 424, "4409": 424, "509": 424, "510": 424, "8128": 424, "3559": 424, "511": 424, "1479": 424, "0264": 424, "1589": 424, "566": 424, "513": 424, "2756": 424, "0046": 424, "5266": 424, "514": 424, "9873": 424, "0112": 424, "9314": 424, "515": 424, "3791": 424, "0721": 424, "516": 424, "4580": 424, "0758": 424, "6114": 424, "517": 424, "2431": 424, "518": 424, "1958": 424, "5553": 424, "8924": 424, "0097": 424, "520": 424, "3737": 424, "0234": 424, "521": 424, "9125": 424, "4623": 424, "3230": 424, "0589": 424, "3784": 424, "523": 424, "9482": 424, "0051": 424, "524": 424, "1979": 424, "0045": 424, "6401": 424, "525": 424, "1588": 424, "0048": 424, "6255": 424, "526": 424, "6084": 424, "3477": 424, "1475": 424, "0209": 424, "528": 424, "7611": 424, "1040": 424, "0099": 424, "0173": 424, "643": 424, "530": 424, "8189": 424, "4358": 424, "531": 424, "9897": 424, "532": 424, "1548": 424, "9751": 424, "533": 424, "6362": 424, "7495": 424, "534": 424, "1749": 424, "9513": 424, "535": 424, "7708": 424, "0371": 424, "536": 424, "2649": 424, "0437": 424, "537": 424, "5491": 424, "0276": 424, "6426": 424, "7294": 424, "078e": 424, "539": 424, "9928": 424, "540": 424, "7937": 424, "0124": 424, "9664": 424, "541": 424, "3342": 424, "542": 424, "2046": 424, "5496": 424, "0956": 424, "0059": 424, "545": 424, "9028": 424, "5843": 424, "546": 424, "0674": 424, "0178": 424, "797": 424, "2815": 424, "0599": 424, "1587": 424, "9276": 424, "8228": 424, "6164": 424, "551": 424, "6850": 424, "9167": 424, "3092": 424, "0670": 424, "9177": 424, "553": 424, "1599": 424, "0043": 424, "6367": 424, "555": 424, "556": 424, "6694": 424, "2622": 424, "0372": 424, "4841": 424, "558": 424, "2707": 424, "559": 424, "2267": 424, "5415": 424, "560": 424, "4556": 424, "0163": 424, "561": 424, "1839": 424, "0809": 424, "6262": 424, "562": 424, "0278": 424, "1112": 424, "6155": 424, "565": 424, "1427": 424, "3582": 424, "624": 424, "7870": 424, "9490": 424, "0439": 424, "8796": 424, "568": 424, "8026": 424, "612": 424, "569": 424, "3147": 424, "8486": 424, "570": 424, "7917": 424, "0129": 424, "571": 424, "9553": 424, "0020": 424, "6871": 424, "572": 424, "3132": 424, "0159": 424, "8646": 424, "573": 424, "5320": 424, "0269": 424, "574": 424, "2955": 424, "0245": 424, "575": 424, "3347": 424, "0179": 424, "9718": 424, "1629": 424, "804": 424, "577": 424, "4164": 424, "0070": 424, "4335": 424, "578": 424, "579": 424, "3049": 424, "9063": 424, "580": 424, "8785": 424, "3295": 424, "5184": 424, "0546": 424, "582": 424, "4589": 424, "583": 424, "4697": 424, "2476": 424, "584": 424, "2397": 424, "585": 424, "4953": 424, "1775": 424, "586": 424, "2258": 424, "0110": 424, "7671": 424, "3981": 424, "8590": 424, "0007": 424, "589": 424, "9820": 424, "4221": 424, "590": 424, "1293": 424, "0116": 424, "868": 424, "1675": 424, "5931": 424, "592": 424, "2910": 424, "5219": 424, "02it": 424, "2124": 424, "1730": 424, "737": 424, "594": 424, "2914": 424, "0206": 424, "595": 424, "0172": 424, "3982": 424, "51it": 424, "0945": 424, "0121": 424, "4789": 424, "597": 424, "3805": 424, "4074": 424, "3310": 424, "5065": 424, "6028": 424, "6316": 424, "6724": 424, "6523": 424, "601": 424, "0136": 424, "4298": 424, "602": 424, "3524": 424, "2629": 424, "603": 424, "2635": 424, "7839": 424, "604": 424, "6041": 424, "8027": 424, "4170": 424, "4675": 424, "606": 424, "3153": 424, "9316": 424, "607": 424, "0649": 424, "9722": 424, "7989": 424, "0329": 424, "609": 424, "1976": 424, "6852": 424, "610": 424, "4793": 424, "1255": 424, "611": 424, "4581": 424, "0394": 424, "2047": 424, "0326": 424, "613": 424, "8967": 424, "8619": 424, "614": 424, "5906": 424, "6491": 424, "615": 424, "6634": 424, "4394": 424, "0624": 424, "0061": 424, "5676": 424, "3259": 424, "0131": 424, "7733": 424, "618": 424, "7515": 424, "0189": 424, "5575": 424, "619": 424, "9313": 424, "6286": 424, "620": 424, "4325": 424, "7832": 424, "1134": 424, "4572": 424, "0500": 424, "5838": 424, "623": 424, "3818": 424, "8623": 424, "1253": 424, "6622": 424, "semat": 425, "r3mtransform": 425, "env_transform": [425, 429], "s3": 425, "amazonaw": 425, "r3m_50": 425, "374m": 425, "5m": 425, "127mb": 425, "9m": 425, "119mb": 425, "2m": 425, "5mb": 425, "4mb": 425, "6m": 425, "0mb": 425, "0m": 425, "7mb": 425, "4m": 425, "108mb": 425, "109m": 425, "109mb": 425, "120m": 425, "102mb": 425, "130m": 425, "3mb": 425, "139m": 425, "148m": 425, "162m": 425, "8mb": 425, "172m": 425, "2mb": 425, "180m": 425, "191m": 425, "1mb": 425, "199m": 425, "213m": 425, "229m": 425, "246m": 425, "262m": 425, "106mb": 425, "279m": 425, "295m": 425, "114mb": 425, "310m": 425, "328m": 425, "344m": 425, "103mb": 425, "360m": 425, "wiser": 425, "4113": 425, "batteri": 426, "buffer_list": 426, "lowest": 426, "medium": 426, "buffer_lazytensor": 426, "buffer_lazymemmap": 426, "tempdir": 426, "tmpdlh8fpze": 426, "fullest": 426, "mydata": 426, "background": 426, "question": [426, 428], "_i": 426, "artifici": 426, "0893e": 426, "hamper": 426, "she": 426, "pars": 426, "proport": 426, "barcontain": 426, "artist": 426, "reappear": 426, "unfold": 426, "problemat": 426, "4th": 426, "prioritizedslicesampl": 426, "tensordictmaxvaluewrit": 426, "demo": 428, "icml": 428, "vmoen": 428, "fb": 428, "invest": 428, "media": 428, "predominantli": 428, "data2": 428, "sub_key1": 428, "scturctur": 428, "data_stack": 428, "data_sampl": 428, "_sampler": 428, "_sum_tre": 428, "28791671991348267": 428, "modulenotfounderror": 428, "noopresetenv": [428, 429], "backbone_modul": 428, "tailor": 428, "params_expand": 428, "exec_sequ": 428, "tensordict_exp": 428, "base_modul": 428, "asstridedbackward0": 428, "8728": 428, "1334": 428, "3494": 428, "6887": 428, "6402": 428, "_safetanhnoepsbackward": 428, "1132": 428, "1762": 428, "3430": 428, "2668": 428, "2918": 428, "6239": 428, "tensordicts_prealloc": 428, "tensordicts_stack": 428, "tensordict_rollout": [428, 429], "automatical": 428, "particularili": [428, 429], "concatmodul": 428, "loss_td": 428, "contributor": 428, "curiou": 428, "nascent": 428, "unsupervis": 429, "unifi": 429, "_build_env": 429, "amidar": 429, "assault": 429, "2832": 429, "deserv": 429, "__episode__": 429, "__trajectory__": 429, "void": 429, "reproduct": 429, "reset_data": 429, "tensordict_tprim": 429, "axesimag": 429, "0x7f34914e4f70": 429, "wrapper1": 429, "wrapper2": 429, "obviou": 429, "truth": 429, "env_transformed_bi": 429, "stanc": 429, "transformeddistribut": 429, "base_dist": 429, "concat": 429, "mofidi": 429, "transformedenviron": 429, "moderet": 429, "computation": 429, "legitim": 429, "incom": 429, "amongst": 429, "has_cuda": 429, "wor": 429, "convention": 429, "markovian": 429, "3288080526": 429, "constain": 429, "bar_": 429, "get_someth": 429, "bar_b5854586": 429, "b188": 429, "aargh": 429, "is_clos": 429, "foo_list": 429, "batched_env": 429, "_dispatch_caller_parallel": 429, "0x7f34bced7a60": 429, "bar_ba05077c": 429, "9805": 429, "bar_ba014cc2": 429, "bed6": 429, "bar_ba06c08a": 429, "a6df": 429, "evolv": 429, "steadi": 429, "approx": 429, "3459": 429, "2643": 429, "1855": 429, "9089": 429, "0153": 429, "0385": 429, "_extra_st": 429, "observation_ssq": 429, "observation_sum": 429, "reward_count": 429, "reward_ssq": 429, "reward_sum": 429, "0824": 429, "2477": 429, "4948": 429, "6778": 429, "2371": 429, "2573": 429, "dispach": 429, "absor": 429}, "objects": {"torchrl._utils": [[12, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[12, 1, 1, "", "get_class_that_defined_method"], [12, 1, 1, "", "import_module"], [12, 1, 1, "", "module_set"], [12, 1, 1, "", "reset"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiSyncDataCollector"], [15, 0, 1, "", "MultiaSyncDataCollector"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "AdaptiveKLController"], [25, 0, 1, "", "Binary"], [26, 0, 1, "", "BinaryDiscreteTensorSpec"], [27, 0, 1, "", "BinaryToDecimal"], [28, 0, 1, "", "Bounded"], [29, 0, 1, "", "BoundedTensorSpec"], [30, 0, 1, "", "Categorical"], [31, 0, 1, "", "Composite"], [32, 0, 1, "", "CompositeSpec"], [33, 0, 1, "", "ConstantKLController"], [34, 0, 1, "", "DiscreteTensorSpec"], [35, 0, 1, "", "Flat2TED"], [36, 0, 1, "", "H5Combine"], [37, 0, 1, "", "H5Split"], [38, 0, 1, "", "HashToInt"], [39, 0, 1, "", "LazyStackedCompositeSpec"], [40, 0, 1, "", "LazyStackedTensorSpec"], [41, 0, 1, "", "MCTSForest"], [42, 0, 1, "", "MultiCategorical"], [43, 0, 1, "", "MultiDiscreteTensorSpec"], [44, 0, 1, "", "MultiOneHot"], [45, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [46, 0, 1, "", "MultiStep"], [47, 0, 1, "", "Nested2TED"], [48, 0, 1, "", "NonTensor"], [49, 0, 1, "", "NonTensorSpec"], [50, 0, 1, "", "OneHot"], [51, 0, 1, "", "OneHotDiscreteTensorSpec"], [52, 0, 1, "", "PairwiseDataset"], [53, 0, 1, "", "PrioritizedReplayBuffer"], [54, 0, 1, "", "PromptData"], [55, 0, 1, "", "PromptTensorDictTokenizer"], [56, 0, 1, "", "QueryModule"], [57, 0, 1, "", "RandomProjectionHash"], [58, 0, 1, "", "ReplayBuffer"], [59, 0, 1, "", "RewardData"], [60, 0, 1, "", "RolloutFromModel"], [61, 0, 1, "", "SipHash"], [62, 0, 1, "", "Stacked"], [63, 0, 1, "", "StackedComposite"], [64, 0, 1, "", "TED2Flat"], [65, 0, 1, "", "TED2Nested"], [66, 0, 1, "", "TensorDictMap"], [67, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [68, 0, 1, "", "TensorDictReplayBuffer"], [69, 0, 1, "", "TensorDictTokenizer"], [70, 0, 1, "", "TensorMap"], [71, 0, 1, "", "TensorSpec"], [72, 0, 1, "", "TokenizedDatasetLoader"], [73, 0, 1, "", "Tree"], [74, 0, 1, "", "Unbounded"], [75, 0, 1, "", "UnboundedContinuous"], [76, 0, 1, "", "UnboundedContinuousTensorSpec"], [77, 0, 1, "", "UnboundedDiscrete"], [78, 0, 1, "", "UnboundedDiscreteTensorSpec"], [79, 0, 1, "", "check_no_exclusive_keys"], [80, 0, 1, "", "consolidate_spec"], [81, 0, 1, "", "contains_lazy_spec"], [82, 0, 1, "", "create_infinite_iterator"], [92, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[24, 1, 1, "", "update"]], "torchrl.data.Binary": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "clone"], [25, 1, 1, "", "contains"], [25, 1, 1, "", "cpu"], [25, 1, 1, "", "cuda"], [25, 3, 1, "", "device"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "enumerate"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "make_neg_dim"], [25, 4, 1, "", "ndim"], [25, 1, 1, "", "ndimension"], [25, 1, 1, "", "one"], [25, 1, 1, "", "ones"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to"], [25, 1, 1, "", "to_categorical"], [25, 1, 1, "", "to_categorical_spec"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "to_one_hot"], [25, 1, 1, "", "to_one_hot_spec"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unsqueeze"], [25, 1, 1, "", "update_mask"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"], [25, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "clone"], [26, 1, 1, "", "contains"], [26, 1, 1, "", "cpu"], [26, 1, 1, "", "cuda"], [26, 3, 1, "", "device"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "enumerate"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "make_neg_dim"], [26, 4, 1, "", "ndim"], [26, 1, 1, "", "ndimension"], [26, 1, 1, "", "one"], [26, 1, 1, "", "ones"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "sample"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to"], [26, 1, 1, "", "to_categorical"], [26, 1, 1, "", "to_categorical_spec"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "unsqueeze"], [26, 1, 1, "", "update_mask"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"], [26, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[27, 1, 1, "", "add_module"], [27, 1, 1, "", "apply"], [27, 1, 1, "", "bfloat16"], [27, 1, 1, "", "buffers"], [27, 1, 1, "", "children"], [27, 1, 1, "", "compile"], [27, 1, 1, "", "cpu"], [27, 1, 1, "", "cuda"], [27, 1, 1, "", "double"], [27, 1, 1, "", "eval"], [27, 1, 1, "", "extra_repr"], [27, 1, 1, "", "float"], [27, 1, 1, "", "forward"], [27, 1, 1, "", "get_buffer"], [27, 1, 1, "", "get_extra_state"], [27, 1, 1, "", "get_parameter"], [27, 1, 1, "", "get_submodule"], [27, 1, 1, "", "half"], [27, 1, 1, "", "ipu"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "modules"], [27, 1, 1, "", "mtia"], [27, 1, 1, "", "named_buffers"], [27, 1, 1, "", "named_children"], [27, 1, 1, "", "named_modules"], [27, 1, 1, "", "named_parameters"], [27, 1, 1, "", "parameters"], [27, 1, 1, "", "register_backward_hook"], [27, 1, 1, "", "register_buffer"], [27, 1, 1, "", "register_forward_hook"], [27, 1, 1, "", "register_forward_pre_hook"], [27, 1, 1, "", "register_full_backward_hook"], [27, 1, 1, "", "register_full_backward_pre_hook"], [27, 1, 1, "", "register_load_state_dict_post_hook"], [27, 1, 1, "", "register_load_state_dict_pre_hook"], [27, 1, 1, "", "register_module"], [27, 1, 1, "", "register_parameter"], [27, 1, 1, "", "register_state_dict_post_hook"], [27, 1, 1, "", "register_state_dict_pre_hook"], [27, 1, 1, "", "requires_grad_"], [27, 1, 1, "", "set_extra_state"], [27, 1, 1, "", "set_submodule"], [27, 1, 1, "", "share_memory"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "to"], [27, 1, 1, "", "to_empty"], [27, 1, 1, "", "train"], [27, 1, 1, "", "type"], [27, 1, 1, "", "xpu"], [27, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "clone"], [28, 1, 1, "", "contains"], [28, 1, 1, "", "cpu"], [28, 1, 1, "", "cuda"], [28, 4, 1, "", "device"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "enumerate"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "make_neg_dim"], [28, 4, 1, "", "ndim"], [28, 1, 1, "", "ndimension"], [28, 1, 1, "", "one"], [28, 1, 1, "", "ones"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "sample"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "unsqueeze"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"], [28, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "clone"], [29, 1, 1, "", "contains"], [29, 1, 1, "", "cpu"], [29, 1, 1, "", "cuda"], [29, 4, 1, "", "device"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "enumerate"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "make_neg_dim"], [29, 4, 1, "", "ndim"], [29, 1, 1, "", "ndimension"], [29, 1, 1, "", "one"], [29, 1, 1, "", "ones"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "sample"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "unsqueeze"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"], [29, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "clone"], [30, 1, 1, "", "contains"], [30, 1, 1, "", "cpu"], [30, 1, 1, "", "cuda"], [30, 3, 1, "", "device"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "enumerate"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "make_neg_dim"], [30, 4, 1, "", "ndim"], [30, 1, 1, "", "ndimension"], [30, 1, 1, "", "one"], [30, 1, 1, "", "ones"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "sample"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "unsqueeze"], [30, 1, 1, "", "update_mask"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"], [30, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "clone"], [31, 1, 1, "", "contains"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 4, 1, "", "device"], [31, 1, 1, "", "empty"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "enumerate"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "flatten"], [31, 1, 1, "", "get"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_empty"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "items"], [31, 1, 1, "", "keys"], [31, 1, 1, "", "lock_"], [31, 1, 1, "", "make_neg_dim"], [31, 4, 1, "", "ndim"], [31, 1, 1, "", "ndimension"], [31, 1, 1, "", "one"], [31, 1, 1, "", "ones"], [31, 1, 1, "", "pop"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "reshape"], [31, 1, 1, "", "sample"], [31, 1, 1, "", "separates"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "unflatten"], [31, 1, 1, "", "unlock_"], [31, 1, 1, "", "unsqueeze"], [31, 1, 1, "", "values"], [31, 1, 1, "", "view"], [31, 1, 1, "", "zero"], [31, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "clone"], [32, 1, 1, "", "contains"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 4, 1, "", "device"], [32, 1, 1, "", "empty"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "enumerate"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "get"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_empty"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "items"], [32, 1, 1, "", "keys"], [32, 1, 1, "", "lock_"], [32, 1, 1, "", "make_neg_dim"], [32, 4, 1, "", "ndim"], [32, 1, 1, "", "ndimension"], [32, 1, 1, "", "one"], [32, 1, 1, "", "ones"], [32, 1, 1, "", "pop"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "sample"], [32, 1, 1, "", "separates"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "unlock_"], [32, 1, 1, "", "unsqueeze"], [32, 1, 1, "", "values"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"], [32, 1, 1, "", "zeros"]], "torchrl.data.DiscreteTensorSpec": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 3, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 4, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[38, 1, 1, "", "add_module"], [38, 1, 1, "", "apply"], [38, 1, 1, "", "bfloat16"], [38, 1, 1, "", "buffers"], [38, 1, 1, "", "children"], [38, 1, 1, "", "compile"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 1, 1, "", "double"], [38, 1, 1, "", "eval"], [38, 1, 1, "", "extra_repr"], [38, 1, 1, "", "float"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "get_buffer"], [38, 1, 1, "", "get_extra_state"], [38, 1, 1, "", "get_parameter"], [38, 1, 1, "", "get_submodule"], [38, 1, 1, "", "half"], [38, 1, 1, "", "ipu"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "modules"], [38, 1, 1, "", "mtia"], [38, 1, 1, "", "named_buffers"], [38, 1, 1, "", "named_children"], [38, 1, 1, "", "named_modules"], [38, 1, 1, "", "named_parameters"], [38, 1, 1, "", "parameters"], [38, 1, 1, "", "register_backward_hook"], [38, 1, 1, "", "register_buffer"], [38, 1, 1, "", "register_forward_hook"], [38, 1, 1, "", "register_forward_pre_hook"], [38, 1, 1, "", "register_full_backward_hook"], [38, 1, 1, "", "register_full_backward_pre_hook"], [38, 1, 1, "", "register_load_state_dict_post_hook"], [38, 1, 1, "", "register_load_state_dict_pre_hook"], [38, 1, 1, "", "register_module"], [38, 1, 1, "", "register_parameter"], [38, 1, 1, "", "register_state_dict_post_hook"], [38, 1, 1, "", "register_state_dict_pre_hook"], [38, 1, 1, "", "requires_grad_"], [38, 1, 1, "", "set_extra_state"], [38, 1, 1, "", "set_submodule"], [38, 1, 1, "", "share_memory"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_empty"], [38, 1, 1, "", "train"], [38, 1, 1, "", "type"], [38, 1, 1, "", "xpu"], [38, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "empty"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "get"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_empty"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "items"], [39, 1, 1, "", "keys"], [39, 1, 1, "", "lock_"], [39, 1, 1, "", "make_neg_dim"], [39, 4, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "pop"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "separates"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unlock_"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "values"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 4, 1, "", "device"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "make_neg_dim"], [40, 4, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[41, 1, 1, "", "get_keys_from_env"]], "torchrl.data.MultiCategorical": [[42, 1, 1, "", "assert_is_in"], [42, 1, 1, "", "clear_device_"], [42, 1, 1, "", "clone"], [42, 1, 1, "", "contains"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 3, 1, "", "device"], [42, 1, 1, "", "encode"], [42, 1, 1, "", "enumerate"], [42, 1, 1, "", "expand"], [42, 1, 1, "", "flatten"], [42, 1, 1, "", "implements_for_spec"], [42, 1, 1, "", "index"], [42, 1, 1, "", "is_in"], [42, 1, 1, "", "make_neg_dim"], [42, 4, 1, "", "ndim"], [42, 1, 1, "", "ndimension"], [42, 1, 1, "", "one"], [42, 1, 1, "", "ones"], [42, 1, 1, "", "project"], [42, 1, 1, "", "rand"], [42, 1, 1, "", "reshape"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "squeeze"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_categorical"], [42, 1, 1, "", "to_categorical_spec"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_one_hot"], [42, 1, 1, "", "to_one_hot_spec"], [42, 1, 1, "", "type_check"], [42, 1, 1, "", "unflatten"], [42, 1, 1, "", "unsqueeze"], [42, 1, 1, "", "update_mask"], [42, 1, 1, "", "view"], [42, 1, 1, "", "zero"], [42, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "clone"], [43, 1, 1, "", "contains"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 3, 1, "", "device"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "enumerate"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "make_neg_dim"], [43, 4, 1, "", "ndim"], [43, 1, 1, "", "ndimension"], [43, 1, 1, "", "one"], [43, 1, 1, "", "ones"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "sample"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_categorical"], [43, 1, 1, "", "to_categorical_spec"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "to_one_hot"], [43, 1, 1, "", "to_one_hot_spec"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "unsqueeze"], [43, 1, 1, "", "update_mask"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"], [43, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 3, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 4, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "clone"], [45, 1, 1, "", "contains"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 3, 1, "", "device"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "enumerate"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "make_neg_dim"], [45, 4, 1, "", "ndim"], [45, 1, 1, "", "ndimension"], [45, 1, 1, "", "one"], [45, 1, 1, "", "ones"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "sample"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_categorical"], [45, 1, 1, "", "to_categorical_spec"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "to_one_hot"], [45, 1, 1, "", "to_one_hot_spec"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "unsqueeze"], [45, 1, 1, "", "update_mask"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"], [45, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "compile"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "mtia"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_full_backward_pre_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_load_state_dict_pre_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "register_state_dict_post_hook"], [46, 1, 1, "", "register_state_dict_pre_hook"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_submodule"], [46, 1, 1, "", "share_memory"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[48, 1, 1, "", "assert_is_in"], [48, 1, 1, "", "clear_device_"], [48, 1, 1, "", "clone"], [48, 1, 1, "", "contains"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 4, 1, "", "device"], [48, 1, 1, "", "encode"], [48, 1, 1, "", "enumerate"], [48, 1, 1, "", "expand"], [48, 1, 1, "", "flatten"], [48, 1, 1, "", "implements_for_spec"], [48, 1, 1, "", "index"], [48, 1, 1, "", "is_in"], [48, 1, 1, "", "make_neg_dim"], [48, 4, 1, "", "ndim"], [48, 1, 1, "", "ndimension"], [48, 1, 1, "", "one"], [48, 1, 1, "", "ones"], [48, 1, 1, "", "project"], [48, 1, 1, "", "rand"], [48, 1, 1, "", "reshape"], [48, 1, 1, "", "sample"], [48, 1, 1, "", "squeeze"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_numpy"], [48, 1, 1, "", "type_check"], [48, 1, 1, "", "unflatten"], [48, 1, 1, "", "unsqueeze"], [48, 1, 1, "", "view"], [48, 1, 1, "", "zero"], [48, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 4, 1, "", "device"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "make_neg_dim"], [49, 4, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 3, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 4, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_categorical"], [50, 1, 1, "", "to_categorical_spec"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "to_one_hot"], [50, 1, 1, "", "to_one_hot_spec"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "update_mask"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[51, 1, 1, "", "assert_is_in"], [51, 1, 1, "", "clear_device_"], [51, 1, 1, "", "clone"], [51, 1, 1, "", "contains"], [51, 1, 1, "", "cpu"], [51, 1, 1, "", "cuda"], [51, 3, 1, "", "device"], [51, 1, 1, "", "encode"], [51, 1, 1, "", "enumerate"], [51, 1, 1, "", "expand"], [51, 1, 1, "", "flatten"], [51, 1, 1, "", "implements_for_spec"], [51, 1, 1, "", "index"], [51, 1, 1, "", "is_in"], [51, 1, 1, "", "make_neg_dim"], [51, 4, 1, "", "ndim"], [51, 1, 1, "", "ndimension"], [51, 1, 1, "", "one"], [51, 1, 1, "", "ones"], [51, 1, 1, "", "project"], [51, 1, 1, "", "rand"], [51, 1, 1, "", "reshape"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "squeeze"], [51, 1, 1, "", "to"], [51, 1, 1, "", "to_categorical"], [51, 1, 1, "", "to_categorical_spec"], [51, 1, 1, "", "to_numpy"], [51, 1, 1, "", "to_one_hot"], [51, 1, 1, "", "to_one_hot_spec"], [51, 1, 1, "", "type_check"], [51, 1, 1, "", "unflatten"], [51, 1, 1, "", "unsqueeze"], [51, 1, 1, "", "update_mask"], [51, 1, 1, "", "view"], [51, 1, 1, "", "zero"], [51, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[52, 4, 1, "", "batch_size"], [52, 4, 1, "", "device"], [52, 1, 1, "", "from_dataset"], [52, 1, 1, "", "from_tensordict"], [52, 1, 1, "", "get"], [52, 1, 1, "", "load"], [52, 1, 1, "", "load_"], [52, 1, 1, "", "load_memmap"], [52, 1, 1, "", "load_state_dict"], [52, 1, 1, "", "memmap"], [52, 1, 1, "", "memmap_"], [52, 1, 1, "", "memmap_like"], [52, 1, 1, "", "memmap_refresh_"], [52, 4, 1, "", "names"], [52, 1, 1, "", "save"], [52, 1, 1, "", "set"], [52, 1, 1, "", "state_dict"], [52, 1, 1, "", "to_tensordict"], [52, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dump"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "load"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "register_load_hook"], [53, 1, 1, "", "register_save_hook"], [53, 1, 1, "", "sample"], [53, 4, 1, "", "sampler"], [53, 1, 1, "", "save"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 4, 1, "", "storage"], [53, 4, 1, "", "write_count"], [53, 4, 1, "", "writer"]], "torchrl.data.PromptData": [[54, 4, 1, "", "batch_size"], [54, 4, 1, "", "device"], [54, 1, 1, "", "from_dataset"], [54, 1, 1, "", "from_tensordict"], [54, 1, 1, "", "get"], [54, 1, 1, "", "load"], [54, 1, 1, "", "load_"], [54, 1, 1, "", "load_memmap"], [54, 1, 1, "", "load_state_dict"], [54, 1, 1, "", "memmap"], [54, 1, 1, "", "memmap_"], [54, 1, 1, "", "memmap_like"], [54, 1, 1, "", "memmap_refresh_"], [54, 4, 1, "", "names"], [54, 1, 1, "", "save"], [54, 1, 1, "", "set"], [54, 1, 1, "", "state_dict"], [54, 1, 1, "", "to_tensordict"], [54, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "is_tdmodule_compatible"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "reset_out_keys"], [56, 1, 1, "", "reset_parameters_recursive"], [56, 1, 1, "", "select_out_keys"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[57, 1, 1, "", "add_module"], [57, 1, 1, "", "apply"], [57, 1, 1, "", "bfloat16"], [57, 1, 1, "", "buffers"], [57, 1, 1, "", "children"], [57, 1, 1, "", "compile"], [57, 1, 1, "", "cpu"], [57, 1, 1, "", "cuda"], [57, 1, 1, "", "double"], [57, 1, 1, "", "eval"], [57, 1, 1, "", "extra_repr"], [57, 1, 1, "", "fit"], [57, 1, 1, "", "float"], [57, 1, 1, "", "forward"], [57, 1, 1, "", "get_buffer"], [57, 1, 1, "", "get_extra_state"], [57, 1, 1, "", "get_parameter"], [57, 1, 1, "", "get_submodule"], [57, 1, 1, "", "half"], [57, 1, 1, "", "ipu"], [57, 1, 1, "", "load_state_dict"], [57, 1, 1, "", "modules"], [57, 1, 1, "", "mtia"], [57, 1, 1, "", "named_buffers"], [57, 1, 1, "", "named_children"], [57, 1, 1, "", "named_modules"], [57, 1, 1, "", "named_parameters"], [57, 1, 1, "", "parameters"], [57, 1, 1, "", "register_backward_hook"], [57, 1, 1, "", "register_buffer"], [57, 1, 1, "", "register_forward_hook"], [57, 1, 1, "", "register_forward_pre_hook"], [57, 1, 1, "", "register_full_backward_hook"], [57, 1, 1, "", "register_full_backward_pre_hook"], [57, 1, 1, "", "register_load_state_dict_post_hook"], [57, 1, 1, "", "register_load_state_dict_pre_hook"], [57, 1, 1, "", "register_module"], [57, 1, 1, "", "register_parameter"], [57, 1, 1, "", "register_state_dict_post_hook"], [57, 1, 1, "", "register_state_dict_pre_hook"], [57, 1, 1, "", "requires_grad_"], [57, 1, 1, "", "set_extra_state"], [57, 1, 1, "", "set_submodule"], [57, 1, 1, "", "share_memory"], [57, 1, 1, "", "state_dict"], [57, 1, 1, "", "to"], [57, 1, 1, "", "to_empty"], [57, 1, 1, "", "train"], [57, 1, 1, "", "type"], [57, 1, 1, "", "xpu"], [57, 1, 1, "", "zero_grad"]], "torchrl.data.ReplayBuffer": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dump"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "load"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "register_load_hook"], [58, 1, 1, "", "register_save_hook"], [58, 1, 1, "", "sample"], [58, 4, 1, "", "sampler"], [58, 1, 1, "", "save"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 4, 1, "", "storage"], [58, 4, 1, "", "write_count"], [58, 4, 1, "", "writer"]], "torchrl.data.RewardData": [[59, 4, 1, "", "batch_size"], [59, 4, 1, "", "device"], [59, 1, 1, "", "from_tensordict"], [59, 1, 1, "", "get"], [59, 1, 1, "", "load"], [59, 1, 1, "", "load_"], [59, 1, 1, "", "load_memmap"], [59, 1, 1, "", "load_state_dict"], [59, 1, 1, "", "memmap"], [59, 1, 1, "", "memmap_"], [59, 1, 1, "", "memmap_like"], [59, 1, 1, "", "memmap_refresh_"], [59, 4, 1, "", "names"], [59, 1, 1, "", "save"], [59, 1, 1, "", "set"], [59, 1, 1, "", "state_dict"], [59, 1, 1, "", "to_tensordict"], [59, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[60, 1, 1, "", "create_rollout_td"], [60, 1, 1, "", "generate"], [60, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[61, 1, 1, "", "add_module"], [61, 1, 1, "", "apply"], [61, 1, 1, "", "bfloat16"], [61, 1, 1, "", "buffers"], [61, 1, 1, "", "children"], [61, 1, 1, "", "compile"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 1, 1, "", "double"], [61, 1, 1, "", "eval"], [61, 1, 1, "", "extra_repr"], [61, 1, 1, "", "float"], [61, 1, 1, "", "forward"], [61, 1, 1, "", "get_buffer"], [61, 1, 1, "", "get_extra_state"], [61, 1, 1, "", "get_parameter"], [61, 1, 1, "", "get_submodule"], [61, 1, 1, "", "half"], [61, 1, 1, "", "ipu"], [61, 1, 1, "", "load_state_dict"], [61, 1, 1, "", "modules"], [61, 1, 1, "", "mtia"], [61, 1, 1, "", "named_buffers"], [61, 1, 1, "", "named_children"], [61, 1, 1, "", "named_modules"], [61, 1, 1, "", "named_parameters"], [61, 1, 1, "", "parameters"], [61, 1, 1, "", "register_backward_hook"], [61, 1, 1, "", "register_buffer"], [61, 1, 1, "", "register_forward_hook"], [61, 1, 1, "", "register_forward_pre_hook"], [61, 1, 1, "", "register_full_backward_hook"], [61, 1, 1, "", "register_full_backward_pre_hook"], [61, 1, 1, "", "register_load_state_dict_post_hook"], [61, 1, 1, "", "register_load_state_dict_pre_hook"], [61, 1, 1, "", "register_module"], [61, 1, 1, "", "register_parameter"], [61, 1, 1, "", "register_state_dict_post_hook"], [61, 1, 1, "", "register_state_dict_pre_hook"], [61, 1, 1, "", "requires_grad_"], [61, 1, 1, "", "set_extra_state"], [61, 1, 1, "", "set_submodule"], [61, 1, 1, "", "share_memory"], [61, 1, 1, "", "state_dict"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_empty"], [61, 1, 1, "", "train"], [61, 1, 1, "", "type"], [61, 1, 1, "", "xpu"], [61, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[62, 1, 1, "", "assert_is_in"], [62, 1, 1, "", "clear_device_"], [62, 1, 1, "", "clone"], [62, 1, 1, "", "contains"], [62, 1, 1, "", "cpu"], [62, 1, 1, "", "cuda"], [62, 4, 1, "", "device"], [62, 1, 1, "", "encode"], [62, 1, 1, "", "enumerate"], [62, 1, 1, "", "expand"], [62, 1, 1, "", "flatten"], [62, 1, 1, "", "implements_for_spec"], [62, 1, 1, "", "index"], [62, 1, 1, "", "is_in"], [62, 1, 1, "", "make_neg_dim"], [62, 4, 1, "", "ndim"], [62, 1, 1, "", "ndimension"], [62, 1, 1, "", "one"], [62, 1, 1, "", "ones"], [62, 1, 1, "", "project"], [62, 1, 1, "", "rand"], [62, 1, 1, "", "reshape"], [62, 1, 1, "", "sample"], [62, 1, 1, "", "squeeze"], [62, 1, 1, "", "to"], [62, 1, 1, "", "to_numpy"], [62, 1, 1, "", "type_check"], [62, 1, 1, "", "unflatten"], [62, 1, 1, "", "unsqueeze"], [62, 1, 1, "", "view"], [62, 1, 1, "", "zero"], [62, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[63, 1, 1, "", "assert_is_in"], [63, 1, 1, "", "clear_device_"], [63, 1, 1, "", "clone"], [63, 1, 1, "", "contains"], [63, 1, 1, "", "cpu"], [63, 1, 1, "", "cuda"], [63, 4, 1, "", "device"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "encode"], [63, 1, 1, "", "enumerate"], [63, 1, 1, "", "expand"], [63, 1, 1, "", "flatten"], [63, 1, 1, "", "get"], [63, 1, 1, "", "implements_for_spec"], [63, 1, 1, "", "index"], [63, 1, 1, "", "is_empty"], [63, 1, 1, "", "is_in"], [63, 1, 1, "", "items"], [63, 1, 1, "", "keys"], [63, 1, 1, "", "lock_"], [63, 1, 1, "", "make_neg_dim"], [63, 4, 1, "", "ndim"], [63, 1, 1, "", "ndimension"], [63, 1, 1, "", "one"], [63, 1, 1, "", "ones"], [63, 1, 1, "", "pop"], [63, 1, 1, "", "project"], [63, 1, 1, "", "rand"], [63, 1, 1, "", "reshape"], [63, 1, 1, "", "sample"], [63, 1, 1, "", "separates"], [63, 1, 1, "", "squeeze"], [63, 1, 1, "", "to"], [63, 1, 1, "", "to_numpy"], [63, 1, 1, "", "type_check"], [63, 1, 1, "", "unflatten"], [63, 1, 1, "", "unlock_"], [63, 1, 1, "", "unsqueeze"], [63, 1, 1, "", "values"], [63, 1, 1, "", "view"], [63, 1, 1, "", "zero"], [63, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "from_tensordict_pair"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dump"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "load"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "register_load_hook"], [67, 1, 1, "", "register_save_hook"], [67, 1, 1, "", "sample"], [67, 4, 1, "", "sampler"], [67, 1, 1, "", "save"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 4, 1, "", "storage"], [67, 4, 1, "", "write_count"], [67, 4, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 4, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 4, 1, "", "storage"], [68, 4, 1, "", "write_count"], [68, 4, 1, "", "writer"]], "torchrl.data.TensorSpec": [[71, 1, 1, "", "assert_is_in"], [71, 1, 1, "", "clear_device_"], [71, 1, 1, "", "clone"], [71, 1, 1, "", "contains"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 4, 1, "", "device"], [71, 1, 1, "", "encode"], [71, 1, 1, "", "enumerate"], [71, 1, 1, "", "expand"], [71, 1, 1, "", "flatten"], [71, 1, 1, "", "implements_for_spec"], [71, 1, 1, "", "index"], [71, 1, 1, "", "is_in"], [71, 1, 1, "", "make_neg_dim"], [71, 4, 1, "", "ndim"], [71, 1, 1, "", "ndimension"], [71, 1, 1, "", "one"], [71, 1, 1, "", "ones"], [71, 1, 1, "", "project"], [71, 1, 1, "", "rand"], [71, 1, 1, "", "reshape"], [71, 1, 1, "", "sample"], [71, 1, 1, "", "squeeze"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_numpy"], [71, 1, 1, "", "type_check"], [71, 1, 1, "", "unflatten"], [71, 1, 1, "", "unsqueeze"], [71, 1, 1, "", "view"], [71, 1, 1, "", "zero"], [71, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[72, 1, 1, "", "dataset_to_tensordict"], [72, 1, 1, "", "load"]], "torchrl.data.Tree": [[73, 4, 1, "", "batch_size"], [73, 4, 1, "", "device"], [73, 1, 1, "", "from_tensordict"], [73, 1, 1, "", "get"], [73, 1, 1, "", "get_vertex_by_hash"], [73, 1, 1, "", "get_vertex_by_id"], [73, 4, 1, "", "is_terminal"], [73, 1, 1, "", "load"], [73, 1, 1, "", "load_"], [73, 1, 1, "", "load_memmap"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "memmap"], [73, 1, 1, "", "memmap_"], [73, 1, 1, "", "memmap_like"], [73, 1, 1, "", "memmap_refresh_"], [73, 4, 1, "", "names"], [73, 4, 1, "", "num_children"], [73, 1, 1, "", "num_vertices"], [73, 1, 1, "", "save"], [73, 1, 1, "", "set"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to_tensordict"], [73, 1, 1, "", "unbind"], [73, 1, 1, "", "vertices"]], "torchrl.data.Unbounded": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 4, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 4, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 4, 1, "", "device"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "make_neg_dim"], [75, 4, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[76, 1, 1, "", "assert_is_in"], [76, 1, 1, "", "clear_device_"], [76, 1, 1, "", "clone"], [76, 1, 1, "", "contains"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 4, 1, "", "device"], [76, 1, 1, "", "encode"], [76, 1, 1, "", "enumerate"], [76, 1, 1, "", "expand"], [76, 1, 1, "", "flatten"], [76, 1, 1, "", "implements_for_spec"], [76, 1, 1, "", "index"], [76, 1, 1, "", "is_in"], [76, 1, 1, "", "make_neg_dim"], [76, 4, 1, "", "ndim"], [76, 1, 1, "", "ndimension"], [76, 1, 1, "", "one"], [76, 1, 1, "", "ones"], [76, 1, 1, "", "project"], [76, 1, 1, "", "rand"], [76, 1, 1, "", "reshape"], [76, 1, 1, "", "sample"], [76, 1, 1, "", "squeeze"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_numpy"], [76, 1, 1, "", "type_check"], [76, 1, 1, "", "unflatten"], [76, 1, 1, "", "unsqueeze"], [76, 1, 1, "", "view"], [76, 1, 1, "", "zero"], [76, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[77, 1, 1, "", "assert_is_in"], [77, 1, 1, "", "clear_device_"], [77, 1, 1, "", "clone"], [77, 1, 1, "", "contains"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 4, 1, "", "device"], [77, 1, 1, "", "encode"], [77, 1, 1, "", "enumerate"], [77, 1, 1, "", "expand"], [77, 1, 1, "", "flatten"], [77, 1, 1, "", "implements_for_spec"], [77, 1, 1, "", "index"], [77, 1, 1, "", "is_in"], [77, 1, 1, "", "make_neg_dim"], [77, 4, 1, "", "ndim"], [77, 1, 1, "", "ndimension"], [77, 1, 1, "", "one"], [77, 1, 1, "", "ones"], [77, 1, 1, "", "project"], [77, 1, 1, "", "rand"], [77, 1, 1, "", "reshape"], [77, 1, 1, "", "sample"], [77, 1, 1, "", "squeeze"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_numpy"], [77, 1, 1, "", "type_check"], [77, 1, 1, "", "unflatten"], [77, 1, 1, "", "unsqueeze"], [77, 1, 1, "", "view"], [77, 1, 1, "", "zero"], [77, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[78, 1, 1, "", "assert_is_in"], [78, 1, 1, "", "clear_device_"], [78, 1, 1, "", "clone"], [78, 1, 1, "", "contains"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 4, 1, "", "device"], [78, 1, 1, "", "encode"], [78, 1, 1, "", "enumerate"], [78, 1, 1, "", "expand"], [78, 1, 1, "", "flatten"], [78, 1, 1, "", "implements_for_spec"], [78, 1, 1, "", "index"], [78, 1, 1, "", "is_in"], [78, 1, 1, "", "make_neg_dim"], [78, 4, 1, "", "ndim"], [78, 1, 1, "", "ndimension"], [78, 1, 1, "", "one"], [78, 1, 1, "", "ones"], [78, 1, 1, "", "project"], [78, 1, 1, "", "rand"], [78, 1, 1, "", "reshape"], [78, 1, 1, "", "sample"], [78, 1, 1, "", "squeeze"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_numpy"], [78, 1, 1, "", "type_check"], [78, 1, 1, "", "unflatten"], [78, 1, 1, "", "unsqueeze"], [78, 1, 1, "", "view"], [78, 1, 1, "", "zero"], [78, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[83, 0, 1, "", "AtariDQNExperienceReplay"], [84, 0, 1, "", "BaseDatasetExperienceReplay"], [85, 0, 1, "", "D4RLExperienceReplay"], [86, 0, 1, "", "GenDGRLExperienceReplay"], [87, 0, 1, "", "MinariExperienceReplay"], [88, 0, 1, "", "OpenMLExperienceReplay"], [89, 0, 1, "", "OpenXExperienceReplay"], [90, 0, 1, "", "RobosetExperienceReplay"], [91, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[83, 1, 1, "", "add"], [83, 1, 1, "", "append_transform"], [83, 4, 1, "", "data_path"], [83, 4, 1, "", "data_path_root"], [83, 1, 1, "", "delete"], [83, 1, 1, "", "dump"], [83, 1, 1, "", "dumps"], [83, 1, 1, "", "empty"], [83, 1, 1, "", "extend"], [83, 1, 1, "", "insert_transform"], [83, 1, 1, "", "load"], [83, 1, 1, "", "loads"], [83, 1, 1, "", "preprocess"], [83, 1, 1, "", "register_load_hook"], [83, 1, 1, "", "register_save_hook"], [83, 1, 1, "", "sample"], [83, 4, 1, "", "sampler"], [83, 1, 1, "", "save"], [83, 1, 1, "", "set_sampler"], [83, 1, 1, "", "set_storage"], [83, 1, 1, "", "set_writer"], [83, 4, 1, "", "storage"], [83, 4, 1, "", "write_count"], [83, 4, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[84, 1, 1, "", "add"], [84, 1, 1, "", "append_transform"], [84, 4, 1, "", "data_path"], [84, 4, 1, "", "data_path_root"], [84, 1, 1, "", "delete"], [84, 1, 1, "", "dump"], [84, 1, 1, "", "dumps"], [84, 1, 1, "", "empty"], [84, 1, 1, "", "extend"], [84, 1, 1, "", "insert_transform"], [84, 1, 1, "", "load"], [84, 1, 1, "", "loads"], [84, 1, 1, "", "preprocess"], [84, 1, 1, "", "register_load_hook"], [84, 1, 1, "", "register_save_hook"], [84, 1, 1, "", "sample"], [84, 4, 1, "", "sampler"], [84, 1, 1, "", "save"], [84, 1, 1, "", "set_sampler"], [84, 1, 1, "", "set_storage"], [84, 1, 1, "", "set_writer"], [84, 4, 1, "", "storage"], [84, 4, 1, "", "write_count"], [84, 4, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[85, 1, 1, "", "add"], [85, 1, 1, "", "append_transform"], [85, 4, 1, "", "data_path"], [85, 4, 1, "", "data_path_root"], [85, 1, 1, "", "delete"], [85, 1, 1, "", "dump"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "empty"], [85, 1, 1, "", "extend"], [85, 1, 1, "", "insert_transform"], [85, 1, 1, "", "load"], [85, 1, 1, "", "loads"], [85, 1, 1, "", "preprocess"], [85, 1, 1, "", "register_load_hook"], [85, 1, 1, "", "register_save_hook"], [85, 1, 1, "", "sample"], [85, 4, 1, "", "sampler"], [85, 1, 1, "", "save"], [85, 1, 1, "", "set_sampler"], [85, 1, 1, "", "set_storage"], [85, 1, 1, "", "set_writer"], [85, 4, 1, "", "storage"], [85, 4, 1, "", "write_count"], [85, 4, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[86, 1, 1, "", "add"], [86, 1, 1, "", "append_transform"], [86, 4, 1, "", "data_path"], [86, 4, 1, "", "data_path_root"], [86, 1, 1, "", "delete"], [86, 1, 1, "", "dump"], [86, 1, 1, "", "dumps"], [86, 1, 1, "", "empty"], [86, 1, 1, "", "extend"], [86, 1, 1, "", "insert_transform"], [86, 1, 1, "", "load"], [86, 1, 1, "", "loads"], [86, 1, 1, "", "preprocess"], [86, 1, 1, "", "register_load_hook"], [86, 1, 1, "", "register_save_hook"], [86, 1, 1, "", "sample"], [86, 4, 1, "", "sampler"], [86, 1, 1, "", "save"], [86, 1, 1, "", "set_sampler"], [86, 1, 1, "", "set_storage"], [86, 1, 1, "", "set_writer"], [86, 4, 1, "", "storage"], [86, 4, 1, "", "write_count"], [86, 4, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[87, 1, 1, "", "add"], [87, 1, 1, "", "append_transform"], [87, 4, 1, "", "data_path"], [87, 4, 1, "", "data_path_root"], [87, 1, 1, "", "delete"], [87, 1, 1, "", "dump"], [87, 1, 1, "", "dumps"], [87, 1, 1, "", "empty"], [87, 1, 1, "", "extend"], [87, 1, 1, "", "insert_transform"], [87, 1, 1, "", "load"], [87, 1, 1, "", "loads"], [87, 1, 1, "", "preprocess"], [87, 1, 1, "", "register_load_hook"], [87, 1, 1, "", "register_save_hook"], [87, 1, 1, "", "sample"], [87, 4, 1, "", "sampler"], [87, 1, 1, "", "save"], [87, 1, 1, "", "set_sampler"], [87, 1, 1, "", "set_storage"], [87, 1, 1, "", "set_writer"], [87, 4, 1, "", "storage"], [87, 4, 1, "", "write_count"], [87, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[88, 1, 1, "", "add"], [88, 1, 1, "", "append_transform"], [88, 4, 1, "", "data_path"], [88, 4, 1, "", "data_path_root"], [88, 1, 1, "", "delete"], [88, 1, 1, "", "dump"], [88, 1, 1, "", "dumps"], [88, 1, 1, "", "empty"], [88, 1, 1, "", "extend"], [88, 1, 1, "", "insert_transform"], [88, 1, 1, "", "load"], [88, 1, 1, "", "loads"], [88, 1, 1, "", "preprocess"], [88, 1, 1, "", "register_load_hook"], [88, 1, 1, "", "register_save_hook"], [88, 1, 1, "", "sample"], [88, 4, 1, "", "sampler"], [88, 1, 1, "", "save"], [88, 1, 1, "", "set_sampler"], [88, 1, 1, "", "set_storage"], [88, 1, 1, "", "set_writer"], [88, 4, 1, "", "storage"], [88, 4, 1, "", "write_count"], [88, 4, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[89, 1, 1, "", "add"], [89, 1, 1, "", "append_transform"], [89, 4, 1, "", "data_path"], [89, 4, 1, "", "data_path_root"], [89, 1, 1, "", "delete"], [89, 1, 1, "", "dump"], [89, 1, 1, "", "dumps"], [89, 1, 1, "", "empty"], [89, 1, 1, "", "extend"], [89, 1, 1, "", "insert_transform"], [89, 1, 1, "", "load"], [89, 1, 1, "", "loads"], [89, 1, 1, "", "preprocess"], [89, 1, 1, "", "register_load_hook"], [89, 1, 1, "", "register_save_hook"], [89, 1, 1, "", "sample"], [89, 4, 1, "", "sampler"], [89, 1, 1, "", "save"], [89, 1, 1, "", "set_sampler"], [89, 1, 1, "", "set_storage"], [89, 1, 1, "", "set_writer"], [89, 4, 1, "", "storage"], [89, 4, 1, "", "write_count"], [89, 4, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[90, 1, 1, "", "add"], [90, 1, 1, "", "append_transform"], [90, 4, 1, "", "data_path"], [90, 4, 1, "", "data_path_root"], [90, 1, 1, "", "delete"], [90, 1, 1, "", "dump"], [90, 1, 1, "", "dumps"], [90, 1, 1, "", "empty"], [90, 1, 1, "", "extend"], [90, 1, 1, "", "insert_transform"], [90, 1, 1, "", "load"], [90, 1, 1, "", "loads"], [90, 1, 1, "", "preprocess"], [90, 1, 1, "", "register_load_hook"], [90, 1, 1, "", "register_save_hook"], [90, 1, 1, "", "sample"], [90, 4, 1, "", "sampler"], [90, 1, 1, "", "save"], [90, 1, 1, "", "set_sampler"], [90, 1, 1, "", "set_storage"], [90, 1, 1, "", "set_writer"], [90, 4, 1, "", "storage"], [90, 4, 1, "", "write_count"], [90, 4, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[91, 1, 1, "", "add"], [91, 1, 1, "", "append_transform"], [91, 4, 1, "", "data_path"], [91, 4, 1, "", "data_path_root"], [91, 1, 1, "", "delete"], [91, 1, 1, "", "dump"], [91, 1, 1, "", "dumps"], [91, 1, 1, "", "empty"], [91, 1, 1, "", "extend"], [91, 1, 1, "", "insert_transform"], [91, 1, 1, "", "load"], [91, 1, 1, "", "loads"], [91, 1, 1, "", "preprocess"], [91, 1, 1, "", "register_load_hook"], [91, 1, 1, "", "register_save_hook"], [91, 1, 1, "", "sample"], [91, 4, 1, "", "sampler"], [91, 1, 1, "", "save"], [91, 1, 1, "", "set_sampler"], [91, 1, 1, "", "set_storage"], [91, 1, 1, "", "set_writer"], [91, 4, 1, "", "storage"], [91, 4, 1, "", "write_count"], [91, 4, 1, "", "writer"]], "torchrl.data.replay_buffers": [[93, 0, 1, "", "FlatStorageCheckpointer"], [94, 0, 1, "", "H5StorageCheckpointer"], [95, 0, 1, "", "ImmutableDatasetWriter"], [96, 0, 1, "", "LazyMemmapStorage"], [97, 0, 1, "", "LazyTensorStorage"], [98, 0, 1, "", "ListStorage"], [99, 0, 1, "", "ListStorageCheckpointer"], [100, 0, 1, "", "NestedStorageCheckpointer"], [101, 0, 1, "", "PrioritizedSampler"], [102, 0, 1, "", "PrioritizedSliceSampler"], [103, 0, 1, "", "RandomSampler"], [104, 0, 1, "", "ReplayBufferEnsemble"], [105, 0, 1, "", "RoundRobinWriter"], [106, 0, 1, "", "Sampler"], [107, 0, 1, "", "SamplerEnsemble"], [108, 0, 1, "", "SamplerWithoutReplacement"], [109, 0, 1, "", "SliceSampler"], [110, 0, 1, "", "SliceSamplerWithoutReplacement"], [111, 0, 1, "", "Storage"], [112, 0, 1, "", "StorageCheckpointerBase"], [113, 0, 1, "", "StorageEnsemble"], [114, 0, 1, "", "StorageEnsembleCheckpointer"], [115, 0, 1, "", "TensorDictMaxValueWriter"], [116, 0, 1, "", "TensorDictRoundRobinWriter"], [117, 0, 1, "", "TensorStorage"], [118, 0, 1, "", "TensorStorageCheckpointer"], [119, 0, 1, "", "Writer"], [120, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[95, 1, 1, "", "add"], [95, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[96, 1, 1, "", "attach"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "load"], [96, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[97, 1, 1, "", "attach"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "load"], [97, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[98, 1, 1, "", "attach"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "load"], [98, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[101, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[102, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[104, 1, 1, "", "add"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "dump"], [104, 1, 1, "", "dumps"], [104, 1, 1, "", "empty"], [104, 1, 1, "", "extend"], [104, 1, 1, "", "insert_transform"], [104, 1, 1, "", "load"], [104, 1, 1, "", "loads"], [104, 1, 1, "", "register_load_hook"], [104, 1, 1, "", "register_save_hook"], [104, 1, 1, "", "sample"], [104, 4, 1, "", "sampler"], [104, 1, 1, "", "save"], [104, 1, 1, "", "set_sampler"], [104, 1, 1, "", "set_storage"], [104, 1, 1, "", "set_writer"], [104, 4, 1, "", "storage"], [104, 4, 1, "", "write_count"], [104, 4, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[113, 1, 1, "", "attach"], [113, 1, 1, "", "dump"], [113, 1, 1, "", "load"], [113, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[115, 1, 1, "", "add"], [115, 1, 1, "", "extend"], [115, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[117, 1, 1, "", "attach"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "load"], [117, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[119, 1, 1, "", "add"], [119, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[120, 1, 1, "", "add"], [120, 1, 1, "", "extend"]], "torchrl.envs": [[121, 2, 1, "", "BraxEnv"], [122, 2, 1, "", "BraxWrapper"], [123, 2, 1, "", "DMControlEnv"], [124, 2, 1, "", "DMControlWrapper"], [125, 0, 1, "", "EnvBase"], [126, 0, 1, "", "EnvCreator"], [127, 0, 1, "", "EnvMetaData"], [128, 2, 1, "", "GymEnv"], [129, 0, 1, "", "GymLikeEnv"], [130, 2, 1, "", "GymWrapper"], [131, 2, 1, "", "HabitatEnv"], [132, 2, 1, "", "IsaacGymEnv"], [133, 2, 1, "", "IsaacGymWrapper"], [134, 2, 1, "", "JumanjiEnv"], [135, 2, 1, "", "JumanjiWrapper"], [136, 2, 1, "", "MOGymEnv"], [137, 2, 1, "", "MOGymWrapper"], [138, 2, 1, "", "MarlGroupMapType"], [139, 2, 1, "", "MeltingpotEnv"], [140, 2, 1, "", "MeltingpotWrapper"], [141, 2, 1, "", "ModelBasedEnvBase"], [142, 2, 1, "", "MultiThreadedEnv"], [143, 2, 1, "", "MultiThreadedEnvWrapper"], [144, 2, 1, "", "OpenMLEnv"], [145, 2, 1, "", "OpenSpielEnv"], [146, 2, 1, "", "OpenSpielWrapper"], [147, 0, 1, "", "ParallelEnv"], [148, 0, 1, "", "PendulumEnv"], [149, 2, 1, "", "PettingZooEnv"], [150, 2, 1, "", "PettingZooWrapper"], [151, 2, 1, "", "RoboHiveEnv"], [152, 2, 1, "", "SMACv2Env"], [153, 2, 1, "", "SMACv2Wrapper"], [154, 0, 1, "", "SerialEnv"], [155, 0, 1, "", "TicTacToeEnv"], [156, 2, 1, "", "UnityMLAgentsEnv"], [157, 2, 1, "", "UnityMLAgentsWrapper"], [158, 2, 1, "", "VmasEnv"], [159, 2, 1, "", "VmasWrapper"], [160, 2, 1, "", "check_marl_grouping"], [161, 2, 1, "", "gym_backend"], [141, 1, 1, "", "rand_step"], [141, 1, 1, "", "reset"], [141, 1, 1, "", "rollout"], [164, 2, 1, "", "set_gym_backend"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[125, 4, 1, "", "action_key"], [125, 4, 1, "", "action_keys"], [125, 4, 1, "", "action_spec"], [125, 4, 1, "", "action_spec_unbatched"], [125, 1, 1, "", "add_module"], [125, 1, 1, "", "add_truncated_keys"], [125, 1, 1, "", "append_transform"], [125, 1, 1, "", "apply"], [125, 1, 1, "", "auto_specs_"], [125, 4, 1, "", "batch_dims"], [125, 4, 1, "", "batch_locked"], [125, 4, 1, "", "batch_size"], [125, 1, 1, "", "bfloat16"], [125, 1, 1, "", "buffers"], [125, 1, 1, "", "check_env_specs"], [125, 1, 1, "", "children"], [125, 1, 1, "", "compile"], [125, 1, 1, "", "cpu"], [125, 1, 1, "", "cuda"], [125, 4, 1, "", "done_key"], [125, 4, 1, "", "done_keys"], [125, 4, 1, "", "done_keys_groups"], [125, 4, 1, "", "done_spec"], [125, 4, 1, "", "done_spec_unbatched"], [125, 1, 1, "", "double"], [125, 1, 1, "", "empty_cache"], [125, 1, 1, "", "eval"], [125, 1, 1, "", "extra_repr"], [125, 1, 1, "", "fake_tensordict"], [125, 1, 1, "", "float"], [125, 1, 1, "", "forward"], [125, 4, 1, "", "full_action_spec"], [125, 4, 1, "", "full_action_spec_unbatched"], [125, 4, 1, "", "full_done_spec"], [125, 4, 1, "", "full_done_spec_unbatched"], [125, 4, 1, "", "full_observation_spec_unbatched"], [125, 4, 1, "", "full_reward_spec"], [125, 4, 1, "", "full_reward_spec_unbatched"], [125, 4, 1, "", "full_state_spec"], [125, 4, 1, "", "full_state_spec_unbatched"], [125, 1, 1, "", "get_buffer"], [125, 1, 1, "", "get_extra_state"], [125, 1, 1, "", "get_parameter"], [125, 1, 1, "", "get_submodule"], [125, 1, 1, "", "half"], [125, 4, 1, "", "input_spec"], [125, 4, 1, "", "input_spec_unbatched"], [125, 1, 1, "", "ipu"], [125, 1, 1, "", "load_state_dict"], [125, 1, 1, "", "maybe_reset"], [125, 1, 1, "", "modules"], [125, 1, 1, "", "mtia"], [125, 1, 1, "", "named_buffers"], [125, 1, 1, "", "named_children"], [125, 1, 1, "", "named_modules"], [125, 1, 1, "", "named_parameters"], [125, 4, 1, "", "observation_spec"], [125, 4, 1, "", "observation_spec_unbatched"], [125, 4, 1, "", "output_spec"], [125, 4, 1, "", "output_spec_unbatched"], [125, 1, 1, "", "parameters"], [125, 1, 1, "", "rand_action"], [125, 1, 1, "id0", "rand_step"], [125, 1, 1, "", "register_backward_hook"], [125, 1, 1, "", "register_buffer"], [125, 1, 1, "", "register_forward_hook"], [125, 1, 1, "", "register_forward_pre_hook"], [125, 1, 1, "", "register_full_backward_hook"], [125, 1, 1, "", "register_full_backward_pre_hook"], [125, 1, 1, "", "register_gym"], [125, 1, 1, "", "register_load_state_dict_post_hook"], [125, 1, 1, "", "register_load_state_dict_pre_hook"], [125, 1, 1, "", "register_module"], [125, 1, 1, "", "register_parameter"], [125, 1, 1, "", "register_state_dict_post_hook"], [125, 1, 1, "", "register_state_dict_pre_hook"], [125, 1, 1, "", "requires_grad_"], [125, 1, 1, "id1", "reset"], [125, 4, 1, "", "reset_keys"], [125, 4, 1, "", "reward_key"], [125, 4, 1, "", "reward_keys"], [125, 4, 1, "", "reward_spec"], [125, 4, 1, "", "reward_spec_unbatched"], [125, 1, 1, "id2", "rollout"], [125, 1, 1, "", "set_extra_state"], [125, 1, 1, "id3", "set_seed"], [125, 1, 1, "", "set_submodule"], [125, 4, 1, "", "shape"], [125, 1, 1, "", "share_memory"], [125, 4, 1, "", "specs"], [125, 1, 1, "", "state_dict"], [125, 4, 1, "", "state_keys"], [125, 4, 1, "", "state_spec"], [125, 4, 1, "", "state_spec_unbatched"], [125, 1, 1, "id4", "step"], [125, 1, 1, "", "step_and_maybe_reset"], [125, 1, 1, "", "to"], [125, 1, 1, "", "to_empty"], [125, 1, 1, "", "train"], [125, 1, 1, "", "type"], [125, 1, 1, "", "xpu"], [125, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[126, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[129, 4, 1, "", "action_key"], [129, 4, 1, "", "action_keys"], [129, 4, 1, "", "action_spec"], [129, 4, 1, "", "action_spec_unbatched"], [129, 1, 1, "", "add_module"], [129, 1, 1, "", "add_truncated_keys"], [129, 1, 1, "", "append_transform"], [129, 1, 1, "", "apply"], [129, 1, 1, "", "auto_register_info_dict"], [129, 1, 1, "", "auto_specs_"], [129, 4, 1, "", "batch_dims"], [129, 4, 1, "", "batch_locked"], [129, 4, 1, "", "batch_size"], [129, 1, 1, "", "bfloat16"], [129, 1, 1, "", "buffers"], [129, 1, 1, "", "check_env_specs"], [129, 1, 1, "", "children"], [129, 1, 1, "", "close"], [129, 1, 1, "", "compile"], [129, 1, 1, "", "cpu"], [129, 1, 1, "", "cuda"], [129, 4, 1, "", "done_key"], [129, 4, 1, "", "done_keys"], [129, 4, 1, "", "done_keys_groups"], [129, 4, 1, "", "done_spec"], [129, 4, 1, "", "done_spec_unbatched"], [129, 1, 1, "", "double"], [129, 1, 1, "", "empty_cache"], [129, 1, 1, "", "eval"], [129, 1, 1, "", "extra_repr"], [129, 1, 1, "", "fake_tensordict"], [129, 1, 1, "", "float"], [129, 1, 1, "", "forward"], [129, 4, 1, "", "full_action_spec"], [129, 4, 1, "", "full_action_spec_unbatched"], [129, 4, 1, "", "full_done_spec"], [129, 4, 1, "", "full_done_spec_unbatched"], [129, 4, 1, "", "full_observation_spec_unbatched"], [129, 4, 1, "", "full_reward_spec"], [129, 4, 1, "", "full_reward_spec_unbatched"], [129, 4, 1, "", "full_state_spec"], [129, 4, 1, "", "full_state_spec_unbatched"], [129, 1, 1, "", "get_buffer"], [129, 1, 1, "", "get_extra_state"], [129, 1, 1, "", "get_parameter"], [129, 1, 1, "", "get_submodule"], [129, 1, 1, "", "half"], [129, 4, 1, "", "input_spec"], [129, 4, 1, "", "input_spec_unbatched"], [129, 1, 1, "", "ipu"], [129, 1, 1, "", "load_state_dict"], [129, 1, 1, "", "maybe_reset"], [129, 1, 1, "", "modules"], [129, 1, 1, "", "mtia"], [129, 1, 1, "", "named_buffers"], [129, 1, 1, "", "named_children"], [129, 1, 1, "", "named_modules"], [129, 1, 1, "", "named_parameters"], [129, 4, 1, "", "observation_spec"], [129, 4, 1, "", "observation_spec_unbatched"], [129, 4, 1, "", "output_spec"], [129, 4, 1, "", "output_spec_unbatched"], [129, 1, 1, "", "parameters"], [129, 1, 1, "", "rand_action"], [129, 1, 1, "", "rand_step"], [129, 1, 1, "", "read_action"], [129, 1, 1, "", "read_done"], [129, 1, 1, "", "read_obs"], [129, 1, 1, "", "read_reward"], [129, 1, 1, "", "register_backward_hook"], [129, 1, 1, "", "register_buffer"], [129, 1, 1, "", "register_forward_hook"], [129, 1, 1, "", "register_forward_pre_hook"], [129, 1, 1, "", "register_full_backward_hook"], [129, 1, 1, "", "register_full_backward_pre_hook"], [129, 1, 1, "", "register_gym"], [129, 1, 1, "", "register_load_state_dict_post_hook"], [129, 1, 1, "", "register_load_state_dict_pre_hook"], [129, 1, 1, "", "register_module"], [129, 1, 1, "", "register_parameter"], [129, 1, 1, "", "register_state_dict_post_hook"], [129, 1, 1, "", "register_state_dict_pre_hook"], [129, 1, 1, "", "requires_grad_"], [129, 1, 1, "", "reset"], [129, 4, 1, "", "reset_keys"], [129, 4, 1, "", "reward_key"], [129, 4, 1, "", "reward_keys"], [129, 4, 1, "", "reward_spec"], [129, 4, 1, "", "reward_spec_unbatched"], [129, 1, 1, "", "rollout"], [129, 1, 1, "", "set_extra_state"], [129, 1, 1, "", "set_info_dict_reader"], [129, 1, 1, "", "set_seed"], [129, 1, 1, "", "set_submodule"], [129, 4, 1, "", "shape"], [129, 1, 1, "", "share_memory"], [129, 4, 1, "", "specs"], [129, 1, 1, "", "state_dict"], [129, 4, 1, "", "state_keys"], [129, 4, 1, "", "state_spec"], [129, 4, 1, "", "state_spec_unbatched"], [129, 1, 1, "", "step"], [129, 1, 1, "", "step_and_maybe_reset"], [129, 1, 1, "", "to"], [129, 1, 1, "", "to_empty"], [129, 1, 1, "", "train"], [129, 1, 1, "", "type"], [129, 1, 1, "", "xpu"], [129, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[147, 4, 1, "", "action_key"], [147, 4, 1, "", "action_keys"], [147, 4, 1, "", "action_spec"], [147, 4, 1, "", "action_spec_unbatched"], [147, 1, 1, "", "add_module"], [147, 1, 1, "", "add_truncated_keys"], [147, 1, 1, "", "append_transform"], [147, 1, 1, "", "apply"], [147, 1, 1, "", "auto_specs_"], [147, 4, 1, "", "batch_dims"], [147, 4, 1, "", "batch_locked"], [147, 4, 1, "", "batch_size"], [147, 1, 1, "", "bfloat16"], [147, 1, 1, "", "buffers"], [147, 1, 1, "", "check_env_specs"], [147, 1, 1, "", "children"], [147, 1, 1, "", "compile"], [147, 1, 1, "", "cpu"], [147, 1, 1, "", "cuda"], [147, 4, 1, "", "done_key"], [147, 4, 1, "", "done_keys"], [147, 4, 1, "", "done_keys_groups"], [147, 4, 1, "", "done_spec"], [147, 4, 1, "", "done_spec_unbatched"], [147, 1, 1, "", "double"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 1, 1, "", "extra_repr"], [147, 1, 1, "", "fake_tensordict"], [147, 1, 1, "", "float"], [147, 1, 1, "", "forward"], [147, 4, 1, "", "full_action_spec"], [147, 4, 1, "", "full_action_spec_unbatched"], [147, 4, 1, "", "full_done_spec"], [147, 4, 1, "", "full_done_spec_unbatched"], [147, 4, 1, "", "full_observation_spec_unbatched"], [147, 4, 1, "", "full_reward_spec"], [147, 4, 1, "", "full_reward_spec_unbatched"], [147, 4, 1, "", "full_state_spec"], [147, 4, 1, "", "full_state_spec_unbatched"], [147, 1, 1, "", "get_buffer"], [147, 1, 1, "", "get_extra_state"], [147, 1, 1, "", "get_parameter"], [147, 1, 1, "", "get_submodule"], [147, 1, 1, "", "half"], [147, 4, 1, "", "input_spec"], [147, 4, 1, "", "input_spec_unbatched"], [147, 1, 1, "", "ipu"], [147, 1, 1, "", "load_state_dict"], [147, 1, 1, "", "maybe_reset"], [147, 1, 1, "", "modules"], [147, 1, 1, "", "mtia"], [147, 1, 1, "", "named_buffers"], [147, 1, 1, "", "named_children"], [147, 1, 1, "", "named_modules"], [147, 1, 1, "", "named_parameters"], [147, 4, 1, "", "observation_spec"], [147, 4, 1, "", "observation_spec_unbatched"], [147, 4, 1, "", "output_spec"], [147, 4, 1, "", "output_spec_unbatched"], [147, 1, 1, "", "parameters"], [147, 1, 1, "", "rand_action"], [147, 1, 1, "", "rand_step"], [147, 1, 1, "", "register_backward_hook"], [147, 1, 1, "", "register_buffer"], [147, 1, 1, "", "register_forward_hook"], [147, 1, 1, "", "register_forward_pre_hook"], [147, 1, 1, "", "register_full_backward_hook"], [147, 1, 1, "", "register_full_backward_pre_hook"], [147, 1, 1, "", "register_gym"], [147, 1, 1, "", "register_load_state_dict_post_hook"], [147, 1, 1, "", "register_load_state_dict_pre_hook"], [147, 1, 1, "", "register_module"], [147, 1, 1, "", "register_parameter"], [147, 1, 1, "", "register_state_dict_post_hook"], [147, 1, 1, "", "register_state_dict_pre_hook"], [147, 1, 1, "", "requires_grad_"], [147, 1, 1, "", "reset"], [147, 4, 1, "", "reset_keys"], [147, 4, 1, "", "reward_key"], [147, 4, 1, "", "reward_keys"], [147, 4, 1, "", "reward_spec"], [147, 4, 1, "", "reward_spec_unbatched"], [147, 1, 1, "", "rollout"], [147, 1, 1, "", "set_extra_state"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "set_submodule"], [147, 4, 1, "", "shape"], [147, 1, 1, "", "share_memory"], [147, 4, 1, "", "specs"], [147, 1, 1, "", "state_dict"], [147, 4, 1, "", "state_keys"], [147, 4, 1, "", "state_spec"], [147, 4, 1, "", "state_spec_unbatched"], [147, 1, 1, "", "step"], [147, 1, 1, "", "step_and_maybe_reset"], [147, 1, 1, "", "to"], [147, 1, 1, "", "to_empty"], [147, 1, 1, "", "train"], [147, 1, 1, "", "type"], [147, 1, 1, "", "update_kwargs"], [147, 1, 1, "", "xpu"], [147, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[148, 4, 1, "", "action_key"], [148, 4, 1, "", "action_keys"], [148, 4, 1, "", "action_spec"], [148, 4, 1, "", "action_spec_unbatched"], [148, 1, 1, "", "add_module"], [148, 1, 1, "", "add_truncated_keys"], [148, 1, 1, "", "append_transform"], [148, 1, 1, "", "apply"], [148, 1, 1, "", "auto_specs_"], [148, 4, 1, "", "batch_dims"], [148, 4, 1, "", "batch_size"], [148, 1, 1, "", "bfloat16"], [148, 1, 1, "", "buffers"], [148, 1, 1, "", "check_env_specs"], [148, 1, 1, "", "children"], [148, 1, 1, "", "compile"], [148, 1, 1, "", "cpu"], [148, 1, 1, "", "cuda"], [148, 4, 1, "", "done_key"], [148, 4, 1, "", "done_keys"], [148, 4, 1, "", "done_keys_groups"], [148, 4, 1, "", "done_spec"], [148, 4, 1, "", "done_spec_unbatched"], [148, 1, 1, "", "double"], [148, 1, 1, "", "empty_cache"], [148, 1, 1, "", "eval"], [148, 1, 1, "", "extra_repr"], [148, 1, 1, "", "fake_tensordict"], [148, 1, 1, "", "float"], [148, 1, 1, "", "forward"], [148, 4, 1, "", "full_action_spec"], [148, 4, 1, "", "full_action_spec_unbatched"], [148, 4, 1, "", "full_done_spec"], [148, 4, 1, "", "full_done_spec_unbatched"], [148, 4, 1, "", "full_observation_spec_unbatched"], [148, 4, 1, "", "full_reward_spec"], [148, 4, 1, "", "full_reward_spec_unbatched"], [148, 4, 1, "", "full_state_spec"], [148, 4, 1, "", "full_state_spec_unbatched"], [148, 1, 1, "", "gen_params"], [148, 1, 1, "", "get_buffer"], [148, 1, 1, "", "get_extra_state"], [148, 1, 1, "", "get_parameter"], [148, 1, 1, "", "get_submodule"], [148, 1, 1, "", "half"], [148, 4, 1, "", "input_spec"], [148, 4, 1, "", "input_spec_unbatched"], [148, 1, 1, "", "ipu"], [148, 1, 1, "", "load_state_dict"], [148, 1, 1, "", "maybe_reset"], [148, 1, 1, "", "modules"], [148, 1, 1, "", "mtia"], [148, 1, 1, "", "named_buffers"], [148, 1, 1, "", "named_children"], [148, 1, 1, "", "named_modules"], [148, 1, 1, "", "named_parameters"], [148, 4, 1, "", "observation_spec"], [148, 4, 1, "", "observation_spec_unbatched"], [148, 4, 1, "", "output_spec"], [148, 4, 1, "", "output_spec_unbatched"], [148, 1, 1, "", "parameters"], [148, 1, 1, "", "rand_action"], [148, 1, 1, "", "rand_step"], [148, 1, 1, "", "register_backward_hook"], [148, 1, 1, "", "register_buffer"], [148, 1, 1, "", "register_forward_hook"], [148, 1, 1, "", "register_forward_pre_hook"], [148, 1, 1, "", "register_full_backward_hook"], [148, 1, 1, "", "register_full_backward_pre_hook"], [148, 1, 1, "", "register_gym"], [148, 1, 1, "", "register_load_state_dict_post_hook"], [148, 1, 1, "", "register_load_state_dict_pre_hook"], [148, 1, 1, "", "register_module"], [148, 1, 1, "", "register_parameter"], [148, 1, 1, "", "register_state_dict_post_hook"], [148, 1, 1, "", "register_state_dict_pre_hook"], [148, 1, 1, "", "requires_grad_"], [148, 1, 1, "", "reset"], [148, 4, 1, "", "reset_keys"], [148, 4, 1, "", "reward_key"], [148, 4, 1, "", "reward_keys"], [148, 4, 1, "", "reward_spec"], [148, 4, 1, "", "reward_spec_unbatched"], [148, 1, 1, "", "rollout"], [148, 1, 1, "", "set_extra_state"], [148, 1, 1, "", "set_seed"], [148, 1, 1, "", "set_submodule"], [148, 4, 1, "", "shape"], [148, 1, 1, "", "share_memory"], [148, 4, 1, "", "specs"], [148, 1, 1, "", "state_dict"], [148, 4, 1, "", "state_keys"], [148, 4, 1, "", "state_spec"], [148, 4, 1, "", "state_spec_unbatched"], [148, 1, 1, "", "step"], [148, 1, 1, "", "step_and_maybe_reset"], [148, 1, 1, "", "to"], [148, 1, 1, "", "to_empty"], [148, 1, 1, "", "train"], [148, 1, 1, "", "type"], [148, 1, 1, "", "xpu"], [148, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[154, 4, 1, "", "action_key"], [154, 4, 1, "", "action_keys"], [154, 4, 1, "", "action_spec"], [154, 4, 1, "", "action_spec_unbatched"], [154, 1, 1, "", "add_module"], [154, 1, 1, "", "add_truncated_keys"], [154, 1, 1, "", "append_transform"], [154, 1, 1, "", "apply"], [154, 1, 1, "", "auto_specs_"], [154, 4, 1, "", "batch_dims"], [154, 4, 1, "", "batch_locked"], [154, 4, 1, "", "batch_size"], [154, 1, 1, "", "bfloat16"], [154, 1, 1, "", "buffers"], [154, 1, 1, "", "check_env_specs"], [154, 1, 1, "", "children"], [154, 1, 1, "", "compile"], [154, 1, 1, "", "cpu"], [154, 1, 1, "", "cuda"], [154, 4, 1, "", "done_key"], [154, 4, 1, "", "done_keys"], [154, 4, 1, "", "done_keys_groups"], [154, 4, 1, "", "done_spec"], [154, 4, 1, "", "done_spec_unbatched"], [154, 1, 1, "", "double"], [154, 1, 1, "", "empty_cache"], [154, 1, 1, "", "eval"], [154, 1, 1, "", "extra_repr"], [154, 1, 1, "", "fake_tensordict"], [154, 1, 1, "", "float"], [154, 1, 1, "", "forward"], [154, 4, 1, "", "full_action_spec"], [154, 4, 1, "", "full_action_spec_unbatched"], [154, 4, 1, "", "full_done_spec"], [154, 4, 1, "", "full_done_spec_unbatched"], [154, 4, 1, "", "full_observation_spec_unbatched"], [154, 4, 1, "", "full_reward_spec"], [154, 4, 1, "", "full_reward_spec_unbatched"], [154, 4, 1, "", "full_state_spec"], [154, 4, 1, "", "full_state_spec_unbatched"], [154, 1, 1, "", "get_buffer"], [154, 1, 1, "", "get_extra_state"], [154, 1, 1, "", "get_parameter"], [154, 1, 1, "", "get_submodule"], [154, 1, 1, "", "half"], [154, 4, 1, "", "input_spec"], [154, 4, 1, "", "input_spec_unbatched"], [154, 1, 1, "", "ipu"], [154, 1, 1, "", "load_state_dict"], [154, 1, 1, "", "maybe_reset"], [154, 1, 1, "", "modules"], [154, 1, 1, "", "mtia"], [154, 1, 1, "", "named_buffers"], [154, 1, 1, "", "named_children"], [154, 1, 1, "", "named_modules"], [154, 1, 1, "", "named_parameters"], [154, 4, 1, "", "observation_spec"], [154, 4, 1, "", "observation_spec_unbatched"], [154, 4, 1, "", "output_spec"], [154, 4, 1, "", "output_spec_unbatched"], [154, 1, 1, "", "parameters"], [154, 1, 1, "", "rand_action"], [154, 1, 1, "", "rand_step"], [154, 1, 1, "", "register_backward_hook"], [154, 1, 1, "", "register_buffer"], [154, 1, 1, "", "register_forward_hook"], [154, 1, 1, "", "register_forward_pre_hook"], [154, 1, 1, "", "register_full_backward_hook"], [154, 1, 1, "", "register_full_backward_pre_hook"], [154, 1, 1, "", "register_gym"], [154, 1, 1, "", "register_load_state_dict_post_hook"], [154, 1, 1, "", "register_load_state_dict_pre_hook"], [154, 1, 1, "", "register_module"], [154, 1, 1, "", "register_parameter"], [154, 1, 1, "", "register_state_dict_post_hook"], [154, 1, 1, "", "register_state_dict_pre_hook"], [154, 1, 1, "", "requires_grad_"], [154, 1, 1, "", "reset"], [154, 4, 1, "", "reset_keys"], [154, 4, 1, "", "reward_key"], [154, 4, 1, "", "reward_keys"], [154, 4, 1, "", "reward_spec"], [154, 4, 1, "", "reward_spec_unbatched"], [154, 1, 1, "", "rollout"], [154, 1, 1, "", "set_extra_state"], [154, 1, 1, "", "set_seed"], [154, 1, 1, "", "set_submodule"], [154, 4, 1, "", "shape"], [154, 1, 1, "", "share_memory"], [154, 4, 1, "", "specs"], [154, 1, 1, "", "state_dict"], [154, 4, 1, "", "state_keys"], [154, 4, 1, "", "state_spec"], [154, 4, 1, "", "state_spec_unbatched"], [154, 1, 1, "", "step"], [154, 1, 1, "", "step_and_maybe_reset"], [154, 1, 1, "", "to"], [154, 1, 1, "", "to_empty"], [154, 1, 1, "", "train"], [154, 1, 1, "", "type"], [154, 1, 1, "", "update_kwargs"], [154, 1, 1, "", "xpu"], [154, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[155, 4, 1, "", "action_key"], [155, 4, 1, "", "action_keys"], [155, 4, 1, "", "action_spec"], [155, 4, 1, "", "action_spec_unbatched"], [155, 1, 1, "", "add_module"], [155, 1, 1, "", "add_truncated_keys"], [155, 1, 1, "", "append_transform"], [155, 1, 1, "", "apply"], [155, 1, 1, "", "auto_specs_"], [155, 4, 1, "", "batch_dims"], [155, 4, 1, "", "batch_size"], [155, 1, 1, "", "bfloat16"], [155, 1, 1, "", "buffers"], [155, 1, 1, "", "check_env_specs"], [155, 1, 1, "", "children"], [155, 1, 1, "", "compile"], [155, 1, 1, "", "cpu"], [155, 1, 1, "", "cuda"], [155, 4, 1, "", "done_key"], [155, 4, 1, "", "done_keys"], [155, 4, 1, "", "done_keys_groups"], [155, 4, 1, "", "done_spec"], [155, 4, 1, "", "done_spec_unbatched"], [155, 1, 1, "", "double"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 1, 1, "", "extra_repr"], [155, 1, 1, "", "fake_tensordict"], [155, 1, 1, "", "float"], [155, 1, 1, "", "forward"], [155, 4, 1, "", "full_action_spec"], [155, 4, 1, "", "full_action_spec_unbatched"], [155, 4, 1, "", "full_done_spec"], [155, 4, 1, "", "full_done_spec_unbatched"], [155, 4, 1, "", "full_observation_spec_unbatched"], [155, 4, 1, "", "full_reward_spec"], [155, 4, 1, "", "full_reward_spec_unbatched"], [155, 4, 1, "", "full_state_spec"], [155, 4, 1, "", "full_state_spec_unbatched"], [155, 1, 1, "", "get_buffer"], [155, 1, 1, "", "get_extra_state"], [155, 1, 1, "", "get_parameter"], [155, 1, 1, "", "get_submodule"], [155, 1, 1, "", "half"], [155, 4, 1, "", "input_spec"], [155, 4, 1, "", "input_spec_unbatched"], [155, 1, 1, "", "ipu"], [155, 1, 1, "", "load_state_dict"], [155, 1, 1, "", "maybe_reset"], [155, 1, 1, "", "modules"], [155, 1, 1, "", "mtia"], [155, 1, 1, "", "named_buffers"], [155, 1, 1, "", "named_children"], [155, 1, 1, "", "named_modules"], [155, 1, 1, "", "named_parameters"], [155, 4, 1, "", "observation_spec"], [155, 4, 1, "", "observation_spec_unbatched"], [155, 4, 1, "", "output_spec"], [155, 4, 1, "", "output_spec_unbatched"], [155, 1, 1, "", "parameters"], [155, 1, 1, "", "rand_action"], [155, 1, 1, "", "rand_step"], [155, 1, 1, "", "register_backward_hook"], [155, 1, 1, "", "register_buffer"], [155, 1, 1, "", "register_forward_hook"], [155, 1, 1, "", "register_forward_pre_hook"], [155, 1, 1, "", "register_full_backward_hook"], [155, 1, 1, "", "register_full_backward_pre_hook"], [155, 1, 1, "", "register_gym"], [155, 1, 1, "", "register_load_state_dict_post_hook"], [155, 1, 1, "", "register_load_state_dict_pre_hook"], [155, 1, 1, "", "register_module"], [155, 1, 1, "", "register_parameter"], [155, 1, 1, "", "register_state_dict_post_hook"], [155, 1, 1, "", "register_state_dict_pre_hook"], [155, 1, 1, "", "requires_grad_"], [155, 1, 1, "", "reset"], [155, 4, 1, "", "reset_keys"], [155, 4, 1, "", "reward_key"], [155, 4, 1, "", "reward_keys"], [155, 4, 1, "", "reward_spec"], [155, 4, 1, "", "reward_spec_unbatched"], [155, 1, 1, "", "rollout"], [155, 1, 1, "", "set_extra_state"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "set_submodule"], [155, 4, 1, "", "shape"], [155, 1, 1, "", "share_memory"], [155, 4, 1, "", "specs"], [155, 1, 1, "", "state_dict"], [155, 4, 1, "", "state_keys"], [155, 4, 1, "", "state_spec"], [155, 4, 1, "", "state_spec_unbatched"], [155, 1, 1, "", "step"], [155, 1, 1, "", "step_and_maybe_reset"], [155, 1, 1, "", "to"], [155, 1, 1, "", "to_empty"], [155, 1, 1, "", "train"], [155, 1, 1, "", "type"], [155, 1, 1, "", "xpu"], [155, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[162, 2, 1, "", "DreamerDecoder"], [163, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[165, 0, 1, "", "ActionDiscretizer"], [166, 0, 1, "", "ActionMask"], [167, 0, 1, "", "AutoResetEnv"], [168, 0, 1, "", "AutoResetTransform"], [169, 0, 1, "", "BatchSizeTransform"], [170, 0, 1, "", "BinarizeReward"], [171, 0, 1, "", "BurnInTransform"], [172, 0, 1, "", "CatFrames"], [173, 0, 1, "", "CatTensors"], [174, 0, 1, "", "CenterCrop"], [175, 0, 1, "", "ClipTransform"], [176, 0, 1, "", "Compose"], [177, 0, 1, "", "Crop"], [178, 0, 1, "", "DTypeCastTransform"], [179, 0, 1, "", "DeviceCastTransform"], [180, 0, 1, "", "DiscreteActionProjection"], [181, 0, 1, "", "DoubleToFloat"], [182, 0, 1, "", "EndOfLifeTransform"], [183, 0, 1, "", "ExcludeTransform"], [184, 0, 1, "", "FiniteTensorDictCheck"], [185, 0, 1, "", "FlattenObservation"], [186, 0, 1, "", "FrameSkipTransform"], [187, 0, 1, "", "GrayScale"], [188, 0, 1, "", "InitTracker"], [189, 0, 1, "", "KLRewardTransform"], [190, 0, 1, "", "NoopResetEnv"], [191, 0, 1, "", "ObservationNorm"], [192, 0, 1, "", "ObservationTransform"], [193, 0, 1, "", "PermuteTransform"], [194, 0, 1, "", "PinMemoryTransform"], [195, 0, 1, "", "R3MTransform"], [196, 0, 1, "", "RandomCropTensorDict"], [197, 0, 1, "", "RemoveEmptySpecs"], [198, 0, 1, "", "RenameTransform"], [199, 0, 1, "", "Resize"], [200, 0, 1, "", "Reward2GoTransform"], [201, 0, 1, "", "RewardClipping"], [202, 0, 1, "", "RewardScaling"], [203, 0, 1, "", "RewardSum"], [204, 0, 1, "", "SelectTransform"], [205, 0, 1, "", "SignTransform"], [206, 0, 1, "", "SqueezeTransform"], [207, 0, 1, "", "StepCounter"], [208, 0, 1, "", "TargetReturn"], [209, 0, 1, "", "TensorDictPrimer"], [210, 0, 1, "", "TimeMaxPool"], [211, 0, 1, "", "ToTensorImage"], [212, 0, 1, "", "TrajCounter"], [213, 0, 1, "", "Transform"], [214, 0, 1, "", "TransformedEnv"], [215, 0, 1, "", "UnsqueezeTransform"], [216, 0, 1, "", "VC1Transform"], [217, 0, 1, "", "VIPRewardTransform"], [218, 0, 1, "", "VIPTransform"], [219, 0, 1, "", "VecGymEnvTransform"], [220, 0, 1, "", "VecNorm"], [221, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[165, 0, 1, "", "SamplingStrategy"], [165, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[166, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[167, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[168, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[169, 1, 1, "", "forward"], [169, 1, 1, "", "transform_env_batch_size"], [169, 1, 1, "", "transform_input_spec"], [169, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[170, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[171, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[172, 1, 1, "", "forward"], [172, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[173, 1, 1, "", "forward"], [173, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[174, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[175, 1, 1, "", "transform_observation_spec"], [175, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[176, 1, 1, "", "append"], [176, 1, 1, "", "forward"], [176, 1, 1, "", "insert"], [176, 1, 1, "", "to"], [176, 1, 1, "", "transform_env_batch_size"], [176, 1, 1, "", "transform_env_device"], [176, 1, 1, "", "transform_input_spec"], [176, 1, 1, "", "transform_observation_spec"], [176, 1, 1, "", "transform_output_spec"], [176, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Crop": [[177, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[178, 1, 1, "", "forward"], [178, 1, 1, "", "transform_input_spec"], [178, 1, 1, "", "transform_observation_spec"], [178, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[179, 1, 1, "", "forward"], [179, 1, 1, "", "transform_done_spec"], [179, 1, 1, "", "transform_env_device"], [179, 1, 1, "", "transform_input_spec"], [179, 1, 1, "", "transform_observation_spec"], [179, 1, 1, "", "transform_output_spec"], [179, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[180, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[182, 1, 1, "", "forward"], [182, 1, 1, "", "register_keys"], [182, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[183, 1, 1, "", "forward"], [183, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[184, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[186, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[187, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[188, 1, 1, "", "forward"], [188, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[191, 1, 1, "", "init_stats"], [191, 1, 1, "", "transform_input_spec"], [191, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[193, 1, 1, "", "transform_input_spec"], [193, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[194, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[195, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[196, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[197, 1, 1, "", "forward"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[198, 1, 1, "", "forward"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[199, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[200, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[201, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[202, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "transform_input_spec"], [203, 1, 1, "", "transform_observation_spec"], [203, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[209, 1, 1, "", "forward"], [209, 1, 1, "", "to"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[211, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TrajCounter": [[212, 1, 1, "", "forward"], [212, 1, 1, "", "load_state_dict"], [212, 1, 1, "", "state_dict"], [212, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[213, 4, 1, "", "container"], [213, 1, 1, "", "forward"], [213, 4, 1, "", "parent"], [213, 1, 1, "", "to"], [213, 1, 1, "", "transform_done_spec"], [213, 1, 1, "", "transform_env_batch_size"], [213, 1, 1, "", "transform_env_device"], [213, 1, 1, "", "transform_input_spec"], [213, 1, 1, "", "transform_observation_spec"], [213, 1, 1, "", "transform_output_spec"], [213, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[214, 1, 1, "", "add_truncated_keys"], [214, 1, 1, "", "append_transform"], [214, 4, 1, "", "batch_locked"], [214, 4, 1, "", "batch_size"], [214, 1, 1, "", "empty_cache"], [214, 1, 1, "", "eval"], [214, 4, 1, "", "input_spec"], [214, 1, 1, "", "insert_transform"], [214, 1, 1, "", "load_state_dict"], [214, 4, 1, "", "output_spec"], [214, 1, 1, "", "set_missing_tolerance"], [214, 1, 1, "", "set_seed"], [214, 1, 1, "", "state_dict"], [214, 1, 1, "", "to"], [214, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[215, 1, 1, "", "transform_input_spec"], [215, 1, 1, "", "transform_observation_spec"], [215, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_noload_model"], [216, 1, 1, "", "to"], [216, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[218, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[220, 1, 1, "", "build_td_for_shared_vecnorm"], [220, 1, 1, "", "forward"], [220, 1, 1, "", "freeze"], [220, 1, 1, "", "frozen_copy"], [220, 1, 1, "", "get_extra_state"], [220, 4, 1, "", "loc"], [220, 4, 1, "", "scale"], [220, 1, 1, "", "set_extra_state"], [220, 4, 1, "", "standard_normal"], [220, 1, 1, "", "to_observation_norm"], [220, 1, 1, "", "transform_observation_spec"], [220, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[222, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[222, 1, 1, "", "add_module"], [222, 1, 1, "", "apply"], [222, 1, 1, "", "bfloat16"], [222, 1, 1, "", "buffers"], [222, 1, 1, "", "children"], [222, 1, 1, "", "compile"], [222, 4, 1, "", "container"], [222, 1, 1, "", "cpu"], [222, 1, 1, "", "cuda"], [222, 1, 1, "", "double"], [222, 1, 1, "", "eval"], [222, 1, 1, "", "extra_repr"], [222, 1, 1, "", "float"], [222, 1, 1, "", "forward"], [222, 1, 1, "", "get_buffer"], [222, 1, 1, "", "get_extra_state"], [222, 1, 1, "", "get_parameter"], [222, 1, 1, "", "get_submodule"], [222, 1, 1, "", "half"], [222, 1, 1, "", "ipu"], [222, 1, 1, "", "load_state_dict"], [222, 1, 1, "", "modules"], [222, 1, 1, "", "mtia"], [222, 4, 1, "", "n_steps"], [222, 1, 1, "", "named_buffers"], [222, 1, 1, "", "named_children"], [222, 1, 1, "", "named_modules"], [222, 1, 1, "", "named_parameters"], [222, 1, 1, "", "parameters"], [222, 4, 1, "", "parent"], [222, 1, 1, "", "register_backward_hook"], [222, 1, 1, "", "register_buffer"], [222, 1, 1, "", "register_forward_hook"], [222, 1, 1, "", "register_forward_pre_hook"], [222, 1, 1, "", "register_full_backward_hook"], [222, 1, 1, "", "register_full_backward_pre_hook"], [222, 1, 1, "", "register_load_state_dict_post_hook"], [222, 1, 1, "", "register_load_state_dict_pre_hook"], [222, 1, 1, "", "register_module"], [222, 1, 1, "", "register_parameter"], [222, 1, 1, "", "register_state_dict_post_hook"], [222, 1, 1, "", "register_state_dict_pre_hook"], [222, 1, 1, "", "requires_grad_"], [222, 1, 1, "", "set_extra_state"], [222, 1, 1, "", "set_submodule"], [222, 1, 1, "", "share_memory"], [222, 1, 1, "", "state_dict"], [222, 1, 1, "", "to"], [222, 1, 1, "", "to_empty"], [222, 1, 1, "", "train"], [222, 1, 1, "", "transform_done_spec"], [222, 1, 1, "", "transform_env_batch_size"], [222, 1, 1, "", "transform_env_device"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_observation_spec"], [222, 1, 1, "", "transform_output_spec"], [222, 1, 1, "", "transform_reward_spec"], [222, 1, 1, "", "type"], [222, 1, 1, "", "xpu"], [222, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[223, 2, 1, "", "RandomPolicy"], [224, 2, 1, "", "check_env_specs"], [225, 2, 1, "", "exploration_type"], [226, 2, 1, "", "get_available_libraries"], [227, 2, 1, "", "make_composite_from_td"], [228, 2, 1, "", "set_exploration_type"], [229, 2, 1, "", "step_mdp"], [230, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[231, 0, 1, "", "AdditiveGaussianModule"], [232, 0, 1, "", "AdditiveGaussianWrapper"], [233, 0, 1, "", "BatchRenorm1d"], [234, 0, 1, "", "CEMPlanner"], [235, 0, 1, "", "ConsistentDropout"], [236, 0, 1, "", "ConsistentDropoutModule"], [237, 0, 1, "", "Conv3dNet"], [238, 0, 1, "", "ConvNet"], [239, 0, 1, "", "DTActor"], [240, 0, 1, "", "DdpgCnnActor"], [241, 0, 1, "", "DdpgCnnQNet"], [242, 0, 1, "", "DdpgMlpActor"], [243, 0, 1, "", "DdpgMlpQNet"], [244, 0, 1, "", "DecisionTransformer"], [245, 0, 1, "", "Delta"], [246, 0, 1, "", "DistributionalDQNnet"], [247, 0, 1, "", "DistributionalQValueHook"], [248, 0, 1, "", "DreamerActor"], [249, 0, 1, "", "DuelingCnnDQNet"], [250, 0, 1, "", "EGreedyModule"], [251, 0, 1, "", "EGreedyWrapper"], [252, 0, 1, "", "GRU"], [253, 0, 1, "", "GRUCell"], [254, 0, 1, "", "GRUModule"], [255, 0, 1, "", "IndependentNormal"], [256, 0, 1, "", "LSTM"], [257, 0, 1, "", "LSTMCell"], [258, 0, 1, "", "LSTMModule"], [259, 0, 1, "", "MLP"], [260, 0, 1, "", "MPCPlannerBase"], [261, 0, 1, "", "MPPIPlanner"], [262, 0, 1, "", "MaskedCategorical"], [263, 0, 1, "", "MaskedOneHotCategorical"], [264, 0, 1, "", "MultiAgentConvNet"], [265, 0, 1, "", "MultiAgentMLP"], [266, 0, 1, "", "MultiAgentNetBase"], [267, 0, 1, "", "NoisyLazyLinear"], [268, 0, 1, "", "NoisyLinear"], [269, 0, 1, "", "NormalParamWrapper"], [270, 0, 1, "", "ObsDecoder"], [271, 0, 1, "", "ObsEncoder"], [272, 0, 1, "", "OneHotCategorical"], [273, 0, 1, "", "OneHotOrdinal"], [274, 0, 1, "", "OnlineDTActor"], [275, 0, 1, "", "Ordinal"], [276, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [277, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [278, 0, 1, "", "QMixer"], [279, 0, 1, "", "QValueHook"], [280, 0, 1, "", "RSSMPosterior"], [281, 0, 1, "", "RSSMPrior"], [282, 0, 1, "", "Squeeze2dLayer"], [283, 0, 1, "", "SqueezeLayer"], [284, 0, 1, "", "TanhDelta"], [285, 0, 1, "", "TanhNormal"], [286, 0, 1, "", "TruncatedNormal"], [287, 0, 1, "", "VDNMixer"], [288, 0, 1, "", "VmapModule"], [289, 0, 1, "", "recurrent_mode"], [290, 0, 1, "", "reset_noise"], [291, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "step"]], "torchrl.modules.AdditiveGaussianWrapper": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[233, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[234, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[235, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[237, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[238, 1, 1, "", "default_atari_dqn"], [238, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[239, 1, 1, "", "default_config"], [239, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[240, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[241, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[242, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[243, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[244, 0, 1, "", "DTConfig"], [244, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[245, 1, 1, "", "expand"], [245, 1, 1, "", "log_prob"], [245, 4, 1, "", "mean"], [245, 4, 1, "", "mode"], [245, 1, 1, "", "rsample"], [245, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[246, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[248, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[249, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "step"]], "torchrl.modules.GRU": [[252, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[253, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_cudnn_based"], [254, 1, 1, "", "make_python_based"], [254, 1, 1, "id0", "make_tensordict_primer"], [254, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[255, 4, 1, "", "mode"]], "torchrl.modules.LSTM": [[256, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[257, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_cudnn_based"], [258, 1, 1, "", "make_python_based"], [258, 1, 1, "id0", "make_tensordict_primer"], [258, 1, 1, "id1", "set_recurrent_mode"]], "torchrl.modules.MLP": [[259, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[261, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[262, 1, 1, "", "log_prob"], [262, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[263, 1, 1, "", "log_prob"], [263, 4, 1, "", "mode"], [263, 1, 1, "", "rsample"], [263, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "from_stateful_net"], [266, 1, 1, "", "get_stateful_net"], [266, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[267, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[269, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[270, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[271, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[272, 1, 1, "", "entropy"], [272, 1, 1, "", "log_prob"], [272, 4, 1, "", "mode"], [272, 1, 1, "", "rsample"], [272, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[274, 1, 1, "", "default_config"], [274, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "step"]], "torchrl.modules.OrnsteinUhlenbeckProcessWrapper": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[278, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[280, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[281, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[283, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[284, 4, 1, "", "mean"], [284, 4, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[285, 1, 1, "", "get_mode"], [285, 4, 1, "", "mean"], [285, 4, 1, "", "mode"], [285, 4, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[286, 1, 1, "", "log_prob"], [286, 4, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[287, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[288, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[292, 0, 1, "", "Actor"], [293, 0, 1, "", "ActorCriticOperator"], [294, 0, 1, "", "ActorCriticWrapper"], [295, 0, 1, "", "ActorValueOperator"], [296, 0, 1, "", "DecisionTransformerInferenceWrapper"], [297, 0, 1, "", "DistributionalQValueActor"], [298, 0, 1, "", "DistributionalQValueModule"], [299, 0, 1, "", "LMHeadActorValueOperator"], [300, 0, 1, "", "MultiStepActorWrapper"], [301, 0, 1, "", "ProbabilisticActor"], [302, 0, 1, "", "QValueActor"], [303, 0, 1, "", "QValueModule"], [304, 0, 1, "", "SafeModule"], [305, 0, 1, "", "SafeProbabilisticModule"], [306, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [307, 0, 1, "", "SafeSequential"], [308, 0, 1, "", "TanhModule"], [309, 0, 1, "", "ValueOperator"], [310, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[293, 1, 1, "", "get_critic_operator"], [293, 1, 1, "", "get_policy_head"], [293, 1, 1, "", "get_value_head"], [293, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[294, 1, 1, "", "get_policy_head"], [294, 1, 1, "", "get_policy_operator"], [294, 1, 1, "", "get_value_head"], [294, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[295, 1, 1, "", "get_policy_head"], [295, 1, 1, "", "get_policy_operator"], [295, 1, 1, "", "get_value_head"], [295, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[296, 1, 1, "", "forward"], [296, 1, 1, "", "mask_context"], [296, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[298, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[300, 1, 1, "", "forward"], [300, 4, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[303, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[304, 1, 1, "", "random"], [304, 1, 1, "", "random_sample"], [304, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[305, 1, 1, "", "random"], [305, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[308, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[310, 1, 1, "", "get_reward_operator"], [310, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[311, 0, 1, "", "biased_softplus"], [312, 0, 1, "", "get_primers_from_module"], [313, 0, 1, "", "inv_softplus"], [314, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[311, 1, 1, "", "forward"]], "torchrl.objectives": [[315, 0, 1, "", "A2CLoss"], [316, 0, 1, "", "CQLLoss"], [317, 0, 1, "", "ClipPPOLoss"], [318, 0, 1, "", "CrossQLoss"], [319, 0, 1, "", "DDPGLoss"], [320, 0, 1, "", "DQNLoss"], [321, 0, 1, "", "DTLoss"], [322, 0, 1, "", "DiscreteCQLLoss"], [323, 0, 1, "", "DiscreteIQLLoss"], [324, 0, 1, "", "DiscreteSACLoss"], [325, 0, 1, "", "DistributionalDQNLoss"], [326, 0, 1, "", "DreamerActorLoss"], [327, 0, 1, "", "DreamerModelLoss"], [328, 0, 1, "", "DreamerValueLoss"], [329, 0, 1, "", "GAILLoss"], [330, 0, 1, "", "HardUpdate"], [331, 0, 1, "", "IQLLoss"], [332, 0, 1, "", "KLPENPPOLoss"], [333, 0, 1, "", "LossModule"], [334, 0, 1, "", "OnlineDTLoss"], [335, 0, 1, "", "PPOLoss"], [336, 0, 1, "", "REDQLoss"], [337, 0, 1, "", "ReinforceLoss"], [338, 0, 1, "", "SACLoss"], [339, 0, 1, "", "SoftUpdate"], [340, 0, 1, "", "TD3BCLoss"], [341, 0, 1, "", "TD3Loss"], [342, 0, 1, "", "ValueEstimators"], [343, 0, 1, "", "default_value_kwargs"], [344, 0, 1, "", "distance_loss"], [345, 0, 1, "", "group_optimizers"], [346, 0, 1, "", "hold_out_net"], [347, 0, 1, "", "hold_out_params"], [349, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[315, 1, 1, "", "forward"], [315, 4, 1, "", "functional"], [315, 1, 1, "", "loss_critic"], [315, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[316, 1, 1, "", "forward"], [316, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[317, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[318, 1, 1, "", "actor_loss"], [318, 1, 1, "", "alpha_loss"], [318, 1, 1, "", "forward"], [318, 1, 1, "", "load_state_dict"], [318, 1, 1, "", "make_value_estimator"], [318, 1, 1, "", "maybe_init_target_entropy"], [318, 1, 1, "", "qvalue_loss"], [318, 1, 1, "", "set_keys"], [318, 1, 1, "", "state_dict"], [318, 4, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[319, 1, 1, "", "forward"], [319, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[320, 1, 1, "", "forward"], [320, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[321, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[322, 1, 1, "", "forward"], [322, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[323, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[324, 1, 1, "", "forward"], [324, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[325, 1, 1, "", "forward"], [325, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[326, 1, 1, "", "forward"], [326, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[327, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[328, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[329, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[331, 1, 1, "", "forward"], [331, 1, 1, "", "loss_value_diff"], [331, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[332, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[333, 1, 1, "", "convert_to_functional"], [333, 1, 1, "", "forward"], [333, 1, 1, "", "from_stateful_net"], [333, 4, 1, "", "functional"], [333, 1, 1, "", "get_stateful_net"], [333, 1, 1, "", "make_value_estimator"], [333, 1, 1, "", "named_parameters"], [333, 1, 1, "", "parameters"], [333, 1, 1, "", "reset_parameters_recursive"], [333, 1, 1, "", "set_keys"], [333, 4, 1, "", "value_estimator"], [333, 4, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[334, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[335, 1, 1, "", "forward"], [335, 4, 1, "", "functional"], [335, 1, 1, "", "loss_critic"], [335, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[336, 1, 1, "", "forward"], [336, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[337, 1, 1, "", "forward"], [337, 4, 1, "", "functional"], [337, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[338, 1, 1, "", "forward"], [338, 1, 1, "", "load_state_dict"], [338, 1, 1, "", "make_value_estimator"], [338, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[340, 1, 1, "", "actor_loss"], [340, 1, 1, "", "forward"], [340, 1, 1, "", "make_value_estimator"], [340, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[341, 1, 1, "", "forward"], [341, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[348, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[348, 1, 1, "", "forward"], [348, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[350, 0, 1, "", "GAE"], [351, 0, 1, "", "TD0Estimator"], [352, 0, 1, "", "TD1Estimator"], [353, 0, 1, "", "TDLambdaEstimator"], [354, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[350, 1, 1, "", "forward"], [350, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[351, 1, 1, "", "forward"], [351, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[352, 1, 1, "", "forward"], [352, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[353, 1, 1, "", "forward"], [353, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[354, 1, 1, "", "forward"], [354, 1, 1, "", "set_keys"], [354, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[355, 0, 1, "", "generalized_advantage_estimate"], [356, 0, 1, "", "reward2go"], [357, 0, 1, "", "td0_advantage_estimate"], [358, 0, 1, "", "td0_return_estimate"], [359, 0, 1, "", "td1_advantage_estimate"], [360, 0, 1, "", "td1_return_estimate"], [361, 0, 1, "", "td_lambda_advantage_estimate"], [362, 0, 1, "", "td_lambda_return_estimate"], [363, 0, 1, "", "vec_generalized_advantage_estimate"], [364, 0, 1, "", "vec_td1_advantage_estimate"], [365, 0, 1, "", "vec_td1_return_estimate"], [366, 0, 1, "", "vec_td_lambda_advantage_estimate"], [367, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[368, 2, 1, "", "PixelRenderTransform"], [369, 2, 1, "", "TensorDictRecorder"], [370, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[371, 2, 1, "", "Logger"], [373, 2, 1, "", "generate_exp_name"], [374, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[372, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[375, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[376, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[377, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[378, 0, 1, "", "BatchSubSampler"], [379, 0, 1, "", "ClearCudaCache"], [380, 0, 1, "", "CountFramesLog"], [381, 0, 1, "", "LogValidationReward"], [382, 0, 1, "", "OptimizerHook"], [383, 0, 1, "", "ReplayBufferTrainer"], [384, 0, 1, "", "RewardNormalizer"], [385, 0, 1, "", "SelectKeys"], [386, 0, 1, "", "Trainer"], [387, 0, 1, "", "TrainerHookBase"], [388, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[378, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[379, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[380, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[381, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[382, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[383, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[384, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[385, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[386, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[387, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[388, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[389, 2, 1, "", "correct_for_frame_skip"], [390, 2, 1, "", "get_stats_random_rollout"], [391, 2, 1, "", "make_collector_offpolicy"], [392, 2, 1, "", "make_collector_onpolicy"], [393, 2, 1, "", "make_dqn_loss"], [394, 2, 1, "", "make_replay_buffer"], [395, 2, 1, "", "make_target_updater"], [396, 2, 1, "", "make_trainer"], [397, 2, 1, "", "parallel_env_constructor"], [398, 2, 1, "", "sync_async_collector"], [399, 2, 1, "", "sync_sync_collector"], [400, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 404, 405, 406, 407, 409, 410, 411, 413, 415, 422, 423, 424, 428, 429], "instal": [0, 6, 7, 428], "get": [0, 414, 415, 416, 417, 418, 419], "start": [0, 414, 415, 416, 417, 418, 419], "tutori": [0, 411, 422, 423], "basic": [0, 426], "intermedi": [0, 8], "advanc": 0, "refer": [0, 402], "knowledg": [0, 403], "base": [0, 2, 7, 403, 413], "indic": 0, "tabl": 0, "collector": [1, 409, 410, 411, 412, 417, 419, 422, 423, 428], "packag": [1, 2, 3, 404, 405, 406, 407], "batch": [1, 409, 424, 426], "size": [1, 409, 426], "polici": [1, 2, 4, 409, 411, 412, 413, 415, 419, 421, 422, 423, 424], "copi": 1, "replai": [1, 2, 409, 410, 411, 412, 417, 419, 422, 423, 426, 428], "buffer": [1, 2, 409, 410, 411, 412, 417, 419, 422, 423, 426, 428], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 409, 410, 411, 417, 419, 422, 423, 428], "distribut": [1, 404], "helper": [1, 3], "function": [1, 4, 405, 410, 411, 416, 422, 423, 428], "compos": [2, 176], "support": 2, "type": 2, "choos": 2, "storag": [2, 111, 409, 417, 426], "sampl": [2, 426], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 410, 426], "trajectori": [2, 426], "checkpoint": [2, 406], "episod": [2, 4], "format": 2, "ted": [2, 414], "The": [2, 409], "rational": 2, "behind": 2, "structur": [2, 426], "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 404, 426, 428], "special": [2, 415, 428], "case": 2, "footnot": 2, "multi": [2, 3, 404, 405, 421, 422, 423], "agent": [2, 3, 4, 404, 405, 422, 423], "present": 2, "rnn": 2, "transform": [2, 3, 213, 409, 411, 414, 422, 423, 424, 426, 428, 429], "step": [2, 409, 411, 414, 417, 422, 423, 426, 429], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 71], "numer": 2, "subclass": 2, "categor": [2, 30], "tree": [2, 73], "forest": 2, "tensordictmap": [2, 66], "mctsforest": [2, 41], "reinforc": [2, 405, 411, 422, 423], "learn": [2, 4, 404, 411, 422, 423], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 404, 405, 406, 422], "env": [3, 424, 428, 429], "vector": [3, 428], "custom": [3, 11, 424, 426], "nativ": 3, "environ": [3, 4, 6, 7, 409, 410, 411, 412, 414, 419, 421, 422, 423, 424, 428, 429], "auto": 3, "reset": [3, 424, 429], "dynam": [3, 4, 426], "spec": [3, 424, 429], "forward": [3, 4, 409], "invers": 3, "clone": [3, 7], "mask": 3, "action": [3, 4, 412, 424], "record": [3, 406, 409, 418], "video": [3, 11, 418], "domain": [3, 404], "specif": [3, 404, 421], "librari": [3, 428], "thing": [4, 409, 424], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 414, 416, 428], "gener": [4, 11, 404], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 409, 413, 419, 424], "algorithm": [4, 404], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 409, 410, 416, 419], "return": [4, 405], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 428], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 421], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 409, 410, 411], "standard": 4, "explor": [4, 404, 409, 410, 415], "valu": [4, 404, 405, 409, 411, 412, 415], "loss": [4, 409, 410, 411, 412, 419, 422, 423], "earli": 4, "train": [4, 8, 405, 409, 411, 412, 413, 416, 419, 422, 423, 424], "roughli": 4, "uniformli": 4, "random": [4, 405, 422, 423], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 410], "increas": 4, "an": [4, 411, 412, 414, 424], "can": 4, "low": 4, "model": [4, 404, 409, 410, 412, 413, 416, 425, 428], "also": 4, "us": [4, 6, 9, 412, 425, 426, 428], "offlin": 4, "observ": [4, 409], "space": 4, "effect": [4, 424], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 413], "gym": [5, 428, 429], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 409], "render": [7, 11, 419, 422, 423, 429], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 409], "pytorch": [8, 9, 10, 413], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 424], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "exampl": [11, 410, 426], "implement_for": 12, "datacollectorbas": 13, "multisyncdatacollector": 14, "multiasyncdatacollector": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "adaptiveklcontrol": 24, "binari": [25, 413], "binarydiscretetensorspec": 26, "binarytodecim": 27, "bound": 28, "boundedtensorspec": 29, "composit": 31, "compositespec": 32, "constantklcontrol": 33, "discretetensorspec": 34, "flat2t": 35, "h5combin": 36, "h5split": 37, "hashtoint": 38, "lazystackedcompositespec": 39, "lazystackedtensorspec": 40, "multicategor": 42, "multidiscretetensorspec": 43, "multionehot": 44, "multionehotdiscretetensorspec": 45, "multistep": 46, "nested2t": 47, "nontensor": 48, "nontensorspec": 49, "onehot": 50, "onehotdiscretetensorspec": 51, "pairwisedataset": 52, "prioritizedreplaybuff": 53, "promptdata": 54, "prompttensordicttoken": 55, "querymodul": 56, "randomprojectionhash": 57, "replaybuff": 58, "rewarddata": 59, "rolloutfrommodel": 60, "siphash": 61, "stack": 62, "stackedcomposit": 63, "ted2flat": 64, "ted2nest": 65, "tensordictprioritizedreplaybuff": 67, "tensordictreplaybuff": 68, "tensordicttoken": 69, "tensormap": 70, "tokenizeddatasetload": 72, "unbound": 74, "unboundedcontinu": 75, "unboundedcontinuoustensorspec": 76, "unboundeddiscret": 77, "unboundeddiscretetensorspec": 78, "check_no_exclusive_kei": 79, "consolidate_spec": 80, "contains_lazy_spec": 81, "create_infinite_iter": 82, "ataridqnexperiencereplai": 83, "basedatasetexperiencereplai": 84, "d4rlexperiencereplai": 85, "gendgrlexperiencereplai": 86, "minariexperiencereplai": 87, "openmlexperiencereplai": 88, "openxexperiencereplai": 89, "robosetexperiencereplai": 90, "vd4rlexperiencereplai": 91, "get_dataload": 92, "flatstoragecheckpoint": 93, "h5storagecheckpoint": 94, "immutabledatasetwrit": 95, "lazymemmapstorag": 96, "lazytensorstorag": 97, "liststorag": 98, "liststoragecheckpoint": 99, "nestedstoragecheckpoint": 100, "prioritizedsampl": 101, "prioritizedslicesampl": 102, "randomsampl": 103, "replaybufferensembl": 104, "roundrobinwrit": 105, "sampler": 106, "samplerensembl": 107, "samplerwithoutreplac": 108, "slicesampl": 109, "slicesamplerwithoutreplac": 110, "storagecheckpointerbas": 112, "storageensembl": 113, "storageensemblecheckpoint": 114, "tensordictmaxvaluewrit": 115, "tensordictroundrobinwrit": 116, "tensorstorag": 117, "tensorstoragecheckpoint": 118, "writer": 119, "writerensembl": 120, "braxenv": 121, "braxwrapp": 122, "dmcontrolenv": 123, "dmcontrolwrapp": 124, "envbas": [125, 424], "envcreat": 126, "envmetadata": 127, "gymenv": 128, "gymlikeenv": 129, "gymwrapp": 130, "habitatenv": 131, "isaacgymenv": 132, "isaacgymwrapp": 133, "jumanjienv": 134, "jumanjiwrapp": 135, "mogymenv": 136, "mogymwrapp": 137, "marlgroupmaptyp": 138, "meltingpotenv": 139, "meltingpotwrapp": 140, "modelbasedenvbas": 141, "multithreadedenv": 142, "multithreadedenvwrapp": 143, "openmlenv": 144, "openspielenv": 145, "openspielwrapp": 146, "parallelenv": 147, "pendulumenv": 148, "pettingzooenv": 149, "pettingzoowrapp": 150, "robohiveenv": 151, "smacv2env": 152, "smacv2wrapp": 153, "serialenv": 154, "tictactoeenv": 155, "unitymlagentsenv": 156, "unitymlagentswrapp": 157, "vmasenv": 158, "vmaswrapp": 159, "check_marl_group": 160, "gym_backend": 161, "dreamerdecod": 162, "dreamerenv": 163, "set_gym_backend": 164, "actiondiscret": 165, "actionmask": 166, "autoresetenv": 167, "autoresettransform": 168, "batchsizetransform": 169, "binarizereward": 170, "burnintransform": 171, "catfram": [172, 426], "cattensor": 173, "centercrop": 174, "cliptransform": 175, "crop": 177, "dtypecasttransform": 178, "devicecasttransform": 179, "discreteactionproject": 180, "doubletofloat": 181, "endoflifetransform": 182, "excludetransform": 183, "finitetensordictcheck": 184, "flattenobserv": 185, "frameskiptransform": 186, "grayscal": 187, "inittrack": 188, "klrewardtransform": 189, "noopresetenv": 190, "observationnorm": 191, "observationtransform": 192, "permutetransform": 193, "pinmemorytransform": 194, "r3mtransform": 195, "randomcroptensordict": 196, "removeemptyspec": 197, "renametransform": 198, "resiz": 199, "reward2gotransform": 200, "rewardclip": 201, "rewardsc": 202, "rewardsum": 203, "selecttransform": 204, "signtransform": 205, "squeezetransform": 206, "stepcount": 207, "targetreturn": 208, "tensordictprim": 209, "timemaxpool": 210, "totensorimag": 211, "trajcount": 212, "transformedenv": 214, "unsqueezetransform": 215, "vc1transform": 216, "viprewardtransform": 217, "viptransform": 218, "vecgymenvtransform": 219, "vecnorm": [220, 429], "gsdenois": 221, "multisteptransform": 222, "randompolici": 223, "check_env_spec": 224, "exploration_typ": 225, "get_available_librari": 226, "make_composite_from_td": 227, "set_exploration_typ": 228, "step_mdp": 229, "terminated_or_trunc": 230, "additivegaussianmodul": 231, "additivegaussianwrapp": 232, "batchrenorm1d": 233, "cemplann": 234, "consistentdropout": 235, "consistentdropoutmodul": 236, "conv3dnet": 237, "convnet": 238, "dtactor": 239, "ddpgcnnactor": 240, "ddpgcnnqnet": 241, "ddpgmlpactor": 242, "ddpgmlpqnet": 243, "decisiontransform": 244, "delta": 245, "distributionaldqnnet": 246, "distributionalqvaluehook": 247, "dreameractor": 248, "duelingcnndqnet": 249, "egreedymodul": 250, "egreedywrapp": 251, "gru": 252, "grucel": 253, "grumodul": 254, "independentnorm": 255, "lstm": [256, 412], "lstmcell": 257, "lstmmodul": 258, "mlp": [259, 412], "mpcplannerbas": 260, "mppiplann": 261, "maskedcategor": 262, "maskedonehotcategor": 263, "multiagentconvnet": 264, "multiagentmlp": 265, "multiagentnetbas": 266, "noisylazylinear": 267, "noisylinear": 268, "normalparamwrapp": 269, "obsdecod": 270, "obsencod": 271, "onehotcategor": 272, "onehotordin": 273, "onlinedtactor": 274, "ordin": 275, "ornsteinuhlenbeckprocessmodul": 276, "ornsteinuhlenbeckprocesswrapp": 277, "qmixer": [278, 405], "qvaluehook": 279, "rssmposterior": 280, "rssmprior": 281, "squeeze2dlay": 282, "squeezelay": 283, "tanhdelta": 284, "tanhnorm": 285, "truncatednorm": 286, "vdnmixer": 287, "vmapmodul": 288, "recurrent_mod": 289, "reset_nois": 290, "set_recurrent_mod": 291, "actor": [292, 404, 409, 415], "actorcriticoper": 293, "actorcriticwrapp": 294, "actorvalueoper": 295, "decisiontransformerinferencewrapp": 296, "distributionalqvalueactor": 297, "distributionalqvaluemodul": 298, "lmheadactorvalueoper": 299, "multistepactorwrapp": 300, "probabilisticactor": 301, "qvalueactor": [302, 404], "qvaluemodul": 303, "safemodul": [304, 404], "safeprobabilisticmodul": 305, "safeprobabilistictensordictsequenti": 306, "safesequenti": 307, "tanhmodul": 308, "valueoper": 309, "worldmodelwrapp": 310, "biased_softplu": 311, "get_primers_from_modul": 312, "inv_softplu": 313, "map": [314, 422], "a2closs": 315, "cqlloss": 316, "clipppoloss": 317, "crossqloss": 318, "ddpgloss": 319, "dqnloss": 320, "dtloss": 321, "discretecqlloss": 322, "discreteiqlloss": 323, "discretesacloss": 324, "distributionaldqnloss": 325, "dreameractorloss": 326, "dreamermodelloss": 327, "dreamervalueloss": 328, "gailloss": 329, "hardupd": 330, "iqlloss": 331, "klpenppoloss": 332, "lossmodul": [333, 409, 416], "onlinedtloss": 334, "ppoloss": 335, "redqloss": 336, "reinforceloss": 337, "sacloss": 338, "softupd": 339, "td3bcloss": 340, "td3loss": 341, "valueestim": 342, "default_value_kwarg": 343, "distance_loss": 344, "group_optim": 345, "hold_out_net": 346, "hold_out_param": 347, "qmixerloss": 348, "next_state_valu": 349, "gae": 350, "td0estim": 351, "td1estim": 352, "tdlambdaestim": 353, "valueestimatorbas": 354, "generalized_advantage_estim": 355, "reward2go": 356, "td0_advantage_estim": 357, "td0_return_estim": 358, "td1_advantage_estim": 359, "td1_return_estim": 360, "td_lambda_advantage_estim": 361, "td_lambda_return_estim": 362, "vec_generalized_advantage_estim": 363, "vec_td1_advantage_estim": 364, "vec_td1_return_estim": 365, "vec_td_lambda_advantage_estim": 366, "vec_td_lambda_return_estim": 367, "pixelrendertransform": 368, "tensordictrecord": 369, "videorecord": 370, "logger": [371, 406, 418, 419], "csvlogger": 372, "generate_exp_nam": 373, "get_logg": 374, "mlflowlogg": 375, "tensorboardlogg": 376, "wandblogg": 377, "batchsubsampl": 378, "clearcudacach": 379, "countframeslog": 380, "logvalidationreward": 381, "optimizerhook": 382, "replaybuffertrain": 383, "rewardnorm": 384, "selectkei": 385, "trainer": [386, 406, 410], "trainerhookbas": 387, "updateweight": 388, "correct_for_frame_skip": 389, "get_stats_random_rollout": 390, "make_collector_offpolici": 391, "make_collector_onpolici": 392, "make_dqn_loss": 393, "make_replay_buff": 394, "make_target_updat": 395, "make_train": 396, "parallel_env_constructor": 397, "sync_async_collector": 398, "sync_sync_collector": 399, "transformed_env_constructor": 400, "readm": [401, 420], "tuto": [401, 420], "api": 402, "contribut": [403, 428], "content": 403, "modul": [404, 409, 412, 413, 415, 419, 428], "tensordictmodul": [404, 413, 415, 428], "wrapper": [404, 415], "probabilist": [404, 415], "q": [404, 410, 412, 415], "oper": 404, "join": 404, "hook": [404, 406, 410], "regular": 404, "planner": 404, "object": [405, 409, 416, 428], "torch": 405, "vmap": [405, 428], "dqn": [405, 410, 412], "ddpg": [405, 409, 422], "sac": 405, "redq": 405, "crossq": 405, "iql": 405, "cql": 405, "gail": 405, "dt": 405, "td3": 405, "bc": 405, "ppo": [405, 411, 423], "a2c": 405, "dreamer": 405, "builder": 406, "_util": 407, "comput": [408, 410, 424, 427], "time": [408, 409, 427], "code": [409, 424], "overview": [409, 412], "setup": [409, 412], "__init__": 409, "method": 409, "estim": 409, "put": 409, "togeth": [409, 424], "call": 409, "parallel": [409, 421, 429], "execut": [409, 421, 424], "stat": 409, "build": [409, 410, 419, 426], "evalu": 409, "construct": 409, "target": [409, 410, 416], "network": [409, 410, 411, 412, 415, 422, 423], "updat": 409, "experi": [409, 424], "result": [409, 411, 422, 423], "conclus": [409, 410, 411, 412, 413, 422, 423, 424, 426], "next": [409, 411, 414, 417, 422, 423, 426], "A": [410, 426], "deep": 410, "collect": [410, 411, 417], "paramet": [410, 411, 416], "hyperparamet": [410, 411, 422, 423], "regist": 410, "possibl": 410, "improv": 410, "defin": [411, 422, 423], "loop": [411, 412, 413, 419, 422, 423, 424], "recurr": [412, 413], "convolut": 412, "select": 412, "further": [412, 416], "read": 412, "export": 413, "introduct": [413, 428], "fast": 413, "recap": 413, "simpl": [413, 424], "stochast": 413, "aotinductor": 413, "free": 413, "c": 413, "onnx": 413, "run": [413, 414, 429], "rollout": [413, 414, 421, 422, 423, 424, 429], "creat": 414, "s": [415, 416], "output": 416, "consider": 416, "log": 418, "own": 419, "first": 419, "design": 419, "divers": 421, "competit": 422, "group": 422, "critic": [422, 423], "pendulum": 424, "write": 424, "_step": 424, "simul": 424, "_reset": 424, "metadata": 424, "_spec": 424, "shape": 424, "seed": [424, 429], "wrap": 424, "class": [424, 428], "test": 424, "our": 424, "pretrain": 425, "vanilla": 426, "integr": 426, "tensorclass": 426, "other": 426, "tensor": 426, "pytre": 426, "iter": 426, "over": 426, "fix": 426, "priorit": 426, "save": 426, "raw": 426, "imag": 426, "more": 426, "complex": 426, "config": 428, "sequenc": 428, "program": 428, "ensembl": 428, "meta": 428, "sync": 428, "multiprocess": 428, "async": 428, "frame_skip": 429, "deepmind": 429, "control": 429, "devic": 429, "close": 429, "access": 429, "attribut": 429, "kwarg": 429}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})